{"/home/travis/build/npmtest/node-npmtest-waterline/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_waterline */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-waterline/lib.npmtest_waterline.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/lib.npmtest_waterline.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_waterline */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_waterline = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_waterline = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-waterline/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":67},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-waterline && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_waterline */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_waterline","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_waterline.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_waterline.rollup.js'] =","            local.assetsDict['/assets.npmtest_waterline.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_waterline.__dirname +","                    '/lib.npmtest_waterline.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":33},"end":{"line":13,"column":44}}},"2":{"name":"(anonymous_2)","line":56,"loc":{"start":{"line":56,"column":37},"end":{"line":56,"column":58}}},"3":{"name":"(anonymous_3)","line":76,"loc":{"start":{"line":76,"column":33},"end":{"line":76,"column":55}}},"4":{"name":"(anonymous_4)","line":86,"loc":{"start":{"line":86,"column":29},"end":{"line":86,"column":47}}},"5":{"name":"loadCollection","line":125,"loc":{"start":{"line":125,"column":2},"end":{"line":125,"column":38}}},"6":{"name":"(anonymous_6)","line":139,"loc":{"start":{"line":139,"column":21},"end":{"line":139,"column":36}}},"7":{"name":"(anonymous_7)","line":140,"loc":{"start":{"line":140,"column":52},"end":{"line":140,"column":66}}},"8":{"name":"(anonymous_8)","line":146,"loc":{"start":{"line":146,"column":41},"end":{"line":146,"column":57}}},"9":{"name":"(anonymous_9)","line":151,"loc":{"start":{"line":151,"column":51},"end":{"line":151,"column":65}}},"10":{"name":"(anonymous_10)","line":159,"loc":{"start":{"line":159,"column":48},"end":{"line":159,"column":72}}},"11":{"name":"(anonymous_11)","line":163,"loc":{"start":{"line":163,"column":39},"end":{"line":163,"column":53}}},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":36},"end":{"line":169,"column":50}}},"13":{"name":"(anonymous_13)","line":188,"loc":{"start":{"line":188,"column":52},"end":{"line":188,"column":76}}},"14":{"name":"(anonymous_14)","line":189,"loc":{"start":{"line":189,"column":48},"end":{"line":189,"column":73}}},"15":{"name":"(anonymous_15)","line":198,"loc":{"start":{"line":198,"column":47},"end":{"line":198,"column":61}}},"16":{"name":"(anonymous_16)","line":206,"loc":{"start":{"line":206,"column":40},"end":{"line":206,"column":55}}},"17":{"name":"(anonymous_17)","line":216,"loc":{"start":{"line":216,"column":68},"end":{"line":216,"column":82}}},"18":{"name":"(anonymous_18)","line":223,"loc":{"start":{"line":223,"column":5},"end":{"line":223,"column":19}}},"19":{"name":"(anonymous_19)","line":225,"loc":{"start":{"line":225,"column":19},"end":{"line":225,"column":33}}},"20":{"name":"teardown","line":239,"loc":{"start":{"line":239,"column":31},"end":{"line":239,"column":53}}},"21":{"name":"(anonymous_21)","line":242,"loc":{"start":{"line":242,"column":44},"end":{"line":242,"column":65}}},"22":{"name":"bootstrap","line":258,"loc":{"start":{"line":258,"column":32},"end":{"line":258,"column":55}}},"23":{"name":"(anonymous_23)","line":287,"loc":{"start":{"line":287,"column":46},"end":{"line":287,"column":85}}},"24":{"name":"(anonymous_24)","line":294,"loc":{"start":{"line":294,"column":31},"end":{"line":294,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":26}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":53}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":64}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":69}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":80}},"8":{"start":{"line":13,"column":0},"end":{"line":27,"column":2}},"9":{"start":{"line":15,"column":2},"end":{"line":17,"column":3}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":27}},"11":{"start":{"line":21,"column":2},"end":{"line":21,"column":25}},"12":{"start":{"line":24,"column":2},"end":{"line":24,"column":25}},"13":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}},"14":{"start":{"line":35,"column":0},"end":{"line":35,"column":57}},"15":{"start":{"line":38,"column":0},"end":{"line":38,"column":47}},"16":{"start":{"line":56,"column":0},"end":{"line":62,"column":2}},"17":{"start":{"line":59,"column":2},"end":{"line":59,"column":37}},"18":{"start":{"line":61,"column":2},"end":{"line":61,"column":27}},"19":{"start":{"line":76,"column":0},"end":{"line":231,"column":2}},"20":{"start":{"line":77,"column":2},"end":{"line":77,"column":18}},"21":{"start":{"line":80,"column":2},"end":{"line":80,"column":80}},"22":{"start":{"line":80,"column":18},"end":{"line":80,"column":78}},"23":{"start":{"line":81,"column":2},"end":{"line":81,"column":95}},"24":{"start":{"line":81,"column":27},"end":{"line":81,"column":93}},"25":{"start":{"line":82,"column":2},"end":{"line":82,"column":100}},"26":{"start":{"line":82,"column":30},"end":{"line":82,"column":98}},"27":{"start":{"line":85,"column":2},"end":{"line":100,"column":3}},"28":{"start":{"line":86,"column":4},"end":{"line":97,"column":7}},"29":{"start":{"line":89,"column":6},"end":{"line":96,"column":7}},"30":{"start":{"line":90,"column":8},"end":{"line":95,"column":99}},"31":{"start":{"line":99,"column":4},"end":{"line":99,"column":17}},"32":{"start":{"line":103,"column":2},"end":{"line":110,"column":3}},"33":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"34":{"start":{"line":105,"column":6},"end":{"line":105,"column":72}},"35":{"start":{"line":109,"column":4},"end":{"line":109,"column":31}},"36":{"start":{"line":113,"column":2},"end":{"line":113,"column":24}},"37":{"start":{"line":116,"column":2},"end":{"line":116,"column":76}},"38":{"start":{"line":119,"column":2},"end":{"line":119,"column":68}},"39":{"start":{"line":122,"column":2},"end":{"line":122,"column":74}},"40":{"start":{"line":125,"column":2},"end":{"line":134,"column":3}},"41":{"start":{"line":126,"column":4},"end":{"line":126,"column":72}},"42":{"start":{"line":127,"column":4},"end":{"line":127,"column":45}},"43":{"start":{"line":131,"column":4},"end":{"line":131,"column":69}},"44":{"start":{"line":133,"column":4},"end":{"line":133,"column":11}},"45":{"start":{"line":136,"column":2},"end":{"line":229,"column":5}},"46":{"start":{"line":140,"column":6},"end":{"line":155,"column":9}},"47":{"start":{"line":141,"column":8},"end":{"line":141,"column":34}},"48":{"start":{"line":141,"column":17},"end":{"line":141,"column":34}},"49":{"start":{"line":144,"column":8},"end":{"line":144,"column":32}},"50":{"start":{"line":146,"column":8},"end":{"line":149,"column":11}},"51":{"start":{"line":147,"column":10},"end":{"line":147,"column":56}},"52":{"start":{"line":147,"column":49},"end":{"line":147,"column":56}},"53":{"start":{"line":148,"column":10},"end":{"line":148,"column":79}},"54":{"start":{"line":151,"column":8},"end":{"line":154,"column":11}},"55":{"start":{"line":152,"column":10},"end":{"line":152,"column":36}},"56":{"start":{"line":152,"column":19},"end":{"line":152,"column":36}},"57":{"start":{"line":153,"column":10},"end":{"line":153,"column":39}},"58":{"start":{"line":160,"column":6},"end":{"line":160,"column":41}},"59":{"start":{"line":161,"column":6},"end":{"line":161,"column":23}},"60":{"start":{"line":163,"column":6},"end":{"line":182,"column":9}},"61":{"start":{"line":164,"column":8},"end":{"line":164,"column":42}},"62":{"start":{"line":167,"column":8},"end":{"line":167,"column":56}},"63":{"start":{"line":169,"column":8},"end":{"line":172,"column":11}},"64":{"start":{"line":170,"column":10},"end":{"line":170,"column":58}},"65":{"start":{"line":170,"column":51},"end":{"line":170,"column":58}},"66":{"start":{"line":171,"column":10},"end":{"line":171,"column":29}},"67":{"start":{"line":175,"column":8},"end":{"line":175,"column":41}},"68":{"start":{"line":176,"column":8},"end":{"line":177,"column":81}},"69":{"start":{"line":179,"column":8},"end":{"line":179,"column":50}},"70":{"start":{"line":180,"column":8},"end":{"line":180,"column":57}},"71":{"start":{"line":181,"column":8},"end":{"line":181,"column":49}},"72":{"start":{"line":184,"column":6},"end":{"line":184,"column":26}},"73":{"start":{"line":189,"column":6},"end":{"line":220,"column":15}},"74":{"start":{"line":190,"column":8},"end":{"line":190,"column":48}},"75":{"start":{"line":191,"column":8},"end":{"line":191,"column":24}},"76":{"start":{"line":192,"column":8},"end":{"line":192,"column":29}},"77":{"start":{"line":195,"column":8},"end":{"line":195,"column":90}},"78":{"start":{"line":195,"column":72},"end":{"line":195,"column":90}},"79":{"start":{"line":198,"column":8},"end":{"line":200,"column":11}},"80":{"start":{"line":199,"column":10},"end":{"line":199,"column":47}},"81":{"start":{"line":203,"column":8},"end":{"line":203,"column":31}},"82":{"start":{"line":206,"column":8},"end":{"line":213,"column":11}},"83":{"start":{"line":207,"column":10},"end":{"line":207,"column":30}},"84":{"start":{"line":208,"column":10},"end":{"line":210,"column":11}},"85":{"start":{"line":209,"column":12},"end":{"line":209,"column":66}},"86":{"start":{"line":212,"column":10},"end":{"line":212,"column":71}},"87":{"start":{"line":216,"column":8},"end":{"line":219,"column":11}},"88":{"start":{"line":217,"column":10},"end":{"line":217,"column":40}},"89":{"start":{"line":217,"column":19},"end":{"line":217,"column":40}},"90":{"start":{"line":218,"column":10},"end":{"line":218,"column":21}},"91":{"start":{"line":224,"column":4},"end":{"line":224,"column":28}},"92":{"start":{"line":224,"column":13},"end":{"line":224,"column":28}},"93":{"start":{"line":225,"column":4},"end":{"line":228,"column":7}},"94":{"start":{"line":226,"column":6},"end":{"line":226,"column":30}},"95":{"start":{"line":226,"column":15},"end":{"line":226,"column":30}},"96":{"start":{"line":227,"column":6},"end":{"line":227,"column":81}},"97":{"start":{"line":239,"column":0},"end":{"line":250,"column":2}},"98":{"start":{"line":240,"column":2},"end":{"line":240,"column":18}},"99":{"start":{"line":242,"column":2},"end":{"line":249,"column":9}},"100":{"start":{"line":243,"column":4},"end":{"line":243,"column":44}},"101":{"start":{"line":246,"column":4},"end":{"line":246,"column":72}},"102":{"start":{"line":246,"column":58},"end":{"line":246,"column":72}},"103":{"start":{"line":248,"column":4},"end":{"line":248,"column":45}},"104":{"start":{"line":258,"column":0},"end":{"line":298,"column":2}},"105":{"start":{"line":259,"column":2},"end":{"line":259,"column":18}},"106":{"start":{"line":287,"column":2},"end":{"line":290,"column":9}},"107":{"start":{"line":288,"column":4},"end":{"line":288,"column":31}},"108":{"start":{"line":289,"column":4},"end":{"line":289,"column":21}},"109":{"start":{"line":294,"column":2},"end":{"line":297,"column":9}},"110":{"start":{"line":296,"column":4},"end":{"line":296,"column":26}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"2":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"3":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"4":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"5":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":6}},{"start":{"line":89,"column":6},"end":{"line":89,"column":6}}]},"6":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"7":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":141,"column":8}},{"start":{"line":141,"column":8},"end":{"line":141,"column":8}}]},"8":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":10},"end":{"line":147,"column":10}},{"start":{"line":147,"column":10},"end":{"line":147,"column":10}}]},"9":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":10},"end":{"line":152,"column":10}},{"start":{"line":152,"column":10},"end":{"line":152,"column":10}}]},"10":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":10},"end":{"line":170,"column":10}},{"start":{"line":170,"column":10},"end":{"line":170,"column":10}}]},"11":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":19},"end":{"line":175,"column":34}},{"start":{"line":175,"column":38},"end":{"line":175,"column":40}}]},"12":{"line":176,"type":"cond-expr","locations":[{"start":{"line":177,"column":10},"end":{"line":177,"column":72}},{"start":{"line":177,"column":75},"end":{"line":177,"column":80}}]},"13":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":195,"column":8}},{"start":{"line":195,"column":8},"end":{"line":195,"column":8}}]},"14":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":10},"end":{"line":208,"column":10}},{"start":{"line":208,"column":10},"end":{"line":208,"column":10}}]},"15":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":10},"end":{"line":217,"column":10}},{"start":{"line":217,"column":10},"end":{"line":217,"column":10}}]},"16":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":224,"column":4}},{"start":{"line":224,"column":4},"end":{"line":224,"column":4}}]},"17":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":6},"end":{"line":226,"column":6}},{"start":{"line":226,"column":6},"end":{"line":226,"column":6}}]},"18":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":4},"end":{"line":246,"column":4}},{"start":{"line":246,"column":4},"end":{"line":246,"column":4}}]}},"code":["var _ = require('lodash');","var async = require('async');","var Schema = require('waterline-schema');","var Connections = require('./waterline/connections');","var CollectionLoader = require('./waterline/collection/loader');","var COLLECTION_DEFAULTS = require('./waterline/collection/defaults');","var hasOwnProperty = require('./waterline/utils/helpers').object.hasOwnProperty;","","/**"," * Waterline"," */","","var Waterline = module.exports = function() {","","  if (!(this instanceof Waterline)) {","    return new Waterline();","  }","","  // Keep track of all the collections internally so we can build associations","  // between them when needed.","  this._collections = [];","","  // Keep track of all the active connections used by collections","  this._connections = {};","","  return this;","};","","/*"," ***********************************************************"," * Modules that can be extended"," ***********************************************************/","","// Collection to be extended in your application","Waterline.Collection = require('./waterline/collection');","","// Model Instance, returned as query results","Waterline.Model = require('./waterline/model');","","/*"," ***********************************************************"," * Prototype Methods"," ***********************************************************/","","/**"," * loadCollection"," *"," * Loads a new Collection. It should be an extended Waterline.Collection"," * that contains your attributes, instance methods and class methods."," *"," * @param {Object} collection"," * @return {Object} internal models dictionary"," * @api public"," */","","Waterline.prototype.loadCollection = function(collection) {","","  // Cache collection","  this._collections.push(collection);","","  return this._collections;","};","","/**"," * initialize"," *"," * Creates an initialized version of each Collection and auto-migrates depending on"," * the Collection configuration."," *"," * @param {Object} config object containing adapters"," * @param {Function} callback"," * @return {Array} instantiated collections"," * @api public"," */","","Waterline.prototype.initialize = function(options, cb) {","  var self = this;","","  // Ensure a config object is passed in containing adapters","  if (!options) { throw new Error('Usage Error: function(options, callback)'); }","  if (!options.adapters) { throw new Error('Options object must contain an adapters object'); }","  if (!options.connections) { throw new Error('Options object must contain a connections object'); }","","  // Check that the given adapter is compatible with Waterline 0.11.x.","  try {","    _.each(options.adapters, function(adapter) {","      // Adapters meant for Waterline >= 0.12 will have an adapterApiVersion property, so if we","      // see that then we know the adapter won't work with this version of Waterline.","      if (!_.isUndefined(adapter.adapterApiVersion)) {","        throw new Error(","          '\\n-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-\\n'+","          'Cannot initialize Waterline.\\n'+","          'The installed version of adapter `' + adapter.identity + '` is too new!\\n' +","          'Please try installing a version < 1.0.\\n' +","          '-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-\\n');","      }","    });","  } catch (e) {","    return cb(e);","  }","","  // Allow collections to be passed in to the initialize method","  if (options.collections) {","    for (var collection in options.collections) {","      this.loadCollection(_.cloneDeep(options.collections[collection]));","    }","","    // Remove collections from the options after they have been loaded","    delete options.collections;","  }","","  // Cache a reference to instantiated collections","  this.collections = {};","","  // Build up all the connections used by the collections","  this.connections = new Connections(options.adapters, options.connections);","","  // Grab config defaults or set them to empty","  var defaults = _.merge({}, COLLECTION_DEFAULTS, options.defaults);","","  // Build a schema map","  this.schema = new Schema(this._collections, this.connections, defaults);","","  // Load a Collection into memory","  function loadCollection(item, next) {","    var loader = new CollectionLoader(item, self.connections, defaults);","    var collection = loader.initialize(self);","","    // Store the instantiated collection so it can be used","    // internally to create other records","    self.collections[collection.identity.toLowerCase()] = collection;","","    next();","  }","","  async.auto({","","    // Load all the collections into memory","    loadCollections: function(next) {","      async.each(self._collections, loadCollection, function(err) {","        if (err) return next(err);","","        // Migrate Junction Tables","        var junctionTables = [];","","        Object.keys(self.schema).forEach(function(table) {","          if (!self.schema[table].junctionTable) return;","          junctionTables.push(Waterline.Collection.extend(self.schema[table]));","        });","","        async.each(junctionTables, loadCollection, function(err) {","          if (err) return next(err);","          next(null, self.collections);","        });","      });","    },","","    // Build up Collection Schemas","    buildCollectionSchemas: ['loadCollections', function(next, results) {","      var collections = self.collections;","      var schemas = {};","","      Object.keys(collections).forEach(function(key) {","        var collection = collections[key];","","        // Remove hasMany association keys","        var schema = _.clone(collection._schema.schema);","","        Object.keys(schema).forEach(function(key) {","          if (hasOwnProperty(schema[key], 'type')) return;","          delete schema[key];","        });","","        // Grab JunctionTable flag","        var meta = collection.meta || {};","        meta.junctionTable = hasOwnProperty(collection.waterline.schema[collection.identity], 'junctionTable') ?","          collection.waterline.schema[collection.identity].junctionTable : false;","","        schemas[collection.identity] = collection;","        schemas[collection.identity].definition = schema;","        schemas[collection.identity].meta = meta;","      });","","      next(null, schemas);","    }],","","    // Register the Connections with an adapter","    registerConnections: ['buildCollectionSchemas', function(next, results) {","      async.each(Object.keys(self.connections), function(item, nextItem) {","        var connection = self.connections[item];","        var config = {};","        var usedSchemas = {};","","        // Check if the connection's adapter has a register connection method","        if (!hasOwnProperty(connection._adapter, 'registerConnection')) return nextItem();","","        // Copy all values over to a tempory object minus the adapter definition","        Object.keys(connection.config).forEach(function(key) {","          config[key] = connection.config[key];","        });","","        // Set an identity on the connection","        config.identity = item;","","        // Grab the schemas used on this connection","        connection._collections.forEach(function(coll) {","          var identity = coll;","          if (hasOwnProperty(self.collections[coll].__proto__, 'tableName')) {","            identity = self.collections[coll].__proto__.tableName;","          }","","          usedSchemas[identity] = results.buildCollectionSchemas[coll];","        });","","        // Call the registerConnection method","        connection._adapter.registerConnection(config, usedSchemas, function(err) {","          if (err) return nextItem(err);","          nextItem();","        });","      }, next);","    }]","","  }, function(err) {","    if (err) return cb(err);","    self.bootstrap(function(err) {","      if (err) return cb(err);","      cb(null, { collections: self.collections, connections: self.connections });","    });","  });","","};","","/**"," * Teardown"," *"," * Calls the teardown method on each connection if available."," */","","Waterline.prototype.teardown = function teardown(cb) {","  var self = this;","","  async.each(Object.keys(this.connections), function(item, next) {","    var connection = self.connections[item];","","    // Check if the adapter has a teardown method implemented","    if (!hasOwnProperty(connection._adapter, 'teardown')) return next();","","    connection._adapter.teardown(item, next);","  }, cb);","};","","/**"," * Bootstrap"," *"," * Auto-migrate all collections"," */","","Waterline.prototype.bootstrap = function bootstrap(cb) {","  var self = this;","","  //","  // TODO:","  // Come back to this -- see https://github.com/balderdashy/waterline/issues/259","  // (the stuff in this file works fine-- the work would be structural changes elsewhere)","  //","","  // // Use the shema to get a list of junction tables idents","  // // and then determine which are \"logical\" collections","  // // (i.e. everything EXCEPT junction tables)","  // var junctionTableIdents = _(this.schema).filter({junctionTable: true}).pluck('identity').value();","  // var logicalCollections = _(this.collections).omit(junctionTableIdents).value();","","  // // Flatten logical collections obj into an array for convenience","  // var toBeSynced = _.reduce(logicalCollections, function(logicals,coll,ident) {","  //     logicals.push(coll);","  //     return logicals;","  //   }, []);","","  // // console.log(junctionTableIdents);","  // // console.log(Object.keys(logicalCollections));","  // // console.log('\\n',","  // //   'Migrating collections ::',","  // //   _(toBeSynced).pluck('identity').value()","  // // );","","  // For now:","  var toBeSynced = _.reduce(this.collections, function(resources, collection, ident) {","    resources.push(collection);","    return resources;","  }, []);","","  // Run auto-migration strategies on each collection","  // async.each(toBeSynced, function(collection, next) {","  async.eachSeries(toBeSynced, function(collection, next) {","  // async.eachLimit(toBeSynced, 9, function(collection, next) {","    collection.sync(next);","  }, cb);","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"13":1,"15":0,"16":0,"21":0,"24":0,"26":0,"35":1,"38":1,"56":1,"59":0,"61":0,"76":1,"77":0,"80":0,"81":0,"82":0,"85":0,"86":0,"89":0,"90":0,"99":0,"103":0,"104":0,"105":0,"109":0,"113":0,"116":0,"119":0,"122":0,"125":1,"126":0,"127":0,"131":0,"133":0,"136":0,"140":0,"141":0,"144":0,"146":0,"147":0,"148":0,"151":0,"152":0,"153":0,"160":0,"161":0,"163":0,"164":0,"167":0,"169":0,"170":0,"171":0,"175":0,"176":0,"179":0,"180":0,"181":0,"184":0,"189":0,"190":0,"191":0,"192":0,"195":0,"198":0,"199":0,"203":0,"206":0,"207":0,"208":0,"209":0,"212":0,"216":0,"217":0,"218":0,"224":0,"225":0,"226":0,"227":0,"239":1,"240":0,"242":0,"243":0,"246":0,"248":0,"258":1,"259":0,"287":0,"288":0,"289":0,"294":0,"296":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-schema/lib/waterline-schema.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-schema/lib/waterline-schema.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":62}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":58}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":58}},"5":{"start":{"line":22,"column":0},"end":{"line":40,"column":2}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":19}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":67}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":45}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":44}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":44}},"11":{"start":{"line":38,"column":2},"end":{"line":38,"column":21}}},"branchMap":{},"code":["","/**"," * Module dependencies"," */","","var Attributes = require('./waterline-schema/attributes');","var ForeignKeys = require('./waterline-schema/foreignKeys');","var JoinTables = require('./waterline-schema/joinTables');","var References = require('./waterline-schema/references');","","/**"," * Used to build a Waterline Schema object from a set of"," * loaded collections. It should turn the attributes into an"," * object that can be sent down to an adapter and understood."," *"," * @param {Array} collections"," * @param {Object} connections"," * @return {Object}"," * @api public"," */","","module.exports = function(collections, connections, defaults) {","","  this.schema = {};","","  // Transform Collections into a basic schema","  this.schema = new Attributes(collections, connections, defaults);","","  // Build Out Foreign Keys","  this.schema = new ForeignKeys(this.schema);","","  // Add Join Tables","  this.schema = new JoinTables(this.schema);","","  // Add References for Has Many Keys","  this.schema = new References(this.schema);","","  return this.schema;","","};",""],"l":{"6":1,"7":1,"8":1,"9":1,"22":1,"24":0,"27":0,"30":0,"33":0,"36":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-schema/lib/waterline-schema/attributes.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-schema/lib/waterline-schema/attributes.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"Attributes","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":56}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":22},"end":{"line":36,"column":44}}},"3":{"name":"(anonymous_3)","line":68,"loc":{"start":{"line":68,"column":33},"end":{"line":68,"column":77}}},"4":{"name":"(anonymous_4)","line":88,"loc":{"start":{"line":88,"column":35},"end":{"line":88,"column":66}}},"5":{"name":"(anonymous_5)","line":150,"loc":{"start":{"line":150,"column":41},"end":{"line":150,"column":62}}},"6":{"name":"(anonymous_6)","line":174,"loc":{"start":{"line":174,"column":38},"end":{"line":174,"column":72}}},"7":{"name":"(anonymous_7)","line":236,"loc":{"start":{"line":236,"column":38},"end":{"line":236,"column":59}}},"8":{"name":"(anonymous_8)","line":251,"loc":{"start":{"line":251,"column":39},"end":{"line":251,"column":60}}},"9":{"name":"(anonymous_9)","line":266,"loc":{"start":{"line":266,"column":37},"end":{"line":266,"column":58}}},"10":{"name":"(anonymous_10)","line":282,"loc":{"start":{"line":282,"column":45},"end":{"line":282,"column":66}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}},"5":{"start":{"line":28,"column":0},"end":{"line":57,"column":1}},"6":{"start":{"line":29,"column":2},"end":{"line":29,"column":18}},"7":{"start":{"line":31,"column":2},"end":{"line":31,"column":23}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":34}},"9":{"start":{"line":36,"column":2},"end":{"line":53,"column":5}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":77}},"11":{"start":{"line":38,"column":4},"end":{"line":38,"column":51}},"12":{"start":{"line":39,"column":4},"end":{"line":39,"column":56}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":36}},"14":{"start":{"line":42,"column":4},"end":{"line":42,"column":37}},"15":{"start":{"line":43,"column":4},"end":{"line":43,"column":43}},"16":{"start":{"line":45,"column":4},"end":{"line":52,"column":6}},"17":{"start":{"line":55,"column":2},"end":{"line":55,"column":25}},"18":{"start":{"line":68,"column":0},"end":{"line":76,"column":2}},"19":{"start":{"line":70,"column":2},"end":{"line":70,"column":37}},"20":{"start":{"line":71,"column":2},"end":{"line":71,"column":41}},"21":{"start":{"line":72,"column":2},"end":{"line":72,"column":47}},"22":{"start":{"line":74,"column":2},"end":{"line":74,"column":20}},"23":{"start":{"line":88,"column":0},"end":{"line":141,"column":2}},"24":{"start":{"line":91,"column":2},"end":{"line":91,"column":28}},"25":{"start":{"line":93,"column":2},"end":{"line":95,"column":3}},"26":{"start":{"line":94,"column":4},"end":{"line":94,"column":31}},"27":{"start":{"line":97,"column":2},"end":{"line":99,"column":3}},"28":{"start":{"line":98,"column":4},"end":{"line":98,"column":31}},"29":{"start":{"line":101,"column":2},"end":{"line":106,"column":4}},"30":{"start":{"line":109,"column":2},"end":{"line":109,"column":71}},"31":{"start":{"line":109,"column":30},"end":{"line":109,"column":71}},"32":{"start":{"line":110,"column":2},"end":{"line":110,"column":92}},"33":{"start":{"line":110,"column":37},"end":{"line":110,"column":92}},"34":{"start":{"line":111,"column":2},"end":{"line":111,"column":92}},"35":{"start":{"line":111,"column":37},"end":{"line":111,"column":92}},"36":{"start":{"line":112,"column":2},"end":{"line":112,"column":74}},"37":{"start":{"line":112,"column":31},"end":{"line":112,"column":74}},"38":{"start":{"line":115,"column":2},"end":{"line":115,"column":75}},"39":{"start":{"line":115,"column":32},"end":{"line":115,"column":75}},"40":{"start":{"line":116,"column":2},"end":{"line":116,"column":96}},"41":{"start":{"line":116,"column":39},"end":{"line":116,"column":96}},"42":{"start":{"line":117,"column":2},"end":{"line":117,"column":96}},"43":{"start":{"line":117,"column":39},"end":{"line":117,"column":96}},"44":{"start":{"line":118,"column":2},"end":{"line":118,"column":78}},"45":{"start":{"line":118,"column":33},"end":{"line":118,"column":78}},"46":{"start":{"line":120,"column":2},"end":{"line":125,"column":4}},"47":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"48":{"start":{"line":130,"column":4},"end":{"line":130,"column":38}},"49":{"start":{"line":133,"column":2},"end":{"line":135,"column":3}},"50":{"start":{"line":134,"column":4},"end":{"line":134,"column":38}},"51":{"start":{"line":137,"column":2},"end":{"line":139,"column":3}},"52":{"start":{"line":138,"column":4},"end":{"line":138,"column":35}},"53":{"start":{"line":150,"column":0},"end":{"line":161,"column":2}},"54":{"start":{"line":152,"column":2},"end":{"line":154,"column":3}},"55":{"start":{"line":153,"column":4},"end":{"line":153,"column":61}},"56":{"start":{"line":157,"column":2},"end":{"line":159,"column":3}},"57":{"start":{"line":158,"column":4},"end":{"line":158,"column":84}},"58":{"start":{"line":174,"column":0},"end":{"line":227,"column":2}},"59":{"start":{"line":176,"column":2},"end":{"line":176,"column":41}},"60":{"start":{"line":177,"column":2},"end":{"line":177,"column":17}},"61":{"start":{"line":178,"column":2},"end":{"line":178,"column":21}},"62":{"start":{"line":181,"column":2},"end":{"line":183,"column":3}},"63":{"start":{"line":182,"column":4},"end":{"line":182,"column":53}},"64":{"start":{"line":182,"column":43},"end":{"line":182,"column":53}},"65":{"start":{"line":186,"column":2},"end":{"line":186,"column":35}},"66":{"start":{"line":186,"column":9},"end":{"line":186,"column":35}},"67":{"start":{"line":189,"column":2},"end":{"line":211,"column":3}},"68":{"start":{"line":190,"column":4},"end":{"line":195,"column":6}},"69":{"start":{"line":198,"column":4},"end":{"line":203,"column":5}},"70":{"start":{"line":199,"column":6},"end":{"line":199,"column":48}},"71":{"start":{"line":202,"column":6},"end":{"line":202,"column":45}},"72":{"start":{"line":205,"column":4},"end":{"line":210,"column":5}},"73":{"start":{"line":206,"column":6},"end":{"line":206,"column":51}},"74":{"start":{"line":207,"column":6},"end":{"line":209,"column":7}},"75":{"start":{"line":208,"column":8},"end":{"line":208,"column":58}},"76":{"start":{"line":214,"column":2},"end":{"line":217,"column":4}},"77":{"start":{"line":219,"column":2},"end":{"line":221,"column":3}},"78":{"start":{"line":220,"column":4},"end":{"line":220,"column":47}},"79":{"start":{"line":223,"column":2},"end":{"line":225,"column":3}},"80":{"start":{"line":224,"column":4},"end":{"line":224,"column":47}},"81":{"start":{"line":236,"column":0},"end":{"line":242,"column":2}},"82":{"start":{"line":238,"column":2},"end":{"line":240,"column":3}},"83":{"start":{"line":239,"column":4},"end":{"line":239,"column":81}},"84":{"start":{"line":239,"column":52},"end":{"line":239,"column":81}},"85":{"start":{"line":251,"column":0},"end":{"line":257,"column":2}},"86":{"start":{"line":253,"column":2},"end":{"line":255,"column":3}},"87":{"start":{"line":254,"column":4},"end":{"line":254,"column":46}},"88":{"start":{"line":266,"column":0},"end":{"line":273,"column":2}},"89":{"start":{"line":268,"column":2},"end":{"line":271,"column":3}},"90":{"start":{"line":269,"column":4},"end":{"line":269,"column":56}},"91":{"start":{"line":269,"column":47},"end":{"line":269,"column":56}},"92":{"start":{"line":270,"column":4},"end":{"line":270,"column":28}},"93":{"start":{"line":282,"column":0},"end":{"line":294,"column":2}},"94":{"start":{"line":284,"column":2},"end":{"line":292,"column":3}},"95":{"start":{"line":287,"column":4},"end":{"line":290,"column":5}},"96":{"start":{"line":288,"column":6},"end":{"line":288,"column":88}},"97":{"start":{"line":289,"column":6},"end":{"line":289,"column":29}}},"branchMap":{"1":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":16},"end":{"line":34,"column":27}},{"start":{"line":34,"column":31},"end":{"line":34,"column":33}}]},"2":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":17},"end":{"line":48,"column":37}},{"start":{"line":48,"column":41},"end":{"line":48,"column":60}}]},"3":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":15},"end":{"line":49,"column":33}},{"start":{"line":49,"column":37},"end":{"line":49,"column":43}}]},"4":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":27}},{"start":{"line":51,"column":31},"end":{"line":51,"column":33}}]},"5":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":13},"end":{"line":91,"column":21}},{"start":{"line":91,"column":25},"end":{"line":91,"column":27}}]},"6":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"7":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"8":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":109,"column":2}},{"start":{"line":109,"column":2},"end":{"line":109,"column":2}}]},"9":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"10":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"11":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"12":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"13":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"14":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"15":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"16":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"17":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"18":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":2},"end":{"line":152,"column":2}},{"start":{"line":152,"column":2},"end":{"line":152,"column":2}}]},"19":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":5},"end":{"line":152,"column":33}},{"start":{"line":152,"column":37},"end":{"line":152,"column":65}}]},"20":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":157,"column":2}},{"start":{"line":157,"column":2},"end":{"line":157,"column":2}}]},"21":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":182,"column":4}},{"start":{"line":182,"column":4},"end":{"line":182,"column":4}}]},"22":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":2},"end":{"line":186,"column":2}},{"start":{"line":186,"column":2},"end":{"line":186,"column":2}}]},"23":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":2},"end":{"line":189,"column":2}},{"start":{"line":189,"column":2},"end":{"line":189,"column":2}}]},"24":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":5},"end":{"line":189,"column":8}},{"start":{"line":189,"column":12},"end":{"line":189,"column":29}},{"start":{"line":189,"column":33},"end":{"line":189,"column":47}}]},"25":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"26":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":4},"end":{"line":205,"column":4}},{"start":{"line":205,"column":4},"end":{"line":205,"column":4}}]},"27":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":6},"end":{"line":207,"column":6}},{"start":{"line":207,"column":6},"end":{"line":207,"column":6}}]},"28":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"29":{"line":219,"type":"binary-expr","locations":[{"start":{"line":219,"column":5},"end":{"line":219,"column":29}},{"start":{"line":219,"column":33},"end":{"line":219,"column":70}}]},"30":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":2},"end":{"line":223,"column":2}},{"start":{"line":223,"column":2},"end":{"line":223,"column":2}}]},"31":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":5},"end":{"line":223,"column":29}},{"start":{"line":223,"column":33},"end":{"line":223,"column":70}}]},"32":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":4},"end":{"line":239,"column":4}},{"start":{"line":239,"column":4},"end":{"line":239,"column":4}}]},"33":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":4},"end":{"line":269,"column":4}},{"start":{"line":269,"column":4},"end":{"line":269,"column":4}}]},"34":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]}},"code":["","/**"," * Module dependencies"," */","","var _ = require('lodash');","var utils = require('./utils');","var hop = utils.object.hasOwnProperty;","","/**"," * Expose Attributes"," */","","module.exports = Attributes;","","/**"," * Build an Attributes Definition"," *"," * Takes a collection of attributes from a Waterline Collection"," * and builds up an initial schema by normalizing into a known format."," *"," * @param {Array} collections"," * @param {Object} connections"," * @return {Object}"," * @api private"," */","","function Attributes(collections, connections, defaults) {","  var self = this;","","  this.attributes = {};","","  // Ensure a value is set for connections","  connections = connections || {};","","  collections.forEach(function (collection) {","    collection = self.normalize(collection.prototype, connections, defaults);","    var conns = _.cloneDeep(collection.connection);","    var attributes = _.cloneDeep(collection.attributes);","","    self.stripFunctions(attributes);","    self.stripProperties(attributes);","    self.validatePropertyNames(attributes);","","    self.attributes[collection.identity.toLowerCase()] = {","      connection: conns,","      identity: collection.identity.toLowerCase(),","      tableName: collection.tableName || collection.identity,","      migrate: collection.migrate || 'safe',","      attributes: attributes,","      meta: collection.meta || {}","    };","  });","","  return this.attributes;","","}","","/**"," * Normalize attributes for a collection into a known format."," *"," * @param {Object} collection"," * @param {Object} connections"," * @return {Object}"," * @api private"," */","","Attributes.prototype.normalize = function(collection, connections, defaults) {","","  this.normalizeIdentity(collection);","  this.setDefaults(collection, defaults);","  this.autoAttributes(collection, connections);","","  return collection;","","};","","/**"," * Set Default Values for the collection."," *"," * Adds flags to the collection to determine if timestamps and a primary key"," * should be added to the collection's schema."," *"," * @param {Object} collection"," * @api private"," */","","Attributes.prototype.setDefaults = function(collection, defaults) {","","  // Ensure defaults is always set to something","  defaults = defaults || {};","","  if(!hop(collection, 'connection')) {","    collection.connection = '';","  }","","  if(!hop(collection, 'attributes')) {","    collection.attributes = {};","  }","","  var defaultSettings = {","    autoPK: true,","    autoCreatedAt: true,","    autoUpdatedAt: true,","    migrate: 'alter'","  };","","  // Override default settings with user defined defaults","  if(hop(defaults, 'autoPK')) defaultSettings.autoPK = defaults.autoPK;","  if(hop(defaults, 'autoCreatedAt')) defaultSettings.autoCreatedAt = defaults.autoCreatedAt;","  if(hop(defaults, 'autoUpdatedAt')) defaultSettings.autoUpdatedAt = defaults.autoUpdatedAt;","  if(hop(defaults, 'migrate')) defaultSettings.migrate = defaults.migrate;","","  // Override defaults with collection defined values","  if(hop(collection, 'autoPK')) defaultSettings.autoPK = collection.autoPK;","  if(hop(collection, 'autoCreatedAt')) defaultSettings.autoCreatedAt = collection.autoCreatedAt;","  if(hop(collection, 'autoUpdatedAt')) defaultSettings.autoUpdatedAt = collection.autoUpdatedAt;","  if(hop(collection, 'migrate')) defaultSettings.migrate = collection.migrate;","","  var flags = {","    autoPK: defaultSettings.autoPK,","    autoCreatedAt: defaultSettings.autoCreatedAt,","    autoUpdatedAt: defaultSettings.autoUpdatedAt,","    migrate: defaultSettings.migrate","  };","","  // Set the property for the automatic attributes if the user didn't","  // customize it/disable it.","  if(flags.autoCreatedAt === true) {","    flags.autoCreatedAt = 'createdAt';","  }","","  if(flags.autoUpdatedAt === true) {","    flags.autoUpdatedAt = 'updatedAt';","  }","","  for(var flag in flags) {","    collection[flag] = flags[flag];","  }","","};","","/**"," * Normalize identity"," *"," * @param {Object} collection"," * @api private"," */","","Attributes.prototype.normalizeIdentity = function(collection) {","","  if(hop(collection, 'tableName') && !hop(collection, 'identity')) {","    collection.identity = collection.tableName.toLowerCase();","  }","","  // Require an identity so the object key can be set","  if(!hop(collection, 'identity')) {","    throw new Error('A Collection must include an identity or tableName attribute');","  }","","};","","/**"," * Add Auto Attribute definitions to the schema if they are not defined."," *"," * Adds in things such as an Id primary key and timestamps unless they have been"," * disabled in the collection."," *"," * @param {Object} collection"," * @param {Object} connections"," * @api private"," */","","Attributes.prototype.autoAttributes = function(collection, connections) {","","  var attributes = collection.attributes;","  var pk = false;","  var mainConnection;","","  // Check to make sure another property hasn't set itself as a primary key","  for(var key in attributes) {","    if(hop(attributes[key], 'primaryKey')) pk = true;","  }","","  // If a primary key was manually defined, turn off autoPK","  if(pk) collection.autoPK = false;","","  // Add a primary key attribute","  if(!pk && collection.autoPK && !attributes.id) {","    attributes.id = {","      type: 'integer',","      autoIncrement: true,","      primaryKey: true,","      unique: true","    };","","    // Check if the adapter used in the collection specifies the primary key format","    if(Array.isArray(collection.connection)) {","      mainConnection = collection.connection[0];","    }","    else {","      mainConnection = collection.connection;","    }","","    if(hop(connections, mainConnection)) {","      var connection = connections[mainConnection];","      if(hop(connection._adapter, 'pkFormat')) {","        attributes.id.type = connection._adapter.pkFormat;","      }","    }","  }","","  // Extend definition with autoUpdatedAt and autoCreatedAt timestamps","  var now = {","    type: 'datetime',","    'default': 'NOW'","  };","","  if(collection.autoCreatedAt && !attributes[collection.autoCreatedAt]) {","    attributes[collection.autoCreatedAt] = now;","  }","","  if(collection.autoUpdatedAt && !attributes[collection.autoUpdatedAt]) {","    attributes[collection.autoUpdatedAt] = now;","  }","","};","","/**"," * Strip Functions From Schema"," *"," * @param {Object} attributes"," * @api private"," */","","Attributes.prototype.stripFunctions = function(attributes) {","","  for(var attribute in attributes) {","    if(typeof attributes[attribute] === 'function') delete attributes[attribute];","  }","","};","","/**"," * Strip Non-Reserved Properties"," *"," * @param {Object} attributes"," * @api private"," */","","Attributes.prototype.stripProperties = function(attributes) {","","  for(var attribute in attributes) {","    this.stripProperty(attributes[attribute]);","  }","","};","","/**"," * Strip Property that isn't in the reserved words list."," *"," * @param {Object}"," * @api private"," */","","Attributes.prototype.stripProperty = function(properties) {","","  for(var prop in properties) {","    if(utils.reservedWords.indexOf(prop) > -1) continue;","    delete properties[prop];","  }","","};","","/**"," * Validates property names to ensure they are valid."," *"," * @param {Object}"," * @api private"," */","","Attributes.prototype.validatePropertyNames = function(attributes) {","","  for(var attribute in attributes) {","","    // Check for dots in name","    if(attribute.match(/\\./g)) {","      var error = 'Invalid Attribute Name: Attributes may not contain a \".\"\" character';","      throw new Error(error);","    }","","  }","","};",""],"l":{"6":1,"7":1,"8":1,"14":1,"28":1,"29":0,"31":0,"34":0,"36":0,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"45":0,"55":0,"68":1,"70":0,"71":0,"72":0,"74":0,"88":1,"91":0,"93":0,"94":0,"97":0,"98":0,"101":0,"109":0,"110":0,"111":0,"112":0,"115":0,"116":0,"117":0,"118":0,"120":0,"129":0,"130":0,"133":0,"134":0,"137":0,"138":0,"150":1,"152":0,"153":0,"157":0,"158":0,"174":1,"176":0,"177":0,"178":0,"181":0,"182":0,"186":0,"189":0,"190":0,"198":0,"199":0,"202":0,"205":0,"206":0,"207":0,"208":0,"214":0,"219":0,"220":0,"223":0,"224":0,"236":1,"238":0,"239":0,"251":1,"253":0,"254":0,"266":1,"268":0,"269":0,"270":0,"282":1,"284":0,"287":0,"288":0,"289":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-schema/lib/waterline-schema/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-schema/lib/waterline-schema/utils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":47,"loc":{"start":{"line":47,"column":32},"end":{"line":47,"column":52}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":29,"column":2}},"2":{"start":{"line":35,"column":0},"end":{"line":35,"column":20}},"3":{"start":{"line":46,"column":0},"end":{"line":46,"column":42}},"4":{"start":{"line":47,"column":0},"end":{"line":49,"column":2}},"5":{"start":{"line":48,"column":2},"end":{"line":48,"column":29}}},"branchMap":{},"code":["","","/**"," * Contains a list of reserved words. All others should be stripped from"," * a schema when building."," */","","exports.reservedWords = [","  'defaultsTo',","  'primaryKey',","  'autoIncrement',","  'unique',","  'index',","  'columnName',","  'foreignKey',","  'references',","  'on',","  'through',","  'groupKey',","  'required',","  'default',","  'type',","  'dbType',","  'collection',","  'model',","  'via',","  'dominant',","  'migrate'","];","","/**"," * ignore"," */","","exports.object = {};","","/**"," * Safer helper for hasOwnProperty checks"," *"," * @param {Object} obj"," * @param {String} prop"," * @return {Boolean}"," * @api public"," */","","var hop = Object.prototype.hasOwnProperty;","exports.object.hasOwnProperty = function(obj, prop) {","  return hop.call(obj, prop);","};",""],"l":{"8":1,"35":1,"46":1,"47":1,"48":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-schema/lib/waterline-schema/foreignKeys.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-schema/lib/waterline-schema/foreignKeys.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"ForeignKeys","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":34}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":36},"end":{"line":44,"column":57}}},"3":{"name":"(anonymous_3)","line":79,"loc":{"start":{"line":79,"column":39},"end":{"line":79,"column":60}}},"4":{"name":"(anonymous_4)","line":123,"loc":{"start":{"line":123,"column":40},"end":{"line":123,"column":65}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}},"5":{"start":{"line":24,"column":0},"end":{"line":35,"column":1}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":34}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":42}},"8":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"9":{"start":{"line":30,"column":4},"end":{"line":30,"column":57}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":21}},"11":{"start":{"line":44,"column":0},"end":{"line":69,"column":2}},"12":{"start":{"line":46,"column":2},"end":{"line":67,"column":3}},"13":{"start":{"line":50,"column":4},"end":{"line":50,"column":54}},"14":{"start":{"line":50,"column":45},"end":{"line":50,"column":54}},"15":{"start":{"line":52,"column":4},"end":{"line":52,"column":62}},"16":{"start":{"line":53,"column":4},"end":{"line":53,"column":52}},"17":{"start":{"line":54,"column":4},"end":{"line":54,"column":76}},"18":{"start":{"line":55,"column":4},"end":{"line":62,"column":6}},"19":{"start":{"line":65,"column":4},"end":{"line":65,"column":33}},"20":{"start":{"line":66,"column":4},"end":{"line":66,"column":39}},"21":{"start":{"line":79,"column":0},"end":{"line":109,"column":2}},"22":{"start":{"line":81,"column":2},"end":{"line":83,"column":3}},"23":{"start":{"line":82,"column":4},"end":{"line":82,"column":93}},"24":{"start":{"line":85,"column":2},"end":{"line":87,"column":3}},"25":{"start":{"line":86,"column":4},"end":{"line":86,"column":82}},"26":{"start":{"line":89,"column":2},"end":{"line":89,"column":24}},"27":{"start":{"line":91,"column":2},"end":{"line":100,"column":3}},"28":{"start":{"line":92,"column":4},"end":{"line":92,"column":65}},"29":{"start":{"line":94,"column":4},"end":{"line":94,"column":47}},"30":{"start":{"line":94,"column":38},"end":{"line":94,"column":47}},"31":{"start":{"line":96,"column":4},"end":{"line":99,"column":6}},"32":{"start":{"line":102,"column":2},"end":{"line":105,"column":3}},"33":{"start":{"line":103,"column":4},"end":{"line":103,"column":95}},"34":{"start":{"line":104,"column":4},"end":{"line":104,"column":27}},"35":{"start":{"line":107,"column":2},"end":{"line":107,"column":20}},"36":{"start":{"line":123,"column":0},"end":{"line":128,"column":2}},"37":{"start":{"line":125,"column":2},"end":{"line":125,"column":63}},"38":{"start":{"line":125,"column":35},"end":{"line":125,"column":63}},"39":{"start":{"line":126,"column":2},"end":{"line":126,"column":13}}},"branchMap":{"1":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":16},"end":{"line":26,"column":27}},{"start":{"line":26,"column":31},"end":{"line":26,"column":33}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"3":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":10},"end":{"line":60,"column":42}},{"start":{"line":60,"column":46},"end":{"line":60,"column":61}}]},"4":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"5":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"6":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"7":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"8":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":125,"column":2}},{"start":{"line":125,"column":2},"end":{"line":125,"column":2}}]}},"code":["","/**"," * Module Dependencies"," */","","var _ = require('lodash');","var utils = require('./utils');","var hop = utils.object.hasOwnProperty;","","/**"," * Expose Foreign Keys"," */","","module.exports = ForeignKeys;","","/**"," * Adds Foreign keys to a Collection where needed for belongsTo associations."," *"," * @param {Object} collections"," * @return {Object}"," * @api private"," */","","function ForeignKeys(collections) {","","  collections = collections || {};","  this.collections = _.clone(collections);","","  for(var collection in collections) {","    this.replaceKeys(collections[collection].attributes);","  }","","  return collections;","","}","","/**"," * Replace Model Association with a foreign key attribute"," *"," * @param {Object} attributes"," * @api private"," */","","ForeignKeys.prototype.replaceKeys = function(attributes) {","","  for(var attribute in attributes) {","","    // We only care about adding foreign key values to attributes","    // with a `model` key","    if(!hop(attributes[attribute], 'model')) continue;","","    var modelName = attributes[attribute].model.toLowerCase();","    var primaryKey = this.findPrimaryKey(modelName);","    var columnName = this.buildColumnName(attribute, attributes[attribute]);","    var foreignKey = {","      columnName: columnName,","      type: primaryKey.attributes.type,","      foreignKey: true,","      references: modelName,","      on: primaryKey.attributes.columnName || primaryKey.name,","      onKey: primaryKey.name","    };","","    // Remove the attribute and replace it with the foreign key","    delete attributes[attribute];","    attributes[attribute] = foreignKey;","  }","","};","","/**"," * Find a collection's primary key attribute"," *"," * @param {String} collection"," * @return {Object}"," * @api private"," */","","ForeignKeys.prototype.findPrimaryKey = function(collection) {","","  if(!this.collections[collection]) {","    throw new Error('Trying to access a collection ' + collection + ' that is not defined.');","  }","","  if(!this.collections[collection].attributes) {","    throw new Error('Collection, ' + collection + ', has no attributes defined.');","  }","","  var primaryKey = null;","","  for(var key in this.collections[collection].attributes) {","    var attribute = this.collections[collection].attributes[key];","","    if(!hop(attribute, 'primaryKey')) continue;","","    primaryKey = {","      name: key,","      attributes: attribute","    };","  }","","  if(!primaryKey) {","    var error = 'Trying to create an association on a model that doesn\\'t have a Primary Key.';","    throw new Error(error);","  }","","  return primaryKey;","","};","","/**"," * Build A Column Name"," *"," * Uses either the attributes defined columnName or the user defined attribute name"," *"," * @param {String} key"," * @param {Object} attribute"," * @param {Object} primaryKey"," * @return {String}"," * @api private"," */","","ForeignKeys.prototype.buildColumnName = function(key, attribute) {","","  if(hop(attribute, 'columnName')) return attribute.columnName;","  return key;","","};",""],"l":{"6":1,"7":1,"8":1,"14":1,"24":1,"26":0,"27":0,"29":0,"30":0,"33":0,"44":1,"46":0,"50":0,"52":0,"53":0,"54":0,"55":0,"65":0,"66":0,"79":1,"81":0,"82":0,"85":0,"86":0,"89":0,"91":0,"92":0,"94":0,"96":0,"102":0,"103":0,"104":0,"107":0,"123":1,"125":0,"126":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-schema/lib/waterline-schema/joinTables.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-schema/lib/waterline-schema/joinTables.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":1,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":1,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"JoinTables","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":33}}},"2":{"name":"(anonymous_2)","line":54,"loc":{"start":{"line":54,"column":35},"end":{"line":54,"column":51}}},"3":{"name":"(anonymous_3)","line":70,"loc":{"start":{"line":70,"column":34},"end":{"line":70,"column":55}}},"4":{"name":"(anonymous_4)","line":82,"loc":{"start":{"line":82,"column":31},"end":{"line":82,"column":51}}},"5":{"name":"(anonymous_5)","line":99,"loc":{"start":{"line":99,"column":38},"end":{"line":99,"column":59}}},"6":{"name":"(anonymous_6)","line":124,"loc":{"start":{"line":124,"column":38},"end":{"line":124,"column":74}}},"7":{"name":"(anonymous_7)","line":189,"loc":{"start":{"line":189,"column":34},"end":{"line":189,"column":52}}},"8":{"name":"(anonymous_8)","line":255,"loc":{"start":{"line":255,"column":43},"end":{"line":255,"column":61}}},"9":{"name":"(anonymous_9)","line":276,"loc":{"start":{"line":276,"column":46},"end":{"line":276,"column":64}}},"10":{"name":"(anonymous_10)","line":312,"loc":{"start":{"line":312,"column":42},"end":{"line":312,"column":89}}},"11":{"name":"(anonymous_11)","line":318,"loc":{"start":{"line":318,"column":45},"end":{"line":318,"column":59}}},"12":{"name":"(anonymous_12)","line":337,"loc":{"start":{"line":337,"column":39},"end":{"line":337,"column":72}}},"13":{"name":"(anonymous_13)","line":363,"loc":{"start":{"line":363,"column":36},"end":{"line":363,"column":53}}},"14":{"name":"(anonymous_14)","line":367,"loc":{"start":{"line":367,"column":17},"end":{"line":367,"column":33}}},"15":{"name":"(anonymous_15)","line":371,"loc":{"start":{"line":371,"column":37},"end":{"line":371,"column":57}}},"16":{"name":"(anonymous_16)","line":393,"loc":{"start":{"line":393,"column":38},"end":{"line":393,"column":59}}},"17":{"name":"(anonymous_17)","line":433,"loc":{"start":{"line":433,"column":38},"end":{"line":433,"column":49}}},"18":{"name":"(anonymous_18)","line":450,"loc":{"start":{"line":450,"column":39},"end":{"line":450,"column":72}}},"19":{"name":"(anonymous_19)","line":487,"loc":{"start":{"line":487,"column":44},"end":{"line":487,"column":65}}},"20":{"name":"(anonymous_20)","line":498,"loc":{"start":{"line":498,"column":95},"end":{"line":498,"column":109}}},"21":{"name":"(anonymous_21)","line":534,"loc":{"start":{"line":534,"column":37},"end":{"line":534,"column":71}}},"22":{"name":"(anonymous_22)","line":563,"loc":{"start":{"line":563,"column":37},"end":{"line":563,"column":66}}},"23":{"name":"(anonymous_23)","line":596,"loc":{"start":{"line":596,"column":47},"end":{"line":596,"column":58}}},"24":{"name":"(anonymous_24)","line":605,"loc":{"start":{"line":605,"column":19},"end":{"line":605,"column":40}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}},"5":{"start":{"line":25,"column":0},"end":{"line":60,"column":1}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":18}},"7":{"start":{"line":28,"column":2},"end":{"line":28,"column":17}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":34}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":19}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":46}},"11":{"start":{"line":36,"column":2},"end":{"line":45,"column":3}},"12":{"start":{"line":40,"column":4},"end":{"line":40,"column":45}},"13":{"start":{"line":41,"column":4},"end":{"line":41,"column":34}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":42}},"15":{"start":{"line":48,"column":2},"end":{"line":48,"column":24}},"16":{"start":{"line":51,"column":2},"end":{"line":51,"column":33}},"17":{"start":{"line":54,"column":2},"end":{"line":56,"column":5}},"18":{"start":{"line":55,"column":4},"end":{"line":55,"column":47}},"19":{"start":{"line":58,"column":2},"end":{"line":58,"column":49}},"20":{"start":{"line":70,"column":0},"end":{"line":89,"column":2}},"21":{"start":{"line":72,"column":2},"end":{"line":72,"column":18}},"22":{"start":{"line":73,"column":2},"end":{"line":73,"column":18}},"23":{"start":{"line":75,"column":2},"end":{"line":75,"column":59}},"24":{"start":{"line":76,"column":2},"end":{"line":76,"column":61}},"25":{"start":{"line":79,"column":2},"end":{"line":79,"column":63}},"26":{"start":{"line":79,"column":53},"end":{"line":79,"column":63}},"27":{"start":{"line":82,"column":2},"end":{"line":85,"column":5}},"28":{"start":{"line":83,"column":4},"end":{"line":83,"column":59}},"29":{"start":{"line":84,"column":4},"end":{"line":84,"column":50}},"30":{"start":{"line":84,"column":14},"end":{"line":84,"column":50}},"31":{"start":{"line":87,"column":2},"end":{"line":87,"column":16}},"32":{"start":{"line":99,"column":0},"end":{"line":110,"column":2}},"33":{"start":{"line":101,"column":2},"end":{"line":101,"column":32}},"34":{"start":{"line":103,"column":2},"end":{"line":106,"column":3}},"35":{"start":{"line":104,"column":4},"end":{"line":104,"column":59}},"36":{"start":{"line":104,"column":50},"end":{"line":104,"column":59}},"37":{"start":{"line":105,"column":4},"end":{"line":105,"column":78}},"38":{"start":{"line":108,"column":2},"end":{"line":108,"column":30}},"39":{"start":{"line":124,"column":0},"end":{"line":179,"column":2}},"40":{"start":{"line":126,"column":2},"end":{"line":126,"column":17}},"41":{"start":{"line":127,"column":2},"end":{"line":127,"column":27}},"42":{"start":{"line":131,"column":2},"end":{"line":131,"column":34}},"43":{"start":{"line":131,"column":27},"end":{"line":131,"column":34}},"44":{"start":{"line":134,"column":2},"end":{"line":134,"column":50}},"45":{"start":{"line":137,"column":2},"end":{"line":137,"column":48}},"46":{"start":{"line":138,"column":2},"end":{"line":144,"column":3}},"47":{"start":{"line":139,"column":4},"end":{"line":141,"column":68}},"48":{"start":{"line":143,"column":4},"end":{"line":143,"column":27}},"49":{"start":{"line":147,"column":2},"end":{"line":151,"column":3}},"50":{"start":{"line":148,"column":4},"end":{"line":149,"column":76}},"51":{"start":{"line":150,"column":4},"end":{"line":150,"column":27}},"52":{"start":{"line":155,"column":2},"end":{"line":155,"column":79}},"53":{"start":{"line":155,"column":72},"end":{"line":155,"column":79}},"54":{"start":{"line":160,"column":2},"end":{"line":160,"column":73}},"55":{"start":{"line":160,"column":24},"end":{"line":160,"column":73}},"56":{"start":{"line":163,"column":2},"end":{"line":175,"column":4}},"57":{"start":{"line":177,"column":2},"end":{"line":177,"column":25}},"58":{"start":{"line":189,"column":0},"end":{"line":245,"column":2}},"59":{"start":{"line":191,"column":2},"end":{"line":191,"column":17}},"60":{"start":{"line":192,"column":2},"end":{"line":192,"column":30}},"61":{"start":{"line":193,"column":2},"end":{"line":193,"column":30}},"62":{"start":{"line":195,"column":2},"end":{"line":195,"column":67}},"63":{"start":{"line":196,"column":2},"end":{"line":196,"column":35}},"64":{"start":{"line":197,"column":2},"end":{"line":197,"column":48}},"65":{"start":{"line":198,"column":2},"end":{"line":198,"column":30}},"66":{"start":{"line":199,"column":2},"end":{"line":199,"column":29}},"67":{"start":{"line":204,"column":2},"end":{"line":204,"column":25}},"68":{"start":{"line":205,"column":2},"end":{"line":205,"column":28}},"69":{"start":{"line":206,"column":2},"end":{"line":212,"column":3}},"70":{"start":{"line":207,"column":4},"end":{"line":207,"column":39}},"71":{"start":{"line":208,"column":4},"end":{"line":208,"column":42}},"72":{"start":{"line":210,"column":4},"end":{"line":210,"column":39}},"73":{"start":{"line":211,"column":4},"end":{"line":211,"column":42}},"74":{"start":{"line":214,"column":2},"end":{"line":214,"column":134}},"75":{"start":{"line":215,"column":2},"end":{"line":215,"column":24}},"76":{"start":{"line":218,"column":2},"end":{"line":218,"column":58}},"77":{"start":{"line":219,"column":2},"end":{"line":225,"column":3}},"78":{"start":{"line":220,"column":4},"end":{"line":222,"column":94}},"79":{"start":{"line":224,"column":4},"end":{"line":224,"column":25}},"80":{"start":{"line":228,"column":2},"end":{"line":234,"column":4}},"81":{"start":{"line":237,"column":2},"end":{"line":237,"column":86}},"82":{"start":{"line":238,"column":2},"end":{"line":238,"column":86}},"83":{"start":{"line":240,"column":2},"end":{"line":240,"column":66}},"84":{"start":{"line":241,"column":2},"end":{"line":241,"column":66}},"85":{"start":{"line":243,"column":2},"end":{"line":243,"column":15}},"86":{"start":{"line":255,"column":0},"end":{"line":266,"column":2}},"87":{"start":{"line":257,"column":2},"end":{"line":257,"column":30}},"88":{"start":{"line":258,"column":2},"end":{"line":258,"column":30}},"89":{"start":{"line":260,"column":2},"end":{"line":262,"column":3}},"90":{"start":{"line":261,"column":4},"end":{"line":261,"column":90}},"91":{"start":{"line":264,"column":2},"end":{"line":264,"column":88}},"92":{"start":{"line":276,"column":0},"end":{"line":300,"column":2}},"93":{"start":{"line":278,"column":2},"end":{"line":278,"column":59}},"94":{"start":{"line":279,"column":2},"end":{"line":279,"column":59}},"95":{"start":{"line":280,"column":2},"end":{"line":280,"column":25}},"96":{"start":{"line":283,"column":2},"end":{"line":285,"column":3}},"97":{"start":{"line":284,"column":4},"end":{"line":284,"column":25}},"98":{"start":{"line":287,"column":2},"end":{"line":287,"column":90}},"99":{"start":{"line":288,"column":2},"end":{"line":288,"column":46}},"100":{"start":{"line":288,"column":25},"end":{"line":288,"column":46}},"101":{"start":{"line":290,"column":2},"end":{"line":290,"column":90}},"102":{"start":{"line":291,"column":2},"end":{"line":291,"column":46}},"103":{"start":{"line":291,"column":25},"end":{"line":291,"column":46}},"104":{"start":{"line":294,"column":2},"end":{"line":296,"column":3}},"105":{"start":{"line":295,"column":4},"end":{"line":295,"column":25}},"106":{"start":{"line":298,"column":2},"end":{"line":298,"column":15}},"107":{"start":{"line":312,"column":0},"end":{"line":326,"column":2}},"108":{"start":{"line":314,"column":2},"end":{"line":314,"column":52}},"109":{"start":{"line":315,"column":2},"end":{"line":315,"column":15}},"110":{"start":{"line":316,"column":2},"end":{"line":316,"column":17}},"111":{"start":{"line":318,"column":2},"end":{"line":322,"column":5}},"112":{"start":{"line":319,"column":4},"end":{"line":319,"column":44}},"113":{"start":{"line":320,"column":4},"end":{"line":320,"column":64}},"114":{"start":{"line":320,"column":49},"end":{"line":320,"column":64}},"115":{"start":{"line":321,"column":4},"end":{"line":321,"column":93}},"116":{"start":{"line":321,"column":78},"end":{"line":321,"column":93}},"117":{"start":{"line":324,"column":2},"end":{"line":324,"column":18}},"118":{"start":{"line":337,"column":0},"end":{"line":354,"column":2}},"119":{"start":{"line":339,"column":2},"end":{"line":339,"column":62}},"120":{"start":{"line":340,"column":2},"end":{"line":340,"column":72}},"121":{"start":{"line":341,"column":2},"end":{"line":341,"column":61}},"122":{"start":{"line":343,"column":2},"end":{"line":352,"column":4}},"123":{"start":{"line":363,"column":0},"end":{"line":383,"column":2}},"124":{"start":{"line":365,"column":2},"end":{"line":365,"column":18}},"125":{"start":{"line":367,"column":2},"end":{"line":381,"column":5}},"126":{"start":{"line":368,"column":4},"end":{"line":368,"column":19}},"127":{"start":{"line":371,"column":4},"end":{"line":377,"column":7}},"128":{"start":{"line":372,"column":6},"end":{"line":372,"column":48}},"129":{"start":{"line":373,"column":6},"end":{"line":373,"column":89}},"130":{"start":{"line":373,"column":82},"end":{"line":373,"column":89}},"131":{"start":{"line":374,"column":6},"end":{"line":374,"column":89}},"132":{"start":{"line":374,"column":82},"end":{"line":374,"column":89}},"133":{"start":{"line":376,"column":6},"end":{"line":376,"column":18}},"134":{"start":{"line":379,"column":4},"end":{"line":379,"column":48}},"135":{"start":{"line":379,"column":41},"end":{"line":379,"column":48}},"136":{"start":{"line":380,"column":4},"end":{"line":380,"column":48}},"137":{"start":{"line":380,"column":12},"end":{"line":380,"column":48}},"138":{"start":{"line":393,"column":0},"end":{"line":425,"column":2}},"139":{"start":{"line":395,"column":2},"end":{"line":395,"column":24}},"140":{"start":{"line":396,"column":2},"end":{"line":396,"column":16}},"141":{"start":{"line":397,"column":2},"end":{"line":397,"column":12}},"142":{"start":{"line":399,"column":2},"end":{"line":401,"column":3}},"143":{"start":{"line":400,"column":4},"end":{"line":400,"column":93}},"144":{"start":{"line":403,"column":2},"end":{"line":405,"column":3}},"145":{"start":{"line":404,"column":4},"end":{"line":404,"column":82}},"146":{"start":{"line":407,"column":2},"end":{"line":416,"column":3}},"147":{"start":{"line":408,"column":4},"end":{"line":408,"column":61}},"148":{"start":{"line":410,"column":4},"end":{"line":410,"column":47}},"149":{"start":{"line":410,"column":38},"end":{"line":410,"column":47}},"150":{"start":{"line":412,"column":4},"end":{"line":415,"column":6}},"151":{"start":{"line":418,"column":2},"end":{"line":421,"column":3}},"152":{"start":{"line":419,"column":4},"end":{"line":419,"column":91}},"153":{"start":{"line":420,"column":4},"end":{"line":420,"column":27}},"154":{"start":{"line":423,"column":2},"end":{"line":423,"column":20}},"155":{"start":{"line":433,"column":0},"end":{"line":440,"column":2}},"156":{"start":{"line":435,"column":2},"end":{"line":438,"column":3}},"157":{"start":{"line":436,"column":4},"end":{"line":436,"column":61}},"158":{"start":{"line":437,"column":4},"end":{"line":437,"column":49}},"159":{"start":{"line":450,"column":0},"end":{"line":475,"column":2}},"160":{"start":{"line":452,"column":2},"end":{"line":473,"column":3}},"161":{"start":{"line":453,"column":4},"end":{"line":453,"column":59}},"162":{"start":{"line":453,"column":50},"end":{"line":453,"column":59}},"163":{"start":{"line":455,"column":4},"end":{"line":455,"column":37}},"164":{"start":{"line":456,"column":4},"end":{"line":456,"column":28}},"165":{"start":{"line":457,"column":4},"end":{"line":457,"column":32}},"166":{"start":{"line":458,"column":4},"end":{"line":458,"column":23}},"167":{"start":{"line":460,"column":4},"end":{"line":460,"column":56}},"168":{"start":{"line":462,"column":4},"end":{"line":462,"column":30}},"169":{"start":{"line":462,"column":21},"end":{"line":462,"column":30}},"170":{"start":{"line":465,"column":4},"end":{"line":465,"column":77}},"171":{"start":{"line":465,"column":68},"end":{"line":465,"column":77}},"172":{"start":{"line":467,"column":4},"end":{"line":472,"column":6}},"173":{"start":{"line":487,"column":0},"end":{"line":523,"column":2}},"174":{"start":{"line":489,"column":2},"end":{"line":489,"column":59}},"175":{"start":{"line":491,"column":2},"end":{"line":521,"column":3}},"176":{"start":{"line":492,"column":4},"end":{"line":492,"column":56}},"177":{"start":{"line":492,"column":47},"end":{"line":492,"column":56}},"178":{"start":{"line":494,"column":4},"end":{"line":494,"column":57}},"179":{"start":{"line":495,"column":4},"end":{"line":495,"column":108}},"180":{"start":{"line":496,"column":4},"end":{"line":496,"column":51}},"181":{"start":{"line":497,"column":4},"end":{"line":497,"column":68}},"182":{"start":{"line":498,"column":4},"end":{"line":500,"column":7}},"183":{"start":{"line":499,"column":6},"end":{"line":499,"column":93}},"184":{"start":{"line":503,"column":4},"end":{"line":503,"column":56}},"185":{"start":{"line":504,"column":4},"end":{"line":504,"column":56}},"186":{"start":{"line":507,"column":4},"end":{"line":507,"column":40}},"187":{"start":{"line":508,"column":4},"end":{"line":508,"column":74}},"188":{"start":{"line":509,"column":4},"end":{"line":509,"column":82}},"189":{"start":{"line":510,"column":4},"end":{"line":510,"column":16}},"190":{"start":{"line":511,"column":4},"end":{"line":515,"column":5}},"191":{"start":{"line":512,"column":6},"end":{"line":512,"column":42}},"192":{"start":{"line":514,"column":6},"end":{"line":514,"column":26}},"193":{"start":{"line":517,"column":4},"end":{"line":517,"column":39}},"194":{"start":{"line":518,"column":4},"end":{"line":518,"column":44}},"195":{"start":{"line":520,"column":4},"end":{"line":520,"column":41}},"196":{"start":{"line":534,"column":0},"end":{"line":551,"column":2}},"197":{"start":{"line":536,"column":2},"end":{"line":536,"column":59}},"198":{"start":{"line":537,"column":2},"end":{"line":537,"column":16}},"199":{"start":{"line":539,"column":2},"end":{"line":547,"column":3}},"200":{"start":{"line":540,"column":4},"end":{"line":540,"column":59}},"201":{"start":{"line":540,"column":50},"end":{"line":540,"column":59}},"202":{"start":{"line":541,"column":4},"end":{"line":541,"column":59}},"203":{"start":{"line":541,"column":50},"end":{"line":541,"column":59}},"204":{"start":{"line":542,"column":4},"end":{"line":542,"column":61}},"205":{"start":{"line":542,"column":52},"end":{"line":542,"column":61}},"206":{"start":{"line":543,"column":4},"end":{"line":543,"column":42}},"207":{"start":{"line":543,"column":33},"end":{"line":543,"column":42}},"208":{"start":{"line":545,"column":4},"end":{"line":545,"column":26}},"209":{"start":{"line":546,"column":4},"end":{"line":546,"column":10}},"210":{"start":{"line":549,"column":2},"end":{"line":549,"column":19}},"211":{"start":{"line":563,"column":0},"end":{"line":585,"column":2}},"212":{"start":{"line":565,"column":2},"end":{"line":565,"column":19}},"213":{"start":{"line":566,"column":2},"end":{"line":566,"column":22}},"214":{"start":{"line":568,"column":2},"end":{"line":581,"column":3}},"215":{"start":{"line":569,"column":4},"end":{"line":569,"column":43}},"216":{"start":{"line":571,"column":4},"end":{"line":571,"column":44}},"217":{"start":{"line":571,"column":35},"end":{"line":571,"column":44}},"218":{"start":{"line":572,"column":4},"end":{"line":572,"column":43}},"219":{"start":{"line":572,"column":34},"end":{"line":572,"column":43}},"220":{"start":{"line":574,"column":4},"end":{"line":574,"column":35}},"221":{"start":{"line":576,"column":4},"end":{"line":576,"column":61}},"222":{"start":{"line":576,"column":52},"end":{"line":576,"column":61}},"223":{"start":{"line":578,"column":4},"end":{"line":578,"column":16}},"224":{"start":{"line":579,"column":4},"end":{"line":579,"column":41}},"225":{"start":{"line":580,"column":4},"end":{"line":580,"column":10}},"226":{"start":{"line":583,"column":2},"end":{"line":583,"column":48}},"227":{"start":{"line":596,"column":0},"end":{"line":617,"column":2}},"228":{"start":{"line":597,"column":2},"end":{"line":597,"column":18}},"229":{"start":{"line":599,"column":2},"end":{"line":614,"column":3}},"230":{"start":{"line":600,"column":4},"end":{"line":600,"column":43}},"231":{"start":{"line":604,"column":4},"end":{"line":604,"column":28}},"232":{"start":{"line":605,"column":4},"end":{"line":609,"column":7}},"233":{"start":{"line":606,"column":6},"end":{"line":608,"column":7}},"234":{"start":{"line":607,"column":8},"end":{"line":607,"column":27}},"235":{"start":{"line":611,"column":4},"end":{"line":613,"column":5}},"236":{"start":{"line":612,"column":6},"end":{"line":612,"column":42}},"237":{"start":{"line":616,"column":2},"end":{"line":616,"column":21}}},"branchMap":{"1":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":16},"end":{"line":30,"column":27}},{"start":{"line":30,"column":31},"end":{"line":30,"column":33}}]},"2":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"3":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"4":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"5":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":2},"end":{"line":131,"column":2}},{"start":{"line":131,"column":2},"end":{"line":131,"column":2}}]},"6":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":2},"end":{"line":138,"column":2}},{"start":{"line":138,"column":2},"end":{"line":138,"column":2}}]},"7":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]},"8":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":5},"end":{"line":147,"column":21}},{"start":{"line":147,"column":26},"end":{"line":147,"column":53}}]},"9":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"10":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":5},"end":{"line":155,"column":21}},{"start":{"line":155,"column":25},"end":{"line":155,"column":70}}]},"11":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":2},"end":{"line":160,"column":2}},{"start":{"line":160,"column":2},"end":{"line":160,"column":2}}]},"12":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"13":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":30},"end":{"line":214,"column":74}},{"start":{"line":214,"column":78},"end":{"line":214,"column":80}}]},"14":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":84},"end":{"line":214,"column":125}},{"start":{"line":214,"column":129},"end":{"line":214,"column":131}}]},"15":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"16":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":260,"column":2}},{"start":{"line":260,"column":2},"end":{"line":260,"column":2}}]},"17":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":2},"end":{"line":283,"column":2}},{"start":{"line":283,"column":2},"end":{"line":283,"column":2}}]},"18":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":2},"end":{"line":288,"column":2}},{"start":{"line":288,"column":2},"end":{"line":288,"column":2}}]},"19":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":2},"end":{"line":291,"column":2}},{"start":{"line":291,"column":2},"end":{"line":291,"column":2}}]},"20":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":2},"end":{"line":294,"column":2}},{"start":{"line":294,"column":2},"end":{"line":294,"column":2}}]},"21":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":4},"end":{"line":320,"column":4}},{"start":{"line":320,"column":4},"end":{"line":320,"column":4}}]},"22":{"line":320,"type":"binary-expr","locations":[{"start":{"line":320,"column":7},"end":{"line":320,"column":13}},{"start":{"line":320,"column":17},"end":{"line":320,"column":47}}]},"23":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":4},"end":{"line":321,"column":4}},{"start":{"line":321,"column":4},"end":{"line":321,"column":4}}]},"24":{"line":321,"type":"binary-expr","locations":[{"start":{"line":321,"column":7},"end":{"line":321,"column":37}},{"start":{"line":321,"column":41},"end":{"line":321,"column":76}}]},"25":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":6},"end":{"line":373,"column":6}},{"start":{"line":373,"column":6},"end":{"line":373,"column":6}}]},"26":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":6},"end":{"line":374,"column":6}},{"start":{"line":374,"column":6},"end":{"line":374,"column":6}}]},"27":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":4},"end":{"line":379,"column":4}},{"start":{"line":379,"column":4},"end":{"line":379,"column":4}}]},"28":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":4},"end":{"line":380,"column":4}},{"start":{"line":380,"column":4},"end":{"line":380,"column":4}}]},"29":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":2},"end":{"line":399,"column":2}},{"start":{"line":399,"column":2},"end":{"line":399,"column":2}}]},"30":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":2},"end":{"line":403,"column":2}},{"start":{"line":403,"column":2},"end":{"line":403,"column":2}}]},"31":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":4},"end":{"line":410,"column":4}},{"start":{"line":410,"column":4},"end":{"line":410,"column":4}}]},"32":{"line":413,"type":"binary-expr","locations":[{"start":{"line":413,"column":12},"end":{"line":413,"column":32}},{"start":{"line":413,"column":36},"end":{"line":413,"column":39}}]},"33":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":2},"end":{"line":418,"column":2}},{"start":{"line":418,"column":2},"end":{"line":418,"column":2}}]},"34":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":4},"end":{"line":453,"column":4}},{"start":{"line":453,"column":4},"end":{"line":453,"column":4}}]},"35":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":4},"end":{"line":462,"column":4}},{"start":{"line":462,"column":4},"end":{"line":462,"column":4}}]},"36":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":4},"end":{"line":465,"column":4}},{"start":{"line":465,"column":4},"end":{"line":465,"column":4}}]},"37":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":4},"end":{"line":492,"column":4}},{"start":{"line":492,"column":4},"end":{"line":492,"column":4}}]},"38":{"line":495,"type":"binary-expr","locations":[{"start":{"line":495,"column":54},"end":{"line":495,"column":101}},{"start":{"line":495,"column":105},"end":{"line":495,"column":107}}]},"39":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":4},"end":{"line":511,"column":4}},{"start":{"line":511,"column":4},"end":{"line":511,"column":4}}]},"40":{"line":511,"type":"binary-expr","locations":[{"start":{"line":511,"column":8},"end":{"line":511,"column":22}},{"start":{"line":511,"column":26},"end":{"line":511,"column":51}}]},"41":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":4},"end":{"line":540,"column":4}},{"start":{"line":540,"column":4},"end":{"line":540,"column":4}}]},"42":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":4},"end":{"line":541,"column":4}},{"start":{"line":541,"column":4},"end":{"line":541,"column":4}}]},"43":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":4},"end":{"line":542,"column":4}},{"start":{"line":542,"column":4},"end":{"line":542,"column":4}}]},"44":{"line":543,"type":"if","locations":[{"start":{"line":543,"column":4},"end":{"line":543,"column":4}},{"start":{"line":543,"column":4},"end":{"line":543,"column":4}}]},"45":{"line":543,"type":"binary-expr","locations":[{"start":{"line":543,"column":7},"end":{"line":543,"column":10}},{"start":{"line":543,"column":14},"end":{"line":543,"column":31}}]},"46":{"line":571,"type":"if","locations":[{"start":{"line":571,"column":4},"end":{"line":571,"column":4}},{"start":{"line":571,"column":4},"end":{"line":571,"column":4}}]},"47":{"line":572,"type":"if","locations":[{"start":{"line":572,"column":4},"end":{"line":572,"column":4}},{"start":{"line":572,"column":4},"end":{"line":572,"column":4}}]},"48":{"line":576,"type":"if","locations":[{"start":{"line":576,"column":4},"end":{"line":576,"column":4}},{"start":{"line":576,"column":4},"end":{"line":576,"column":4}}]},"49":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":6},"end":{"line":606,"column":6}},{"start":{"line":606,"column":6},"end":{"line":606,"column":6}}]},"50":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":4},"end":{"line":611,"column":4}},{"start":{"line":611,"column":4},"end":{"line":611,"column":4}}]}},"code":["","/**"," * Module dependencies"," */","","var _ = require('lodash');","var utils = require('./utils');","var hop = utils.object.hasOwnProperty;","","/**"," * Expose JoinTables"," */","","module.exports = JoinTables;","","/**"," * Insert Join/Junction Tables where needed whenever two collections"," * point to each other. Also replaces the references to point to the new join table."," *"," * @param {Object} collections"," * @return {Object}"," * @api private"," */","","function JoinTables(collections) {","","  var self = this;","  var joinTables;","","  collections = collections || {};","  this.tables = {};","","  this.collections = _.cloneDeep(collections);","","  // Build Up Join Tables","  for(var collection in collections) {","","    // Parse the collection's attributes and create join tables","    // where needed for collections","    joinTables = this.buildJoins(collection);","    this.uniqueTables(joinTables);","","    // Mark hasManyThrough tables as junction tables with select all set to true","    this.markCustomJoinTables(collection);","  }","","  // Update Collection Attributes to point to the join table","  this.linkAttributes();","","  // Filter all the tables which have at least on collection on migrate: self, so they won't be built","  this.filterMigrateSafeTables();","","  // Remove properties added just for unqueness","  Object.keys(this.tables).forEach(function(table) {","    delete self.tables[table].joinedAttributes;","  });","","  return _.extend(this.collections, this.tables);","","}","","/**"," * Build A Set of Join Tables"," *"," * @param {String} collection"," * @api private"," * @return {Array}"," */","","JoinTables.prototype.buildJoins = function(collection) {","","  var self = this;","  var tables = [];","","  var attributes = this.collections[collection].attributes;","  var collectionAttributes = this.mapCollections(attributes);","","  // If there are no collection attributes return an empty array","  if(Object.keys(collectionAttributes).length === 0) return [];","","  // For each collection attribute, inspect it to build up a join table if needed.","  collectionAttributes.forEach(function(attribute) {","    var table = self.parseAttribute(collection, attribute);","    if(table) tables.push(self.buildTable(table));","  });","","  return tables;","","};","","/**"," * Find Has Many attributes for a given set of attributes."," *"," * @param {Object} attributes"," * @return {Object}"," * @api private"," */","","JoinTables.prototype.mapCollections = function(attributes) {","","  var collectionAttributes = [];","","  for(var attribute in attributes) {","    if(!hop(attributes[attribute], 'collection')) continue;","    collectionAttributes.push({ key: attribute, val: attributes[attribute] });","  }","","  return collectionAttributes;","","};","","/**"," * Parse Collection Attributes"," *"," * Check the collection the attribute references to see if this is a one-to-many or many-to-many"," * relationship. If it's a one-to-many we don't need to build up a join table."," *"," * @param {String} collectionName"," * @param {Object} attribute"," * @return {Object}"," * @api private"," */","","JoinTables.prototype.parseAttribute = function(collectionName, attribute) {","","  var error = '';","  var attr = attribute.val;","","  // Check if this is a hasManyThrough attribute,","  // if so a join table doesn't need to be created","  if(hop(attr, 'through')) return;","","  // Normalize `collection` property name to lowercased version","  attr.collection = attr.collection.toLowerCase();","","  // Grab the associated collection and ensure it exists","  var child = this.collections[attr.collection];","  if(!child) {","    error = 'Collection ' + collectionName + ' has an attribute named ' + attribute.key + ' that is ' +","            'pointing to a collection named ' + attr.collection + ' which doesn\\'t exist. You must ' +","            ' first create the ' + attr.collection + ' collection.';","","    throw new Error(error);","  }","","  // If the child attribute does not exist, throw an Error.","  if(hop(attr, 'via') && (!child.attributes[attr.via])) {","    error = 'on mapping custom foreign keys: ' + collectionName + '->' +  attr.collection +  '. Attribute: `' +","    attr.via + '` does not exist on: collection: `' + attr.collection + '`';","    throw new Error(error);","  }","","  // If the attribute has a `via` key, check if it's a foreign key. If so this is a one-to-many","  // relationship and no join table is needed.","  if(hop(attr, 'via') && hop(child.attributes[attr.via], 'foreignKey')) return;","","  // If no via is specified, a name needs to be created for the other column","  // in the join table. Use the attribute key and the associated collection name","  // which will be unique.","  if(!hop(attr, 'via')) attr.via = attribute.key + '_' + attr.collection;","","  // Build up an object that can be used to build a join table","  var tableAttributes = {","    column_one: {","      collection: collectionName.toLowerCase(),","      attribute: attribute.key,","      via: attr.via","    },","","    column_two: {","      collection: attr.collection,","      attribute: attr.via,","      via: attribute.key","    }","  };","","  return tableAttributes;","","};","","/**"," * Build Collection for a single join"," *"," * @param {Object} columns"," * @return {Object}"," * @api private"," */","","JoinTables.prototype.buildTable = function(columns) {","","  var table = {};","  var c1 = columns.column_one;","  var c2 = columns.column_two;","","  table.identity = this.buildCollectionName(columns).toLowerCase();","  table.tableName = table.identity;","  table.tables = [c1.collection, c2.collection];","  table.joinedAttributes = [];","  table.junctionTable = true;","","  // Append the meta data if defined.","  // To do this, find the dominant collection or just use C1 and then merge the","  // two meta objects together with the dominant side taking precedence.","  var dominantCollection;","  var nonDominantCollection;","  if(this.searchForAttribute(c2.collection, 'dominant')) {","    dominantCollection = c2.collection;","    nonDominantCollection = c1.collection;","  } else {","    dominantCollection = c1.collection;","    nonDominantCollection = c2.collection;","  }","","  var metaData = _.merge({}, (this.collections[nonDominantCollection].meta || {}), (this.collections[dominantCollection].meta || {}));","  table.meta = metaData;","","  // Look for a dominant collection property so the join table can be created on the correct connection.","  table.connection = this.findDominantConnection(columns);","  if(!table.connection) {","    var err = \"A 'dominant' property was not supplied for the two collections in a many-to-many relationship. \" +","        \"One side of the relationship between '\" + c1.collection + \"' and '\" + c2.collection + \"' needs a \" +","        \"'dominant: true' flag set so a join table can be created on the correct connection.\";","","    throw new Error(err);","  }","","  // Set a primary key (should probably be refactored)","  table.attributes = {","    id: {","      primaryKey: true,","      autoIncrement: true,","      type: 'integer'","    }","  };","","  // Add each foreign key as an attribute","  table.attributes[c1.collection + '_' + c1.attribute] = this.buildForeignKey(c1, c2);","  table.attributes[c2.collection + '_' + c2.attribute] = this.buildForeignKey(c2, c1);","","  table.joinedAttributes.push(c1.collection + '_' + c1.attribute);","  table.joinedAttributes.push(c2.collection + '_' + c2.attribute);","","  return table;","","};","","/**"," * Build a collection name by combining two collection and attribute names."," *"," * @param {Object} columns"," * @return {String}"," * @api private"," */","","JoinTables.prototype.buildCollectionName = function(columns) {","","  var c1 = columns.column_one;","  var c2 = columns.column_two;","","  if(c1.collection < c2.collection) {","    return c1.collection + '_' + c1.attribute + '__' + c2.collection + '_' + c2.attribute;","  }","","  return c2.collection + '_' + c2.attribute + '__' + c1.collection + '_' + c1.attribute;","","};","","/**"," * Find the dominant collection."," *"," * @param {Object} columns"," * @return {String}"," * @api private"," */","","JoinTables.prototype.findDominantConnection = function(columns) {","","  var c1 = this.collections[columns.column_one.collection];","  var c2 = this.collections[columns.column_two.collection];","  var dominantCollection;","","  // Don't require a dominant collection on self-referencing associations","  if(columns.column_one.collection === columns.column_two.collection) {","    return c1.connection;","  }","","  dominantCollection = this.searchForAttribute(columns.column_one.collection, 'dominant');","  if(dominantCollection) return c1.connection;","","  dominantCollection = this.searchForAttribute(columns.column_two.collection, 'dominant');","  if(dominantCollection) return c2.connection;","","  // Don't require a dominant collection for models on the same connection.","  if (c1.connection[0] === c2.connection[0]) {","    return c1.connection;","  }","","  return false;","","};","","/**"," * Search Attributes for an attribute property."," *"," * @param {String} collectionName"," * @param {String} attributeName"," * @param {String} value (optional)"," * @return {String}"," * @api private"," */","","JoinTables.prototype.searchForAttribute = function(collectionName, attributeName, value) {","","  var collection = this.collections[collectionName];","  var matching;","  var properties;","","  Object.keys(collection.attributes).forEach(function(key) {","    properties = collection.attributes[key];","    if(!value && hop(properties, attributeName)) matching = key;","    if(hop(properties, attributeName) && properties[attributeName] === value) matching = key;","  });","","  return matching;","","};","","/**"," * Build a Foreign Key value for an attribute in the join collection"," *"," * @param {Object} column_one"," * @param {Object} column_two"," * @return {Object}"," * @api private"," */","","JoinTables.prototype.buildForeignKey = function(column_one, column_two) {","","  var primaryKey = this.findPrimaryKey(column_one.collection);","  var columnName = (column_one.collection + '_' + column_one.attribute);","  var viaName = column_two.collection + '_' + column_one.via;","","  return {","    columnName: columnName,","    type: primaryKey.attributes.type,","    foreignKey: true,","    references: column_one.collection,","    on: primaryKey.name,","    onKey: primaryKey.name,","    via: viaName,","    groupKey: column_one.collection","  };","","};","","/**"," * Filter Out Duplicate Join Tables"," *"," * @param {Array} tables"," * @api private"," */","","JoinTables.prototype.uniqueTables = function(tables) {","","  var self = this;","","  tables.forEach(function(table) {","    var add = true;","","    // Check if any tables are already joining these attributes together","    Object.keys(self.tables).forEach(function(tableName) {","      var currentTable = self.tables[tableName];","      if(currentTable.joinedAttributes.indexOf(table.joinedAttributes[0]) === -1) return;","      if(currentTable.joinedAttributes.indexOf(table.joinedAttributes[1]) === -1) return;","","      add = false;","    });","","    if(hop(self.tables, table.identity)) return;","    if(add) self.tables[table.identity] = table;","  });","","};","","/**"," * Find a collection's primary key attribute"," *"," * @param {String} collection"," * @return {Object}"," * @api private"," */","","JoinTables.prototype.findPrimaryKey = function(collection) {","","  var primaryKey = null;","  var attribute;","  var error;","","  if(!this.collections[collection]) {","    throw new Error('Trying to access a collection ' + collection + ' that is not defined.');","  }","","  if(!this.collections[collection].attributes) {","    throw new Error('Collection, ' + collection + ', has no attributes defined.');","  }","","  for(var key in this.collections[collection].attributes) {","    attribute = this.collections[collection].attributes[key];","","    if(!hop(attribute, 'primaryKey')) continue;","","    primaryKey = {","      name: attribute.columnName || key,","      attributes: attribute","    };","  }","","  if(!primaryKey) {","    error = 'Trying to create an association on a model that doesn\\'t have a Primary Key.';","    throw new Error(error);","  }","","  return primaryKey;","","};","","/**"," * Update Collection Attributes to point to the join table instead of the other collection"," *"," * @api private"," */","","JoinTables.prototype.linkAttributes = function() {","","  for(var collection in this.collections) {","    var attributes = this.collections[collection].attributes;","    this.updateAttribute(collection, attributes);","  }","","};","","/**"," * Update An Attribute"," *"," * @param {String} collection"," * @param {Object} attributes"," * @api private"," */","","JoinTables.prototype.updateAttribute = function(collection, attributes) {","","  for(var attribute in attributes) {","    if(!hop(attributes[attribute], 'collection')) continue;","","    var attr = attributes[attribute];","    var parent = collection;","    var child = attr.collection;","    var via = attr.via;","","    var joined = this.findJoinTable(parent, child, via);","","    if(!joined.join) continue;","","    // If the table doesn't know about the other side ignore updating anything","    if(!hop(joined.table.attributes, collection + '_' + attribute)) continue;","","    this.collections[collection].attributes[attribute] = {","      collection: joined.table.identity,","      references: joined.table.identity,","      on: joined.table.attributes[collection + '_' + attribute].columnName,","      onKey: joined.table.attributes[collection + '_' + attribute].columnName","    };","  }","","};","","/**"," * Mark Custom Join Tables as a Junction Table"," *"," * If a collection has an attribute with a `through` property, lookup"," * the collection it points to and mark it as a `junctionTable`."," *"," * @param {String} collection"," * @api private"," */","","JoinTables.prototype.markCustomJoinTables = function(collection) {","","  var attributes = this.collections[collection].attributes;","","  for(var attribute in attributes) {","    if(!hop(attributes[attribute], 'through')) continue;","","    var linkedCollection = attributes[attribute].through;","    this.collections[linkedCollection].throughTable = this.collections[linkedCollection].throughTable || {};","    var throughPath = collection + '.' + attribute;","    var linkedAttrs = this.collections[linkedCollection].attributes;","    this.collections[linkedCollection].throughTable[throughPath] = _.find(_.keys(linkedAttrs), function(attr){","      return linkedAttrs[attr].references === attributes[attribute].collection.toLowerCase();","    });","","    // Build up proper reference on the attribute","    attributes[attribute].collection = linkedCollection;","    attributes[attribute].references = linkedCollection;","","    // Find Reference Key","    var via = attributes[attribute].via;","    var reference = this.findReference(collection, linkedCollection, via);","    var referencedAttr = this.collections[linkedCollection].attributes[reference];","    var onValue;","    if (referencedAttr && referencedAttr.columnName) {","      onValue = referencedAttr.columnName;","    } else {","      onValue = reference;","    }","","    attributes[attribute].on = onValue;","    attributes[attribute].onKey = reference;","","    delete attributes[attribute].through;","  }","","};","","/**"," * Find Reference attribute name in a set of attributes"," *"," * @param {String} parent"," * @param {String} collection"," * @return {String}"," * @api private"," */","","JoinTables.prototype.findReference = function(parent, collection, via) {","","  var attributes = this.collections[collection].attributes;","  var reference;","","  for(var attribute in attributes) {","    if(!hop(attributes[attribute], 'foreignKey')) continue;","    if(!hop(attributes[attribute], 'references')) continue;","    if(attributes[attribute].references !== parent) continue;","    if(via && via !== attribute) continue;","","    reference = attribute;","    break;","  }","","  return reference;","","};","","/**"," * Search for a matching join table"," *"," * @param {String} parent"," * @param {String} child"," * @param {String} via"," * @return {Object}"," * @api private"," */","","JoinTables.prototype.findJoinTable = function(parent, child, via) {","","  var join = false;","  var tableCollection;","","  for(var table in this.tables) {","    var tables = this.tables[table].tables;","","    if(tables.indexOf(parent) < 0) continue;","    if(tables.indexOf(child) < 0) continue;","","    var column = child + '_' + via;","","    if(!hop(this.tables[table].attributes, column)) continue;","","    join = true;","    tableCollection = this.tables[table];","    break;","  }","","  return { join: join, table: tableCollection };","","};","","","/**"," * Filter all tables which have at least one collection set to migrate: true, before they get physically created in the database"," * AFTER all references are set and all collections have been linked"," *"," * @param {String} tables"," * @api private"," */","","JoinTables.prototype.filterMigrateSafeTables = function() {","  var self = this;","","  for(var table in this.tables) {","    var tables = this.tables[table].tables;","","    // iterate through all collections, if one of them is migrate: safe we delete the table","    // so it does not get built","    var migrateSafe = false;","    tables.forEach(function(collection) {","      if(self.collections[collection].migrate === 'safe') {","        migrateSafe = true;","      }","    });","","    if(migrateSafe === true) {","      this.tables[table].migrate = 'safe';","    }","  }","","  return this.tables;","};",""],"l":{"6":1,"7":1,"8":1,"14":1,"25":1,"27":0,"28":0,"30":0,"31":0,"33":0,"36":0,"40":0,"41":0,"44":0,"48":0,"51":0,"54":0,"55":0,"58":0,"70":1,"72":0,"73":0,"75":0,"76":0,"79":0,"82":0,"83":0,"84":0,"87":0,"99":1,"101":0,"103":0,"104":0,"105":0,"108":0,"124":1,"126":0,"127":0,"131":0,"134":0,"137":0,"138":0,"139":0,"143":0,"147":0,"148":0,"150":0,"155":0,"160":0,"163":0,"177":0,"189":1,"191":0,"192":0,"193":0,"195":0,"196":0,"197":0,"198":0,"199":0,"204":0,"205":0,"206":0,"207":0,"208":0,"210":0,"211":0,"214":0,"215":0,"218":0,"219":0,"220":0,"224":0,"228":0,"237":0,"238":0,"240":0,"241":0,"243":0,"255":1,"257":0,"258":0,"260":0,"261":0,"264":0,"276":1,"278":0,"279":0,"280":0,"283":0,"284":0,"287":0,"288":0,"290":0,"291":0,"294":0,"295":0,"298":0,"312":1,"314":0,"315":0,"316":0,"318":0,"319":0,"320":0,"321":0,"324":0,"337":1,"339":0,"340":0,"341":0,"343":0,"363":1,"365":0,"367":0,"368":0,"371":0,"372":0,"373":0,"374":0,"376":0,"379":0,"380":0,"393":1,"395":0,"396":0,"397":0,"399":0,"400":0,"403":0,"404":0,"407":0,"408":0,"410":0,"412":0,"418":0,"419":0,"420":0,"423":0,"433":1,"435":0,"436":0,"437":0,"450":1,"452":0,"453":0,"455":0,"456":0,"457":0,"458":0,"460":0,"462":0,"465":0,"467":0,"487":1,"489":0,"491":0,"492":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"503":0,"504":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"514":0,"517":0,"518":0,"520":0,"534":1,"536":0,"537":0,"539":0,"540":0,"541":0,"542":0,"543":0,"545":0,"546":0,"549":0,"563":1,"565":0,"566":0,"568":0,"569":0,"571":0,"572":0,"574":0,"576":0,"578":0,"579":0,"580":0,"583":0,"596":1,"597":0,"599":0,"600":0,"604":0,"605":0,"606":0,"607":0,"611":0,"612":0,"616":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-schema/lib/waterline-schema/references.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-schema/lib/waterline-schema/references.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"References","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":33}}},"2":{"name":"(anonymous_2)","line":45,"loc":{"start":{"line":45,"column":31},"end":{"line":45,"column":52}}},"3":{"name":"(anonymous_3)","line":92,"loc":{"start":{"line":92,"column":37},"end":{"line":92,"column":77}}},"4":{"name":"(anonymous_4)","line":131,"loc":{"start":{"line":131,"column":31},"end":{"line":131,"column":46}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}},"5":{"start":{"line":25,"column":0},"end":{"line":36,"column":1}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":34}},"7":{"start":{"line":28,"column":2},"end":{"line":28,"column":42}},"8":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"9":{"start":{"line":31,"column":4},"end":{"line":31,"column":29}},"10":{"start":{"line":34,"column":2},"end":{"line":34,"column":26}},"11":{"start":{"line":45,"column":0},"end":{"line":80,"column":2}},"12":{"start":{"line":47,"column":2},"end":{"line":47,"column":59}},"13":{"start":{"line":48,"column":2},"end":{"line":48,"column":16}},"14":{"start":{"line":50,"column":2},"end":{"line":78,"column":3}},"15":{"start":{"line":51,"column":4},"end":{"line":51,"column":59}},"16":{"start":{"line":51,"column":50},"end":{"line":51,"column":59}},"17":{"start":{"line":54,"column":4},"end":{"line":54,"column":78}},"18":{"start":{"line":54,"column":69},"end":{"line":54,"column":78}},"19":{"start":{"line":56,"column":4},"end":{"line":56,"column":72}},"20":{"start":{"line":59,"column":4},"end":{"line":69,"column":5}},"21":{"start":{"line":60,"column":6},"end":{"line":60,"column":130}},"22":{"start":{"line":61,"column":6},"end":{"line":61,"column":30}},"23":{"start":{"line":61,"column":21},"end":{"line":61,"column":30}},"24":{"start":{"line":63,"column":6},"end":{"line":63,"column":71}},"25":{"start":{"line":64,"column":6},"end":{"line":64,"column":53}},"26":{"start":{"line":65,"column":6},"end":{"line":65,"column":54}},"27":{"start":{"line":66,"column":6},"end":{"line":66,"column":43}},"28":{"start":{"line":68,"column":6},"end":{"line":68,"column":15}},"29":{"start":{"line":72,"column":4},"end":{"line":72,"column":118}},"30":{"start":{"line":73,"column":4},"end":{"line":73,"column":28}},"31":{"start":{"line":73,"column":19},"end":{"line":73,"column":28}},"32":{"start":{"line":75,"column":4},"end":{"line":75,"column":86}},"33":{"start":{"line":76,"column":4},"end":{"line":76,"column":51}},"34":{"start":{"line":77,"column":4},"end":{"line":77,"column":52}},"35":{"start":{"line":92,"column":0},"end":{"line":151,"column":2}},"36":{"start":{"line":94,"column":2},"end":{"line":96,"column":3}},"37":{"start":{"line":95,"column":4},"end":{"line":95,"column":93}},"38":{"start":{"line":98,"column":2},"end":{"line":98,"column":59}},"39":{"start":{"line":99,"column":2},"end":{"line":99,"column":16}},"40":{"start":{"line":100,"column":2},"end":{"line":100,"column":30}},"41":{"start":{"line":101,"column":2},"end":{"line":101,"column":15}},"42":{"start":{"line":103,"column":2},"end":{"line":110,"column":3}},"43":{"start":{"line":104,"column":4},"end":{"line":104,"column":54}},"44":{"start":{"line":104,"column":45},"end":{"line":104,"column":54}},"45":{"start":{"line":105,"column":4},"end":{"line":105,"column":54}},"46":{"start":{"line":105,"column":45},"end":{"line":105,"column":54}},"47":{"start":{"line":106,"column":4},"end":{"line":106,"column":56}},"48":{"start":{"line":106,"column":47},"end":{"line":106,"column":56}},"49":{"start":{"line":109,"column":4},"end":{"line":109,"column":34}},"50":{"start":{"line":114,"column":2},"end":{"line":117,"column":3}},"51":{"start":{"line":115,"column":4},"end":{"line":116,"column":105}},"52":{"start":{"line":121,"column":2},"end":{"line":144,"column":3}},"53":{"start":{"line":122,"column":4},"end":{"line":125,"column":5}},"54":{"start":{"line":123,"column":6},"end":{"line":124,"column":106}},"55":{"start":{"line":128,"column":4},"end":{"line":128,"column":20}},"56":{"start":{"line":129,"column":4},"end":{"line":129,"column":16}},"57":{"start":{"line":131,"column":4},"end":{"line":135,"column":7}},"58":{"start":{"line":132,"column":6},"end":{"line":132,"column":40}},"59":{"start":{"line":132,"column":33},"end":{"line":132,"column":40}},"60":{"start":{"line":133,"column":6},"end":{"line":133,"column":29}},"61":{"start":{"line":134,"column":6},"end":{"line":134,"column":21}},"62":{"start":{"line":137,"column":4},"end":{"line":139,"column":5}},"63":{"start":{"line":138,"column":6},"end":{"line":138,"column":110}},"64":{"start":{"line":141,"column":4},"end":{"line":141,"column":42}},"65":{"start":{"line":142,"column":4},"end":{"line":142,"column":53}},"66":{"start":{"line":143,"column":4},"end":{"line":143,"column":15}},"67":{"start":{"line":147,"column":2},"end":{"line":147,"column":84}},"68":{"start":{"line":148,"column":2},"end":{"line":148,"column":65}},"69":{"start":{"line":149,"column":2},"end":{"line":149,"column":13}}},"branchMap":{"1":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":27}},{"start":{"line":27,"column":31},"end":{"line":27,"column":33}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"4":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":7},"end":{"line":54,"column":39}},{"start":{"line":54,"column":43},"end":{"line":54,"column":67}}]},"5":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":6}},{"start":{"line":61,"column":6},"end":{"line":61,"column":6}}]},"7":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"8":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":2},"end":{"line":94,"column":2}},{"start":{"line":94,"column":2},"end":{"line":94,"column":2}}]},"9":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"10":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"11":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"12":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"13":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"14":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"15":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":6},"end":{"line":132,"column":6}},{"start":{"line":132,"column":6},"end":{"line":132,"column":6}}]},"16":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"17":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":16},"end":{"line":141,"column":30}},{"start":{"line":141,"column":34},"end":{"line":141,"column":41}}]},"18":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":14},"end":{"line":147,"column":58}},{"start":{"line":147,"column":62},"end":{"line":147,"column":83}}]}},"code":["","/**"," * Module Dependencies"," */","","var _ = require('lodash');","var utils = require('./utils');","var hop = utils.object.hasOwnProperty;","","/**"," * Expose References"," */","","module.exports = References;","","/**"," * Map References for hasMany attributes. Not necessarily used for most schemas"," * but used internally in Waterline. It could also be helpful for key/value datastores."," *"," * @param {Object} collections"," * @return {Object}"," * @api private"," */","","function References(collections) {","","  collections = collections || {};","  this.collections = _.clone(collections);","","  for(var collection in collections) {","    this.addKeys(collection);","  }","","  return this.collections;","","}","","/**"," * Add Reference Keys to hasMany attributes"," *"," * @param {String} collection"," * @api private"," */","","References.prototype.addKeys = function(collection) {","","  var attributes = this.collections[collection].attributes;","  var reference;","","  for(var attribute in attributes) {","    if(!hop(attributes[attribute], 'collection')) continue;","","    // If references have already been configured, continue on","    if(attributes[attribute].references && attributes[attribute].on) continue;","","    attributes[attribute].collection = attributes[attribute].collection;","","    // Check For HasMany Through","    if(hop(attributes[attribute], 'through')) {","      reference = this.findReference(attributes[attribute].collection.toLowerCase(), attributes[attribute].through.toLowerCase());","      if(!reference) continue;","","      attributes[attribute].references = attributes[attribute].through;","      attributes[attribute].on = reference.reference;","      attributes[attribute].onKey = reference.keyName;","      delete attributes[attribute].through;","","      continue;","    }","","    // Figure out what to reference by looping through the other collection","    reference = this.findReference(collection, attributes[attribute].collection.toLowerCase(), attributes[attribute]);","    if(!reference) continue;","","    attributes[attribute].references = attributes[attribute].collection.toLowerCase();","    attributes[attribute].on = reference.reference;","    attributes[attribute].onKey = reference.keyName;","  }","","};","","/**"," * Find Reference attribute name in a set of attributes"," *"," * @param {String} parent"," * @param {String} collection"," * @param {Object} attribute"," * @return {String}"," * @api private"," */","","References.prototype.findReference = function(parent, collection, attribute) {","","  if(typeof this.collections[collection] != 'object') {","    throw new Error('Cannot find collection \\'' + collection + '\\' referenced in ' + parent);","  }","","  var attributes = this.collections[collection].attributes;","  var reference;","  var matchingAttributes = [];","  var obj = {};","","  for(var attr in attributes) {","    if(!hop(attributes[attr], 'foreignKey')) continue;","    if(!hop(attributes[attr], 'references')) continue;","    if(attributes[attr].references !== parent) continue;","","    // Add the attribute to the matchingAttribute array","    matchingAttributes.push(attr);","  }","","  // If no matching attributes are found, throw an error because you are trying to add a hasMany","  // attribute to a model where the association doesn't have a foreign key matching the collection.","  if(matchingAttributes.length === 0) {","    throw new Error('Trying to associate a collection attribute to a model that doesn\\'t have a ' +","                    'Foreign Key. ' + parent + ' is trying to reference a foreign key in ' + collection);","  }","","  // If multiple matching attributes were found on the model, ensure that the collection has a `via`","  // key that describes which foreign key to use when populating.","  if(matchingAttributes.length > 1) {","    if(!hop(attribute, 'via')) {","      throw new Error('Multiple foreign keys were found on ' + collection + '. You need to specify a ' +","                      'foreign key to use by adding in the `via` property to the collection association');","    }","","    // Find the collection attribute used in the `via` property","    var via = false;","    var viaName;","","    matchingAttributes.forEach(function(attr) {","      if(attr !== attribute.via) return;","      via = attributes[attr];","      viaName = attr;","    });","","    if(!via) {","      throw new Error('No matching attribute was found on ' + collection + ' with the name ' + attribute.via);","    }","","    reference = via.columnName || viaName;","    obj = { reference: reference, keyName: viaName };","    return obj;","  }","","  // If only a single matching attribute was found we can just use that for the reference","  reference = attributes[matchingAttributes[0]].columnName || matchingAttributes[0];","  obj = { reference: reference, keyName: matchingAttributes[0] };","  return obj;","","};",""],"l":{"6":1,"7":1,"8":1,"14":1,"25":1,"27":0,"28":0,"30":0,"31":0,"34":0,"45":1,"47":0,"48":0,"50":0,"51":0,"54":0,"56":0,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0,"66":0,"68":0,"72":0,"73":0,"75":0,"76":0,"77":0,"92":1,"94":0,"95":0,"98":0,"99":0,"100":0,"101":0,"103":0,"104":0,"105":0,"106":0,"109":0,"114":0,"115":0,"121":0,"122":0,"123":0,"128":0,"129":0,"131":0,"132":0,"133":0,"134":0,"137":0,"138":0,"141":0,"142":0,"143":0,"147":0,"148":0,"149":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/connections/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/connections/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":35},"end":{"line":17,"column":63}}},"2":{"name":"_build","line":37,"loc":{"start":{"line":37,"column":31},"end":{"line":37,"column":66}}},"3":{"name":"(anonymous_3)","line":44,"loc":{"start":{"line":44,"column":31},"end":{"line":44,"column":45}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":71}},"4":{"start":{"line":17,"column":0},"end":{"line":26,"column":2}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":25}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":33}},"7":{"start":{"line":25,"column":2},"end":{"line":25,"column":27}},"8":{"start":{"line":37,"column":0},"end":{"line":75,"column":2}},"9":{"start":{"line":39,"column":2},"end":{"line":39,"column":18}},"10":{"start":{"line":44,"column":2},"end":{"line":73,"column":5}},"11":{"start":{"line":45,"column":4},"end":{"line":45,"column":30}},"12":{"start":{"line":46,"column":4},"end":{"line":47,"column":19}},"13":{"start":{"line":50,"column":4},"end":{"line":53,"column":5}},"14":{"start":{"line":51,"column":6},"end":{"line":51,"column":149}},"15":{"start":{"line":52,"column":6},"end":{"line":52,"column":27}},"16":{"start":{"line":56,"column":4},"end":{"line":62,"column":5}},"17":{"start":{"line":57,"column":6},"end":{"line":60,"column":316}},"18":{"start":{"line":58,"column":8},"end":{"line":58,"column":179}},"19":{"start":{"line":60,"column":11},"end":{"line":60,"column":316}},"20":{"start":{"line":61,"column":6},"end":{"line":61,"column":27}},"21":{"start":{"line":65,"column":4},"end":{"line":69,"column":6}},"22":{"start":{"line":72,"column":4},"end":{"line":72,"column":40}}},"branchMap":{"1":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"2":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"3":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]}},"code":["/**"," * Module Dependencies"," */","var _ = require('lodash');","var util = require('util');","var hasOwnProperty = require('../utils/helpers').object.hasOwnProperty;","","/**"," * Connections are active \"connections\" to a specific adapter for a specific configuration."," * This allows you to have collections share named connections."," *"," * @param {Object} adapters"," * @param {Object} objects"," * @api public"," */","","var Connections = module.exports = function(adapters, options) {","","  // Hold the active connections","  this._connections = {};","","  // Build the connections","  this._build(adapters, options);","","  return this._connections;","};","","","/**"," * Builds up a named connections object with a clone of the adapter"," * it will use for the connection."," *"," * @param {Object} adapters"," * @param {Object} options"," * @api private"," */","Connections.prototype._build = function _build(adapters, options) {","","  var self = this;","","  // For each of the configured connections in options, find the required","  // adapter by name and build up an object that can be attached to the","  // internal connections object.","  Object.keys(options).forEach(function(key) {","    var config = options[key];","    var msg,","        connection;","","    // Ensure an adapter module is specified","    if (!hasOwnProperty(config, 'adapter')) {","      msg = util.format('Connection (\"%s\") is missing a required property (`adapter`).  You should indicate the name of one of your adapters.', key);","      throw new Error(msg);","    }","","    // Ensure the adapter exists in the adapters options","    if (!hasOwnProperty(adapters, config.adapter)) {","      if (typeof config.adapter !== 'string') {","        msg = util.format('Invalid `adapter` property in connection `%s`.  It should be a string (the name of one of the adapters you passed into `waterline.initialize()`)', key);","      }","      else msg = util.format('Unknown adapter \"%s\" for connection `%s`.  You should double-check that the connection\\'s `adapter` property matches the name of one of your adapters.  Or perhaps you forgot to include your \"%s\" adapter when you called `waterline.initialize()`...', config.adapter, key, config.adapter);","      throw new Error(msg);","    }","","    // Build the connection config","    connection = {","      config: _.merge({}, adapters[config.adapter].defaults, config),","      _adapter: _.cloneDeep(adapters[config.adapter]),","      _collections: []","    };","","    // Attach the connections to the connection library","    self._connections[key] = connection;","  });","","};",""],"l":{"4":1,"5":1,"6":1,"17":1,"20":0,"23":0,"25":0,"37":1,"39":0,"44":0,"45":0,"46":0,"50":0,"51":0,"52":0,"56":0,"57":0,"58":0,"60":0,"61":0,"65":0,"72":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/helpers.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"objMap","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":57}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":25},"end":{"line":16,"column":45}}},"3":{"name":"pluralize","line":33,"loc":{"start":{"line":33,"column":20},"end":{"line":33,"column":64}}},"4":{"name":"capitalize","line":47,"loc":{"start":{"line":47,"column":21},"end":{"line":47,"column":46}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":32},"end":{"line":68,"column":52}}},"6":{"name":"matchMongoId","line":82,"loc":{"start":{"line":82,"column":23},"end":{"line":82,"column":49}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"2":{"start":{"line":15,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":16,"column":2},"end":{"line":19,"column":18}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":47}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":15}},"6":{"start":{"line":33,"column":0},"end":{"line":37,"column":2}},"7":{"start":{"line":34,"column":2},"end":{"line":34,"column":71}},"8":{"start":{"line":34,"column":33},"end":{"line":34,"column":71}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":61}},"10":{"start":{"line":35,"column":30},"end":{"line":35,"column":61}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":20}},"12":{"start":{"line":47,"column":0},"end":{"line":50,"column":2}},"13":{"start":{"line":48,"column":2},"end":{"line":48,"column":40}},"14":{"start":{"line":49,"column":2},"end":{"line":49,"column":52}},"15":{"start":{"line":56,"column":0},"end":{"line":56,"column":20}},"16":{"start":{"line":67,"column":0},"end":{"line":67,"column":42}},"17":{"start":{"line":68,"column":0},"end":{"line":71,"column":2}},"18":{"start":{"line":69,"column":2},"end":{"line":69,"column":54}},"19":{"start":{"line":69,"column":41},"end":{"line":69,"column":54}},"20":{"start":{"line":70,"column":2},"end":{"line":70,"column":29}},"21":{"start":{"line":82,"column":0},"end":{"line":89,"column":2}},"22":{"start":{"line":85,"column":2},"end":{"line":88,"column":54}},"23":{"start":{"line":87,"column":4},"end":{"line":87,"column":17}},"24":{"start":{"line":88,"column":7},"end":{"line":88,"column":54}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"3":{"line":48,"type":"cond-expr","locations":[{"start":{"line":48,"column":23},"end":{"line":48,"column":25}},{"start":{"line":48,"column":28},"end":{"line":48,"column":39}}]},"4":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"5":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":18}},{"start":{"line":69,"column":22},"end":{"line":69,"column":39}}]},"6":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"7":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":6},"end":{"line":85,"column":9}},{"start":{"line":86,"column":3},"end":{"line":86,"column":69}}]},"8":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":5},"end":{"line":86,"column":19}},{"start":{"line":86,"column":24},"end":{"line":86,"column":38}},{"start":{"line":86,"column":42},"end":{"line":86,"column":67}}]}},"code":["","/**"," * Module Dependencies"," */","","var _ = require('lodash');","","/**"," * Equivalent to _.objMap, _.map for objects, keeps key/value associations"," *"," * Should be deprecated."," *"," * @api public"," */","exports.objMap = function objMap(input, mapper, context) {","  return _.reduce(input, function(obj, v, k) {","    obj[k] = mapper.call(context, v, k, input);","    return obj;","  }, {}, context);","};","","/**"," * Run a method meant for a single object on a object OR array"," * For an object, run the method and return the result."," * For a list, run the method on each item return the resulting array."," * For anything else, return it silently."," *"," * Should be deprecated."," *"," * @api public"," */","","exports.pluralize = function pluralize(collection, application) {","  if (Array.isArray(collection)) return _.map(collection, application);","  if (_.isObject(collection)) return application(collection);","  return collection;","};","","/**"," * _.str.capitalize"," *"," * @param {String} str"," * @return {String}"," * @api public"," */","","exports.capitalize = function capitalize(str) {","  str = str === null ? '' : String(str);","  return str.charAt(0).toUpperCase() + str.slice(1);","};","","/**"," * ignore"," */","","exports.object = {};","","/**"," * Safer helper for hasOwnProperty checks"," *"," * @param {Object} obj"," * @param {String} prop"," * @return {Boolean}"," * @api public"," */","","var hop = Object.prototype.hasOwnProperty;","exports.object.hasOwnProperty = function(obj, prop) {","  if (obj === null || obj === undefined) return false;","  return hop.call(obj, prop);","};","","/**"," * Check if an ID resembles a Mongo BSON ID."," * Can't use the `hop` helper above because BSON ID's will have their own hasOwnProperty value."," *"," * @param {String} id"," * @return {Boolean}"," * @api public"," */","","exports.matchMongoId = function matchMongoId(id) {","  // id must be truthy- and either BE a string, or be an object","  // with a toString method.","  if (!id ||","   !(_.isString(id) || (_.isObject(id) || _.isFunction(id.toString)))","  ) return false;","  else return /^[a-fA-F0-9]{24}$/.test(id.toString());","};",""],"l":{"6":1,"15":1,"16":0,"17":0,"18":0,"33":1,"34":0,"35":0,"36":0,"47":1,"48":0,"49":0,"56":1,"67":1,"68":1,"69":0,"70":0,"82":1,"85":0,"87":0,"88":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/collection/loader.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/collection/loader.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":40},"end":{"line":15,"column":84}}},"2":{"name":"initialize","line":36,"loc":{"start":{"line":36,"column":40},"end":{"line":36,"column":69}}},"3":{"name":"_validate","line":48,"loc":{"start":{"line":48,"column":39},"end":{"line":48,"column":83}}},"4":{"name":"_getConnections","line":85,"loc":{"start":{"line":85,"column":45},"end":{"line":85,"column":95}}},"5":{"name":"(anonymous_5)","line":96,"loc":{"start":{"line":96,"column":42},"end":{"line":96,"column":57}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":71}},"2":{"start":{"line":15,"column":0},"end":{"line":26,"column":2}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":27}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":60}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":72}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":14}},"7":{"start":{"line":36,"column":0},"end":{"line":38,"column":2}},"8":{"start":{"line":37,"column":2},"end":{"line":37,"column":61}},"9":{"start":{"line":48,"column":0},"end":{"line":75,"column":2}},"10":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"11":{"start":{"line":52,"column":4},"end":{"line":52,"column":69}},"12":{"start":{"line":56,"column":2},"end":{"line":56,"column":78}},"13":{"start":{"line":59,"column":2},"end":{"line":59,"column":48}},"14":{"start":{"line":63,"column":2},"end":{"line":72,"column":3}},"15":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"16":{"start":{"line":67,"column":6},"end":{"line":67,"column":99}},"17":{"start":{"line":71,"column":4},"end":{"line":71,"column":48}},"18":{"start":{"line":74,"column":2},"end":{"line":74,"column":20}},"19":{"start":{"line":85,"column":0},"end":{"line":108,"column":2}},"20":{"start":{"line":88,"column":2},"end":{"line":88,"column":27}},"21":{"start":{"line":91,"column":2},"end":{"line":93,"column":3}},"22":{"start":{"line":92,"column":4},"end":{"line":92,"column":72}},"23":{"start":{"line":96,"column":2},"end":{"line":105,"column":5}},"24":{"start":{"line":99,"column":4},"end":{"line":102,"column":5}},"25":{"start":{"line":100,"column":6},"end":{"line":100,"column":113}},"26":{"start":{"line":101,"column":6},"end":{"line":101,"column":27}},"27":{"start":{"line":104,"column":4},"end":{"line":104,"column":46}},"28":{"start":{"line":107,"column":2},"end":{"line":107,"column":25}}},"branchMap":{"1":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"2":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":56}},{"start":{"line":51,"column":60},"end":{"line":51,"column":109}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"4":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"5":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"6":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]}},"code":["/**"," * Module Dependencies"," */","","var hasOwnProperty = require('../utils/helpers').object.hasOwnProperty;","","/**"," * Collection Loader"," *"," * @param {Object} connections"," * @param {Object} collection"," * @api public"," */","","var CollectionLoader = module.exports = function(collection, connections, defaults) {","","  this.defaults = defaults;","","  // Normalize and validate the collection","  this.collection = this._validate(collection, connections);","","  // Find the named connections used in the collection","  this.namedConnections = this._getConnections(collection, connections);","","  return this;","};","","/**"," * Initalize the collection"," *"," * @param {Object} context"," * @param {Function} callback"," * @api public"," */","","CollectionLoader.prototype.initialize = function initialize(context) {","  return new this.collection(context, this.namedConnections);","};","","/**"," * Validate Collection structure."," *"," * @param {Object} collection"," * @param {Object} connections"," * @api private"," */","","CollectionLoader.prototype._validate = function _validate(collection, connections) {","","  // Throw Error if no Tablename/Identity is set","  if (!hasOwnProperty(collection.prototype, 'tableName') && !hasOwnProperty(collection.prototype, 'identity')) {","    throw new Error('A tableName or identity property must be set.');","  }","","  // Ensure identity is lowercased","  collection.prototype.identity = collection.prototype.identity.toLowerCase();","","  // Set the defaults","  collection.prototype.defaults = this.defaults;","","  // Find the connections used by this collection","  // If none is specified check if a default connection exist","  if (!hasOwnProperty(collection.prototype, 'connection')) {","","    // Check if a default connection was specified","    if (!hasOwnProperty(connections, 'default')) {","      throw new Error('No adapter was specified for collection: ' + collection.prototype.identity);","    }","","    // Set the connection as the default","    collection.prototype.connection = 'default';","  }","","  return collection;","};","","/**"," * Get the named connections"," *"," * @param {Object} collection"," * @param {Object} connections"," * @api private"," */","","CollectionLoader.prototype._getConnections = function _getConnections(collection, connections) {","","  // Hold the used connections","  var usedConnections = {};","","  // Normalize connection to array","  if (!Array.isArray(collection.prototype.connection)) {","    collection.prototype.connection = [collection.prototype.connection];","  }","","  // Set the connections used for the adapter","  collection.prototype.connection.forEach(function(conn) {","","    // Ensure the named connection exist","    if (!hasOwnProperty(connections, conn)) {","      var msg = 'The connection ' + conn + ' specified in ' + collection.prototype.identity + ' does not exist!';","      throw new Error(msg);","    }","","    usedConnections[conn] = connections[conn];","  });","","  return usedConnections;","};",""],"l":{"5":1,"15":1,"17":0,"20":0,"23":0,"25":0,"36":1,"37":0,"48":1,"51":0,"52":0,"56":0,"59":0,"63":0,"66":0,"67":0,"71":0,"74":0,"85":1,"88":0,"91":0,"92":0,"96":0,"99":0,"100":0,"101":0,"104":0,"107":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/collection/defaults.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/collection/defaults.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":10,"column":2}}},"branchMap":{},"code":["","/**"," * Default Collection properties"," * @type {Object}"," */","module.exports = {","","\tmigrate: 'alter'","","};",""],"l":{"6":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/collection/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/collection/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":30,"loc":{"start":{"line":30,"column":34},"end":{"line":30,"column":71}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"6":{"start":{"line":30,"column":0},"end":{"line":50,"column":2}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":18}},"8":{"start":{"line":35,"column":2},"end":{"line":35,"column":39}},"9":{"start":{"line":38,"column":2},"end":{"line":38,"column":29}},"10":{"start":{"line":41,"column":2},"end":{"line":41,"column":42}},"11":{"start":{"line":44,"column":2},"end":{"line":44,"column":18}},"12":{"start":{"line":47,"column":2},"end":{"line":47,"column":19}},"13":{"start":{"line":49,"column":2},"end":{"line":49,"column":14}},"14":{"start":{"line":52,"column":0},"end":{"line":52,"column":27}},"15":{"start":{"line":53,"column":0},"end":{"line":53,"column":28}},"16":{"start":{"line":56,"column":0},"end":{"line":56,"column":27}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":21},"end":{"line":35,"column":32}},{"start":{"line":35,"column":36},"end":{"line":35,"column":38}}]},"2":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":20},"end":{"line":41,"column":35}},{"start":{"line":41,"column":39},"end":{"line":41,"column":41}}]}},"code":["/**"," * Dependencies"," */","","var _ = require('lodash');","var extend = require('../utils/extend');","var inherits = require('util').inherits;","","// Various Pieces","var Core = require('../core');","var Query = require('../query');","","/**"," * Collection"," *"," * A prototype for managing a collection of database"," * records."," *"," * This file is the prototype for collections defined using Waterline."," * It contains the entry point for all ORM methods (e.g. User.find())"," *"," * Methods in this file defer to the adapter for their true implementation:"," * the implementation here just validates and normalizes the parameters."," *"," * @param {Object} waterline, reference to parent"," * @param {Object} options"," * @param {Function} callback"," */","","var Collection = module.exports = function(waterline, connections, cb) {","","  var self = this;","","  // Set the named connections","  this.connections = connections || {};","","  // Cache reference to the parent","  this.waterline = waterline;","","  // Default Attributes","  this.attributes = this.attributes || {};","","  // Instantiate Base Collection","  Core.call(this);","","  // Instantiate Query Language","  Query.call(this);","","  return this;","};","","inherits(Collection, Core);","inherits(Collection, Query);","","// Make Extendable","Collection.extend = extend;",""],"l":{"5":1,"6":1,"7":1,"10":1,"11":1,"30":1,"32":0,"35":0,"38":0,"41":0,"44":0,"47":0,"49":0,"52":1,"53":1,"56":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/extend.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/extend.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":51}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":23}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":18},"end":{"line":22,"column":29}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"2":{"start":{"line":10,"column":0},"end":{"line":31,"column":2}},"3":{"start":{"line":11,"column":2},"end":{"line":11,"column":20}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":12}},"5":{"start":{"line":14,"column":2},"end":{"line":18,"column":3}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":35}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":65}},"8":{"start":{"line":17,"column":25},"end":{"line":17,"column":62}},"9":{"start":{"line":20,"column":2},"end":{"line":20,"column":39}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":59}},"11":{"start":{"line":22,"column":31},"end":{"line":22,"column":56}},"12":{"start":{"line":23,"column":2},"end":{"line":23,"column":41}},"13":{"start":{"line":24,"column":2},"end":{"line":24,"column":36}},"14":{"start":{"line":26,"column":2},"end":{"line":26,"column":56}},"15":{"start":{"line":26,"column":18},"end":{"line":26,"column":56}},"16":{"start":{"line":28,"column":2},"end":{"line":28,"column":37}},"17":{"start":{"line":30,"column":2},"end":{"line":30,"column":15}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":16}},{"start":{"line":14,"column":20},"end":{"line":14,"column":52}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]}},"code":["/**"," * Extend Method"," *"," * Taken from Backbone Source:"," * http://backbonejs.org/docs/backbone.html#section-189"," */","","var _ = require('lodash');","","module.exports = function(protoProps, staticProps) {","  var parent = this;","  var child;","","  if (protoProps && _.has(protoProps, 'constructor')) {","    child = protoProps.constructor;","  } else {","    child = function() { return parent.apply(this, arguments); };","  }","","  _.extend(child, parent, staticProps);","","  var Surrogate = function() { this.constructor = child; };","  Surrogate.prototype = parent.prototype;","  child.prototype = new Surrogate();","","  if (protoProps) _.extend(child.prototype, protoProps);","","  child.__super__ = parent.prototype;","","  return child;","};",""],"l":{"8":1,"10":1,"11":0,"12":0,"14":0,"15":0,"17":0,"20":0,"22":0,"23":0,"24":0,"26":0,"28":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/core/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/core/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":28},"end":{"line":22,"column":46}}},"2":{"name":"(anonymous_2)","line":61,"loc":{"start":{"line":61,"column":19},"end":{"line":61,"column":37}}},"3":{"name":"(anonymous_3)","line":94,"loc":{"start":{"line":94,"column":40},"end":{"line":94,"column":54}}},"4":{"name":"(anonymous_4)","line":110,"loc":{"start":{"line":110,"column":40},"end":{"line":110,"column":55}}},"5":{"name":"(anonymous_5)","line":130,"loc":{"start":{"line":130,"column":28},"end":{"line":130,"column":39}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":45}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":33}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":41}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":71}},"11":{"start":{"line":22,"column":0},"end":{"line":53,"column":2}},"12":{"start":{"line":24,"column":2},"end":{"line":24,"column":26}},"13":{"start":{"line":27,"column":2},"end":{"line":27,"column":36}},"14":{"start":{"line":28,"column":2},"end":{"line":28,"column":46}},"15":{"start":{"line":29,"column":2},"end":{"line":29,"column":44}},"16":{"start":{"line":31,"column":2},"end":{"line":31,"column":62}},"17":{"start":{"line":34,"column":2},"end":{"line":34,"column":26}},"18":{"start":{"line":35,"column":2},"end":{"line":35,"column":34}},"19":{"start":{"line":36,"column":2},"end":{"line":36,"column":36}},"20":{"start":{"line":40,"column":2},"end":{"line":40,"column":57}},"21":{"start":{"line":41,"column":2},"end":{"line":41,"column":71}},"22":{"start":{"line":42,"column":2},"end":{"line":42,"column":71}},"23":{"start":{"line":44,"column":2},"end":{"line":44,"column":56}},"24":{"start":{"line":46,"column":2},"end":{"line":47,"column":41}},"25":{"start":{"line":50,"column":2},"end":{"line":50,"column":39}},"26":{"start":{"line":52,"column":2},"end":{"line":52,"column":14}},"27":{"start":{"line":61,"column":0},"end":{"line":117,"column":2}},"28":{"start":{"line":62,"column":2},"end":{"line":62,"column":18}},"29":{"start":{"line":64,"column":2},"end":{"line":64,"column":26}},"30":{"start":{"line":67,"column":2},"end":{"line":67,"column":55}},"31":{"start":{"line":70,"column":2},"end":{"line":70,"column":73}},"32":{"start":{"line":73,"column":2},"end":{"line":73,"column":47}},"33":{"start":{"line":74,"column":2},"end":{"line":74,"column":42}},"34":{"start":{"line":74,"column":19},"end":{"line":74,"column":42}},"35":{"start":{"line":75,"column":2},"end":{"line":75,"column":56}},"36":{"start":{"line":75,"column":26},"end":{"line":75,"column":56}},"37":{"start":{"line":76,"column":2},"end":{"line":76,"column":56}},"38":{"start":{"line":76,"column":26},"end":{"line":76,"column":56}},"39":{"start":{"line":79,"column":2},"end":{"line":79,"column":86}},"40":{"start":{"line":81,"column":2},"end":{"line":81,"column":23}},"41":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"42":{"start":{"line":83,"column":4},"end":{"line":83,"column":53}},"43":{"start":{"line":86,"column":2},"end":{"line":86,"column":64}},"44":{"start":{"line":89,"column":2},"end":{"line":89,"column":80}},"45":{"start":{"line":90,"column":2},"end":{"line":90,"column":45}},"46":{"start":{"line":91,"column":2},"end":{"line":91,"column":82}},"47":{"start":{"line":94,"column":2},"end":{"line":98,"column":5}},"48":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"49":{"start":{"line":96,"column":6},"end":{"line":96,"column":28}},"50":{"start":{"line":101,"column":2},"end":{"line":101,"column":79}},"51":{"start":{"line":104,"column":2},"end":{"line":104,"column":83}},"52":{"start":{"line":107,"column":2},"end":{"line":107,"column":90}},"53":{"start":{"line":110,"column":2},"end":{"line":113,"column":5}},"54":{"start":{"line":111,"column":4},"end":{"line":111,"column":84}},"55":{"start":{"line":112,"column":4},"end":{"line":112,"column":60}},"56":{"start":{"line":116,"column":2},"end":{"line":116,"column":25}},"57":{"start":{"line":130,"column":0},"end":{"line":151,"column":2}},"58":{"start":{"line":133,"column":2},"end":{"line":135,"column":3}},"59":{"start":{"line":134,"column":4},"end":{"line":134,"column":46}},"60":{"start":{"line":138,"column":2},"end":{"line":138,"column":71}},"61":{"start":{"line":138,"column":59},"end":{"line":138,"column":71}},"62":{"start":{"line":139,"column":2},"end":{"line":139,"column":56}},"63":{"start":{"line":142,"column":2},"end":{"line":144,"column":3}},"64":{"start":{"line":143,"column":4},"end":{"line":143,"column":36}},"65":{"start":{"line":147,"column":2},"end":{"line":147,"column":59}},"66":{"start":{"line":147,"column":47},"end":{"line":147,"column":59}},"67":{"start":{"line":148,"column":2},"end":{"line":148,"column":66}},"68":{"start":{"line":148,"column":54},"end":{"line":148,"column":66}},"69":{"start":{"line":150,"column":2},"end":{"line":150,"column":36}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":19}},{"start":{"line":24,"column":23},"end":{"line":24,"column":25}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":17},"end":{"line":27,"column":29}},{"start":{"line":27,"column":33},"end":{"line":27,"column":35}}]},"3":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":21},"end":{"line":29,"column":37}},{"start":{"line":29,"column":41},"end":{"line":29,"column":43}}]},"4":{"line":46,"type":"cond-expr","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":16}},{"start":{"line":47,"column":19},"end":{"line":47,"column":40}}]},"5":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":19}},{"start":{"line":64,"column":23},"end":{"line":64,"column":25}}]},"6":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"7":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"8":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"9":{"line":79,"type":"cond-expr","locations":[{"start":{"line":79,"column":49},"end":{"line":79,"column":67}},{"start":{"line":79,"column":70},"end":{"line":79,"column":85}}]},"10":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"11":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":31}},{"start":{"line":82,"column":35},"end":{"line":82,"column":69}}]},"12":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":27},"end":{"line":86,"column":57}},{"start":{"line":86,"column":61},"end":{"line":86,"column":63}}]},"13":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"14":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":59}},{"start":{"line":95,"column":63},"end":{"line":95,"column":95}}]},"15":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":42},"end":{"line":111,"column":77}},{"start":{"line":111,"column":81},"end":{"line":111,"column":83}}]},"16":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"17":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":2},"end":{"line":138,"column":2}},{"start":{"line":138,"column":2},"end":{"line":138,"column":2}}]},"18":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":22}},{"start":{"line":138,"column":26},"end":{"line":138,"column":57}}]},"19":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"20":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":42}},{"start":{"line":142,"column":46},"end":{"line":142,"column":89}}]},"21":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]},"22":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]}},"code":["/**"," * Dependencies"," */","","var _ = require('lodash');","var schemaUtils = require('../utils/schema');","var COLLECTION_DEFAULTS = require('../collection/defaults');","var Model = require('../model');","var Cast = require('./typecast');","var Schema = require('./schema');","var Dictionary = require('./dictionary');","var Validator = require('./validations');","var Transformer = require('./transformations');","var hasOwnProperty = require('../utils/helpers').object.hasOwnProperty;","","/**"," * Core"," *"," * Setup the basic Core of a collection to extend."," */","","var Core = module.exports = function(options) {","","  options = options || {};","","  // Set Defaults","  this.adapter = this.adapter || {};","  this._attributes = _.clone(this.attributes);","  this.connections = this.connections || {};","","  this.defaults = _.merge(COLLECTION_DEFAULTS, this.defaults);","","  // Construct our internal objects","  this._cast = new Cast();","  this._schema = new Schema(this);","  this._validator = new Validator();","","  // Normalize attributes, extract instance methods, and callbacks","  // Note: this is ordered for a reason!","  this._callbacks = schemaUtils.normalizeCallbacks(this);","  this._instanceMethods = schemaUtils.instanceMethods(this.attributes);","  this._attributes = schemaUtils.normalizeAttributes(this._attributes);","","  this.hasSchema = Core._normalizeSchemaFlag.call(this);","","  this.migrate = Object.getPrototypeOf(this).hasOwnProperty('migrate') ?","    this.migrate : this.defaults.migrate;","","  // Initalize the internal values from the Collection","  Core._initialize.call(this, options);","","  return this;","};","","/**"," * Initialize"," *"," * Setups internal mappings from an extended collection."," */","","Core._initialize = function(options) {","  var self = this;","","  options = options || {};","","  // Extend a base Model with instance methods","  this._model = new Model(this, this._instanceMethods);","","  // Cache the attributes from the schema builder","  var schemaAttributes = this.waterline.schema[this.identity].attributes;","","  // Remove auto attributes for validations","  var _validations = _.clone(this._attributes);","  if (this.autoPK) delete _validations.id;","  if (this.autoCreatedAt) delete _validations.createdAt;","  if (this.autoUpdatedAt) delete _validations.updatedAt;","","  // If adapter exposes any reserved attributes, pass them to the schema","  var connIdx = Array.isArray(this.connection) ? this.connection[0] : this.connection;","","  var adapterInfo = {};","  if (this.connections[connIdx] && this.connections[connIdx]._adapter) {","    adapterInfo = this.connections[connIdx]._adapter;","  }","","  var reservedAttributes = adapterInfo.reservedAttributes || {};","","  // Initialize internal objects from attributes","  this._schema.initialize(this._attributes, this.hasSchema, reservedAttributes);","  this._cast.initialize(this._schema.schema);","  this._validator.initialize(_validations, this.types, this.defaults.validations);","","  // Set the collection's primaryKey attribute","  Object.keys(schemaAttributes).forEach(function(key) {","    if (hasOwnProperty(schemaAttributes[key], 'primaryKey') && schemaAttributes[key].primaryKey) {","      self.primaryKey = key;","    }","  });","","  // Build Data Transformer","  this._transformer = new Transformer(schemaAttributes, this.waterline.schema);","","  // Transform Schema","  this._schema.schema = this._transformer.serialize(this._schema.schema, 'schema');","","  // Build up a dictionary of which methods run on which connection","  this.adapterDictionary = new Dictionary(_.cloneDeep(this.connections), this.connection);","","  // Add this collection to the connection","  Object.keys(this.connections).forEach(function(conn) {","    self.connections[conn]._collections = self.connections[conn]._collections || [];","    self.connections[conn]._collections.push(self.identity);","  });","","  // Remove remnants of user defined attributes","  delete this.attributes;","};","","/**"," * Normalize Schema Flag"," *"," * Normalize schema setting by looking at the model first to see if it is defined, if not look at"," * the connection and see if it's defined and if not finally look into the adapter and check if"," * there is a default setting. If not found anywhere be safe and set to true."," *"," * @api private"," * @return {Boolean}"," */","","Core._normalizeSchemaFlag = function() {","","  // If schema is defined on the collection, return the value","  if (hasOwnProperty(Object.getPrototypeOf(this), 'schema')) {","    return Object.getPrototypeOf(this).schema;","  }","","  // Grab the first connection used","  if (!this.connection || !Array.isArray(this.connection)) return true;","  var connection = this.connections[this.connection[0]];","","  // Check the user defined config","  if (hasOwnProperty(connection, 'config') && hasOwnProperty(connection.config, 'schema')) {","    return connection.config.schema;","  }","","  // Check the defaults defined in the adapter","  if (!hasOwnProperty(connection, '_adapter')) return true;","  if (!hasOwnProperty(connection._adapter, 'schema')) return true;","","  return connection._adapter.schema;","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"22":1,"24":0,"27":0,"28":0,"29":0,"31":0,"34":0,"35":0,"36":0,"40":0,"41":0,"42":0,"44":0,"46":0,"50":0,"52":0,"61":1,"62":0,"64":0,"67":0,"70":0,"73":0,"74":0,"75":0,"76":0,"79":0,"81":0,"82":0,"83":0,"86":0,"89":0,"90":0,"91":0,"94":0,"95":0,"96":0,"101":0,"104":0,"107":0,"110":0,"111":0,"112":0,"116":0,"130":1,"133":0,"134":0,"138":0,"139":0,"142":0,"143":0,"147":0,"148":0,"150":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/schema.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/schema.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":42,"loc":{"start":{"line":42,"column":29},"end":{"line":42,"column":45}}},"2":{"name":"(anonymous_2)","line":45,"loc":{"start":{"line":45,"column":29},"end":{"line":45,"column":43}}},"3":{"name":"(anonymous_3)","line":101,"loc":{"start":{"line":101,"column":25},"end":{"line":101,"column":41}}},"4":{"name":"(anonymous_4)","line":106,"loc":{"start":{"line":106,"column":29},"end":{"line":106,"column":43}}},"5":{"name":"(anonymous_5)","line":147,"loc":{"start":{"line":147,"column":28},"end":{"line":147,"column":46}}},"6":{"name":"defaultFn","line":151,"loc":{"start":{"line":151,"column":2},"end":{"line":151,"column":25}}},"7":{"name":"(anonymous_7)","line":152,"loc":{"start":{"line":152,"column":11},"end":{"line":152,"column":34}}},"8":{"name":"(anonymous_8)","line":208,"loc":{"start":{"line":208,"column":24},"end":{"line":208,"column":56}}},"9":{"name":"(anonymous_9)","line":214,"loc":{"start":{"line":214,"column":16},"end":{"line":214,"column":31}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":64}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":38}},"6":{"start":{"line":42,"column":0},"end":{"line":74,"column":2}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":22}},"8":{"start":{"line":45,"column":2},"end":{"line":71,"column":5}},"9":{"start":{"line":48,"column":4},"end":{"line":48,"column":49}},"10":{"start":{"line":48,"column":42},"end":{"line":48,"column":49}},"11":{"start":{"line":51,"column":4},"end":{"line":55,"column":5}},"12":{"start":{"line":52,"column":6},"end":{"line":52,"column":45}},"13":{"start":{"line":54,"column":6},"end":{"line":54,"column":35}},"14":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"15":{"start":{"line":59,"column":6},"end":{"line":59,"column":64}},"16":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"17":{"start":{"line":64,"column":6},"end":{"line":64,"column":66}},"18":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"19":{"start":{"line":69,"column":6},"end":{"line":69,"column":56}},"20":{"start":{"line":73,"column":2},"end":{"line":73,"column":20}},"21":{"start":{"line":101,"column":0},"end":{"line":113,"column":2}},"22":{"start":{"line":102,"column":2},"end":{"line":102,"column":19}},"23":{"start":{"line":104,"column":2},"end":{"line":104,"column":29}},"24":{"start":{"line":104,"column":14},"end":{"line":104,"column":29}},"25":{"start":{"line":106,"column":2},"end":{"line":110,"column":5}},"26":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"27":{"start":{"line":108,"column":6},"end":{"line":108,"column":32}},"28":{"start":{"line":112,"column":2},"end":{"line":112,"column":17}},"29":{"start":{"line":147,"column":0},"end":{"line":196,"column":2}},"30":{"start":{"line":148,"column":2},"end":{"line":148,"column":27}},"31":{"start":{"line":149,"column":2},"end":{"line":149,"column":15}},"32":{"start":{"line":151,"column":2},"end":{"line":153,"column":3}},"33":{"start":{"line":152,"column":4},"end":{"line":152,"column":53}},"34":{"start":{"line":152,"column":36},"end":{"line":152,"column":50}},"35":{"start":{"line":155,"column":2},"end":{"line":193,"column":3}},"36":{"start":{"line":156,"column":4},"end":{"line":156,"column":22}},"37":{"start":{"line":159,"column":4},"end":{"line":162,"column":5}},"38":{"start":{"line":160,"column":6},"end":{"line":160,"column":34}},"39":{"start":{"line":161,"column":6},"end":{"line":161,"column":15}},"40":{"start":{"line":164,"column":4},"end":{"line":192,"column":5}},"41":{"start":{"line":165,"column":6},"end":{"line":165,"column":19}},"42":{"start":{"line":168,"column":6},"end":{"line":180,"column":7}},"43":{"start":{"line":169,"column":8},"end":{"line":179,"column":9}},"44":{"start":{"line":171,"column":10},"end":{"line":176,"column":11}},"45":{"start":{"line":172,"column":12},"end":{"line":172,"column":62}},"46":{"start":{"line":173,"column":12},"end":{"line":173,"column":55}},"47":{"start":{"line":175,"column":12},"end":{"line":175,"column":83}},"48":{"start":{"line":178,"column":10},"end":{"line":178,"column":40}},"49":{"start":{"line":181,"column":11},"end":{"line":192,"column":5}},"50":{"start":{"line":183,"column":6},"end":{"line":188,"column":7}},"51":{"start":{"line":184,"column":8},"end":{"line":184,"column":54}},"52":{"start":{"line":185,"column":8},"end":{"line":185,"column":47}},"53":{"start":{"line":187,"column":8},"end":{"line":187,"column":75}},"54":{"start":{"line":191,"column":6},"end":{"line":191,"column":32}},"55":{"start":{"line":195,"column":2},"end":{"line":195,"column":13}},"56":{"start":{"line":208,"column":0},"end":{"line":226,"column":2}},"57":{"start":{"line":210,"column":2},"end":{"line":210,"column":39}},"58":{"start":{"line":210,"column":23},"end":{"line":210,"column":39}},"59":{"start":{"line":212,"column":2},"end":{"line":212,"column":42}},"60":{"start":{"line":214,"column":2},"end":{"line":222,"column":5}},"61":{"start":{"line":216,"column":4},"end":{"line":216,"column":71}},"62":{"start":{"line":216,"column":64},"end":{"line":216,"column":71}},"63":{"start":{"line":217,"column":4},"end":{"line":217,"column":70}},"64":{"start":{"line":217,"column":63},"end":{"line":217,"column":70}},"65":{"start":{"line":219,"column":4},"end":{"line":219,"column":53}},"66":{"start":{"line":220,"column":4},"end":{"line":220,"column":51}},"67":{"start":{"line":224,"column":2},"end":{"line":224,"column":25}},"68":{"start":{"line":225,"column":2},"end":{"line":225,"column":18}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"3":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"4":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":28}},{"start":{"line":58,"column":32},"end":{"line":58,"column":75}}]},"5":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"6":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"7":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"8":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"9":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":159,"column":4}},{"start":{"line":159,"column":4},"end":{"line":159,"column":4}}]},"10":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":164,"column":4}},{"start":{"line":164,"column":4},"end":{"line":164,"column":4}}]},"11":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":169,"column":8}},{"start":{"line":169,"column":8},"end":{"line":169,"column":8}}]},"12":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":10},"end":{"line":171,"column":10}},{"start":{"line":171,"column":10},"end":{"line":171,"column":10}}]},"13":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":11},"end":{"line":181,"column":11}},{"start":{"line":181,"column":11},"end":{"line":181,"column":11}}]},"14":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":6},"end":{"line":183,"column":6}},{"start":{"line":183,"column":6},"end":{"line":183,"column":6}}]},"15":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":210,"column":2}},{"start":{"line":210,"column":2},"end":{"line":210,"column":2}}]},"16":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"17":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":217,"column":4}},{"start":{"line":217,"column":4},"end":{"line":217,"column":4}}]}},"code":["/**"," * Dependencies"," */","","var _ = require('lodash');","var types = require('./types');","var callbacks = require('./callbacks');","var hasOwnProperty = require('./helpers').object.hasOwnProperty;","","/**"," * Expose schema"," */","","var schema = module.exports = exports;","","/**"," * Iterate over `attrs` normalizing string values to the proper"," * attribute object."," *"," * Example:"," * {"," *   name: 'STRING',"," *   age: {"," *     type: 'INTEGER'"," *   }"," * }"," *"," * Returns:"," * {"," *   name: {"," *     type: 'string'"," *   },"," *   age: {"," *     type: 'integer'"," *   }"," * }"," *"," * @param {Object} attrs"," * @return {Object}"," */","","schema.normalizeAttributes = function(attrs) {","  var attributes = {};","","  Object.keys(attrs).forEach(function(key) {","","    // Not concerned with functions","    if (typeof attrs[key] === 'function') return;","","    // Expand shorthand type","    if (typeof attrs[key] === 'string') {","      attributes[key] = { type: attrs[key] };","    } else {","      attributes[key] = attrs[key];","    }","","    // Ensure type is lower case","    if (attributes[key].type && typeof attributes[key].type !== 'undefined') {","      attributes[key].type = attributes[key].type.toLowerCase();","    }","","    // Ensure Collection property is lowercased","    if (hasOwnProperty(attrs[key], 'collection')) {","      attrs[key].collection = attrs[key].collection.toLowerCase();","    }","","    // Ensure Model property is lowercased","    if (hasOwnProperty(attrs[key], 'model')) {","      attrs[key].model = attrs[key].model.toLowerCase();","    }","  });","","  return attributes;","};","","","/**"," * Return all methods in `attrs` that should be provided"," * on the model."," *"," * Example:"," * {"," *   name: 'string',"," *   email: 'string',"," *   doSomething: function() {"," *     return true;"," *   }"," * }"," *"," * Returns:"," * {"," *   doSomething: function() {"," *     return true;"," *   }"," * }"," *"," * @param {Object} attrs"," * @return {Object}"," */","","schema.instanceMethods = function(attrs) {","  var methods = {};","","  if (!attrs) return methods;","","  Object.keys(attrs).forEach(function(key) {","    if (typeof attrs[key] === 'function') {","      methods[key] = attrs[key];","    }","  });","","  return methods;","};","","","/**"," * Normalize callbacks"," *"," * Return all callback functions in `context`, allows for string mapping to"," * functions located in `context.attributes`."," *"," * Example:"," * {"," *   attributes: {"," *     name: 'string',"," *     email: 'string',"," *     increment: function increment() { i++; }"," *   },"," *   afterCreate: 'increment',"," *   beforeCreate: function() { return true; }"," * }"," *"," * Returns:"," * {"," *   afterCreate: ["," *     function increment() { i++; }"," *   ],"," *   beforeCreate: ["," *     function() { return true; }"," *   ]"," * }"," *"," * @param {Object} context"," * @return {Object}"," */","","schema.normalizeCallbacks = function(context) {","  var i, _i, len, _len, fn;","  var fns = {};","","  function defaultFn(fn) {","    return function(values, next) { return next(); };","  }","","  for (i = 0, len = callbacks.length; i < len; i = i + 1) {","    fn = callbacks[i];","","    // Skip if the model hasn't defined this callback","    if (typeof context[fn] === 'undefined') {","      fns[fn] = [ defaultFn(fn) ];","      continue;","    }","","    if (Array.isArray(context[fn])) {","      fns[fn] = [];","","      // Iterate over all functions","      for (_i = 0, _len = context[fn].length; _i < _len; _i = _i + 1) {","        if (typeof context[fn][_i] === 'string') {","          // Attempt to map string to function","          if (typeof context.attributes[context[fn][_i]] === 'function') {","            fns[fn][_i] = context.attributes[context[fn][_i]];","            delete context.attributes[context[fn][_i]];","          } else {","            throw new Error('Unable to locate callback `' + context[fn][_i] + '`');","          }","        } else {","          fns[fn][_i] = context[fn][_i];","        }","      }","    } else if (typeof context[fn] === 'string') {","      // Attempt to map string to function","      if (typeof context.attributes[context[fn]] === 'function') {","        fns[fn] = [ context.attributes[context[fn]] ];","        delete context.attributes[context[fn]];","      } else {","        throw new Error('Unable to locate callback `' + context[fn] + '`');","      }","    } else {","      // Just add a single function","      fns[fn] = [ context[fn] ];","    }","  }","","  return fns;","};","","","/**"," * Replace any Join Criteria references with the defined tableName for a collection."," *"," * @param {Object} criteria"," * @param {Object} collections"," * @return {Object}"," * @api public"," */","","schema.serializeJoins = function(criteria, collections) {","","  if (!criteria.joins) return criteria;","","  var joins = _.cloneDeep(criteria.joins);","","  joins.forEach(function(join) {","","    if (!hasOwnProperty(collections[join.parent], 'tableName')) return;","    if (!hasOwnProperty(collections[join.child], 'tableName')) return;","","    join.parent = collections[join.parent].tableName;","    join.child = collections[join.child].tableName;","","  });","","  criteria.joins = joins;","  return criteria;","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"14":1,"42":1,"43":0,"45":0,"48":0,"51":0,"52":0,"54":0,"58":0,"59":0,"63":0,"64":0,"68":0,"69":0,"73":0,"101":1,"102":0,"104":0,"106":0,"107":0,"108":0,"112":0,"147":1,"148":0,"149":0,"151":1,"152":0,"155":0,"156":0,"159":0,"160":0,"161":0,"164":0,"165":0,"168":0,"169":0,"171":0,"172":0,"173":0,"175":0,"178":0,"181":0,"183":0,"184":0,"185":0,"187":0,"191":0,"195":0,"208":1,"210":0,"212":0,"214":0,"216":0,"217":0,"219":0,"220":0,"224":0,"225":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/types.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/types.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":20,"column":2}}},"branchMap":{},"code":["/**"," * Types Supported By Schemas"," */","","module.exports = [","  'string',","  'text',","  'integer',","  'float',","  'date',","  'time',","  'datetime',","  'boolean',","  'binary',","  'array',","  'json',","  'mediumtext',","  'longtext',","  'objectid'","];",""],"l":{"5":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/callbacks.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/callbacks.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":14,"column":2}}},"branchMap":{},"code":["/**"," * Lifecycle Callbacks Allowed"," */","","module.exports = [","  'beforeValidate',","  'afterValidate',","  'beforeUpdate',","  'afterUpdate',","  'beforeCreate',","  'afterCreate',","  'beforeDestroy',","  'afterDestroy'","];",""],"l":{"5":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":17},"end":{"line":21,"column":43}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":14},"end":{"line":29,"column":25}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":10},"end":{"line":33,"column":32}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":13},"end":{"line":37,"column":26}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":25},"end":{"line":41,"column":36}}},"6":{"name":"(anonymous_6)","line":45,"loc":{"start":{"line":45,"column":28},"end":{"line":45,"column":39}}},"7":{"name":"(anonymous_7)","line":49,"loc":{"start":{"line":49,"column":11},"end":{"line":49,"column":28}}},"8":{"name":"(anonymous_8)","line":50,"loc":{"start":{"line":50,"column":42},"end":{"line":50,"column":56}}},"9":{"name":"(anonymous_9)","line":83,"loc":{"start":{"line":83,"column":14},"end":{"line":83,"column":27}}},"10":{"name":"(anonymous_10)","line":88,"loc":{"start":{"line":88,"column":33},"end":{"line":88,"column":47}}},"11":{"name":"(anonymous_11)","line":94,"loc":{"start":{"line":94,"column":28},"end":{"line":94,"column":54}}},"12":{"name":"(anonymous_12)","line":95,"loc":{"start":{"line":95,"column":35},"end":{"line":95,"column":49}}},"13":{"name":"(anonymous_13)","line":107,"loc":{"start":{"line":107,"column":65},"end":{"line":107,"column":85}}},"14":{"name":"(anonymous_14)","line":109,"loc":{"start":{"line":109,"column":24},"end":{"line":109,"column":35}}},"15":{"name":"(anonymous_15)","line":113,"loc":{"start":{"line":113,"column":34},"end":{"line":113,"column":48}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":55}},"6":{"start":{"line":21,"column":0},"end":{"line":134,"column":2}},"7":{"start":{"line":27,"column":2},"end":{"line":103,"column":4}},"8":{"start":{"line":30,"column":6},"end":{"line":30,"column":56}},"9":{"start":{"line":34,"column":6},"end":{"line":34,"column":65}},"10":{"start":{"line":38,"column":6},"end":{"line":38,"column":59}},"11":{"start":{"line":42,"column":6},"end":{"line":42,"column":60}},"12":{"start":{"line":46,"column":6},"end":{"line":46,"column":63}},"13":{"start":{"line":50,"column":6},"end":{"line":70,"column":9}},"14":{"start":{"line":51,"column":8},"end":{"line":51,"column":49}},"15":{"start":{"line":54,"column":8},"end":{"line":61,"column":9}},"16":{"start":{"line":55,"column":10},"end":{"line":55,"column":47}},"17":{"start":{"line":55,"column":40},"end":{"line":55,"column":47}},"18":{"start":{"line":56,"column":10},"end":{"line":60,"column":11}},"19":{"start":{"line":57,"column":12},"end":{"line":57,"column":50}},"20":{"start":{"line":59,"column":12},"end":{"line":59,"column":19}},"21":{"start":{"line":64,"column":8},"end":{"line":68,"column":9}},"22":{"start":{"line":65,"column":10},"end":{"line":65,"column":32}},"23":{"start":{"line":66,"column":10},"end":{"line":66,"column":45}},"24":{"start":{"line":66,"column":25},"end":{"line":66,"column":45}},"25":{"start":{"line":67,"column":10},"end":{"line":67,"column":44}},"26":{"start":{"line":67,"column":25},"end":{"line":67,"column":44}},"27":{"start":{"line":85,"column":6},"end":{"line":85,"column":35}},"28":{"start":{"line":87,"column":6},"end":{"line":100,"column":7}},"29":{"start":{"line":88,"column":8},"end":{"line":91,"column":11}},"30":{"start":{"line":89,"column":10},"end":{"line":89,"column":38}},"31":{"start":{"line":89,"column":21},"end":{"line":89,"column":36}},"32":{"start":{"line":90,"column":10},"end":{"line":90,"column":15}},"33":{"start":{"line":92,"column":8},"end":{"line":92,"column":15}},"34":{"start":{"line":94,"column":8},"end":{"line":99,"column":11}},"35":{"start":{"line":95,"column":10},"end":{"line":98,"column":13}},"36":{"start":{"line":96,"column":12},"end":{"line":96,"column":44}},"37":{"start":{"line":96,"column":23},"end":{"line":96,"column":42}},"38":{"start":{"line":97,"column":12},"end":{"line":97,"column":22}},"39":{"start":{"line":107,"column":2},"end":{"line":107,"column":130}},"40":{"start":{"line":107,"column":86},"end":{"line":107,"column":126}},"41":{"start":{"line":109,"column":2},"end":{"line":126,"column":4}},"42":{"start":{"line":110,"column":4},"end":{"line":110,"column":30}},"43":{"start":{"line":112,"column":4},"end":{"line":116,"column":5}},"44":{"start":{"line":113,"column":6},"end":{"line":115,"column":9}},"45":{"start":{"line":114,"column":8},"end":{"line":114,"column":24}},"46":{"start":{"line":125,"column":4},"end":{"line":125,"column":15}},"47":{"start":{"line":128,"column":2},"end":{"line":128,"column":49}},"48":{"start":{"line":130,"column":2},"end":{"line":130,"column":38}},"49":{"start":{"line":133,"column":2},"end":{"line":133,"column":15}}},"branchMap":{"1":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"2":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":28}},{"start":{"line":54,"column":32},"end":{"line":54,"column":47}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":10},"end":{"line":55,"column":10}},{"start":{"line":55,"column":10},"end":{"line":55,"column":10}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"5":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":10},"end":{"line":66,"column":10}},{"start":{"line":66,"column":10},"end":{"line":66,"column":10}}]},"6":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":10},"end":{"line":67,"column":10}},{"start":{"line":67,"column":10},"end":{"line":67,"column":10}}]},"7":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":6},"end":{"line":87,"column":6}},{"start":{"line":87,"column":6},"end":{"line":87,"column":6}}]},"8":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":10},"end":{"line":89,"column":10}},{"start":{"line":89,"column":10},"end":{"line":89,"column":10}}]},"9":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":12},"end":{"line":96,"column":12}},{"start":{"line":96,"column":12},"end":{"line":96,"column":12}}]},"10":{"line":107,"type":"cond-expr","locations":[{"start":{"line":107,"column":110},"end":{"line":107,"column":113}},{"start":{"line":107,"column":116},"end":{"line":107,"column":125}}]},"11":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":112,"column":4}},{"start":{"line":112,"column":4},"end":{"line":112,"column":4}}]}},"code":["","/**"," * Module dependencies"," */","","var _ = require('lodash');","var Bluebird = require('bluebird');","var Model = require('./lib/model');","var defaultMethods = require('./lib/defaultMethods');","var internalMethods = require('./lib/internalMethods');","","/**"," * Build Extended Model Prototype"," *"," * @param {Object} context"," * @param {Object} mixins"," * @return {Object}"," * @api public"," */","","module.exports = function(context, mixins) {","","  /**","   * Extend the model prototype with default instance methods","   */","","  var prototypeFns = {","","    toObject: function() {","      return new defaultMethods.toObject(context, this);","    },","","    save: function(options, cb) {","      return new defaultMethods.save(context, this, options, cb);","    },","","    destroy: function(cb) {","      return new defaultMethods.destroy(context, this, cb);","    },","","    _defineAssociations: function() {","      new internalMethods.defineAssociations(context, this);","    },","","    _normalizeAssociations: function() {","      new internalMethods.normalizeAssociations(context, this);","    },","","    _cast: function(values) {","      _.keys(context._attributes).forEach(function(key) {","        var type = context._attributes[key].type;","","        // Attempt to parse Array or JSON type","        if (type === 'array' || type === 'json') {","          if (!_.isString(values[key])) return;","          try {","            values[key] = JSON.parse(values[key]);","          } catch(e) {","            return;","          }","        }","","        // Convert booleans back to true/false","        if (type === 'boolean') {","          var val = values[key];","          if (val === 0) values[key] = false;","          if (val === 1) values[key] = true;","        }","","      });","    },","","    /**","     * Model.validate()","     *","     * Takes the currently set attributes and validates the model","     * Shorthand for Model.validate({ attributes }, cb)","     *","     * @param {Function} callback - (err)","     * @return {Promise}","     */","","    validate: function(cb) {","      // Collect current values","      var values = this.toObject();","","      if (cb) {","        context.validate(values, function(err) {","          if (err) { return cb(err); }","          cb();","        });","        return;","      } else {","        return new Bluebird(function(resolve, reject) {","          context.validate(values, function(err) {","            if (err) { return reject(err); }","            resolve();","          });","        });","      }","    }","","  };","","  // If any of the attributes are protected, the default toJSON method should","  // remove them.","  var protectedAttributes = _.compact(_.map(context._attributes, function(attr, key) {return attr.protected ? key : undefined;}));","","  prototypeFns.toJSON = function() {","    var obj = this.toObject();","","    if (protectedAttributes.length) {","      _.each(protectedAttributes, function(key) {","        delete obj[key];","      });","    }","","    // Remove toJSON from the result, to prevent infinite recursion with","    // msgpack or other recursive object transformation tools.","    //","    // Causes issues if set to null and will error in Sails if we delete it because blueprints call it.","    //","    // obj.toJSON = null;","","    return obj;","  };","","  var prototype = _.extend(prototypeFns, mixins);","","  var model = Model.extend(prototype);","","  // Return the extended model for use in Waterline","  return model;","};",""],"l":{"6":1,"7":1,"8":1,"9":1,"10":1,"21":1,"27":0,"30":0,"34":0,"38":0,"42":0,"46":0,"50":0,"51":0,"54":0,"55":0,"56":0,"57":0,"59":0,"64":0,"65":0,"66":0,"67":0,"85":0,"87":0,"88":0,"89":0,"90":0,"92":0,"94":0,"95":0,"96":0,"97":0,"107":0,"109":0,"110":0,"112":0,"113":0,"114":0,"125":0,"128":0,"130":0,"133":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/model.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/model.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":29},"end":{"line":25,"column":54}}},"2":{"name":"(anonymous_2)","line":67,"loc":{"start":{"line":67,"column":11},"end":{"line":67,"column":22}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"4":{"start":{"line":25,"column":0},"end":{"line":78,"column":2}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":18}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":22}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":26}},"8":{"start":{"line":32,"column":2},"end":{"line":36,"column":5}},"9":{"start":{"line":39,"column":2},"end":{"line":39,"column":20}},"10":{"start":{"line":42,"column":2},"end":{"line":42,"column":29}},"11":{"start":{"line":45,"column":2},"end":{"line":51,"column":3}},"12":{"start":{"line":46,"column":4},"end":{"line":46,"column":27}},"13":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"14":{"start":{"line":49,"column":6},"end":{"line":49,"column":60}},"15":{"start":{"line":54,"column":2},"end":{"line":54,"column":32}},"16":{"start":{"line":63,"column":2},"end":{"line":75,"column":5}},"17":{"start":{"line":68,"column":6},"end":{"line":68,"column":17}},"18":{"start":{"line":69,"column":6},"end":{"line":71,"column":20}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":33}},"20":{"start":{"line":73,"column":6},"end":{"line":73,"column":50}},"21":{"start":{"line":77,"column":2},"end":{"line":77,"column":14}},"22":{"start":{"line":81,"column":0},"end":{"line":81,"column":22}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":10},"end":{"line":28,"column":15}},{"start":{"line":28,"column":19},"end":{"line":28,"column":21}}]},"2":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":12},"end":{"line":29,"column":19}},{"start":{"line":29,"column":23},"end":{"line":29,"column":25}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"4":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":22},"end":{"line":73,"column":42}},{"start":{"line":73,"column":45},"end":{"line":73,"column":49}}]}},"code":["","/**"," * Dependencies"," */","","var extend = require('../../utils/extend');","var _ = require('lodash');","var util = require('util');","","/**"," * A Basic Model Interface"," *"," * Initialize a new Model with given params"," *"," * @param {Object} attrs"," * @param {Object} options"," * @return {Object}"," * @api public"," *"," * var Person = Model.prototype;"," * var person = new Person({ name: 'Foo Bar' });"," * person.name # => 'Foo Bar'"," */","","var Model = module.exports = function(attrs, options) {","  var self = this;","","  attrs = attrs || {};","  options = options || {};","","  // Store options as properties","  Object.defineProperty(this, '_properties', {","    enumerable: false,","    writable: false,","    value: options","  });","","  // Cast things that need to be cast","  this._cast(attrs);","","  // Build association getters and setters","  this._defineAssociations();","","  // Attach attributes to the model instance","  for (var key in attrs) {","    this[key] = attrs[key];","","    if (this.associationsCache.hasOwnProperty(key)) {","      this.associationsCache[key] = _.cloneDeep(attrs[key]);","    }","  }","","  // Normalize associations","  this._normalizeAssociations();","","","  /**","   * Log output","   * @return {String} output when this model is util.inspect()ed","   * (usually with console.log())","   */","","  Object.defineProperty(this, 'inspect', {","    enumerable: false,","    configurable: false,","    writable: false,","    value: function() {","      var output;","      try {","        output = self.toObject();","      } catch (e) {}","","      return output ? util.inspect(output) : self;","    }","  });","","  return this;","};","","// Make Extendable","Model.extend = extend;",""],"l":{"6":1,"7":1,"8":1,"25":1,"26":0,"28":0,"29":0,"32":0,"39":0,"42":0,"45":0,"46":0,"48":0,"49":0,"54":0,"63":0,"68":0,"69":0,"70":0,"73":0,"77":0,"81":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/defaultMethods/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/defaultMethods/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":10,"column":2}}},"branchMap":{},"code":["","/**"," * Export Default Methods"," */","","module.exports = {","  toObject: require('./toObject'),","  destroy: require('./destroy'),","  save: require('./save')","};",""],"l":{"6":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/defaultMethods/toObject.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/defaultMethods/toObject.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":32},"end":{"line":21,"column":57}}},"2":{"name":"(anonymous_2)","line":70,"loc":{"start":{"line":70,"column":37},"end":{"line":70,"column":48}}},"3":{"name":"(anonymous_3)","line":85,"loc":{"start":{"line":85,"column":21},"end":{"line":85,"column":38}}},"4":{"name":"(anonymous_4)","line":90,"loc":{"start":{"line":90,"column":36},"end":{"line":90,"column":50}}},"5":{"name":"(anonymous_5)","line":121,"loc":{"start":{"line":121,"column":34},"end":{"line":121,"column":48}}},"6":{"name":"(anonymous_6)","line":142,"loc":{"start":{"line":142,"column":35},"end":{"line":142,"column":46}}},"7":{"name":"(anonymous_7)","line":145,"loc":{"start":{"line":145,"column":34},"end":{"line":145,"column":48}}},"8":{"name":"(anonymous_8)","line":160,"loc":{"start":{"line":160,"column":32},"end":{"line":160,"column":43}}},"9":{"name":"(anonymous_9)","line":167,"loc":{"start":{"line":167,"column":47},"end":{"line":167,"column":69}}},"10":{"name":"(anonymous_10)","line":185,"loc":{"start":{"line":185,"column":39},"end":{"line":185,"column":54}}},"11":{"name":"(anonymous_11)","line":215,"loc":{"start":{"line":215,"column":33},"end":{"line":215,"column":44}}},"12":{"name":"(anonymous_12)","line":251,"loc":{"start":{"line":251,"column":37},"end":{"line":251,"column":48}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"4":{"start":{"line":21,"column":0},"end":{"line":58,"column":2}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":25}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":21}},"8":{"start":{"line":29,"column":2},"end":{"line":29,"column":22}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":19}},"10":{"start":{"line":35,"column":2},"end":{"line":35,"column":25}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":23}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":20}},"13":{"start":{"line":38,"column":2},"end":{"line":38,"column":21}},"14":{"start":{"line":39,"column":2},"end":{"line":39,"column":25}},"15":{"start":{"line":44,"column":2},"end":{"line":57,"column":3}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":55}},"17":{"start":{"line":49,"column":4},"end":{"line":49,"column":16}},"18":{"start":{"line":53,"column":4},"end":{"line":53,"column":26}},"19":{"start":{"line":54,"column":4},"end":{"line":54,"column":73}},"20":{"start":{"line":55,"column":4},"end":{"line":55,"column":27}},"21":{"start":{"line":56,"column":4},"end":{"line":56,"column":14}},"22":{"start":{"line":70,"column":0},"end":{"line":132,"column":2}},"23":{"start":{"line":71,"column":2},"end":{"line":71,"column":18}},"24":{"start":{"line":73,"column":2},"end":{"line":73,"column":38}},"25":{"start":{"line":73,"column":31},"end":{"line":73,"column":38}},"26":{"start":{"line":74,"column":2},"end":{"line":74,"column":48}},"27":{"start":{"line":74,"column":41},"end":{"line":74,"column":48}},"28":{"start":{"line":77,"column":2},"end":{"line":131,"column":3}},"29":{"start":{"line":80,"column":4},"end":{"line":98,"column":5}},"30":{"start":{"line":82,"column":6},"end":{"line":82,"column":23}},"31":{"start":{"line":83,"column":6},"end":{"line":83,"column":62}},"32":{"start":{"line":85,"column":6},"end":{"line":94,"column":9}},"33":{"start":{"line":86,"column":8},"end":{"line":86,"column":47}},"34":{"start":{"line":86,"column":40},"end":{"line":86,"column":47}},"35":{"start":{"line":88,"column":8},"end":{"line":88,"column":36}},"36":{"start":{"line":88,"column":29},"end":{"line":88,"column":36}},"37":{"start":{"line":89,"column":8},"end":{"line":89,"column":51}},"38":{"start":{"line":90,"column":8},"end":{"line":92,"column":11}},"39":{"start":{"line":91,"column":10},"end":{"line":91,"column":47}},"40":{"start":{"line":93,"column":8},"end":{"line":93,"column":27}},"41":{"start":{"line":96,"column":6},"end":{"line":96,"column":41}},"42":{"start":{"line":97,"column":6},"end":{"line":97,"column":15}},"43":{"start":{"line":101,"column":4},"end":{"line":101,"column":41}},"44":{"start":{"line":102,"column":4},"end":{"line":102,"column":13}},"45":{"start":{"line":107,"column":4},"end":{"line":130,"column":5}},"46":{"start":{"line":109,"column":6},"end":{"line":109,"column":30}},"47":{"start":{"line":110,"column":6},"end":{"line":110,"column":50}},"48":{"start":{"line":112,"column":6},"end":{"line":112,"column":38}},"49":{"start":{"line":117,"column":9},"end":{"line":130,"column":5}},"50":{"start":{"line":119,"column":6},"end":{"line":119,"column":45}},"51":{"start":{"line":121,"column":6},"end":{"line":123,"column":9}},"52":{"start":{"line":122,"column":8},"end":{"line":122,"column":32}},"53":{"start":{"line":125,"column":6},"end":{"line":125,"column":38}},"54":{"start":{"line":128,"column":9},"end":{"line":130,"column":5}},"55":{"start":{"line":129,"column":6},"end":{"line":129,"column":40}},"56":{"start":{"line":142,"column":0},"end":{"line":150,"column":2}},"57":{"start":{"line":143,"column":2},"end":{"line":143,"column":18}},"58":{"start":{"line":145,"column":2},"end":{"line":148,"column":5}},"59":{"start":{"line":146,"column":4},"end":{"line":146,"column":49}},"60":{"start":{"line":146,"column":42},"end":{"line":146,"column":49}},"61":{"start":{"line":147,"column":4},"end":{"line":147,"column":39}},"62":{"start":{"line":160,"column":0},"end":{"line":207,"column":2}},"63":{"start":{"line":161,"column":2},"end":{"line":161,"column":18}},"64":{"start":{"line":163,"column":2},"end":{"line":163,"column":38}},"65":{"start":{"line":163,"column":31},"end":{"line":163,"column":38}},"66":{"start":{"line":164,"column":2},"end":{"line":164,"column":48}},"67":{"start":{"line":164,"column":41},"end":{"line":164,"column":48}},"68":{"start":{"line":167,"column":2},"end":{"line":205,"column":5}},"69":{"start":{"line":170,"column":4},"end":{"line":170,"column":73}},"70":{"start":{"line":170,"column":66},"end":{"line":170,"column":73}},"71":{"start":{"line":173,"column":4},"end":{"line":173,"column":32}},"72":{"start":{"line":174,"column":4},"end":{"line":174,"column":123}},"73":{"start":{"line":174,"column":53},"end":{"line":174,"column":123}},"74":{"start":{"line":175,"column":4},"end":{"line":175,"column":133}},"75":{"start":{"line":175,"column":58},"end":{"line":175,"column":133}},"76":{"start":{"line":178,"column":4},"end":{"line":178,"column":125}},"77":{"start":{"line":178,"column":118},"end":{"line":178,"column":125}},"78":{"start":{"line":179,"column":4},"end":{"line":179,"column":37}},"79":{"start":{"line":182,"column":4},"end":{"line":192,"column":5}},"80":{"start":{"line":183,"column":6},"end":{"line":183,"column":23}},"81":{"start":{"line":185,"column":6},"end":{"line":188,"column":9}},"82":{"start":{"line":186,"column":8},"end":{"line":186,"column":62}},"83":{"start":{"line":186,"column":55},"end":{"line":186,"column":62}},"84":{"start":{"line":187,"column":8},"end":{"line":187,"column":36}},"85":{"start":{"line":190,"column":6},"end":{"line":190,"column":41}},"86":{"start":{"line":191,"column":6},"end":{"line":191,"column":13}},"87":{"start":{"line":194,"column":4},"end":{"line":194,"column":42}},"88":{"start":{"line":194,"column":35},"end":{"line":194,"column":42}},"89":{"start":{"line":198,"column":4},"end":{"line":201,"column":5}},"90":{"start":{"line":199,"column":6},"end":{"line":199,"column":58}},"91":{"start":{"line":200,"column":6},"end":{"line":200,"column":13}},"92":{"start":{"line":203,"column":4},"end":{"line":203,"column":78}},"93":{"start":{"line":203,"column":71},"end":{"line":203,"column":78}},"94":{"start":{"line":204,"column":4},"end":{"line":204,"column":65}},"95":{"start":{"line":215,"column":0},"end":{"line":243,"column":2}},"96":{"start":{"line":216,"column":2},"end":{"line":216,"column":44}},"97":{"start":{"line":217,"column":2},"end":{"line":217,"column":42}},"98":{"start":{"line":219,"column":2},"end":{"line":242,"column":3}},"99":{"start":{"line":220,"column":4},"end":{"line":220,"column":122}},"100":{"start":{"line":220,"column":113},"end":{"line":220,"column":122}},"101":{"start":{"line":223,"column":4},"end":{"line":226,"column":5}},"102":{"start":{"line":224,"column":6},"end":{"line":224,"column":36}},"103":{"start":{"line":225,"column":6},"end":{"line":225,"column":15}},"104":{"start":{"line":229,"column":4},"end":{"line":233,"column":5}},"105":{"start":{"line":232,"column":6},"end":{"line":232,"column":70}},"106":{"start":{"line":232,"column":40},"end":{"line":232,"column":70}},"107":{"start":{"line":235,"column":4},"end":{"line":241,"column":5}},"108":{"start":{"line":236,"column":6},"end":{"line":240,"column":7}},"109":{"start":{"line":239,"column":8},"end":{"line":239,"column":72}},"110":{"start":{"line":239,"column":42},"end":{"line":239,"column":72}},"111":{"start":{"line":251,"column":0},"end":{"line":257,"column":2}},"112":{"start":{"line":252,"column":2},"end":{"line":256,"column":3}},"113":{"start":{"line":253,"column":4},"end":{"line":255,"column":5}},"114":{"start":{"line":254,"column":6},"end":{"line":254,"column":30}}},"branchMap":{"1":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"2":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"3":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"4":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"5":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":8}},{"start":{"line":88,"column":8},"end":{"line":88,"column":8}}]},"6":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"7":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":9},"end":{"line":117,"column":9}},{"start":{"line":117,"column":9},"end":{"line":117,"column":9}}]},"8":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":13},"end":{"line":117,"column":31}},{"start":{"line":117,"column":35},"end":{"line":117,"column":57}}]},"9":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":9},"end":{"line":128,"column":9}},{"start":{"line":128,"column":9},"end":{"line":128,"column":9}}]},"10":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"11":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"12":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":2},"end":{"line":164,"column":2}},{"start":{"line":164,"column":2},"end":{"line":164,"column":2}}]},"13":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":170,"column":4}},{"start":{"line":170,"column":4},"end":{"line":170,"column":4}}]},"14":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":8},"end":{"line":170,"column":31}},{"start":{"line":170,"column":35},"end":{"line":170,"column":64}}]},"15":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":4},"end":{"line":174,"column":4}},{"start":{"line":174,"column":4},"end":{"line":174,"column":4}}]},"16":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"17":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":178,"column":4}},{"start":{"line":178,"column":4},"end":{"line":178,"column":4}}]},"18":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":59}},{"start":{"line":178,"column":63},"end":{"line":178,"column":116}}]},"19":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":182,"column":4}},{"start":{"line":182,"column":4},"end":{"line":182,"column":4}}]},"20":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":8},"end":{"line":186,"column":8}},{"start":{"line":186,"column":8},"end":{"line":186,"column":8}}]},"21":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":194,"column":4}},{"start":{"line":194,"column":4},"end":{"line":194,"column":4}}]},"22":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"23":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"24":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"25":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":8},"end":{"line":220,"column":55}},{"start":{"line":220,"column":59},"end":{"line":220,"column":111}}]},"26":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":4},"end":{"line":223,"column":4}},{"start":{"line":223,"column":4},"end":{"line":223,"column":4}}]},"27":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":8},"end":{"line":223,"column":19}},{"start":{"line":223,"column":23},"end":{"line":223,"column":74}}]},"28":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":4},"end":{"line":229,"column":4}},{"start":{"line":229,"column":4},"end":{"line":229,"column":4}}]},"29":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":8},"end":{"line":229,"column":18}},{"start":{"line":229,"column":22},"end":{"line":229,"column":43}}]},"30":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":6},"end":{"line":232,"column":6}},{"start":{"line":232,"column":6},"end":{"line":232,"column":6}}]},"31":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":4},"end":{"line":235,"column":4}},{"start":{"line":235,"column":4},"end":{"line":235,"column":4}}]},"32":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":8},"end":{"line":235,"column":18}},{"start":{"line":235,"column":22},"end":{"line":235,"column":38}}]},"33":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":6},"end":{"line":236,"column":6}},{"start":{"line":236,"column":6},"end":{"line":236,"column":6}}]},"34":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":8},"end":{"line":239,"column":8}},{"start":{"line":239,"column":8},"end":{"line":239,"column":8}}]},"35":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":4},"end":{"line":253,"column":4}},{"start":{"line":253,"column":4},"end":{"line":253,"column":4}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var utils = require('../../../utils/helpers');","var hasOwnProperty = utils.object.hasOwnProperty;","","/**"," * Model.toObject()"," *"," * Returns an object containing just the model values. Useful for doing"," * operations on the current values minus the instance methods."," *"," * @param {Object} context, Waterline collection instance"," * @param {Object} proto, model prototype"," * @api public"," * @return {Object}"," */","","var toObject = module.exports = function(context, proto) {","","  var self = this;","","  this.context = context;","  this.proto = proto;","","  // Hold joins used in the query","  this.usedJoins = [];","","  // Create an object that can hold the values to be returned","  this.object = {};","","  // Run methods to add and modify values to the above object","  this.addAssociations();","  this.addProperties();","  this.makeObject();","  this.filterJoins();","  this.filterFunctions();","","  // Ok now we want to create a POJO that can be serialized for use in a response.","  // This is after all usually called in a toJSON method so lets make sure its all","  // good in there. This could be faster and safer I recon.","  try {","","    // Stringify/parse the object","    var _obj = JSON.parse(JSON.stringify(this.object));","","    return _obj;","","  // Return a nicer error message than just throwing the json parse message","  } catch (e) {","    var err = new Error();","    err.message = 'There was an error turning the model into an object.';","    err.data = self.object;","    throw err;","  }","};","","","/**"," * Add Association Keys"," *"," * If a showJoins flag is active, add all association keys."," *"," * @param {Object} keys"," * @api private"," */","","toObject.prototype.addAssociations = function() {","  var self = this;","","  if (!this.proto._properties) return;","  if (!this.proto._properties.showJoins) return;","","  // Copy prototype over for attributes","  for (var association in this.proto.associations) {","","    // Handle hasMany attributes","    if (hasOwnProperty(this.proto.associations[association], 'value')) {","","      var records = [];","      var values = this.proto.associations[association].value;","","      values.forEach(function(record) {","        if (typeof record !== 'object') return;","        // Since `typeof null` === `\"object\"`, we should also check for that case:","        if (record === null) return;","        var item = Object.create(record.__proto__);","        Object.keys(record).forEach(function(key) {","          item[key] = _.cloneDeep(record[key]);","        });","        records.push(item);","      });","","      this.object[association] = records;","      continue;","    }","","    // Handle belongsTo attributes","    var record = this.proto[association];","    var item;","","    // Check if the association foreign key is a date. If so set the object's","    // association and continue. Manual check here is needed because _.isObject","    // matches dates and you will end up with a loop that never exits.","    if (_.isDate(record)) {","","      item = new Date(record);","      _.extend(item.__proto__ , record.__proto__);","","      this.object[association] = item;","    }","","    // Is the record is a populated object, create a new object from it.","    // _.isObject() does not match null, so we're good here.","    else if (_.isObject(record) && !Array.isArray(record)) {","","      item = Object.create(record.__proto__);","","      Object.keys(record).forEach(function(key) {","        item[key] = record[key];","      });","","      this.object[association] = item;","    }","","    else if (!_.isUndefined(record)) {","      this.object[association] = record;","    }","  }","};","","/**"," * Add Properties"," *"," * Copies over non-association attributes to the newly created object."," *"," * @api private"," */","","toObject.prototype.addProperties = function() {","  var self = this;","","  Object.keys(this.proto).forEach(function(key) {","    if (hasOwnProperty(self.object, key)) return;","    self.object[key] = self.proto[key];","  });","","};","","/**"," * Make Object"," *"," * Runs toJSON on all associated values"," *"," * @api private"," */","","toObject.prototype.makeObject = function() {","  var self = this;","","  if (!this.proto._properties) return;","  if (!this.proto._properties.showJoins) return;","","  // Handle Joins","  Object.keys(this.proto.associations).forEach(function(association) {","","    // Don't run toJSON on records that were not populated","    if (!self.proto._properties || !self.proto._properties.joins) return;","","    // Build up a join key name based on the attribute's model/collection name","    var joinsName = association;","    if (self.context._attributes[association].model) joinsName = self.context._attributes[association].model.toLowerCase();","    if (self.context._attributes[association].collection) joinsName = self.context._attributes[association].collection.toLowerCase();","","    // Check if the join was used","    if (self.proto._properties.joins.indexOf(joinsName) < 0 && self.proto._properties.joins.indexOf(association) < 0) return;","    self.usedJoins.push(association);","","    // Call toJSON on each associated record","    if (Array.isArray(self.object[association])) {","      var records = [];","","      self.object[association].forEach(function(item) {","        if (!hasOwnProperty(item.__proto__, 'toJSON')) return;","        records.push(item.toJSON());","      });","","      self.object[association] = records;","      return;","    }","","    if (!self.object[association]) return;","","    // Association was null or not valid","    // (don't try to `hasOwnProperty` it so we don't throw)","    if (typeof self.object[association] !== 'object') {","      self.object[association] = self.object[association];","      return;","    }","","    if (!hasOwnProperty(self.object[association].__proto__, 'toJSON')) return;","    self.object[association] = self.object[association].toJSON();","  });","","};","","/**"," * Remove Non-Joined Associations"," *"," * @api private"," */","","toObject.prototype.filterJoins = function() {","  var attributes = this.context._attributes;","  var properties = this.proto._properties;","","  for (var attribute in attributes) {","    if (!hasOwnProperty(attributes[attribute], 'model') && !hasOwnProperty(attributes[attribute], 'collection')) continue;","","    // If no properties and a collection attribute, delete the association and return","    if (!properties && hasOwnProperty(attributes[attribute], 'collection')) {","      delete this.object[attribute];","      continue;","    }","","    // If showJoins is false remove the association object","    if (properties && !properties.showJoins) {","","      // Don't delete belongs to keys","      if (!attributes[attribute].model) delete this.object[attribute];","    }","","    if (properties && properties.joins) {","      if (this.usedJoins.indexOf(attribute) < 0) {","","        // Don't delete belongs to keys","        if (!attributes[attribute].model) delete this.object[attribute];","      }","    }","  }","};","","/**"," * Filter Functions"," *"," * @api private"," */","","toObject.prototype.filterFunctions = function() {","  for (var key in this.object) {","    if (typeof this.object[key] === 'function') {","      delete this.object[key];","    }","  }","};",""],"l":{"5":1,"6":1,"7":1,"21":1,"23":0,"25":0,"26":0,"29":0,"32":0,"35":0,"36":0,"37":0,"38":0,"39":0,"44":0,"47":0,"49":0,"53":0,"54":0,"55":0,"56":0,"70":1,"71":0,"73":0,"74":0,"77":0,"80":0,"82":0,"83":0,"85":0,"86":0,"88":0,"89":0,"90":0,"91":0,"93":0,"96":0,"97":0,"101":0,"102":0,"107":0,"109":0,"110":0,"112":0,"117":0,"119":0,"121":0,"122":0,"125":0,"128":0,"129":0,"142":1,"143":0,"145":0,"146":0,"147":0,"160":1,"161":0,"163":0,"164":0,"167":0,"170":0,"173":0,"174":0,"175":0,"178":0,"179":0,"182":0,"183":0,"185":0,"186":0,"187":0,"190":0,"191":0,"194":0,"198":0,"199":0,"200":0,"203":0,"204":0,"215":1,"216":0,"217":0,"219":0,"220":0,"223":0,"224":0,"225":0,"229":0,"232":0,"235":0,"236":0,"239":0,"251":1,"252":0,"253":0,"254":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/defaultMethods/destroy.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/defaultMethods/destroy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":11},"end":{"line":9,"column":22}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":31},"end":{"line":23,"column":60}}},"3":{"name":"(anonymous_3)","line":65,"loc":{"start":{"line":65,"column":28},"end":{"line":65,"column":50}}},"4":{"name":"(anonymous_4)","line":95,"loc":{"start":{"line":95,"column":35},"end":{"line":95,"column":64}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":25}},"5":{"start":{"line":23,"column":0},"end":{"line":85,"column":2}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":15}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":10}},"8":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":23}},"10":{"start":{"line":32,"column":2},"end":{"line":32,"column":18}},"11":{"start":{"line":34,"column":2},"end":{"line":34,"column":32}},"12":{"start":{"line":35,"column":2},"end":{"line":35,"column":73}},"13":{"start":{"line":36,"column":2},"end":{"line":36,"column":59}},"14":{"start":{"line":38,"column":2},"end":{"line":47,"column":3}},"15":{"start":{"line":39,"column":4},"end":{"line":40,"column":76}},"16":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"17":{"start":{"line":43,"column":6},"end":{"line":43,"column":27}},"18":{"start":{"line":46,"column":4},"end":{"line":46,"column":19}},"19":{"start":{"line":49,"column":2},"end":{"line":58,"column":3}},"20":{"start":{"line":50,"column":4},"end":{"line":51,"column":70}},"21":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"22":{"start":{"line":54,"column":6},"end":{"line":54,"column":27}},"23":{"start":{"line":57,"column":4},"end":{"line":57,"column":19}},"24":{"start":{"line":61,"column":2},"end":{"line":61,"column":20}},"25":{"start":{"line":62,"column":2},"end":{"line":62,"column":44}},"26":{"start":{"line":65,"column":2},"end":{"line":80,"column":5}},"27":{"start":{"line":66,"column":4},"end":{"line":73,"column":5}},"28":{"start":{"line":68,"column":6},"end":{"line":70,"column":7}},"29":{"start":{"line":69,"column":8},"end":{"line":69,"column":29}},"30":{"start":{"line":72,"column":6},"end":{"line":72,"column":21}},"31":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"32":{"start":{"line":76,"column":6},"end":{"line":76,"column":31}},"33":{"start":{"line":79,"column":4},"end":{"line":79,"column":30}},"34":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"35":{"start":{"line":83,"column":4},"end":{"line":83,"column":28}},"36":{"start":{"line":95,"column":0},"end":{"line":109,"column":2}},"37":{"start":{"line":96,"column":2},"end":{"line":96,"column":24}},"38":{"start":{"line":98,"column":2},"end":{"line":103,"column":3}},"39":{"start":{"line":99,"column":4},"end":{"line":102,"column":5}},"40":{"start":{"line":100,"column":6},"end":{"line":100,"column":29}},"41":{"start":{"line":101,"column":6},"end":{"line":101,"column":12}},"42":{"start":{"line":106,"column":2},"end":{"line":106,"column":69}},"43":{"start":{"line":106,"column":51},"end":{"line":106,"column":69}},"44":{"start":{"line":108,"column":2},"end":{"line":108,"column":20}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":7},"end":{"line":32,"column":9}},{"start":{"line":32,"column":13},"end":{"line":32,"column":17}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"5":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"6":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"7":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"8":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":6}},{"start":{"line":68,"column":6},"end":{"line":68,"column":6}}]},"9":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"10":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"11":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"12":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":59}},{"start":{"line":99,"column":63},"end":{"line":99,"column":95}}]},"13":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"14":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":6},"end":{"line":106,"column":17}},{"start":{"line":106,"column":21},"end":{"line":106,"column":49}}]}},"code":["","/**"," * Module dependencies"," */","","var utils = require('../../../utils/helpers');","var hasOwnProperty = utils.object.hasOwnProperty;","var defer = require('../../../utils/defer');","var noop = function() {};","","/**"," * Model.destroy()"," *"," * Destroys an instance of a model"," *"," * @param {Object} context,"," * @param {Object} proto"," * @param {Function} callback"," * @return {Promise}"," * @api public"," */","","var Destroy = module.exports = function(context, proto, cb) {","","  var deferred;","  var err;","","  if (typeof cb !== 'function') {","    deferred = defer();","  }","","  cb = cb || noop;","","  var values = proto.toObject();","  var attributes = context.waterline.schema[context.identity].attributes;","  var primaryKey = this.findPrimaryKey(attributes, values);","","  if (!primaryKey) {","    err = new Error('No Primary Key set to update the record with! ' +","    'Try setting an attribute as a primary key or include an ID property.');","","    if (deferred) {","      deferred.reject(err);","    }","","    return cb(err);","  }","","  if (!values[primaryKey]) {","    err = new Error('No Primary Key set to update the record with! ' +","    'Primary Key must have a value, it can\\'t be an optional value.');","","    if (deferred) {","      deferred.reject(err);","    }","","    return cb(err);","  }","","  // Build Search Criteria","  var criteria = {};","  criteria[primaryKey] = values[primaryKey];","","  // Execute Query","  context.destroy(criteria, function(err, status) {","    if (err) {","","      if (deferred) {","        deferred.reject(err);","      }","","      return cb(err);","    }","","    if (deferred) {","      deferred.resolve(status);","    }","","    cb.apply(this, arguments);","  });","","  if (deferred) {","    return deferred.promise;","  }","};","","/**"," * Find Primary Key"," *"," * @param {Object} attributes"," * @param {Object} values"," * @api private"," */","","Destroy.prototype.findPrimaryKey = function(attributes, values) {","  var primaryKey = null;","","  for (var attribute in attributes) {","    if (hasOwnProperty(attributes[attribute], 'primaryKey') && attributes[attribute].primaryKey) {","      primaryKey = attribute;","      break;","    }","  }","","  // If no primary key check for an ID property","  if (!primaryKey && hasOwnProperty(values, 'id')) primaryKey = 'id';","","  return primaryKey;","};",""],"l":{"6":1,"7":1,"8":1,"9":1,"23":1,"25":0,"26":0,"28":0,"29":0,"32":0,"34":0,"35":0,"36":0,"38":0,"39":0,"42":0,"43":0,"46":0,"49":0,"50":0,"53":0,"54":0,"57":0,"61":0,"62":0,"65":0,"66":0,"68":0,"69":0,"72":0,"75":0,"76":0,"79":0,"82":0,"83":0,"95":1,"96":0,"98":0,"99":0,"100":0,"101":0,"106":0,"108":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/defer.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/defer.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"defer","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":34}}},"2":{"name":"(anonymous_2)","line":6,"loc":{"start":{"line":6,"column":28},"end":{"line":6,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":3,"column":0},"end":{"line":16,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":22}},"4":{"start":{"line":6,"column":2},"end":{"line":9,"column":5}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":27}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":26}},"7":{"start":{"line":11,"column":2},"end":{"line":15,"column":4}}},"branchMap":{},"code":["var Promise = require('bluebird');","","module.exports = function defer() {","  var resolve, reject;","","  var promise = new Promise(function() {","    resolve = arguments[0];","    reject = arguments[1];","  });","","  return {","    resolve: resolve,","    reject: reject,","    promise: promise","  };","};",""],"l":{"1":1,"3":1,"4":0,"6":0,"7":0,"8":0,"11":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/defaultMethods/save.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/defaultMethods/save.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":11},"end":{"line":10,"column":22}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":17},"end":{"line":26,"column":55}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":24},"end":{"line":53,"column":39}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":28},"end":{"line":56,"column":51}}},"5":{"name":"(anonymous_5)","line":58,"loc":{"start":{"line":58,"column":36},"end":{"line":58,"column":47}}},"6":{"name":"(anonymous_6)","line":75,"loc":{"start":{"line":75,"column":34},"end":{"line":75,"column":45}}},"7":{"name":"(anonymous_7)","line":82,"loc":{"start":{"line":82,"column":41},"end":{"line":82,"column":56}}},"8":{"name":"(anonymous_8)","line":87,"loc":{"start":{"line":87,"column":55},"end":{"line":87,"column":75}}},"9":{"name":"(anonymous_9)","line":96,"loc":{"start":{"line":96,"column":55},"end":{"line":96,"column":70}}},"10":{"name":"(anonymous_10)","line":104,"loc":{"start":{"line":104,"column":46},"end":{"line":104,"column":60}}},"11":{"name":"(anonymous_11)","line":120,"loc":{"start":{"line":120,"column":32},"end":{"line":120,"column":43}}},"12":{"name":"(anonymous_12)","line":127,"loc":{"start":{"line":127,"column":68},"end":{"line":127,"column":92}}},"13":{"name":"(anonymous_13)","line":129,"loc":{"start":{"line":129,"column":54},"end":{"line":129,"column":88}}},"14":{"name":"(anonymous_14)","line":145,"loc":{"start":{"line":145,"column":74},"end":{"line":145,"column":98}}},"15":{"name":"(anonymous_15)","line":147,"loc":{"start":{"line":147,"column":57},"end":{"line":147,"column":91}}},"16":{"name":"(anonymous_16)","line":161,"loc":{"start":{"line":161,"column":2},"end":{"line":161,"column":25}}},"17":{"name":"(anonymous_17)","line":204,"loc":{"start":{"line":204,"column":20},"end":{"line":204,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":26}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":61}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":58}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":64}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":66}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"9":{"start":{"line":9,"column":0},"end":{"line":9,"column":48}},"10":{"start":{"line":10,"column":0},"end":{"line":10,"column":25}},"11":{"start":{"line":26,"column":0},"end":{"line":220,"column":2}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":15}},"13":{"start":{"line":30,"column":2},"end":{"line":33,"column":3}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":17}},"15":{"start":{"line":32,"column":4},"end":{"line":32,"column":17}},"16":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"17":{"start":{"line":36,"column":4},"end":{"line":36,"column":23}},"18":{"start":{"line":39,"column":2},"end":{"line":39,"column":18}},"19":{"start":{"line":47,"column":2},"end":{"line":47,"column":25}},"20":{"start":{"line":49,"column":2},"end":{"line":215,"column":5}},"21":{"start":{"line":54,"column":6},"end":{"line":54,"column":59}},"22":{"start":{"line":56,"column":6},"end":{"line":78,"column":15}},"23":{"start":{"line":57,"column":8},"end":{"line":61,"column":9}},"24":{"start":{"line":58,"column":10},"end":{"line":60,"column":13}},"25":{"start":{"line":59,"column":12},"end":{"line":59,"column":22}},"26":{"start":{"line":63,"column":8},"end":{"line":63,"column":36}},"27":{"start":{"line":64,"column":8},"end":{"line":64,"column":55}},"28":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"29":{"start":{"line":68,"column":10},"end":{"line":68,"column":39}},"30":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"31":{"start":{"line":72,"column":10},"end":{"line":72,"column":34}},"32":{"start":{"line":75,"column":8},"end":{"line":77,"column":11}},"33":{"start":{"line":76,"column":10},"end":{"line":76,"column":20}},"34":{"start":{"line":85,"column":6},"end":{"line":85,"column":43}},"35":{"start":{"line":87,"column":6},"end":{"line":89,"column":9}},"36":{"start":{"line":88,"column":8},"end":{"line":88,"column":24}},"37":{"start":{"line":99,"column":6},"end":{"line":102,"column":8}},"38":{"start":{"line":104,"column":6},"end":{"line":118,"column":9}},"39":{"start":{"line":107,"column":8},"end":{"line":107,"column":68}},"40":{"start":{"line":107,"column":61},"end":{"line":107,"column":68}},"41":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"42":{"start":{"line":111,"column":10},"end":{"line":111,"column":70}},"43":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"44":{"start":{"line":116,"column":10},"end":{"line":116,"column":76}},"45":{"start":{"line":120,"column":6},"end":{"line":122,"column":9}},"46":{"start":{"line":121,"column":8},"end":{"line":121,"column":38}},"47":{"start":{"line":128,"column":6},"end":{"line":128,"column":60}},"48":{"start":{"line":129,"column":6},"end":{"line":138,"column":9}},"49":{"start":{"line":130,"column":8},"end":{"line":130,"column":34}},"50":{"start":{"line":130,"column":17},"end":{"line":130,"column":34}},"51":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"52":{"start":{"line":134,"column":10},"end":{"line":134,"column":49}},"53":{"start":{"line":137,"column":8},"end":{"line":137,"column":39}},"54":{"start":{"line":146,"column":6},"end":{"line":146,"column":63}},"55":{"start":{"line":147,"column":6},"end":{"line":156,"column":9}},"56":{"start":{"line":148,"column":8},"end":{"line":148,"column":34}},"57":{"start":{"line":148,"column":17},"end":{"line":148,"column":34}},"58":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"59":{"start":{"line":152,"column":10},"end":{"line":152,"column":52}},"60":{"start":{"line":155,"column":8},"end":{"line":155,"column":39}},"61":{"start":{"line":162,"column":4},"end":{"line":167,"column":5}},"62":{"start":{"line":163,"column":6},"end":{"line":165,"column":7}},"63":{"start":{"line":164,"column":8},"end":{"line":164,"column":29}},"64":{"start":{"line":166,"column":6},"end":{"line":166,"column":21}},"65":{"start":{"line":170,"column":4},"end":{"line":170,"column":32}},"66":{"start":{"line":171,"column":4},"end":{"line":171,"column":14}},"67":{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},"68":{"start":{"line":174,"column":6},"end":{"line":174,"column":78}},"69":{"start":{"line":177,"column":4},"end":{"line":179,"column":5}},"70":{"start":{"line":178,"column":6},"end":{"line":178,"column":81}},"71":{"start":{"line":181,"column":4},"end":{"line":189,"column":5}},"72":{"start":{"line":182,"column":6},"end":{"line":182,"column":92}},"73":{"start":{"line":183,"column":6},"end":{"line":183,"column":52}},"74":{"start":{"line":185,"column":6},"end":{"line":187,"column":7}},"75":{"start":{"line":186,"column":8},"end":{"line":186,"column":44}},"76":{"start":{"line":188,"column":6},"end":{"line":188,"column":36}},"77":{"start":{"line":191,"column":4},"end":{"line":197,"column":5}},"78":{"start":{"line":192,"column":6},"end":{"line":192,"column":52}},"79":{"start":{"line":193,"column":6},"end":{"line":195,"column":7}},"80":{"start":{"line":194,"column":8},"end":{"line":194,"column":44}},"81":{"start":{"line":196,"column":6},"end":{"line":196,"column":36}},"82":{"start":{"line":203,"column":4},"end":{"line":203,"column":42}},"83":{"start":{"line":204,"column":4},"end":{"line":206,"column":7}},"84":{"start":{"line":205,"column":6},"end":{"line":205,"column":23}},"85":{"start":{"line":209,"column":4},"end":{"line":211,"column":5}},"86":{"start":{"line":210,"column":6},"end":{"line":210,"column":25}},"87":{"start":{"line":214,"column":4},"end":{"line":214,"column":16}},"88":{"start":{"line":217,"column":2},"end":{"line":219,"column":3}},"89":{"start":{"line":218,"column":4},"end":{"line":218,"column":28}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"3":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":7},"end":{"line":39,"column":9}},{"start":{"line":39,"column":13},"end":{"line":39,"column":17}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"5":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":28}},{"start":{"line":57,"column":32},"end":{"line":57,"column":56}}]},"6":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":8}},{"start":{"line":67,"column":8},"end":{"line":67,"column":8}}]},"7":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]},"8":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":8}},{"start":{"line":107,"column":8},"end":{"line":107,"column":8}}]},"9":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":8}},{"start":{"line":110,"column":8},"end":{"line":110,"column":8}}]},"10":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":8}},{"start":{"line":115,"column":8},"end":{"line":115,"column":8}}]},"11":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":8}},{"start":{"line":130,"column":8},"end":{"line":130,"column":8}}]},"12":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":8}},{"start":{"line":148,"column":8},"end":{"line":148,"column":8}}]},"13":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":162,"column":4}},{"start":{"line":162,"column":4},"end":{"line":162,"column":4}}]},"14":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":6},"end":{"line":163,"column":6}},{"start":{"line":163,"column":6},"end":{"line":163,"column":6}}]},"15":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"16":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":177,"column":4}},{"start":{"line":177,"column":4},"end":{"line":177,"column":4}}]},"17":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"18":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":6},"end":{"line":185,"column":6}},{"start":{"line":185,"column":6},"end":{"line":185,"column":6}}]},"19":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":191,"column":4}},{"start":{"line":191,"column":4},"end":{"line":191,"column":4}}]},"20":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":6},"end":{"line":193,"column":6}},{"start":{"line":193,"column":6},"end":{"line":193,"column":6}}]},"21":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"22":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":2},"end":{"line":217,"column":2}},{"start":{"line":217,"column":2},"end":{"line":217,"column":2}}]}},"code":["var _ = require('lodash');","var async = require('async');","var deep = require('deep-diff');","var updateInstance = require('../associationMethods/update');","var addAssociation = require('../associationMethods/add');","var removeAssociation = require('../associationMethods/remove');","var hop = require('../../../utils/helpers').object.hasOwnProperty;","var defer = require('../../../utils/defer');","var WLError = require('../../../error/WLError');","var noop = function() {};","","/**"," * Model.save()"," *"," * Takes the currently set attributes and updates the database."," * Shorthand for Model.update({ attributes }, cb)"," *"," * @param {Object} context"," * @param {Object} proto"," * @param {Function} callback"," * @param {Object} options"," * @return {Promise}"," * @api public"," */","","module.exports = function(context, proto, options, cb) {","","  var deferred;","","  if (typeof options === 'function') {","    cb = options;","    options = {};","  }","","  if (typeof cb !== 'function') {","    deferred = defer();","  }","","  cb = cb || noop;","","  /**","   * TO-DO:","   * This should all be wrapped in a transaction. That's coming next but for the meantime","   * just hope we don't get in a nasty state where the operation fails!","   */","","  var mutatedModels = [];","","  async.auto({","","    // Compare any populated model values to their current state.","    // If they have been mutated then the values will need to be synced.","    compareModelValues: function(next) {","      var modelKeys = Object.keys(proto.associationsCache);","","      async.each(modelKeys, function(key, nextKey) {","        if (!hop(proto, key) || proto[key] === undefined) {","          return async.setImmediate(function() {","            nextKey();","          });","        }","","        var currentVal = proto[key];","        var previousVal = proto.associationsCache[key];","","        // Normalize previousVal to an object","        if (Array.isArray(previousVal)) {","          previousVal = previousVal[0];","        }","","        if (deep(currentVal, previousVal)) {","          mutatedModels.push(key);","        }","","        return async.setImmediate(function() {","          nextKey();","        });","      }, next);","    },","","    // Update The Current Record","    updateRecord: ['compareModelValues', function(next) {","","      // Shallow clone proto.toObject() to remove all the functions","      var data = _.clone(proto.toObject());","","      new updateInstance(context, data, mutatedModels, function(err, data) {","        next(err, data);","      });","    }],","","","    // Build a set of associations to add and remove.","    // These are populated from using model[associationKey].add() and","    // model[associationKey].remove().","    buildAssociationOperations: ['compareModelValues', function(next) {","","      // Build a dictionary to hold operations based on association key","      var operations = {","        addKeys: {},","        removeKeys: {}","      };","","      Object.keys(proto.associations).forEach(function(key) {","","        // Ignore belongsTo associations","        if (proto.associations[key].hasOwnProperty('model')) return;","","        // Grab what records need adding","        if (proto.associations[key].addModels.length > 0) {","          operations.addKeys[key] = proto.associations[key].addModels;","        }","","        // Grab what records need removing","        if (proto.associations[key].removeModels.length > 0) {","          operations.removeKeys[key] = proto.associations[key].removeModels;","        }","      });","","      return async.setImmediate(function() {","        return next(null, operations);","      });","","    }],","","    // Create new associations for each association key","    addAssociations: ['buildAssociationOperations', 'updateRecord', function(next, results) {","      var keys = results.buildAssociationOperations.addKeys;","      return new addAssociation(context, proto, keys, function(err, failedTransactions) {","        if (err) return next(err);","","        // reset addKeys","        for (var key in results.buildAssociationOperations.addKeys) {","          proto.associations[key].addModels = [];","        }","","        next(null, failedTransactions);","      });","    }],","","    // Remove associations for each association key","    // Run after the addAssociations so that the connection pools don't get exhausted.","    // Once transactions are ready we can remove this restriction as they will be run on the same","    // connection.","    removeAssociations: ['buildAssociationOperations', 'addAssociations', function(next, results) {","      var keys = results.buildAssociationOperations.removeKeys;","      return new removeAssociation(context, proto, keys, function(err, failedTransactions) {","        if (err) return next(err);","","        // reset removeKeys","        for (var key in results.buildAssociationOperations.removeKeys) {","          proto.associations[key].removeModels = [];","        }","","        next(null, failedTransactions);","      });","    }]","","  },","","  function(err, results) {","    if (err) {","      if (deferred) {","        deferred.reject(err);","      }","      return cb(err);","    }","","    // Collect all failed transactions if any","    var failedTransactions = [];","    var error;","","    if (results.addAssociations) {","      failedTransactions = failedTransactions.concat(results.addAssociations);","    }","","    if (results.removeAssociations) {","      failedTransactions = failedTransactions.concat(results.removeAssociations);","    }","","    if (failedTransactions.length > 0) {","      error = new Error('Some associations could not be added or destroyed during save().');","      error.failedTransactions = failedTransactions;","","      if (deferred) {","        deferred.reject(new WLError(error));","      }","      return cb(new WLError(error));","    }","","    if (!results.updateRecord.length) {","      error = new Error('Error updating a record.');","      if (deferred) {","        deferred.reject(new WLError(error));","      }","      return cb(new WLError(error));","    }","","    // Reset the model attribute values with the new values.","    // This is needed because you could have a lifecycle callback that has","    // changed the data since last time you accessed it.","    // Attach attributes to the model instance","    var newData = results.updateRecord[0];","    _.each(newData, function(val, key) {","      proto[key] = val;","    });","","    // If a promise, resolve it","    if (deferred) {","      deferred.resolve();","    }","","    // Return the callback","    return cb();","  });","","  if (deferred) {","    return deferred.promise;","  }","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"26":1,"28":0,"30":0,"31":0,"32":0,"35":0,"36":0,"39":0,"47":0,"49":0,"54":0,"56":0,"57":0,"58":0,"59":0,"63":0,"64":0,"67":0,"68":0,"71":0,"72":0,"75":0,"76":0,"85":0,"87":0,"88":0,"99":0,"104":0,"107":0,"110":0,"111":0,"115":0,"116":0,"120":0,"121":0,"128":0,"129":0,"130":0,"133":0,"134":0,"137":0,"146":0,"147":0,"148":0,"151":0,"152":0,"155":0,"162":0,"163":0,"164":0,"166":0,"170":0,"171":0,"173":0,"174":0,"177":0,"178":0,"181":0,"182":0,"183":0,"185":0,"186":0,"188":0,"191":0,"192":0,"193":0,"194":0,"196":0,"203":0,"204":0,"205":0,"209":0,"210":0,"214":0,"217":0,"218":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/associationMethods/update.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/associationMethods/update.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":30},"end":{"line":22,"column":77}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":15},"end":{"line":49,"column":29}}},"3":{"name":"(anonymous_3)","line":86,"loc":{"start":{"line":86,"column":34},"end":{"line":86,"column":63}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":66}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"5":{"start":{"line":22,"column":0},"end":{"line":75,"column":2}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":79}},"7":{"start":{"line":25,"column":2},"end":{"line":25,"column":79}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":59}},"9":{"start":{"line":28,"column":2},"end":{"line":31,"column":3}},"10":{"start":{"line":29,"column":4},"end":{"line":30,"column":79}},"11":{"start":{"line":33,"column":2},"end":{"line":36,"column":3}},"12":{"start":{"line":34,"column":4},"end":{"line":35,"column":73}},"13":{"start":{"line":39,"column":2},"end":{"line":39,"column":20}},"14":{"start":{"line":40,"column":2},"end":{"line":40,"column":44}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":36}},"16":{"start":{"line":48,"column":2},"end":{"line":48,"column":29}},"17":{"start":{"line":49,"column":2},"end":{"line":71,"column":5}},"18":{"start":{"line":54,"column":4},"end":{"line":58,"column":5}},"19":{"start":{"line":56,"column":6},"end":{"line":56,"column":26}},"20":{"start":{"line":57,"column":6},"end":{"line":57,"column":13}},"21":{"start":{"line":61,"column":4},"end":{"line":61,"column":50}},"22":{"start":{"line":61,"column":43},"end":{"line":61,"column":50}},"23":{"start":{"line":64,"column":4},"end":{"line":64,"column":18}},"24":{"start":{"line":65,"column":4},"end":{"line":65,"column":29}},"25":{"start":{"line":68,"column":4},"end":{"line":68,"column":24}},"26":{"start":{"line":69,"column":4},"end":{"line":69,"column":127}},"27":{"start":{"line":70,"column":4},"end":{"line":70,"column":40}},"28":{"start":{"line":74,"column":2},"end":{"line":74,"column":43}},"29":{"start":{"line":86,"column":0},"end":{"line":100,"column":2}},"30":{"start":{"line":87,"column":2},"end":{"line":87,"column":24}},"31":{"start":{"line":89,"column":2},"end":{"line":94,"column":3}},"32":{"start":{"line":90,"column":4},"end":{"line":93,"column":5}},"33":{"start":{"line":91,"column":6},"end":{"line":91,"column":29}},"34":{"start":{"line":92,"column":6},"end":{"line":92,"column":12}},"35":{"start":{"line":97,"column":2},"end":{"line":97,"column":58}},"36":{"start":{"line":97,"column":40},"end":{"line":97,"column":58}},"37":{"start":{"line":99,"column":2},"end":{"line":99,"column":20}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":54},"end":{"line":24,"column":70}},{"start":{"line":24,"column":73},"end":{"line":24,"column":78}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"5":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":23}},{"start":{"line":54,"column":27},"end":{"line":54,"column":61}},{"start":{"line":54,"column":65},"end":{"line":54,"column":91}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"8":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":48}},{"start":{"line":90,"column":52},"end":{"line":90,"column":84}}]},"9":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"10":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":6},"end":{"line":97,"column":17}},{"start":{"line":97,"column":21},"end":{"line":97,"column":38}}]}},"code":["","/**"," * Module dependencies"," */","","var _ = require('lodash');","var utils = require('../../../utils/helpers');","var nestedOperations = require('../../../utils/nestedOperations');","var hop = utils.object.hasOwnProperty;","","/**"," * Update the current instance with the currently set values"," *"," * Called in the model instance context."," *"," * @param {Object} collection"," * @param {Object} proto"," * @param {Array} mutatedModels"," * @param {Function} callback"," */","","var Update = module.exports = function(collection, proto, mutatedModels, cb) {","","  var values = typeof proto.toObject === 'function' ? proto.toObject() : proto;","  var attributes = collection.waterline.schema[collection.identity].attributes;","  var primaryKey = this.findPrimaryKey(attributes, values);","","  if (!primaryKey) {","    return cb(new Error('No Primary Key set to update the record with! ' +","      'Try setting an attribute as a primary key or include an ID property.'));","  }","","  if (!values[primaryKey]) {","    return cb(new Error('No Primary Key set to update the record with! ' +","      'Primary Key must have a value, it can\\'t be an optional value.'));","  }","","  // Build Search Criteria","  var criteria = {};","  criteria[primaryKey] = values[primaryKey];","","  // Clone values so they can be mutated","  var _values = _.cloneDeep(values);","","  // For any nested model associations (objects not collection arrays) that were not changed,","  // lets set the value to just the foreign key so that an update query is not performed on the","  // associatied model.","  var keys = _.keys(_values);","  keys.forEach(function(key) {","","    // Nix any collection attributes so that they do not get sync'd during the update process.","    // One reason for this is that the result set is not guaranteed to be complete,","    // so the sync could exclude items.","    if (attributes[key] && hop(attributes[key], 'collection') && attributes[key].collection) {","","      delete _values[key];","      return;","    }","","    // If the key was changed, keep it expanded","    if (mutatedModels.indexOf(key) !== -1) return;","","    // Reduce it down to a foreign key value","    var vals = {};","    vals[key] = _values[key];","","    // Delete and replace the value with a reduced version","    delete _values[key];","    var reduced = nestedOperations.reduceAssociations.call(collection, collection.identity, collection.waterline.schema, vals);","    _values = _.merge(_values, reduced);","  });","","  // Update the collection with the new values","  collection.update(criteria, _values, cb);","};","","","/**"," * Find Primary Key"," *"," * @param {Object} attributes"," * @param {Object} values"," * @api private"," */","","Update.prototype.findPrimaryKey = function(attributes, values) {","  var primaryKey = null;","","  for (var attribute in attributes) {","    if (hop(attributes[attribute], 'primaryKey') && attributes[attribute].primaryKey) {","      primaryKey = attribute;","      break;","    }","  }","","  // If no primary key check for an ID property","  if (!primaryKey && hop(values, 'id')) primaryKey = 'id';","","  return primaryKey;","};",""],"l":{"6":1,"7":1,"8":1,"9":1,"22":1,"24":0,"25":0,"26":0,"28":0,"29":0,"33":0,"34":0,"39":0,"40":0,"43":0,"48":0,"49":0,"54":0,"56":0,"57":0,"61":0,"64":0,"65":0,"68":0,"69":0,"70":0,"74":0,"86":1,"87":0,"89":0,"90":0,"91":0,"92":0,"97":0,"99":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/nestedOperations/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/nestedOperations/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":10,"column":2}}},"branchMap":{},"code":["/**"," * Handlers for parsing nested associations within create/update values."," */","","module.exports = {","  reduceAssociations: require('./reduceAssociations'),","  valuesParser: require('./valuesParser'),","  create: require('./create'),","  update: require('./update')","};",""],"l":{"5":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/nestedOperations/reduceAssociations.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/nestedOperations/reduceAssociations.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":57}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":30},"end":{"line":25,"column":44}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":54}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"5":{"start":{"line":22,"column":0},"end":{"line":67,"column":2}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"7":{"start":{"line":25,"column":2},"end":{"line":64,"column":5}},"8":{"start":{"line":28,"column":4},"end":{"line":28,"column":50}},"9":{"start":{"line":31,"column":4},"end":{"line":37,"column":5}},"10":{"start":{"line":32,"column":6},"end":{"line":36,"column":7}},"11":{"start":{"line":33,"column":8},"end":{"line":33,"column":45}},"12":{"start":{"line":35,"column":8},"end":{"line":35,"column":15}},"13":{"start":{"line":39,"column":4},"end":{"line":39,"column":37}},"14":{"start":{"line":39,"column":30},"end":{"line":39,"column":37}},"15":{"start":{"line":44,"column":4},"end":{"line":44,"column":46}},"16":{"start":{"line":44,"column":39},"end":{"line":44,"column":46}},"17":{"start":{"line":46,"column":4},"end":{"line":46,"column":48}},"18":{"start":{"line":46,"column":41},"end":{"line":46,"column":48}},"19":{"start":{"line":50,"column":4},"end":{"line":50,"column":67}},"20":{"start":{"line":51,"column":4},"end":{"line":51,"column":69}},"21":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"22":{"start":{"line":57,"column":6},"end":{"line":57,"column":13}},"23":{"start":{"line":61,"column":4},"end":{"line":61,"column":39}},"24":{"start":{"line":62,"column":4},"end":{"line":62,"column":21}},"25":{"start":{"line":66,"column":2},"end":{"line":66,"column":16}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":6}},{"start":{"line":32,"column":6},"end":{"line":32,"column":6}}]},"3":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":10},"end":{"line":32,"column":33}},{"start":{"line":32,"column":37},"end":{"line":32,"column":64}},{"start":{"line":32,"column":68},"end":{"line":32,"column":88}},{"start":{"line":32,"column":92},"end":{"line":32,"column":134}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"5":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"7":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"8":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":32}},{"start":{"line":56,"column":36},"end":{"line":56,"column":51}},{"start":{"line":56,"column":55},"end":{"line":56,"column":61}},{"start":{"line":56,"column":66},"end":{"line":56,"column":84}},{"start":{"line":56,"column":88},"end":{"line":56,"column":106}}]}},"code":["/**"," * Module Dependencies"," */","","var hop = require('../helpers').object.hasOwnProperty;","var _ = require('lodash');","var assert = require('assert');","var util = require('util');","","/**"," * Traverse an object representing values replace associated objects with their"," * foreign keys."," *"," * @param {String} model"," * @param {Object} schema"," * @param {Object} values"," * @return {Object}"," * @api private"," */","","","module.exports = function(model, schema, values, method) {","  var self = this;","","  Object.keys(values).forEach(function(key) {","","    // Check to see if this key is a foreign key","    var attribute = schema[model].attributes[key];","","    // If not a plainObject, check if this is a model instance and has a toObject method","    if (!_.isPlainObject(values[key])) {","      if (_.isObject(values[key]) && !Array.isArray(values[key]) && values[key].toObject && typeof values[key].toObject === 'function') {","        values[key] = values[key].toObject();","      } else {","        return;","      }","    }","    // Check that this user-specified value is not NULL","    if (values[key] === null) return;","","    // Check that this user-specified value actually exists","    // as an attribute in `model`'s schema.","    // If it doesn't- just ignore it","    if (typeof attribute !== 'object') return;","","    if (!hop(values[key], attribute.on)) return;","","    // Look and see if the related model has a custom primary key AND that","    // the intended method is \"create\"","    var related = self.waterline.collections[attribute.references];","    var relatedPK = _.find(related.attributes, { primaryKey: true });","","    // If a custom PK was used and it's not autoIncrementing and the record","    // is being created then go ahead and don't reduce it. This allows nested","    // creates to work when custom PK's are used.","    if (!relatedPK.autoIncrement && !related.autoPK && method && (method == 'create' || method == 'update')) {","      return;","    }","","    // Otherwise reduce the association like normal","    var fk = values[key][attribute.on];","    values[key] = fk;","","  });","","  return values;","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"22":1,"23":0,"25":0,"28":0,"31":0,"32":0,"33":0,"35":0,"39":0,"44":0,"46":0,"50":0,"51":0,"56":0,"57":0,"61":0,"62":0,"66":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/nestedOperations/valuesParser.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/nestedOperations/valuesParser.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":49}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":30},"end":{"line":27,"column":44}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":65}},"2":{"start":{"line":18,"column":0},"end":{"line":45,"column":2}},"3":{"start":{"line":19,"column":2},"end":{"line":19,"column":18}},"4":{"start":{"line":22,"column":2},"end":{"line":25,"column":4}},"5":{"start":{"line":27,"column":2},"end":{"line":42,"column":5}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":37}},"7":{"start":{"line":30,"column":30},"end":{"line":30,"column":37}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":63}},"9":{"start":{"line":33,"column":56},"end":{"line":33,"column":63}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":63}},"11":{"start":{"line":34,"column":56},"end":{"line":34,"column":63}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":50}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":101}},"14":{"start":{"line":37,"column":94},"end":{"line":37,"column":101}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":84}},"16":{"start":{"line":39,"column":49},"end":{"line":39,"column":84}},"17":{"start":{"line":40,"column":4},"end":{"line":40,"column":79}},"18":{"start":{"line":40,"column":49},"end":{"line":40,"column":79}},"19":{"start":{"line":44,"column":2},"end":{"line":44,"column":22}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"5":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":48}},{"start":{"line":37,"column":52},"end":{"line":37,"column":92}}]},"6":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"7":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]}},"code":["/**"," * Module Dependencies"," */","","var hasOwnProperty = require('../helpers').object.hasOwnProperty;","","/**"," * Traverse an object representing values and map out any associations."," *"," * @param {String} model"," * @param {Object} schema"," * @param {Object} values"," * @return {Object}"," * @api private"," */","","","module.exports = function(model, schema, values) {","  var self = this;","","  // Pick out the top level associations","  var associations = {","    collections: [],","    models: []","  };","","  Object.keys(values).forEach(function(key) {","","    // Ignore values equal to null","    if (values[key] === null) return;","","    // Ignore joinTables","    if (hasOwnProperty(schema[model], 'junctionTable')) return;","    if (!hasOwnProperty(schema[model].attributes, key)) return;","","    var attribute = schema[model].attributes[key];","    if (!hasOwnProperty(attribute, 'collection') && !hasOwnProperty(attribute, 'foreignKey')) return;","","    if (hasOwnProperty(attribute, 'collection')) associations.collections.push(key);","    if (hasOwnProperty(attribute, 'foreignKey')) associations.models.push(key);","","  });","","  return associations;","};",""],"l":{"5":1,"18":1,"19":0,"22":0,"27":0,"30":0,"33":0,"34":0,"36":0,"37":0,"39":0,"40":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/nestedOperations/create.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/nestedOperations/create.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":65}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":23},"end":{"line":23,"column":45}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":22},"end":{"line":43,"column":36}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":65}},"3":{"start":{"line":19,"column":0},"end":{"line":62,"column":2}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":18}},"5":{"start":{"line":23,"column":2},"end":{"line":58,"column":5}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":81}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":18}},"8":{"start":{"line":27,"column":4},"end":{"line":27,"column":82}},"9":{"start":{"line":27,"column":49},"end":{"line":27,"column":82}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":27}},"11":{"start":{"line":29,"column":20},"end":{"line":29,"column":27}},"12":{"start":{"line":32,"column":4},"end":{"line":32,"column":56}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":69}},"14":{"start":{"line":36,"column":4},"end":{"line":36,"column":62}},"15":{"start":{"line":38,"column":4},"end":{"line":38,"column":40}},"16":{"start":{"line":39,"column":4},"end":{"line":39,"column":27}},"17":{"start":{"line":39,"column":20},"end":{"line":39,"column":27}},"18":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"19":{"start":{"line":41,"column":6},"end":{"line":41,"column":77}},"20":{"start":{"line":43,"column":4},"end":{"line":57,"column":7}},"21":{"start":{"line":46,"column":6},"end":{"line":46,"column":74}},"22":{"start":{"line":46,"column":33},"end":{"line":46,"column":74}},"23":{"start":{"line":52,"column":6},"end":{"line":56,"column":7}},"24":{"start":{"line":53,"column":8},"end":{"line":53,"column":53}},"25":{"start":{"line":55,"column":8},"end":{"line":55,"column":42}},"26":{"start":{"line":61,"column":2},"end":{"line":61,"column":23}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"5":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":42},"end":{"line":41,"column":62}},{"start":{"line":41,"column":65},"end":{"line":41,"column":76}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]},"7":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":6}},{"start":{"line":52,"column":6},"end":{"line":52,"column":6}}]},"8":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":10},"end":{"line":52,"column":33}},{"start":{"line":52,"column":37},"end":{"line":52,"column":51}},{"start":{"line":52,"column":55},"end":{"line":52,"column":78}}]}},"code":["/**"," * Module Dependencies"," */","","var _ = require('lodash');","var hasOwnProperty = require('../helpers').object.hasOwnProperty;","","/**"," * Queue up .add() operations on a model instance for any nested association"," * values in a .create() query."," *"," * @param {Object} parentModel"," * @param {Object} values"," * @param {Object} associations"," * @param {Function} cb"," * @api private"," */","","module.exports = function(parentModel, values, associations, cb) {","  var self = this;","","  // For each association, grab the primary key value and normalize into model.add methods","  associations.forEach(function(association) {","    var attribute = self.waterline.schema[self.identity].attributes[association];","    var modelName;","","    if (hasOwnProperty(attribute, 'collection')) modelName = attribute.collection;","","    if (!modelName) return;","","    // Grab the relation's PK","    var related = self.waterline.collections[modelName];","    var relatedPK = _.find(related.attributes, { primaryKey: true });","","    // Get the attribute's name","    var pk = self.waterline.collections[modelName].primaryKey;","","    var optValues = values[association];","    if (!optValues) return;","    if (!_.isArray(optValues)) {","      optValues = _.isString(optValues) ? optValues.split(',') : [optValues];","    }","    optValues.forEach(function(val) {","","      // If value is not an object, queue up an add","      if (!_.isPlainObject(val)) return parentModel[association].add(val);","","      // If value is an object, check if a primary key is defined","      // If a custom PK was used and it's not autoIncrementing and the record","      // is being created then go ahead and don't reduce it. This allows nested","      // creates to work when custom PK's are used.","      if (relatedPK.autoIncrement && related.autoPK && hasOwnProperty(val, pk)) {","        return parentModel[association].add(val[pk]);","      } else {","        parentModel[association].add(val);","      }","    });","  });","","  // Save the parent model","  parentModel.save(cb);","};",""],"l":{"5":1,"6":1,"19":1,"20":0,"23":0,"24":0,"25":0,"27":0,"29":0,"32":0,"33":0,"36":0,"38":0,"39":0,"40":0,"41":0,"43":0,"46":0,"52":0,"53":0,"55":0,"61":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/nestedOperations/update.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/nestedOperations/update.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":1,"67":0,"68":1,"69":0,"70":0,"71":0,"72":1,"73":0,"74":1,"75":0,"76":0,"77":0,"78":1,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1,"139":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":1,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":17},"end":{"line":21,"column":61}}},"2":{"name":"buildOperations","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":56}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":23},"end":{"line":53,"column":45}}},"4":{"name":"queueOperations","line":87,"loc":{"start":{"line":87,"column":0},"end":{"line":87,"column":66}}},"5":{"name":"(anonymous_5)","line":108,"loc":{"start":{"line":108,"column":20},"end":{"line":108,"column":37}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":21},"end":{"line":109,"column":35}}},"7":{"name":"(anonymous_7)","line":119,"loc":{"start":{"line":119,"column":17},"end":{"line":119,"column":31}}},"8":{"name":"(anonymous_8)","line":153,"loc":{"start":{"line":153,"column":20},"end":{"line":153,"column":37}}},"9":{"name":"sync","line":173,"loc":{"start":{"line":173,"column":0},"end":{"line":173,"column":39}}},"10":{"name":"(anonymous_10)","line":179,"loc":{"start":{"line":179,"column":12},"end":{"line":179,"column":27}}},"11":{"name":"(anonymous_11)","line":184,"loc":{"start":{"line":184,"column":23},"end":{"line":184,"column":38}}},"12":{"name":"(anonymous_12)","line":190,"loc":{"start":{"line":190,"column":21},"end":{"line":190,"column":36}}},"13":{"name":"updateRunner","line":213,"loc":{"start":{"line":213,"column":0},"end":{"line":213,"column":47}}},"14":{"name":"associationLoop","line":219,"loc":{"start":{"line":219,"column":2},"end":{"line":219,"column":46}}},"15":{"name":"update","line":223,"loc":{"start":{"line":223,"column":2},"end":{"line":223,"column":35}}},"16":{"name":"unlinkRunner","line":247,"loc":{"start":{"line":247,"column":0},"end":{"line":247,"column":47}}},"17":{"name":"unlinkParentAssociations","line":252,"loc":{"start":{"line":252,"column":2},"end":{"line":252,"column":50}}},"18":{"name":"linkRunner","line":272,"loc":{"start":{"line":272,"column":0},"end":{"line":272,"column":45}}},"19":{"name":"linkChildRecords","line":276,"loc":{"start":{"line":276,"column":2},"end":{"line":276,"column":42}}},"20":{"name":"(anonymous_20)","line":287,"loc":{"start":{"line":287,"column":57},"end":{"line":287,"column":71}}},"21":{"name":"updateParentRecord","line":317,"loc":{"start":{"line":317,"column":2},"end":{"line":317,"column":44}}},"22":{"name":"(anonymous_22)","line":325,"loc":{"start":{"line":325,"column":41},"end":{"line":325,"column":55}}},"23":{"name":"buildParentRemoveOperations","line":353,"loc":{"start":{"line":353,"column":0},"end":{"line":353,"column":57}}},"24":{"name":"(anonymous_24)","line":362,"loc":{"start":{"line":362,"column":34},"end":{"line":362,"column":56}}},"25":{"name":"removeOperationRunner","line":437,"loc":{"start":{"line":437,"column":0},"end":{"line":437,"column":47}}},"26":{"name":"runner","line":441,"loc":{"start":{"line":441,"column":2},"end":{"line":441,"column":35}}},"27":{"name":"buildParentLinkOperations","line":477,"loc":{"start":{"line":477,"column":0},"end":{"line":477,"column":55}}},"28":{"name":"determineOperation","line":483,"loc":{"start":{"line":483,"column":2},"end":{"line":483,"column":48}}},"29":{"name":"(anonymous_29)","line":497,"loc":{"start":{"line":497,"column":34},"end":{"line":497,"column":56}}},"30":{"name":"(anonymous_30)","line":498,"loc":{"start":{"line":498,"column":40},"end":{"line":498,"column":54}}},"31":{"name":"createNewRecords","line":519,"loc":{"start":{"line":519,"column":0},"end":{"line":519,"column":55}}},"32":{"name":"mapAssociations","line":525,"loc":{"start":{"line":525,"column":2},"end":{"line":525,"column":46}}},"33":{"name":"createRunner","line":534,"loc":{"start":{"line":534,"column":4},"end":{"line":534,"column":46}}},"34":{"name":"createRecord","line":544,"loc":{"start":{"line":544,"column":2},"end":{"line":544,"column":59}}},"35":{"name":"(anonymous_35)","line":547,"loc":{"start":{"line":547,"column":29},"end":{"line":547,"column":48}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":54}},"4":{"start":{"line":21,"column":0},"end":{"line":36,"column":2}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":70}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":77}},"8":{"start":{"line":34,"column":2},"end":{"line":34,"column":43}},"9":{"start":{"line":47,"column":0},"end":{"line":74,"column":1}},"10":{"start":{"line":49,"column":2},"end":{"line":49,"column":18}},"11":{"start":{"line":50,"column":2},"end":{"line":50,"column":22}},"12":{"start":{"line":53,"column":2},"end":{"line":71,"column":5}},"13":{"start":{"line":55,"column":4},"end":{"line":55,"column":40}},"14":{"start":{"line":59,"column":4},"end":{"line":59,"column":35}},"15":{"start":{"line":59,"column":28},"end":{"line":59,"column":35}},"16":{"start":{"line":63,"column":4},"end":{"line":66,"column":6}},"17":{"start":{"line":69,"column":4},"end":{"line":69,"column":59}},"18":{"start":{"line":69,"column":35},"end":{"line":69,"column":59}},"19":{"start":{"line":70,"column":4},"end":{"line":70,"column":89}},"20":{"start":{"line":73,"column":2},"end":{"line":73,"column":20}},"21":{"start":{"line":87,"column":0},"end":{"line":158,"column":1}},"22":{"start":{"line":89,"column":2},"end":{"line":89,"column":18}},"23":{"start":{"line":90,"column":2},"end":{"line":90,"column":79}},"24":{"start":{"line":91,"column":2},"end":{"line":91,"column":16}},"25":{"start":{"line":93,"column":2},"end":{"line":93,"column":69}},"26":{"start":{"line":93,"column":36},"end":{"line":93,"column":69}},"27":{"start":{"line":94,"column":2},"end":{"line":94,"column":69}},"28":{"start":{"line":94,"column":36},"end":{"line":94,"column":69}},"29":{"start":{"line":95,"column":2},"end":{"line":95,"column":25}},"30":{"start":{"line":95,"column":18},"end":{"line":95,"column":25}},"31":{"start":{"line":97,"column":2},"end":{"line":97,"column":57}},"32":{"start":{"line":100,"column":2},"end":{"line":100,"column":70}},"33":{"start":{"line":101,"column":2},"end":{"line":101,"column":44}},"34":{"start":{"line":105,"column":2},"end":{"line":117,"column":3}},"35":{"start":{"line":108,"column":4},"end":{"line":114,"column":7}},"36":{"start":{"line":109,"column":6},"end":{"line":113,"column":9}},"37":{"start":{"line":110,"column":8},"end":{"line":110,"column":46}},"38":{"start":{"line":110,"column":39},"end":{"line":110,"column":46}},"39":{"start":{"line":111,"column":8},"end":{"line":111,"column":66}},"40":{"start":{"line":111,"column":59},"end":{"line":111,"column":66}},"41":{"start":{"line":112,"column":8},"end":{"line":112,"column":37}},"42":{"start":{"line":116,"column":4},"end":{"line":116,"column":11}},"43":{"start":{"line":119,"column":2},"end":{"line":157,"column":5}},"44":{"start":{"line":128,"column":4},"end":{"line":131,"column":5}},"45":{"start":{"line":129,"column":6},"end":{"line":129,"column":30}},"46":{"start":{"line":130,"column":6},"end":{"line":130,"column":13}},"47":{"start":{"line":134,"column":4},"end":{"line":137,"column":5}},"48":{"start":{"line":135,"column":6},"end":{"line":135,"column":30}},"49":{"start":{"line":136,"column":6},"end":{"line":136,"column":13}},"50":{"start":{"line":140,"column":4},"end":{"line":140,"column":22}},"51":{"start":{"line":141,"column":4},"end":{"line":141,"column":49}},"52":{"start":{"line":144,"column":4},"end":{"line":144,"column":81}},"53":{"start":{"line":147,"column":4},"end":{"line":150,"column":5}},"54":{"start":{"line":148,"column":6},"end":{"line":148,"column":45}},"55":{"start":{"line":149,"column":6},"end":{"line":149,"column":13}},"56":{"start":{"line":153,"column":4},"end":{"line":155,"column":7}},"57":{"start":{"line":154,"column":6},"end":{"line":154,"column":47}},"58":{"start":{"line":173,"column":0},"end":{"line":195,"column":1}},"59":{"start":{"line":174,"column":2},"end":{"line":174,"column":18}},"60":{"start":{"line":176,"column":2},"end":{"line":194,"column":9}},"61":{"start":{"line":180,"column":6},"end":{"line":180,"column":57}},"62":{"start":{"line":185,"column":6},"end":{"line":185,"column":57}},"63":{"start":{"line":191,"column":6},"end":{"line":191,"column":55}},"64":{"start":{"line":213,"column":0},"end":{"line":233,"column":1}},"65":{"start":{"line":215,"column":2},"end":{"line":215,"column":18}},"66":{"start":{"line":219,"column":2},"end":{"line":221,"column":3}},"67":{"start":{"line":220,"column":4},"end":{"line":220,"column":61}},"68":{"start":{"line":223,"column":2},"end":{"line":226,"column":3}},"69":{"start":{"line":224,"column":4},"end":{"line":224,"column":60}},"70":{"start":{"line":225,"column":4},"end":{"line":225,"column":66}},"71":{"start":{"line":231,"column":2},"end":{"line":231,"column":59}},"72":{"start":{"line":247,"column":0},"end":{"line":258,"column":1}},"73":{"start":{"line":249,"column":2},"end":{"line":249,"column":18}},"74":{"start":{"line":252,"column":2},"end":{"line":255,"column":3}},"75":{"start":{"line":253,"column":4},"end":{"line":253,"column":74}},"76":{"start":{"line":254,"column":4},"end":{"line":254,"column":49}},"77":{"start":{"line":257,"column":2},"end":{"line":257,"column":52}},"78":{"start":{"line":272,"column":0},"end":{"line":334,"column":1}},"79":{"start":{"line":274,"column":2},"end":{"line":274,"column":18}},"80":{"start":{"line":276,"column":2},"end":{"line":291,"column":3}},"81":{"start":{"line":283,"column":4},"end":{"line":283,"column":83}},"82":{"start":{"line":287,"column":4},"end":{"line":290,"column":7}},"83":{"start":{"line":288,"column":6},"end":{"line":288,"column":32}},"84":{"start":{"line":288,"column":15},"end":{"line":288,"column":32}},"85":{"start":{"line":289,"column":6},"end":{"line":289,"column":37}},"86":{"start":{"line":317,"column":2},"end":{"line":331,"column":3}},"87":{"start":{"line":319,"column":4},"end":{"line":319,"column":22}},"88":{"start":{"line":320,"column":4},"end":{"line":320,"column":58}},"89":{"start":{"line":322,"column":4},"end":{"line":322,"column":56}},"90":{"start":{"line":323,"column":4},"end":{"line":323,"column":36}},"91":{"start":{"line":325,"column":4},"end":{"line":330,"column":7}},"92":{"start":{"line":326,"column":6},"end":{"line":326,"column":32}},"93":{"start":{"line":326,"column":15},"end":{"line":326,"column":32}},"94":{"start":{"line":329,"column":6},"end":{"line":329,"column":24}},"95":{"start":{"line":333,"column":2},"end":{"line":333,"column":44}},"96":{"start":{"line":353,"column":0},"end":{"line":424,"column":1}},"97":{"start":{"line":355,"column":2},"end":{"line":355,"column":18}},"98":{"start":{"line":356,"column":2},"end":{"line":356,"column":16}},"99":{"start":{"line":362,"column":2},"end":{"line":421,"column":5}},"100":{"start":{"line":364,"column":4},"end":{"line":364,"column":22}},"101":{"start":{"line":365,"column":4},"end":{"line":365,"column":28}},"102":{"start":{"line":366,"column":4},"end":{"line":366,"column":81}},"103":{"start":{"line":373,"column":4},"end":{"line":389,"column":5}},"104":{"start":{"line":376,"column":6},"end":{"line":376,"column":64}},"105":{"start":{"line":380,"column":6},"end":{"line":385,"column":8}},"106":{"start":{"line":387,"column":6},"end":{"line":387,"column":26}},"107":{"start":{"line":388,"column":6},"end":{"line":388,"column":13}},"108":{"start":{"line":397,"column":4},"end":{"line":397,"column":60}},"109":{"start":{"line":398,"column":4},"end":{"line":398,"column":59}},"110":{"start":{"line":401,"column":4},"end":{"line":401,"column":59}},"111":{"start":{"line":406,"column":4},"end":{"line":420,"column":5}},"112":{"start":{"line":410,"column":6},"end":{"line":415,"column":8}},"113":{"start":{"line":418,"column":6},"end":{"line":418,"column":26}},"114":{"start":{"line":419,"column":6},"end":{"line":419,"column":13}},"115":{"start":{"line":423,"column":2},"end":{"line":423,"column":14}},"116":{"start":{"line":437,"column":0},"end":{"line":461,"column":1}},"117":{"start":{"line":439,"column":2},"end":{"line":439,"column":18}},"118":{"start":{"line":441,"column":2},"end":{"line":456,"column":3}},"119":{"start":{"line":442,"column":4},"end":{"line":442,"column":20}},"120":{"start":{"line":446,"column":4},"end":{"line":449,"column":5}},"121":{"start":{"line":447,"column":6},"end":{"line":447,"column":89}},"122":{"start":{"line":448,"column":6},"end":{"line":448,"column":13}},"123":{"start":{"line":453,"column":4},"end":{"line":453,"column":37}},"124":{"start":{"line":455,"column":4},"end":{"line":455,"column":94}},"125":{"start":{"line":460,"column":2},"end":{"line":460,"column":37}},"126":{"start":{"line":477,"column":0},"end":{"line":504,"column":1}},"127":{"start":{"line":479,"column":2},"end":{"line":479,"column":27}},"128":{"start":{"line":483,"column":2},"end":{"line":493,"column":3}},"129":{"start":{"line":486,"column":4},"end":{"line":489,"column":5}},"130":{"start":{"line":487,"column":6},"end":{"line":487,"column":35}},"131":{"start":{"line":488,"column":6},"end":{"line":488,"column":13}},"132":{"start":{"line":491,"column":4},"end":{"line":491,"column":70}},"133":{"start":{"line":492,"column":4},"end":{"line":492,"column":43}},"134":{"start":{"line":497,"column":2},"end":{"line":501,"column":5}},"135":{"start":{"line":498,"column":4},"end":{"line":500,"column":7}},"136":{"start":{"line":499,"column":6},"end":{"line":499,"column":43}},"137":{"start":{"line":503,"column":2},"end":{"line":503,"column":25}},"138":{"start":{"line":519,"column":0},"end":{"line":556,"column":1}},"139":{"start":{"line":521,"column":2},"end":{"line":521,"column":18}},"140":{"start":{"line":525,"column":2},"end":{"line":540,"column":3}},"141":{"start":{"line":528,"column":4},"end":{"line":528,"column":81}},"142":{"start":{"line":529,"column":4},"end":{"line":529,"column":52}},"143":{"start":{"line":531,"column":4},"end":{"line":531,"column":65}},"144":{"start":{"line":532,"column":4},"end":{"line":532,"column":47}},"145":{"start":{"line":534,"column":4},"end":{"line":537,"column":5}},"146":{"start":{"line":535,"column":6},"end":{"line":535,"column":59}},"147":{"start":{"line":536,"column":6},"end":{"line":536,"column":38}},"148":{"start":{"line":539,"column":4},"end":{"line":539,"column":44}},"149":{"start":{"line":544,"column":2},"end":{"line":552,"column":3}},"150":{"start":{"line":545,"column":4},"end":{"line":545,"column":20}},"151":{"start":{"line":547,"column":4},"end":{"line":551,"column":7}},"152":{"start":{"line":548,"column":6},"end":{"line":548,"column":32}},"153":{"start":{"line":548,"column":15},"end":{"line":548,"column":32}},"154":{"start":{"line":549,"column":6},"end":{"line":549,"column":49}},"155":{"start":{"line":550,"column":6},"end":{"line":550,"column":13}},"156":{"start":{"line":555,"column":2},"end":{"line":555,"column":64}}},"branchMap":{"1":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"2":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"3":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"4":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":2},"end":{"line":94,"column":2}},{"start":{"line":94,"column":2},"end":{"line":94,"column":2}}]},"5":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":2},"end":{"line":95,"column":2}},{"start":{"line":95,"column":2},"end":{"line":95,"column":2}}]},"6":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"7":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":8}},{"start":{"line":110,"column":8},"end":{"line":110,"column":8}}]},"8":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"9":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"10":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":8},"end":{"line":128,"column":32}},{"start":{"line":128,"column":36},"end":{"line":128,"column":54}}]},"11":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"12":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":147,"column":4}},{"start":{"line":147,"column":4},"end":{"line":147,"column":4}}]},"13":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":6},"end":{"line":288,"column":6}},{"start":{"line":288,"column":6},"end":{"line":288,"column":6}}]},"14":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":6},"end":{"line":326,"column":6}},{"start":{"line":326,"column":6},"end":{"line":326,"column":6}}]},"15":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":4},"end":{"line":373,"column":4}},{"start":{"line":373,"column":4},"end":{"line":373,"column":4}}]},"16":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":4},"end":{"line":406,"column":4}},{"start":{"line":406,"column":4},"end":{"line":406,"column":4}}]},"17":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":4},"end":{"line":446,"column":4}},{"start":{"line":446,"column":4},"end":{"line":446,"column":4}}]},"18":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":4},"end":{"line":486,"column":4}},{"start":{"line":486,"column":4},"end":{"line":486,"column":4}}]},"19":{"line":491,"type":"binary-expr","locations":[{"start":{"line":491,"column":35},"end":{"line":491,"column":63}},{"start":{"line":491,"column":67},"end":{"line":491,"column":69}}]},"20":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":6},"end":{"line":548,"column":6}},{"start":{"line":548,"column":6},"end":{"line":548,"column":6}}]}},"code":["/**"," * Module Dependencies"," */","","var _ = require('lodash');","var async = require('async');","var hop = require('../helpers').object.hasOwnProperty;","","","/**"," * Update nested associations. Will take a values object and perform updating and"," * creating of all the nested associations. It's the same as syncing so it will first"," * remove any associations related to the parent and then \"sync\" the new associations."," *"," * @param {Array} parents"," * @param {Object} values"," * @param {Object} associations"," * @param {Function} cb"," */","","module.exports = function(parents, values, associations, cb) {","","  var self = this;","","  // Combine model and collection associations","  associations = associations.collections.concat(associations.models);","","  // Build up .add and .update operations for each association","  var operations = buildOperations.call(self, parents, associations, values);","","  // Now that our operations are built, lets go through and run any updates.","  // Then for each parent, find all the current associations and remove them then add","  // all the new associations in using .add()","  sync.call(self, parents, operations, cb);","","};","","","/**"," * Build Up Operations (add and update)"," *"," * @param {Array} associations"," * @param {Object} values"," * @return {Object}"," */","","function buildOperations(parents, associations, values) {","","  var self = this;","  var operations = {};","","  // For each association, grab the primary key value and normalize into model.add methods","  associations.forEach(function(association) {","","    var optValues = values[association];","","    // If values are being nulled out just return. This is used when removing foreign","    // keys on the parent model.","    if (optValues === null) return;","","    // Pull out any association values that have primary keys, these will need to be updated. All","    // values can be added for each parent however.","    operations[association] = {","      add: [],","      update: []","    };","","    // Normalize optValues to an array","    if (!Array.isArray(optValues)) optValues = [optValues];","    queueOperations.call(self, parents, association, operations[association], optValues);","  });","","  return operations;","}","","/**"," * Queue Up Operations."," *"," * Takes the array normalized association values and queues up"," * operations for the specific association."," *"," * @param {String} association"," * @param {Object} operation"," * @param {Array} values"," */","","function queueOperations(parents, association, operation, values) {","","  var self = this;","  var attribute = self.waterline.schema[self.identity].attributes[association];","  var modelName;","","  if (hop(attribute, 'collection')) modelName = attribute.collection;","  if (hop(attribute, 'foreignKey')) modelName = attribute.references;","  if (!modelName) return;","","  var collection = self.waterline.collections[modelName];","","  // Grab the relation's PK","  var relatedPK = _.find(collection.attributes, { primaryKey: true });","  var relatedPkName = collection.primaryKey;","","  // If this is a join table, we can just queue up operations on the parent","  // for this association.","  if (collection.junctionTable) {","","    // For each parent, queue up any .add() operations","    parents.forEach(function(parent) {","      values.forEach(function(val) {","        if (!hop(parent, association)) return;","        if (typeof parent[association].add !== 'function') return;","        parent[association].add(val);","      });","    });","","    return;","  }","","  values.forEach(function(val) {","","    // Check the values and see if the model's primary key is given. If so look into","    // the schema attribute and check if this is a collection or model attribute. If it's","    // a collection attribute lets update the child record and if it's a model attribute,","    // update the child and set the parent's foreign key value to the new primary key.","    //","    // If a custom PK was used and it's not autoIncrementing add the record. This","    // allows nested creates to work when custom PK's are used.","    if (!relatedPK.autoIncrement && !collection.autoPK) {","      operation.add.push(val);","      return;","    }","","    // If it's missing a PK queue up an add","    if (!hop(val, relatedPkName)) {","      operation.add.push(val);","      return;","    }","","    // Build up the criteria that will be used to update the child record","    var criteria = {};","    criteria[relatedPkName] = val[relatedPkName];","","    // Queue up the update operation","    operation.update.push({ model: modelName, criteria: criteria, values: val });","","    // Check if the parents foreign key needs to be updated","    if (!hop(attribute, 'foreignKey')) {","      operation.add.push(val[relatedPkName]);","      return;","    }","","    // Set the new foreign key value for each parent","    parents.forEach(function(parent) {","      parent[association] = val[relatedPkName];","    });","","  });","}","","/**"," * Sync Associated Data"," *"," * Using the operations, lets go through and run any updates on any nested object with"," * primary keys. This ensures that all the data passed up is persisted. Then for each parent,"," * find all the current associations and unlink them and then add all the new associations"," * in using .add(). This ensures that whatever is passed in to an update is what the value will"," * be when queried again."," *"," * @param {Object} operations"," * @param {Function} cb"," */","","function sync(parents, operations, cb) {","  var self = this;","","  async.auto({","","    // Update any nested associations","    update: function(next) {","      updateRunner.call(self, parents, operations, next);","    },","","    // For each parent, unlink all the associations currently set","    unlink: ['update', function(next) {","      unlinkRunner.call(self, parents, operations, next);","    }],","","    // For each parent found, link any associations passed in by either creating","    // the new record or linking an existing record","    link: ['unlink', function(next) {","      linkRunner.call(self, parents, operations, next);","    }]","","  }, cb);","}","","","////////////////////////////////////////////////////////////////////////////////////////","// .sync() - Async Auto Runners","////////////////////////////////////////////////////////////////////////////////////////","","","/**"," * Run Update Operations."," *"," * Uses the information stored in an operation to perform a .update() on the"," * associated model using the new values."," *"," * @param {Object} operation"," * @param {Function} cb"," */","","function updateRunner(parents, operations, cb) {","","  var self = this;","","  // There will be an array of update operations inside of a namespace. Use this to run","  // an update on the model instance of the association.","  function associationLoop(association, next) {","    async.each(operations[association].update, update, next);","  }","","  function update(operation, next) {","    var model = self.waterline.collections[operation.model];","    model.update(operation.criteria, operation.values).exec(next);","  }","","  // Operations are namespaced under an association key. So run each association's updates","  // in parallel for now. May need to be limited in the future but all adapters should","  // support connection pooling.","  async.each(Object.keys(operations), associationLoop, cb);","","}","","","/**"," * Unlink Associated Records."," *"," * For each association passed in to the update we are essentially replacing the"," * association's value. In order to do this we first need to clear out any associations"," * that currently exist."," *"," * @param {Object} operations"," * @param {Function} cb"," */","","function unlinkRunner(parents, operations, cb) {","","  var self = this;","","  // Given a parent, build up remove operations and run them.","  function unlinkParentAssociations(parent, next) {","    var opts = buildParentRemoveOperations.call(self, parent, operations);","    removeOperationRunner.call(self, opts, next);","  }","","  async.each(parents, unlinkParentAssociations, cb);","}","","","/**"," * Link Associated Records"," *"," * Given a set of operations, associate the records with the parent records. This"," * can be done by either creating join table records or by setting foreign keys."," * It defaults to a parent.add() method for most situations."," *"," * @param {Object} operations"," * @param {Function} cb"," */","","function linkRunner(parents, operations, cb) {","","  var self = this;","","  function linkChildRecords(parent, next) {","","    // Queue up `.add()` operations on the parent model and figure out","    // which records need to be created.","    //","    // If an .add() method is available always use it. If this is a nested model an .add()","    // method won't be available so queue up a create operation.","    var recordsToCreate = buildParentLinkOperations.call(self, parent, operations);","","    // Create the new records and update the parent with the new foreign key","    // values that may have been set when creating child records.","    createNewRecords.call(self, parent, recordsToCreate, function(err) {","      if (err) return next(err);","      updateParentRecord(parent, cb);","    });","  }","","  // Update the parent record one last time. This ensures a model attribute (single object)","  // on the parent can create a new record and then set the parent's foreign key value to","  // the newly created child record's primary key.","  //","  // Example:","  // Parent.update({","  //   name: 'foo',","  //   nestedModel: {","  //     name: 'bar'","  //   }","  // })","  //","  // The above query would create the new nested model and then set the parent's nestedModel","  // value to the newly created model's primary key.","  //","  // We then run a .save() to persist any .add() records that may have been used. The update and","  // .save() are used instead of a find and then save because it's the same amount of queries","  // and it's easier to take advantage of all that the .add() method gives us.","  //","  //","  // TO-DO:","  // Make this much smarter to reduce the amount of queries that need to be run. We should probably","  // be able to at least cut this in half!","  //","  function updateParentRecord(parent, next) {","","    var criteria = {};","    var model = self.waterline.collections[self.identity];","","    criteria[self.primaryKey] = parent[self.primaryKey];","    var pValues = parent.toObject();","","    model.update(criteria, pValues).exec(function(err) {","      if (err) return next(err);","","      // Call .save() to persist any .add() functions that may have been used.","      parent.save(next);","    });","  }","","  async.each(parents, linkChildRecords, cb);","}","","","////////////////////////////////////////////////////////////////////////////////////////","// .sync() - Helper Functions","////////////////////////////////////////////////////////////////////////////////////////","","","/**"," * Build up operations for performing unlinks."," *"," * Given a parent and a set of operations, queue up operations to either"," * remove join table records or null out any foreign keys on an child model."," *"," * @param {Object} parent"," * @param {Object} operations"," * @return {Array}"," */","","function buildParentRemoveOperations(parent, operations) {","","  var self = this;","  var opts = [];","","  // Inspect the association and see if this relationship has a joinTable.","  // If so create an operation criteria that clears all matching records from the","  // table. If it doesn't have a join table, build an operation criteria that","  // nulls out the foreign key on matching records.","  Object.keys(operations).forEach(function(association) {","","    var criteria = {};","    var searchCriteria = {};","    var attribute = self.waterline.schema[self.identity].attributes[association];","","    /////////////////////////////////////////////////////////////////////////","    // Parent Record:","    // If the foreign key is stored on the parent side, null it out","    /////////////////////////////////////////////////////////////////////////","","    if (hop(attribute, 'foreignKey')) {","","      // Set search criteria where primary key is equal to the parents primary key","      searchCriteria[self.primaryKey] = parent[self.primaryKey];","","      // Store any information we may need to build up an operation.","      // Use the `nullify` key to show we want to perform an update and not a destroy.","      criteria = {","        model: self.identity,","        criteria: searchCriteria,","        keyName: association,","        nullify: true","      };","","      opts.push(criteria);","      return;","    }","","    /////////////////////////////////////////////////////////////////////////","    // Child Record:","    // Lookup the attribute on the other side of the association on in the","    // case of a m:m association the child table will be the join table.","    /////////////////////////////////////////////////////////////////////////","","    var child = self.waterline.schema[attribute.collection];","    var childAttribute = child.attributes[attribute.onKey];","","    // Set the search criteria to use the collection's `via` key and the parent's primary key.","    searchCriteria[attribute.on] = parent[self.primaryKey];","","    // If the childAttribute stores the foreign key, find all children with the","    // foreignKey equal to the parent's primary key and null them out or in the case of","    // a `junctionTable` flag destroy them.","    if (hop(childAttribute, 'foreignKey')) {","","      // Store any information needed to perform the query. Set nullify to false if","      // a `junctionTable` property is found.","      criteria = {","        model: child.identity,","        criteria: searchCriteria,","        keyName: attribute.on,","        nullify: !hop(child, 'throughTable')","      };","","","      opts.push(criteria);","      return;","    }","  });","","  return opts;","}","","","/**"," * Remove Operation Runner"," *"," * Given a criteria object matching a remove operation, perform the"," * operation using waterline collection instances."," *"," * @param {Array} operations"," * @param {Function} callback"," */","","function removeOperationRunner(operations, cb) {","","  var self = this;","","  function runner(operation, next) {","    var values = {};","","    // If nullify is false, run a destroy method using the criteria to destroy","    // the join table records.","    if (!operation.nullify) {","      self.waterline.collections[operation.model].destroy(operation.criteria).exec(next);","      return;","    }","","    // Run an update operation to set the foreign key to null on all the","    // associated child records.","    values[operation.keyName] = null;","","    self.waterline.collections[operation.model].update(operation.criteria, values).exec(next);","  }","","","  // Run the operations","  async.each(operations, runner, cb);","}","","","/**"," * Build up operations for performing links."," *"," * Given a parent and a set of operations, queue up operations to associate two"," * records together. This could be using the parent's `.add()` method which handles"," * the logic for us or building up a `create` operation that we can run to create the"," * associated record with the correct foreign key set."," *"," * @param {Object} parent"," * @param {Object} operations"," * @return {Object}"," */","","function buildParentLinkOperations(parent, operations) {","","  var recordsToCreate = {};","","  // Determine whether to use the parent association's `.add()` function","  // or whether to queue up a create operation.","  function determineOperation(association, opt) {","","    // Check if the association has an `add` method, if so use it.","    if (hop(parent[association], 'add')) {","      parent[association].add(opt);","      return;","    }","","    recordsToCreate[association] = recordsToCreate[association] || [];","    recordsToCreate[association].push(opt);","  }","","  // For each operation look at all the .add operations and determine","  // what to do with them.","  Object.keys(operations).forEach(function(association) {","    operations[association].add.forEach(function(opt) {","      determineOperation(association, opt);","    });","  });","","  return recordsToCreate;","}","","","/**"," * Create New Records."," *"," * Given an object of association records to create, perform a create"," * on the child model and set the parent's foreign key to the newly"," * created record's primary key."," *"," * @param {Object} parent"," * @param {Object} recordsToCreate"," * @param {Function} cb"," */","","function createNewRecords(parent, recordsToCreate, cb) {","","  var self = this;","","  // For each association, run the createRecords function","  // in the model context.","  function mapAssociations(association, next) {","","    // First, pull the model attribute's referenced (foreign) collection","    var attribute = self.waterline.schema[self.identity].attributes[association];","    var referencedCollection = attribute.references;","","    var model = self.waterline.collections[referencedCollection];","    var records = recordsToCreate[association];","","    function createRunner(record, nextRecord) {","      var args = [parent, association, record, nextRecord];","      createRecord.apply(model, args);","    }","","    async.each(records, createRunner, next);","  }","","  // Create a record and set the parent's foreign key to the","  // newly created record's primary key.","  function createRecord(parent, association, record, next) {","    var self = this;","","    this.create(record).exec(function(err, val) {","      if (err) return next(err);","      parent[association] = val[self.primaryKey];","      next();","    });","  }","","","  async.each(Object.keys(recordsToCreate), mapAssociations, cb);","}",""],"l":{"5":1,"6":1,"7":1,"21":1,"23":0,"26":0,"29":0,"34":0,"47":1,"49":0,"50":0,"53":0,"55":0,"59":0,"63":0,"69":0,"70":0,"73":0,"87":1,"89":0,"90":0,"91":0,"93":0,"94":0,"95":0,"97":0,"100":0,"101":0,"105":0,"108":0,"109":0,"110":0,"111":0,"112":0,"116":0,"119":0,"128":0,"129":0,"130":0,"134":0,"135":0,"136":0,"140":0,"141":0,"144":0,"147":0,"148":0,"149":0,"153":0,"154":0,"173":1,"174":0,"176":0,"180":0,"185":0,"191":0,"213":1,"215":0,"219":1,"220":0,"223":1,"224":0,"225":0,"231":0,"247":1,"249":0,"252":1,"253":0,"254":0,"257":0,"272":1,"274":0,"276":1,"283":0,"287":0,"288":0,"289":0,"317":1,"319":0,"320":0,"322":0,"323":0,"325":0,"326":0,"329":0,"333":0,"353":1,"355":0,"356":0,"362":0,"364":0,"365":0,"366":0,"373":0,"376":0,"380":0,"387":0,"388":0,"397":0,"398":0,"401":0,"406":0,"410":0,"418":0,"419":0,"423":0,"437":1,"439":0,"441":1,"442":0,"446":0,"447":0,"448":0,"453":0,"455":0,"460":0,"477":1,"479":0,"483":1,"486":0,"487":0,"488":0,"491":0,"492":0,"497":0,"498":0,"499":0,"503":0,"519":1,"521":0,"525":1,"528":0,"529":0,"531":0,"532":0,"534":1,"535":0,"536":0,"539":0,"544":1,"545":0,"547":0,"548":0,"549":0,"550":0,"555":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/associationMethods/add.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/associationMethods/add.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":27},"end":{"line":24,"column":68}}},"2":{"name":"(anonymous_2)","line":64,"loc":{"start":{"line":64,"column":31},"end":{"line":64,"column":60}}},"3":{"name":"(anonymous_3)","line":88,"loc":{"start":{"line":88,"column":45},"end":{"line":88,"column":67}}},"4":{"name":"(anonymous_4)","line":91,"loc":{"start":{"line":91,"column":41},"end":{"line":91,"column":72}}},"5":{"name":"(anonymous_5)","line":95,"loc":{"start":{"line":95,"column":2},"end":{"line":95,"column":16}}},"6":{"name":"(anonymous_6)","line":113,"loc":{"start":{"line":113,"column":35},"end":{"line":113,"column":62}}},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":31},"end":{"line":125,"column":59}}},"8":{"name":"(anonymous_8)","line":165,"loc":{"start":{"line":165,"column":32},"end":{"line":165,"column":81}}},"9":{"name":"(anonymous_9)","line":177,"loc":{"start":{"line":177,"column":28},"end":{"line":177,"column":50}}},"10":{"name":"(anonymous_10)","line":232,"loc":{"start":{"line":232,"column":29},"end":{"line":232,"column":74}}},"11":{"name":"(anonymous_11)","line":262,"loc":{"start":{"line":262,"column":39},"end":{"line":262,"column":53}}},"12":{"name":"(anonymous_12)","line":288,"loc":{"start":{"line":288,"column":33},"end":{"line":288,"column":78}}},"13":{"name":"(anonymous_13)","line":322,"loc":{"start":{"line":322,"column":25},"end":{"line":322,"column":40}}},"14":{"name":"(anonymous_14)","line":329,"loc":{"start":{"line":329,"column":46},"end":{"line":329,"column":68}}},"15":{"name":"(anonymous_15)","line":340,"loc":{"start":{"line":340,"column":20},"end":{"line":340,"column":35}}},"16":{"name":"(anonymous_16)","line":343,"loc":{"start":{"line":343,"column":35},"end":{"line":343,"column":54}}},"17":{"name":"(anonymous_17)","line":352,"loc":{"start":{"line":352,"column":60},"end":{"line":352,"column":84}}},"18":{"name":"(anonymous_18)","line":357,"loc":{"start":{"line":357,"column":34},"end":{"line":357,"column":45}}},"19":{"name":"(anonymous_19)","line":365,"loc":{"start":{"line":365,"column":5},"end":{"line":365,"column":19}}},"20":{"name":"(anonymous_20)","line":389,"loc":{"start":{"line":389,"column":35},"end":{"line":389,"column":56}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}},"5":{"start":{"line":24,"column":0},"end":{"line":54,"column":2}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":31}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":21}},"8":{"start":{"line":28,"column":2},"end":{"line":28,"column":31}},"9":{"start":{"line":29,"column":2},"end":{"line":29,"column":25}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":32}},"11":{"start":{"line":32,"column":2},"end":{"line":32,"column":79}},"12":{"start":{"line":34,"column":2},"end":{"line":34,"column":60}},"13":{"start":{"line":36,"column":2},"end":{"line":39,"column":3}},"14":{"start":{"line":37,"column":4},"end":{"line":38,"column":79}},"15":{"start":{"line":41,"column":2},"end":{"line":44,"column":3}},"16":{"start":{"line":42,"column":4},"end":{"line":43,"column":73}},"17":{"start":{"line":53,"column":2},"end":{"line":53,"column":49}},"18":{"start":{"line":64,"column":0},"end":{"line":78,"column":2}},"19":{"start":{"line":65,"column":2},"end":{"line":65,"column":24}},"20":{"start":{"line":67,"column":2},"end":{"line":72,"column":3}},"21":{"start":{"line":68,"column":4},"end":{"line":71,"column":5}},"22":{"start":{"line":69,"column":6},"end":{"line":69,"column":29}},"23":{"start":{"line":70,"column":6},"end":{"line":70,"column":12}},"24":{"start":{"line":75,"column":2},"end":{"line":75,"column":69}},"25":{"start":{"line":75,"column":51},"end":{"line":75,"column":69}},"26":{"start":{"line":77,"column":2},"end":{"line":77,"column":20}},"27":{"start":{"line":88,"column":0},"end":{"line":102,"column":2}},"28":{"start":{"line":89,"column":2},"end":{"line":89,"column":18}},"29":{"start":{"line":91,"column":2},"end":{"line":101,"column":5}},"30":{"start":{"line":92,"column":4},"end":{"line":92,"column":75}},"31":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"32":{"start":{"line":97,"column":6},"end":{"line":97,"column":47}},"33":{"start":{"line":100,"column":4},"end":{"line":100,"column":9}},"34":{"start":{"line":113,"column":0},"end":{"line":153,"column":2}},"35":{"start":{"line":114,"column":2},"end":{"line":114,"column":18}},"36":{"start":{"line":118,"column":2},"end":{"line":118,"column":51}},"37":{"start":{"line":119,"column":2},"end":{"line":119,"column":58}},"38":{"start":{"line":120,"column":2},"end":{"line":120,"column":83}},"39":{"start":{"line":121,"column":2},"end":{"line":121,"column":80}},"40":{"start":{"line":122,"column":2},"end":{"line":122,"column":90}},"41":{"start":{"line":125,"column":2},"end":{"line":152,"column":9}},"42":{"start":{"line":129,"column":4},"end":{"line":145,"column":5}},"43":{"start":{"line":134,"column":6},"end":{"line":136,"column":7}},"44":{"start":{"line":135,"column":8},"end":{"line":135,"column":90}},"45":{"start":{"line":139,"column":6},"end":{"line":142,"column":7}},"46":{"start":{"line":140,"column":8},"end":{"line":140,"column":49}},"47":{"start":{"line":141,"column":8},"end":{"line":141,"column":91}},"48":{"start":{"line":144,"column":6},"end":{"line":144,"column":88}},"49":{"start":{"line":150,"column":4},"end":{"line":150,"column":76}},"50":{"start":{"line":165,"column":0},"end":{"line":220,"column":2}},"51":{"start":{"line":166,"column":2},"end":{"line":166,"column":18}},"52":{"start":{"line":169,"column":2},"end":{"line":169,"column":84}},"53":{"start":{"line":170,"column":2},"end":{"line":170,"column":66}},"54":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"55":{"start":{"line":174,"column":4},"end":{"line":174,"column":58}},"56":{"start":{"line":177,"column":2},"end":{"line":219,"column":5}},"57":{"start":{"line":178,"column":4},"end":{"line":193,"column":5}},"58":{"start":{"line":182,"column":6},"end":{"line":185,"column":7}},"59":{"start":{"line":183,"column":8},"end":{"line":184,"column":78}},"60":{"start":{"line":187,"column":6},"end":{"line":192,"column":9}},"61":{"start":{"line":196,"column":4},"end":{"line":196,"column":36}},"62":{"start":{"line":196,"column":24},"end":{"line":196,"column":36}},"63":{"start":{"line":199,"column":4},"end":{"line":199,"column":25}},"64":{"start":{"line":199,"column":13},"end":{"line":199,"column":25}},"65":{"start":{"line":202,"column":4},"end":{"line":202,"column":84}},"66":{"start":{"line":204,"column":4},"end":{"line":211,"column":5}},"67":{"start":{"line":205,"column":6},"end":{"line":210,"column":9}},"68":{"start":{"line":214,"column":4},"end":{"line":214,"column":99}},"69":{"start":{"line":218,"column":4},"end":{"line":218,"column":82}},"70":{"start":{"line":232,"column":0},"end":{"line":276,"column":2}},"71":{"start":{"line":233,"column":2},"end":{"line":233,"column":18}},"72":{"start":{"line":236,"column":2},"end":{"line":236,"column":84}},"73":{"start":{"line":237,"column":2},"end":{"line":237,"column":66}},"74":{"start":{"line":240,"column":2},"end":{"line":243,"column":3}},"75":{"start":{"line":241,"column":4},"end":{"line":241,"column":99}},"76":{"start":{"line":242,"column":4},"end":{"line":242,"column":73}},"77":{"start":{"line":246,"column":2},"end":{"line":246,"column":84}},"78":{"start":{"line":247,"column":2},"end":{"line":247,"column":67}},"79":{"start":{"line":249,"column":2},"end":{"line":253,"column":3}},"80":{"start":{"line":250,"column":4},"end":{"line":252,"column":34}},"81":{"start":{"line":256,"column":2},"end":{"line":256,"column":20}},"82":{"start":{"line":257,"column":2},"end":{"line":257,"column":19}},"83":{"start":{"line":259,"column":2},"end":{"line":259,"column":32}},"84":{"start":{"line":260,"column":2},"end":{"line":260,"column":57}},"85":{"start":{"line":262,"column":2},"end":{"line":275,"column":5}},"86":{"start":{"line":264,"column":4},"end":{"line":272,"column":5}},"87":{"start":{"line":265,"column":6},"end":{"line":271,"column":9}},"88":{"start":{"line":274,"column":4},"end":{"line":274,"column":9}},"89":{"start":{"line":288,"column":0},"end":{"line":379,"column":2}},"90":{"start":{"line":289,"column":2},"end":{"line":289,"column":18}},"91":{"start":{"line":292,"column":2},"end":{"line":292,"column":98}},"92":{"start":{"line":293,"column":2},"end":{"line":293,"column":123}},"93":{"start":{"line":294,"column":2},"end":{"line":294,"column":46}},"94":{"start":{"line":297,"column":2},"end":{"line":304,"column":3}},"95":{"start":{"line":298,"column":4},"end":{"line":298,"column":163}},"96":{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},"97":{"start":{"line":300,"column":6},"end":{"line":300,"column":98}},"98":{"start":{"line":303,"column":4},"end":{"line":303,"column":30}},"99":{"start":{"line":306,"column":2},"end":{"line":310,"column":3}},"100":{"start":{"line":307,"column":4},"end":{"line":309,"column":34}},"101":{"start":{"line":313,"column":2},"end":{"line":313,"column":20}},"102":{"start":{"line":314,"column":2},"end":{"line":314,"column":19}},"103":{"start":{"line":316,"column":2},"end":{"line":316,"column":32}},"104":{"start":{"line":317,"column":2},"end":{"line":317,"column":58}},"105":{"start":{"line":318,"column":2},"end":{"line":318,"column":30}},"106":{"start":{"line":320,"column":2},"end":{"line":378,"column":5}},"107":{"start":{"line":323,"column":6},"end":{"line":323,"column":96}},"108":{"start":{"line":324,"column":6},"end":{"line":324,"column":97}},"109":{"start":{"line":325,"column":6},"end":{"line":325,"column":80}},"110":{"start":{"line":326,"column":6},"end":{"line":326,"column":25}},"111":{"start":{"line":327,"column":6},"end":{"line":327,"column":33}},"112":{"start":{"line":329,"column":6},"end":{"line":337,"column":9}},"113":{"start":{"line":330,"column":8},"end":{"line":330,"column":34}},"114":{"start":{"line":330,"column":17},"end":{"line":330,"column":34}},"115":{"start":{"line":331,"column":8},"end":{"line":334,"column":9}},"116":{"start":{"line":332,"column":10},"end":{"line":333,"column":71}},"117":{"start":{"line":336,"column":8},"end":{"line":336,"column":15}},"118":{"start":{"line":343,"column":6},"end":{"line":349,"column":9}},"119":{"start":{"line":344,"column":8},"end":{"line":346,"column":9}},"120":{"start":{"line":345,"column":10},"end":{"line":345,"column":27}},"121":{"start":{"line":348,"column":8},"end":{"line":348,"column":24}},"122":{"start":{"line":355,"column":6},"end":{"line":355,"column":50}},"123":{"start":{"line":356,"column":6},"end":{"line":360,"column":7}},"124":{"start":{"line":357,"column":8},"end":{"line":359,"column":11}},"125":{"start":{"line":358,"column":10},"end":{"line":358,"column":17}},"126":{"start":{"line":362,"column":6},"end":{"line":362,"column":39}},"127":{"start":{"line":366,"column":4},"end":{"line":374,"column":5}},"128":{"start":{"line":367,"column":6},"end":{"line":373,"column":9}},"129":{"start":{"line":376,"column":4},"end":{"line":376,"column":16}},"130":{"start":{"line":389,"column":0},"end":{"line":405,"column":2}},"131":{"start":{"line":390,"column":2},"end":{"line":390,"column":28}},"132":{"start":{"line":392,"column":2},"end":{"line":402,"column":3}},"133":{"start":{"line":393,"column":4},"end":{"line":393,"column":48}},"134":{"start":{"line":394,"column":4},"end":{"line":394,"column":44}},"135":{"start":{"line":396,"column":4},"end":{"line":396,"column":54}},"136":{"start":{"line":396,"column":45},"end":{"line":396,"column":54}},"137":{"start":{"line":397,"column":4},"end":{"line":397,"column":41}},"138":{"start":{"line":399,"column":4},"end":{"line":401,"column":5}},"139":{"start":{"line":400,"column":6},"end":{"line":400,"column":39}},"140":{"start":{"line":404,"column":2},"end":{"line":404,"column":24}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"3":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"4":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":59}},{"start":{"line":68,"column":63},"end":{"line":68,"column":95}}]},"5":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"6":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":17}},{"start":{"line":75,"column":21},"end":{"line":75,"column":49}}]},"7":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"8":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":11}},{"start":{"line":96,"column":15},"end":{"line":96,"column":49}}]},"9":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4}}]},"10":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":8},"end":{"line":129,"column":28}},{"start":{"line":129,"column":32},"end":{"line":129,"column":63}},{"start":{"line":129,"column":67},"end":{"line":129,"column":102}}]},"11":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":6},"end":{"line":134,"column":6}},{"start":{"line":134,"column":6},"end":{"line":134,"column":6}}]},"12":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":10},"end":{"line":134,"column":20}},{"start":{"line":134,"column":24},"end":{"line":134,"column":48}},{"start":{"line":134,"column":52},"end":{"line":134,"column":80}}]},"13":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":6},"end":{"line":139,"column":6}},{"start":{"line":139,"column":6},"end":{"line":139,"column":6}}]},"14":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":22},"end":{"line":170,"column":42}},{"start":{"line":170,"column":46},"end":{"line":170,"column":65}}]},"15":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":173,"column":2}},{"start":{"line":173,"column":2},"end":{"line":173,"column":2}}]},"16":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":178,"column":4}},{"start":{"line":178,"column":4},"end":{"line":178,"column":4}}]},"17":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":6},"end":{"line":182,"column":6}},{"start":{"line":182,"column":6},"end":{"line":182,"column":6}}]},"18":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":10},"end":{"line":182,"column":24}},{"start":{"line":182,"column":28},"end":{"line":182,"column":61}}]},"19":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":4}},{"start":{"line":196,"column":4},"end":{"line":196,"column":4}}]},"20":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"21":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":204,"column":4}},{"start":{"line":204,"column":4},"end":{"line":204,"column":4}}]},"22":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":22},"end":{"line":237,"column":42}},{"start":{"line":237,"column":46},"end":{"line":237,"column":65}}]},"23":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":2},"end":{"line":240,"column":2}},{"start":{"line":240,"column":2},"end":{"line":240,"column":2}}]},"24":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"25":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":4},"end":{"line":264,"column":4}},{"start":{"line":264,"column":4},"end":{"line":264,"column":4}}]},"26":{"line":293,"type":"binary-expr","locations":[{"start":{"line":293,"column":27},"end":{"line":293,"column":72}},{"start":{"line":293,"column":76},"end":{"line":293,"column":122}}]},"27":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":2},"end":{"line":297,"column":2}},{"start":{"line":297,"column":2},"end":{"line":297,"column":2}}]},"28":{"line":298,"type":"binary-expr","locations":[{"start":{"line":298,"column":19},"end":{"line":298,"column":98}},{"start":{"line":298,"column":102},"end":{"line":298,"column":162}}]},"29":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"30":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":2},"end":{"line":306,"column":2}},{"start":{"line":306,"column":2},"end":{"line":306,"column":2}}]},"31":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":8},"end":{"line":330,"column":8}},{"start":{"line":330,"column":8},"end":{"line":330,"column":8}}]},"32":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":8},"end":{"line":331,"column":8}},{"start":{"line":331,"column":8},"end":{"line":331,"column":8}}]},"33":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":8},"end":{"line":344,"column":8}},{"start":{"line":344,"column":8},"end":{"line":344,"column":8}}]},"34":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":6},"end":{"line":356,"column":6}},{"start":{"line":356,"column":6},"end":{"line":356,"column":6}}]},"35":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":4},"end":{"line":366,"column":4}},{"start":{"line":366,"column":4},"end":{"line":366,"column":4}}]},"36":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":4},"end":{"line":396,"column":4}},{"start":{"line":396,"column":4},"end":{"line":396,"column":4}}]},"37":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":4},"end":{"line":399,"column":4}},{"start":{"line":399,"column":4},"end":{"line":399,"column":4}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var async = require('async');","var utils = require('../../../utils/helpers');","var hasOwnProperty = utils.object.hasOwnProperty;","","/**"," * Add associations for a model."," *"," * If an object was used a new record should be created and linked to the parent."," * If only a primary key was used then the record should only be linked to the parent."," *"," * Called in the model instance context."," *"," * @param {Object} collection"," * @param {Object} proto"," * @param {Object} records"," * @param {Function} callback"," */","","var Add = module.exports = function(collection, proto, records, cb) {","","  this.collection = collection;","  this.proto = proto;","  this.failedTransactions = [];","  this.primaryKey = null;","","  var values = proto.toObject();","  var attributes = collection.waterline.schema[collection.identity].attributes;","","  this.primaryKey = this.findPrimaryKey(attributes, values);","","  if (!this.primaryKey) {","    return cb(new Error('No Primary Key set to associate the record with! ' +","      'Try setting an attribute as a primary key or include an ID property.'));","  }","","  if (!proto.toObject()[this.primaryKey]) {","    return cb(new Error('No Primary Key set to associate the record with! ' +","      'Primary Key must have a value, it can\\'t be an optional value.'));","  }","","  // Loop through each of the associations on this model and add any associations","  // that have been specified. Do this in series and limit the actual saves to 10","  // at a time so that connection pools are not exhausted.","  //","  // In the future when transactions are available this will all be done on a single","  // connection and can be re-written.","","  this.createCollectionAssociations(records, cb);","};","","/**"," * Find Primary Key"," *"," * @param {Object} attributes"," * @param {Object} values"," * @api private"," */","","Add.prototype.findPrimaryKey = function(attributes, values) {","  var primaryKey = null;","","  for (var attribute in attributes) {","    if (hasOwnProperty(attributes[attribute], 'primaryKey') && attributes[attribute].primaryKey) {","      primaryKey = attribute;","      break;","    }","  }","","  // If no primary key check for an ID property","  if (!primaryKey && hasOwnProperty(values, 'id')) primaryKey = 'id';","","  return primaryKey;","};","","/**"," * Create Collection Associations"," *"," * @param {Object} records"," * @param {Function} callback"," * @api private"," */","","Add.prototype.createCollectionAssociations = function(records, cb) {","  var self = this;","","  async.eachSeries(Object.keys(records), function(associationKey, next) {","    self.createAssociations(associationKey, records[associationKey], next);","  },","","  function(err) {","    if (err || self.failedTransactions.length > 0) {","      return cb(null, self.failedTransactions);","    }","","    cb();","  });","};","","/**"," * Create Records for an Association property on a collection"," *"," * @param {String} key"," * @param {Array} records"," * @param {Function} callback"," * @api private"," */","","Add.prototype.createAssociations = function(key, records, cb) {","  var self = this;","","  // Grab the collection the attribute references","  // this allows us to make a query on it","  var attribute = this.collection._attributes[key];","  var collectionName = attribute.collection.toLowerCase();","  var associatedCollection = this.collection.waterline.collections[collectionName];","  var relatedPK = _.find(associatedCollection.attributes, { primaryKey: true });","  var schema = this.collection.waterline.schema[this.collection.identity].attributes[key];","","  // Limit Adds to 10 at a time to prevent the connection pool from being exhausted","  async.eachLimit(records, 10, function(association, next) {","","    // If an object was passed in it should be created.","    // This allows new records to be created through the association interface","    if (association !== null && typeof association === 'object' && Object.keys(association).length > 0) {","","      // If a custom PK was used on the associated collection and it's not","      // autoIncrementing, create the record. This allows nested","      // creates to work when custom PK's are used.","      if (!relatedPK || !relatedPK.autoIncrement && !associatedCollection.autoPK) {","        return self.createNewRecord(associatedCollection, schema, association, key, next);","      }","","      // Check if the record contains a primary key, if so just link the values","      if (hasOwnProperty(association, associatedCollection.primaryKey)) {","        var pk = associatedCollection.primaryKey;","        return self.updateRecord(associatedCollection, schema, association[pk], key, next);","      }","","      return self.createNewRecord(associatedCollection, schema, association, key, next);","    }","","    // If the value is a primary key just update the association's foreign key","    // This will either create the new association through a foreign key or re-associatiate","    // with another collection.","    self.updateRecord(associatedCollection, schema, association, key, next);","","  }, cb);","};","","/**"," * Create A New Record"," *"," * @param {Object} collection"," * @param {Object} attribute"," * @param {Object} values"," * @param {Function} callback"," * @api private"," */","","Add.prototype.createNewRecord = function(collection, attribute, values, key, cb) {","  var self = this;","","  // Check if this is a many-to-many by looking at the junctionTable flag","  var schema = this.collection.waterline.schema[attribute.collection.toLowerCase()];","  var junctionTable = schema.junctionTable || schema.throughTable;","","  // If this isn't a many-to-many then add the foreign key in to the values","  if (!junctionTable) {","    values[attribute.onKey] = this.proto[this.primaryKey];","  }","","  collection.create(values, function(err, record) {","    if (err) {","","      // If no via was specified and the insert failed on a one-to-many build up an error message that","      // properly reflects the error.","      if (!junctionTable && !hasOwnProperty(attribute, 'via')) {","        err = new Error('You attempted to create a has many relationship but didn\\'t link the two ' +","          'atttributes together. Please setup a link using the via keyword.');","      }","","      self.failedTransactions.push({","        type: 'insert',","        collection: collection.identity,","        values: values,","        err: err","      });","    }","","    // if no junction table then return","    if (!junctionTable) return cb();","","    // if junction table but there was an error don't try and link the records","    if (err) return cb();","","    // Find the collection's Primary Key value","    var primaryKey = self.findPrimaryKey(collection._attributes, record.toObject());","","    if (!primaryKey) {","      self.failedTransactions.push({","        type: 'insert',","        collection: collection.identity,","        values: {},","        err: new Error('No Primary Key value was found on the joined collection')","      });","    }","","    // Find the Many To Many Collection","    var joinCollection = self.collection.waterline.collections[attribute.collection.toLowerCase()];","","    // The related record was created now the record in the junction table","    // needs to be created to link the two records","    self.createManyToMany(joinCollection, attribute, record[primaryKey], key, cb);","  });","};","","/**"," * Update A Record"," *"," * @param {Object} collection"," * @param {Object} attribute"," * @param {Object} values"," * @param {Function} callback"," * @api private"," */","","Add.prototype.updateRecord = function(collection, attribute, pk, key, cb) {","  var self = this;","","  // Check if this is a many-to-many by looking at the junctionTable flag","  var schema = this.collection.waterline.schema[attribute.collection.toLowerCase()];","  var junctionTable = schema.junctionTable || schema.throughTable;","","  // If so build out the criteria and create a new record in the junction table","  if (junctionTable) {","    var joinCollection = this.collection.waterline.collections[attribute.collection.toLowerCase()];","    return this.createManyToMany(joinCollection, attribute, pk, key, cb);","  }","","  // Grab the associated collection's primaryKey","  var attributes = this.collection.waterline.schema[collection.identity].attributes;","  var associationKey = this.findPrimaryKey(attributes, attributes);","","  if (!associationKey) {","    return cb(new Error('No Primary Key defined on the child record you ' +","      'are trying to associate the record with! Try setting an attribute as a primary key or ' +","      'include an ID property.'));","  }","","  // Build up criteria and updated values used to update the record","  var criteria = {};","  var _values = {};","","  criteria[associationKey] = pk;","  _values[attribute.onKey] = this.proto[this.primaryKey];","","  collection.update(criteria, _values, function(err) {","","    if (err) {","      self.failedTransactions.push({","        type: 'update',","        collection: collection.identity,","        criteria: criteria,","        values: _values,","        err: err","      });","    }","","    cb();","  });","};","","/**"," * Create A Many To Many Join Table Record"," *"," * @param {Object} collection"," * @param {Object} attribute"," * @param {Object} values"," * @param {Function} callback"," * @api private"," */","","Add.prototype.createManyToMany = function(collection, attribute, pk, key, cb) {","  var self = this;","","  // Grab the associated collection's primaryKey","  var collectionAttributes = this.collection.waterline.schema[attribute.collection.toLowerCase()];","  var associationKeyAttr = collectionAttributes.attributes[attribute.on] || collectionAttributes.attributes[attribute.via];","  var associationKey = associationKeyAttr.via;","","  // If this is a throughTable, look into the meta data cache for what key to use","  if (collectionAttributes.throughTable) {","    var cacheKey = collectionAttributes.throughTable[self.collection.adapter.identity + '.' + key] || collectionAttributes.throughTable[attribute.via + '.' + key];","    if (!cacheKey) {","      return cb(new Error('Unable to find the proper cache key in the through table definition'));","    }","","    associationKey = cacheKey;","  }","","  if (!associationKey) {","    return cb(new Error('No Primary Key set on the child record you ' +","      'are trying to associate the record with! Try setting an attribute as a primary key or ' +","      'include an ID property.'));","  }","","  // Build up criteria and updated values used to create the record","  var criteria = {};","  var _values = {};","","  criteria[associationKey] = pk;","  criteria[attribute.onKey] = this.proto[this.primaryKey];","  _values = _.clone(criteria);","","  async.auto({","","    validateAssociation: function(next) {","      var associatedCollectionName = collectionAttributes.attributes[associationKey].references;","      var associatedCollection = self.collection.waterline.collections[associatedCollectionName];","      var primaryKey = self.findPrimaryKey(associatedCollection.attributes, {});","      var _criteria = {};","      _criteria[primaryKey] = pk;","","      associatedCollection.findOne(_criteria, function(err, record) {","        if (err) return next(err);","        if (!record) {","          return next(new Error('Associated Record For ' + associatedCollectionName +","            ' with ' + primaryKey + ' = ' + pk + ' No Longer Exists'));","        }","","        next();","      });","    },","","    validateRecord: function(next) {","","      // First look up the record to ensure it doesn't exist","      collection.findOne(criteria, function(err, val) {","        if (err) {","          return next(err);","        }","","        next(null, val);","      });","    },","","    createRecord: ['validateAssociation', 'validateRecord', function(next, results) {","      // If the record already exists, don't try and create it again to prevent","      // duplicates.","      var validateRecord = results.validateRecord;","      if (validateRecord) {","        return async.setImmediate(function() {","          next();","        });","      }","","      collection.create(_values, next);","    }]","","  }, function(err) {","    if (err) {","      self.failedTransactions.push({","        type: 'insert',","        collection: collection.identity,","        criteria: criteria,","        values: _values,","        err: err","      });","    }","","    return cb();","","  });","};","","/**"," * Find Association Key"," *"," * @param {Object} collection"," * @return {String}"," * @api private"," */","","Add.prototype.findAssociationKey = function(collection) {","  var associationKey = null;","","  for (var attribute in collection.attributes) {","    var attr = collection.attributes[attribute];","    var identity = this.collection.identity;","","    if (!hasOwnProperty(attr, 'references')) continue;","    var attrCollection = attr.references;","","    if (attrCollection !== identity) {","      associationKey = attr.columnName;","    }","  }","","  return associationKey;","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"24":1,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"34":0,"36":0,"37":0,"41":0,"42":0,"53":0,"64":1,"65":0,"67":0,"68":0,"69":0,"70":0,"75":0,"77":0,"88":1,"89":0,"91":0,"92":0,"96":0,"97":0,"100":0,"113":1,"114":0,"118":0,"119":0,"120":0,"121":0,"122":0,"125":0,"129":0,"134":0,"135":0,"139":0,"140":0,"141":0,"144":0,"150":0,"165":1,"166":0,"169":0,"170":0,"173":0,"174":0,"177":0,"178":0,"182":0,"183":0,"187":0,"196":0,"199":0,"202":0,"204":0,"205":0,"214":0,"218":0,"232":1,"233":0,"236":0,"237":0,"240":0,"241":0,"242":0,"246":0,"247":0,"249":0,"250":0,"256":0,"257":0,"259":0,"260":0,"262":0,"264":0,"265":0,"274":0,"288":1,"289":0,"292":0,"293":0,"294":0,"297":0,"298":0,"299":0,"300":0,"303":0,"306":0,"307":0,"313":0,"314":0,"316":0,"317":0,"318":0,"320":0,"323":0,"324":0,"325":0,"326":0,"327":0,"329":0,"330":0,"331":0,"332":0,"336":0,"343":0,"344":0,"345":0,"348":0,"355":0,"356":0,"357":0,"358":0,"362":0,"366":0,"367":0,"376":0,"389":1,"390":0,"392":0,"393":0,"394":0,"396":0,"397":0,"399":0,"400":0,"404":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/associationMethods/remove.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/associationMethods/remove.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":30},"end":{"line":18,"column":71}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":57,"column":34},"end":{"line":57,"column":63}}},"3":{"name":"(anonymous_3)","line":81,"loc":{"start":{"line":81,"column":48},"end":{"line":81,"column":77}}},"4":{"name":"(anonymous_4)","line":84,"loc":{"start":{"line":84,"column":36},"end":{"line":84,"column":67}}},"5":{"name":"(anonymous_5)","line":88,"loc":{"start":{"line":88,"column":2},"end":{"line":88,"column":16}}},"6":{"name":"(anonymous_6)","line":106,"loc":{"start":{"line":106,"column":38},"end":{"line":106,"column":72}}},"7":{"name":"(anonymous_7)","line":117,"loc":{"start":{"line":117,"column":31},"end":{"line":117,"column":61}}},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":32},"end":{"line":133,"column":95}}},"9":{"name":"(anonymous_9)","line":178,"loc":{"start":{"line":178,"column":39},"end":{"line":178,"column":53}}},"10":{"name":"(anonymous_10)","line":205,"loc":{"start":{"line":205,"column":38},"end":{"line":205,"column":52}}},"11":{"name":"(anonymous_11)","line":227,"loc":{"start":{"line":227,"column":36},"end":{"line":227,"column":81}}},"12":{"name":"(anonymous_12)","line":257,"loc":{"start":{"line":257,"column":31},"end":{"line":257,"column":45}}},"13":{"name":"(anonymous_13)","line":280,"loc":{"start":{"line":280,"column":38},"end":{"line":280,"column":59}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":26}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":49}},"5":{"start":{"line":18,"column":0},"end":{"line":47,"column":2}},"6":{"start":{"line":20,"column":2},"end":{"line":20,"column":31}},"7":{"start":{"line":21,"column":2},"end":{"line":21,"column":21}},"8":{"start":{"line":22,"column":2},"end":{"line":22,"column":31}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":25}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":32}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":79}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":60}},"13":{"start":{"line":30,"column":2},"end":{"line":33,"column":3}},"14":{"start":{"line":31,"column":4},"end":{"line":32,"column":79}},"15":{"start":{"line":35,"column":2},"end":{"line":38,"column":3}},"16":{"start":{"line":36,"column":4},"end":{"line":37,"column":90}},"17":{"start":{"line":46,"column":2},"end":{"line":46,"column":56}},"18":{"start":{"line":57,"column":0},"end":{"line":71,"column":2}},"19":{"start":{"line":58,"column":2},"end":{"line":58,"column":24}},"20":{"start":{"line":60,"column":2},"end":{"line":65,"column":3}},"21":{"start":{"line":61,"column":4},"end":{"line":64,"column":5}},"22":{"start":{"line":62,"column":6},"end":{"line":62,"column":29}},"23":{"start":{"line":63,"column":6},"end":{"line":63,"column":12}},"24":{"start":{"line":68,"column":2},"end":{"line":68,"column":69}},"25":{"start":{"line":68,"column":51},"end":{"line":68,"column":69}},"26":{"start":{"line":70,"column":2},"end":{"line":70,"column":20}},"27":{"start":{"line":81,"column":0},"end":{"line":95,"column":2}},"28":{"start":{"line":82,"column":2},"end":{"line":82,"column":18}},"29":{"start":{"line":84,"column":2},"end":{"line":94,"column":5}},"30":{"start":{"line":85,"column":4},"end":{"line":85,"column":82}},"31":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"32":{"start":{"line":90,"column":6},"end":{"line":90,"column":47}},"33":{"start":{"line":93,"column":4},"end":{"line":93,"column":9}},"34":{"start":{"line":106,"column":0},"end":{"line":121,"column":2}},"35":{"start":{"line":107,"column":2},"end":{"line":107,"column":18}},"36":{"start":{"line":111,"column":2},"end":{"line":111,"column":51}},"37":{"start":{"line":112,"column":2},"end":{"line":112,"column":58}},"38":{"start":{"line":113,"column":2},"end":{"line":113,"column":83}},"39":{"start":{"line":114,"column":2},"end":{"line":114,"column":90}},"40":{"start":{"line":117,"column":2},"end":{"line":119,"column":9}},"41":{"start":{"line":118,"column":4},"end":{"line":118,"column":85}},"42":{"start":{"line":133,"column":0},"end":{"line":192,"column":2}},"43":{"start":{"line":134,"column":2},"end":{"line":134,"column":18}},"44":{"start":{"line":137,"column":2},"end":{"line":137,"column":67}},"45":{"start":{"line":139,"column":2},"end":{"line":148,"column":3}},"46":{"start":{"line":140,"column":4},"end":{"line":145,"column":7}},"47":{"start":{"line":147,"column":4},"end":{"line":147,"column":16}},"48":{"start":{"line":151,"column":2},"end":{"line":151,"column":84}},"49":{"start":{"line":152,"column":2},"end":{"line":152,"column":66}},"50":{"start":{"line":155,"column":2},"end":{"line":158,"column":3}},"51":{"start":{"line":156,"column":4},"end":{"line":156,"column":99}},"52":{"start":{"line":157,"column":4},"end":{"line":157,"column":84}},"53":{"start":{"line":161,"column":2},"end":{"line":161,"column":84}},"54":{"start":{"line":162,"column":2},"end":{"line":162,"column":67}},"55":{"start":{"line":164,"column":2},"end":{"line":168,"column":3}},"56":{"start":{"line":165,"column":4},"end":{"line":167,"column":34}},"57":{"start":{"line":171,"column":2},"end":{"line":171,"column":20}},"58":{"start":{"line":172,"column":2},"end":{"line":172,"column":19}},"59":{"start":{"line":174,"column":2},"end":{"line":174,"column":43}},"60":{"start":{"line":175,"column":2},"end":{"line":175,"column":36}},"61":{"start":{"line":176,"column":2},"end":{"line":176,"column":31}},"62":{"start":{"line":178,"column":2},"end":{"line":191,"column":5}},"63":{"start":{"line":180,"column":4},"end":{"line":188,"column":5}},"64":{"start":{"line":181,"column":6},"end":{"line":187,"column":9}},"65":{"start":{"line":190,"column":4},"end":{"line":190,"column":9}},"66":{"start":{"line":205,"column":0},"end":{"line":215,"column":2}},"67":{"start":{"line":206,"column":2},"end":{"line":206,"column":31}},"68":{"start":{"line":209,"column":2},"end":{"line":209,"column":74}},"69":{"start":{"line":209,"column":50},"end":{"line":209,"column":74}},"70":{"start":{"line":212,"column":2},"end":{"line":212,"column":75}},"71":{"start":{"line":212,"column":51},"end":{"line":212,"column":75}},"72":{"start":{"line":214,"column":2},"end":{"line":214,"column":26}},"73":{"start":{"line":227,"column":0},"end":{"line":270,"column":2}},"74":{"start":{"line":228,"column":2},"end":{"line":228,"column":18}},"75":{"start":{"line":231,"column":2},"end":{"line":231,"column":98}},"76":{"start":{"line":232,"column":2},"end":{"line":232,"column":123}},"77":{"start":{"line":233,"column":2},"end":{"line":233,"column":46}},"78":{"start":{"line":236,"column":2},"end":{"line":243,"column":3}},"79":{"start":{"line":237,"column":4},"end":{"line":237,"column":163}},"80":{"start":{"line":238,"column":4},"end":{"line":240,"column":5}},"81":{"start":{"line":239,"column":6},"end":{"line":239,"column":98}},"82":{"start":{"line":242,"column":4},"end":{"line":242,"column":30}},"83":{"start":{"line":245,"column":2},"end":{"line":249,"column":3}},"84":{"start":{"line":246,"column":4},"end":{"line":248,"column":34}},"85":{"start":{"line":252,"column":2},"end":{"line":252,"column":20}},"86":{"start":{"line":253,"column":2},"end":{"line":253,"column":32}},"87":{"start":{"line":254,"column":2},"end":{"line":254,"column":55}},"88":{"start":{"line":257,"column":2},"end":{"line":269,"column":5}},"89":{"start":{"line":259,"column":4},"end":{"line":266,"column":5}},"90":{"start":{"line":260,"column":6},"end":{"line":265,"column":9}},"91":{"start":{"line":268,"column":4},"end":{"line":268,"column":9}},"92":{"start":{"line":280,"column":0},"end":{"line":296,"column":2}},"93":{"start":{"line":281,"column":2},"end":{"line":281,"column":28}},"94":{"start":{"line":283,"column":2},"end":{"line":293,"column":3}},"95":{"start":{"line":284,"column":4},"end":{"line":284,"column":48}},"96":{"start":{"line":285,"column":4},"end":{"line":285,"column":44}},"97":{"start":{"line":287,"column":4},"end":{"line":287,"column":54}},"98":{"start":{"line":287,"column":45},"end":{"line":287,"column":54}},"99":{"start":{"line":288,"column":4},"end":{"line":288,"column":55}},"100":{"start":{"line":290,"column":4},"end":{"line":292,"column":5}},"101":{"start":{"line":291,"column":6},"end":{"line":291,"column":39}},"102":{"start":{"line":295,"column":2},"end":{"line":295,"column":24}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"3":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"4":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":59}},{"start":{"line":61,"column":63},"end":{"line":61,"column":95}}]},"5":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"6":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":17}},{"start":{"line":68,"column":21},"end":{"line":68,"column":49}}]},"7":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"8":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":8},"end":{"line":89,"column":11}},{"start":{"line":89,"column":15},"end":{"line":89,"column":49}}]},"9":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":2},"end":{"line":139,"column":2}},{"start":{"line":139,"column":2},"end":{"line":139,"column":2}}]},"10":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":22},"end":{"line":152,"column":42}},{"start":{"line":152,"column":46},"end":{"line":152,"column":65}}]},"11":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"12":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":2},"end":{"line":164,"column":2}},{"start":{"line":164,"column":2},"end":{"line":164,"column":2}}]},"13":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":4},"end":{"line":180,"column":4}},{"start":{"line":180,"column":4},"end":{"line":180,"column":4}}]},"14":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":209,"column":2}},{"start":{"line":209,"column":2},"end":{"line":209,"column":2}}]},"15":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":6},"end":{"line":209,"column":21}},{"start":{"line":209,"column":25},"end":{"line":209,"column":48}}]},"16":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"17":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":6},"end":{"line":212,"column":9}},{"start":{"line":212,"column":13},"end":{"line":212,"column":49}}]},"18":{"line":232,"type":"binary-expr","locations":[{"start":{"line":232,"column":27},"end":{"line":232,"column":72}},{"start":{"line":232,"column":76},"end":{"line":232,"column":122}}]},"19":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":2},"end":{"line":236,"column":2}},{"start":{"line":236,"column":2},"end":{"line":236,"column":2}}]},"20":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":19},"end":{"line":237,"column":98}},{"start":{"line":237,"column":102},"end":{"line":237,"column":162}}]},"21":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":238,"column":4}},{"start":{"line":238,"column":4},"end":{"line":238,"column":4}}]},"22":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":2},"end":{"line":245,"column":2}},{"start":{"line":245,"column":2},"end":{"line":245,"column":2}}]},"23":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":4},"end":{"line":259,"column":4}},{"start":{"line":259,"column":4},"end":{"line":259,"column":4}}]},"24":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]},"25":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":4},"end":{"line":290,"column":4}},{"start":{"line":290,"column":4},"end":{"line":290,"column":4}}]}},"code":["var _ = require('lodash');","var async = require('async');","var utils = require('../../../utils/helpers');","var hasOwnProperty = utils.object.hasOwnProperty;","","/**"," * Remove associations from a model."," *"," * Accepts a primary key value of an associated record that already exists in the database."," *"," *"," * @param {Object} collection"," * @param {Object} proto"," * @param {Object} records"," * @param {Function} callback"," */","","var Remove = module.exports = function(collection, proto, records, cb) {","","  this.collection = collection;","  this.proto = proto;","  this.failedTransactions = [];","  this.primaryKey = null;","","  var values = proto.toObject();","  var attributes = collection.waterline.schema[collection.identity].attributes;","","  this.primaryKey = this.findPrimaryKey(attributes, values);","","  if (!this.primaryKey) {","    return cb(new Error('No Primary Key set to associate the record with! ' +","      'Try setting an attribute as a primary key or include an ID property.'));","  }","","  if (!proto.toObject()[this.primaryKey]) {","    return cb(new Error('No Primary Key set to associate ' +","      'the record with! Primary Key must have a value, it can\\'t be an optional value.'));","  }","","  // Loop through each of the associations on this model and remove any associations","  // that have been specified. Do this in series and limit the actual saves to 10","  // at a time so that connection pools are not exhausted.","  //","  // In the future when transactions are available this will all be done on a single","  // connection and can be re-written.","  this.removeCollectionAssociations(records, proto, cb);","};","","/**"," * Find Primary Key"," *"," * @param {Object} attributes"," * @param {Object} values"," * @api private"," */","","Remove.prototype.findPrimaryKey = function(attributes, values) {","  var primaryKey = null;","","  for (var attribute in attributes) {","    if (hasOwnProperty(attributes[attribute], 'primaryKey') && attributes[attribute].primaryKey) {","      primaryKey = attribute;","      break;","    }","  }","","  // If no primary key check for an ID property","  if (!primaryKey && hasOwnProperty(values, 'id')) primaryKey = 'id';","","  return primaryKey;","};","","/**"," * Remove Collection Associations"," *"," * @param {Object} records"," * @param {Function} callback"," * @api private"," */","","Remove.prototype.removeCollectionAssociations = function(records, proto, cb) {","  var self = this;","","  async.eachSeries(_.keys(records), function(associationKey, next) {","    self.removeAssociations(associationKey, records[associationKey], proto, next);","  },","","  function(err) {","    if (err || self.failedTransactions.length > 0) {","      return cb(null, self.failedTransactions);","    }","","    cb();","  });","};","","/**"," * Remove Associations"," *"," * @param {String} key"," * @param {Array} records"," * @param {Function} callback"," * @api private"," */","","Remove.prototype.removeAssociations = function(key, records, proto, cb) {","  var self = this;","","  // Grab the collection the attribute references","  // this allows us to make a query on it","  var attribute = this.collection._attributes[key];","  var collectionName = attribute.collection.toLowerCase();","  var associatedCollection = this.collection.waterline.collections[collectionName];","  var schema = this.collection.waterline.schema[this.collection.identity].attributes[key];","","  // Limit Removes to 10 at a time to prevent the connection pool from being exhausted","  async.eachLimit(records, 10, function(associationId, next) {","    self.removeRecord(associatedCollection, schema, associationId, key, proto, next);","  }, cb);","","};","","/**"," * Remove A Single Record"," *"," * @param {Object} collection"," * @param {Object} attribute"," * @param {Object} values"," * @param {Function} callback"," * @api private"," */","","Remove.prototype.removeRecord = function(collection, attribute, associationId, key, proto, cb) {","  var self = this;","","  // Validate `values` is a correct primary key format","  var validAssociationKey = this.validatePrimaryKey(associationId);","","  if (!validAssociationKey) {","    this.failedTransactions.push({","      type: 'remove',","      collection: collection.identity,","      values: associationId,","      err: new Error('Remove association only accepts a single primary key value')","    });","","    return cb();","  }","","  // Check if this is a many-to-many by looking at the junctionTable flag","  var schema = this.collection.waterline.schema[attribute.collection.toLowerCase()];","  var junctionTable = schema.junctionTable || schema.throughTable;","","  // If so build out the criteria and remove a record from the junction table","  if (junctionTable) {","    var joinCollection = this.collection.waterline.collections[attribute.collection.toLowerCase()];","    return this.removeManyToMany(joinCollection, attribute, associationId, key, cb);","  }","","  // Grab the associated collection's primaryKey","  var attributes = this.collection.waterline.schema[collection.identity].attributes;","  var associationKey = this.findPrimaryKey(attributes, attributes);","","  if (!associationKey) {","    return cb(new Error('No Primary Key defined on the child record you ' +","      'are trying to un-associate the record with! Try setting an attribute as a primary key or ' +","      'include an ID property.'));","  }","","  // Build up criteria and updated values used to update the record","  var criteria = {};","  var _values = {};","","  criteria[associationKey] = associationId;","  criteria[attribute.on] = proto.id;","  _values[attribute.on] = null;","","  collection.update(criteria, _values, function(err) {","","    if (err) {","      self.failedTransactions.push({","        type: 'update',","        collection: collection.identity,","        criteria: criteria,","        values: _values,","        err: err","      });","    }","","    cb();","  });","};","","/**"," * Validate A Primary Key"," *"," * Only support primary keys being passed in to the remove function. Check if it's a mongo"," * id or anything that has a toString method."," *"," * @param {Integer|String} key"," * @return {Boolean}"," * @api private"," */","","Remove.prototype.validatePrimaryKey = function(key) {","  var validAssociation = false;","","  // Attempt to see if the value is an ID and resembles a MongoID","  if (_.isString(key) && utils.matchMongoId(key)) validAssociation = true;","","  // Check it can be turned into a string","  if (key && key.toString() !== '[object Object]') validAssociation = true;","","  return validAssociation;","};","","/**"," * Remove A Many To Many Join Table Record"," *"," * @param {Object} collection"," * @param {Object} attribute"," * @param {Object} values"," * @param {Function} callback"," * @api private"," */","","Remove.prototype.removeManyToMany = function(collection, attribute, pk, key, cb) {","  var self = this;","","  // Grab the associated collection's primaryKey","  var collectionAttributes = this.collection.waterline.schema[attribute.collection.toLowerCase()];","  var associationKeyAttr = collectionAttributes.attributes[attribute.on] || collectionAttributes.attributes[attribute.via];","  var associationKey = associationKeyAttr.via;","","  // If this is a throughTable, look into the meta data cache for what key to use","  if (collectionAttributes.throughTable) {","    var cacheKey = collectionAttributes.throughTable[self.collection.adapter.identity + '.' + key] || collectionAttributes.throughTable[attribute.via + '.' + key];","    if (!cacheKey) {","      return cb(new Error('Unable to find the proper cache key in the through table definition'));","    }","","    associationKey = cacheKey;","  }","","  if (!associationKey) {","    return cb(new Error('No Primary Key set on the child record you ' +","      'are trying to associate the record with! Try setting an attribute as a primary key or ' +","      'include an ID property.'));","  }","","  // Build up criteria and updated values used to create the record","  var criteria = {};","  criteria[associationKey] = pk;","  criteria[attribute.on] = this.proto[this.primaryKey];","","  // Run a destroy on the join table record","  collection.destroy(criteria, function(err) {","","    if (err) {","      self.failedTransactions.push({","        type: 'destroy',","        collection: collection.identity,","        criteria: criteria,","        err: err","      });","    }","","    cb();","  });","};","","/**"," * Find Association Key"," *"," * @param {Object} collection"," * @return {String}"," * @api private"," */","","Remove.prototype.findAssociationKey = function(collection) {","  var associationKey = null;","","  for (var attribute in collection.attributes) {","    var attr = collection.attributes[attribute];","    var identity = this.collection.identity;","","    if (!hasOwnProperty(attr, 'references')) continue;","    var attrCollection = attr.references.toLowerCase();","","    if (attrCollection !== identity) {","      associationKey = attr.columnName;","    }","  }","","  return associationKey;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"18":1,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"28":0,"30":0,"31":0,"35":0,"36":0,"46":0,"57":1,"58":0,"60":0,"61":0,"62":0,"63":0,"68":0,"70":0,"81":1,"82":0,"84":0,"85":0,"89":0,"90":0,"93":0,"106":1,"107":0,"111":0,"112":0,"113":0,"114":0,"117":0,"118":0,"133":1,"134":0,"137":0,"139":0,"140":0,"147":0,"151":0,"152":0,"155":0,"156":0,"157":0,"161":0,"162":0,"164":0,"165":0,"171":0,"172":0,"174":0,"175":0,"176":0,"178":0,"180":0,"181":0,"190":0,"205":1,"206":0,"209":0,"212":0,"214":0,"227":1,"228":0,"231":0,"232":0,"233":0,"236":0,"237":0,"238":0,"239":0,"242":0,"245":0,"246":0,"252":0,"253":0,"254":0,"257":0,"259":0,"260":0,"268":0,"280":1,"281":0,"283":0,"284":0,"285":0,"287":0,"288":0,"290":0,"291":0,"295":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/error/WLError.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/error/WLError.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1,"32":0,"33":1,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"WLError","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":29}}},"2":{"name":"(anonymous_2)","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":11}}},"3":{"name":"(anonymous_3)","line":101,"loc":{"start":{"line":101,"column":26},"end":{"line":101,"column":37}}},"4":{"name":"(anonymous_4)","line":111,"loc":{"start":{"line":111,"column":28},"end":{"line":111,"column":39}}},"5":{"name":"(anonymous_5)","line":118,"loc":{"start":{"line":118,"column":29},"end":{"line":118,"column":40}}},"6":{"name":"(anonymous_6)","line":125,"loc":{"start":{"line":125,"column":9},"end":{"line":125,"column":20}}},"7":{"name":"(anonymous_7)","line":128,"loc":{"start":{"line":128,"column":9},"end":{"line":128,"column":25}}},"8":{"name":"(anonymous_8)","line":134,"loc":{"start":{"line":134,"column":9},"end":{"line":134,"column":20}}},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":9},"end":{"line":137,"column":25}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":26}},"3":{"start":{"line":13,"column":0},"end":{"line":50,"column":1}},"4":{"start":{"line":14,"column":2},"end":{"line":14,"column":28}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":35}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":29}},"7":{"start":{"line":22,"column":2},"end":{"line":26,"column":3}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":33}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":26}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":72}},"11":{"start":{"line":34,"column":2},"end":{"line":44,"column":3}},"12":{"start":{"line":35,"column":4},"end":{"line":35,"column":38}},"13":{"start":{"line":38,"column":9},"end":{"line":44,"column":3}},"14":{"start":{"line":39,"column":4},"end":{"line":39,"column":49}},"15":{"start":{"line":42,"column":9},"end":{"line":44,"column":3}},"16":{"start":{"line":43,"column":4},"end":{"line":43,"column":52}},"17":{"start":{"line":47,"column":2},"end":{"line":49,"column":3}},"18":{"start":{"line":48,"column":4},"end":{"line":48,"column":54}},"19":{"start":{"line":52,"column":0},"end":{"line":52,"column":30}},"20":{"start":{"line":55,"column":0},"end":{"line":55,"column":31}},"21":{"start":{"line":56,"column":0},"end":{"line":56,"column":37}},"22":{"start":{"line":57,"column":0},"end":{"line":57,"column":61}},"23":{"start":{"line":58,"column":0},"end":{"line":58,"column":31}},"24":{"start":{"line":74,"column":0},"end":{"line":88,"column":2}},"25":{"start":{"line":77,"column":2},"end":{"line":82,"column":4}},"26":{"start":{"line":85,"column":2},"end":{"line":85,"column":31}},"27":{"start":{"line":85,"column":16},"end":{"line":85,"column":31}},"28":{"start":{"line":87,"column":2},"end":{"line":87,"column":13}},"29":{"start":{"line":101,"column":0},"end":{"line":103,"column":2}},"30":{"start":{"line":102,"column":2},"end":{"line":102,"column":24}},"31":{"start":{"line":111,"column":0},"end":{"line":113,"column":2}},"32":{"start":{"line":112,"column":2},"end":{"line":112,"column":104}},"33":{"start":{"line":118,"column":0},"end":{"line":120,"column":2}},"34":{"start":{"line":119,"column":2},"end":{"line":119,"column":78}},"35":{"start":{"line":122,"column":0},"end":{"line":141,"column":3}},"36":{"start":{"line":126,"column":6},"end":{"line":126,"column":88}},"37":{"start":{"line":129,"column":6},"end":{"line":129,"column":28}},"38":{"start":{"line":135,"column":6},"end":{"line":135,"column":48}},"39":{"start":{"line":138,"column":6},"end":{"line":138,"column":30}},"40":{"start":{"line":143,"column":0},"end":{"line":143,"column":25}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":12}},{"start":{"line":17,"column":17},"end":{"line":17,"column":33}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":36}},{"start":{"line":22,"column":40},"end":{"line":22,"column":75}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"5":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":9},"end":{"line":38,"column":9}},{"start":{"line":38,"column":9},"end":{"line":38,"column":9}}]},"6":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":13},"end":{"line":38,"column":31}},{"start":{"line":38,"column":35},"end":{"line":38,"column":67}}]},"7":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":9},"end":{"line":42,"column":9}},{"start":{"line":42,"column":9},"end":{"line":42,"column":9}}]},"8":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"9":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"10":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":13},"end":{"line":135,"column":28}},{"start":{"line":135,"column":32},"end":{"line":135,"column":47}}]}},"code":["var util = require('util');","var _ = require('lodash');","","/**"," * WLError"," *"," * All errors passed to a query callback in Waterline extend"," * from this base error class."," *"," * @param  {Object} properties"," * @constructor {WLError}"," */","function WLError(properties) {","  WLError.super_.call(this);","","  // Fold defined properties into the new WLError instance.","  properties || (properties = { });","  _.extend(this, properties);","","  // Generate stack trace","  // (or use `originalError` if it is a true error instance)","  if (_.isObject(this.originalError) && this.originalError instanceof Error) {","    this._e = this.originalError;","  } else {","    this._e = new Error();","  }","","  // Doctor up a modified version of the stack trace called `rawStack`:","  this.rawStack = (this._e.stack.replace(/^Error(\\r|\\n)*(\\r|\\n)*/, ''));","","  // Customize `details`:","  // Try to dress up the wrapped \"original\" error as much as possible.","  // @type {String} a detailed explanation of this error","  if (_.isString(this.originalError)) {","    this.details = this.originalError;","","  // Run toString() on Errors:","  } else if (this.originalError && util.isError(this.originalError)) {","    this.details = this.originalError.toString();","","  // But for other objects, use util.inspect()","  } else if (this.originalError) {","    this.details = util.inspect(this.originalError);","  }","","  // If `details` is set, prepend it with \"Details:\"","  if (this.details) {","    this.details = 'Details:  ' + this.details + '\\n';","  }","}","","util.inherits(WLError, Error);","","// Default properties","WLError.prototype.status = 500;","WLError.prototype.code = 'E_UNKNOWN';","WLError.prototype.reason = 'Encountered an unexpected error';","WLError.prototype.details = '';","","/**"," * Override JSON serialization."," * (i.e. when this error is passed to `res.json()` or `JSON.stringify`)"," *"," * For example:"," * ```json"," * {"," *   status: 500,"," *   code: 'E_UNKNOWN'"," * }"," * ```"," *"," * @return {Object}"," */","WLError.prototype.toJSON =","WLError.prototype.toPOJO =","function() {","  var obj = {","    error: this.code,","    status: this.status,","    summary: this.reason,","    raw: this.originalError","  };","","  // Only include `raw` if its truthy.","  if (!obj.raw) delete obj.raw;","","  return obj;","};","","/**"," * Override output for `sails.log[.*]`"," *"," * @return {String}"," *"," * For example:"," * ```sh"," * Waterline: ORM encountered an unexpected error:"," * { ValidationError: { name: [ [Object], [Object] ] } }"," * ```"," */","WLError.prototype.toLog = function() {","  return this.inspect();","};","","/**"," * Override output for `util.inspect`"," * (also when this error is logged using `console.log`)"," *"," * @return {String}"," */","WLError.prototype.inspect = function() {","  return util.format('Error (%s) :: %s\\n%s\\n\\n%s', this.code, this.reason, this.rawStack, this.details);","};","","/**"," * @return {String}"," */","WLError.prototype.toString = function() {","  return util.format('[Error (%s) %s]', this.code, this.reason, this.details);","};","","Object.defineProperties(WLError.prototype, {","  stack: {","    enumerable: true,","    get: function() {","      return util.format('Error (%s) :: %s\\n%s', this.code, this.reason, this.rawStack);","    },","    set: function(value) {","      this.rawStack = value;","    }","  },","  message: {","    enumerable: true,","    get: function() {","      return this.rawMessage || this.toString();","    },","    set: function(value) {","      this.rawMessage = value;","    }","  }","});","","module.exports = WLError;",""],"l":{"1":1,"2":1,"13":1,"14":0,"17":0,"18":0,"22":0,"23":0,"25":0,"29":0,"34":0,"35":0,"38":0,"39":0,"42":0,"43":0,"47":0,"48":0,"52":1,"55":1,"56":1,"57":1,"58":1,"74":1,"77":0,"85":0,"87":0,"101":1,"102":0,"111":1,"112":0,"118":1,"119":0,"122":1,"126":0,"129":0,"135":0,"138":0,"143":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/internalMethods/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/internalMethods/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":9,"column":2}}},"branchMap":{},"code":["","/**"," * Export Internal Methods"," */","","module.exports = {","  normalizeAssociations: require('./normalizeAssociations'),","  defineAssociations: require('./defineAssociations')","};",""],"l":{"6":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/internalMethods/normalizeAssociations.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/internalMethods/normalizeAssociations.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":33},"end":{"line":13,"column":58}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":34},"end":{"line":30,"column":55}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":29},"end":{"line":50,"column":50}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":21,"column":2}},"2":{"start":{"line":15,"column":2},"end":{"line":15,"column":21}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":84}},"4":{"start":{"line":19,"column":2},"end":{"line":19,"column":31}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":26}},"6":{"start":{"line":30,"column":0},"end":{"line":41,"column":2}},"7":{"start":{"line":31,"column":2},"end":{"line":40,"column":3}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":52}},"9":{"start":{"line":34,"column":43},"end":{"line":34,"column":52}},"10":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"11":{"start":{"line":38,"column":6},"end":{"line":38,"column":54}},"12":{"start":{"line":50,"column":0},"end":{"line":61,"column":2}},"13":{"start":{"line":51,"column":2},"end":{"line":60,"column":3}},"14":{"start":{"line":54,"column":4},"end":{"line":54,"column":47}},"15":{"start":{"line":54,"column":38},"end":{"line":54,"column":47}},"16":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"17":{"start":{"line":58,"column":6},"end":{"line":58,"column":55}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":19},"end":{"line":17,"column":77}},{"start":{"line":17,"column":81},"end":{"line":17,"column":83}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"4":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":29}},{"start":{"line":37,"column":33},"end":{"line":37,"column":70}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"6":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"7":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":29}},{"start":{"line":57,"column":33},"end":{"line":57,"column":69}}]}},"code":["","/**"," * Check and normalize belongs_to and has_many association keys"," *"," * Ensures that a belongs_to association is an object and that a has_many association"," * is an array."," *"," * @param {Object} context,"," * @param {Object} proto"," * @api private"," */","","var Normalize = module.exports = function(context, proto) {","","  this.proto = proto;","","  var attributes = context.waterline.collections[context.identity].attributes || {};","","  this.collections(attributes);","  this.models(attributes);","};","","/**"," * Normalize Collection Attribute to Array"," *"," * @param {Object} attributes"," * @api private"," */","","Normalize.prototype.collections = function(attributes) {","  for (var attribute in attributes) {","","    // If attribute is not a collection, it doesn't need normalizing","    if (!attributes[attribute].collection) continue;","","    // Sets the attribute as an array if it's not already","    if (this.proto[attribute] && !Array.isArray(this.proto[attribute])) {","      this.proto[attribute] = [this.proto[attribute]];","    }","  }","};","","/**"," * Normalize Model Attribute to Object"," *"," * @param {Object} attributes"," * @api private"," */","","Normalize.prototype.models = function(attributes) {","  for (var attribute in attributes) {","","    // If attribute is not a model, it doesn't need normalizing","    if (!attributes[attribute].model) continue;","","    // Sets the attribute to the first item in the array if it's an array","    if (this.proto[attribute] && Array.isArray(this.proto[attribute])) {","      this.proto[attribute] = this.proto[attribute][0];","    }","  }","};",""],"l":{"13":1,"15":0,"17":0,"19":0,"20":0,"30":1,"31":0,"34":0,"37":0,"38":0,"50":1,"51":0,"54":0,"57":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/internalMethods/defineAssociations.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/internalMethods/defineAssociations.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":30},"end":{"line":20,"column":55}}},"2":{"name":"(anonymous_2)","line":48,"loc":{"start":{"line":48,"column":22},"end":{"line":48,"column":43}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":17},"end":{"line":53,"column":33}}},"4":{"name":"(anonymous_4)","line":66,"loc":{"start":{"line":66,"column":34},"end":{"line":66,"column":55}}},"5":{"name":"(anonymous_5)","line":86,"loc":{"start":{"line":86,"column":29},"end":{"line":86,"column":50}}},"6":{"name":"(anonymous_6)","line":105,"loc":{"start":{"line":105,"column":40},"end":{"line":105,"column":61}}},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":9},"end":{"line":113,"column":23}}},"8":{"name":"(anonymous_8)","line":114,"loc":{"start":{"line":114,"column":9},"end":{"line":114,"column":20}}},"9":{"name":"(anonymous_9)","line":127,"loc":{"start":{"line":127,"column":42},"end":{"line":127,"column":58}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"5":{"start":{"line":20,"column":0},"end":{"line":56,"column":2}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":18}},"7":{"start":{"line":23,"column":2},"end":{"line":23,"column":21}},"8":{"start":{"line":26,"column":2},"end":{"line":30,"column":5}},"9":{"start":{"line":35,"column":2},"end":{"line":39,"column":5}},"10":{"start":{"line":41,"column":2},"end":{"line":41,"column":45}},"11":{"start":{"line":42,"column":2},"end":{"line":42,"column":52}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":42}},"13":{"start":{"line":45,"column":2},"end":{"line":45,"column":62}},"14":{"start":{"line":45,"column":55},"end":{"line":45,"column":62}},"15":{"start":{"line":48,"column":2},"end":{"line":50,"column":5}},"16":{"start":{"line":49,"column":4},"end":{"line":49,"column":42}},"17":{"start":{"line":53,"column":2},"end":{"line":55,"column":5}},"18":{"start":{"line":54,"column":4},"end":{"line":54,"column":39}},"19":{"start":{"line":66,"column":0},"end":{"line":76,"column":2}},"20":{"start":{"line":67,"column":2},"end":{"line":67,"column":23}},"21":{"start":{"line":70,"column":2},"end":{"line":73,"column":3}},"22":{"start":{"line":71,"column":4},"end":{"line":71,"column":71}},"23":{"start":{"line":71,"column":62},"end":{"line":71,"column":71}},"24":{"start":{"line":72,"column":4},"end":{"line":72,"column":45}},"25":{"start":{"line":75,"column":2},"end":{"line":75,"column":21}},"26":{"start":{"line":86,"column":0},"end":{"line":96,"column":2}},"27":{"start":{"line":87,"column":2},"end":{"line":87,"column":18}},"28":{"start":{"line":90,"column":2},"end":{"line":93,"column":3}},"29":{"start":{"line":91,"column":4},"end":{"line":91,"column":66}},"30":{"start":{"line":91,"column":57},"end":{"line":91,"column":66}},"31":{"start":{"line":92,"column":4},"end":{"line":92,"column":90}},"32":{"start":{"line":95,"column":2},"end":{"line":95,"column":16}},"33":{"start":{"line":105,"column":0},"end":{"line":118,"column":2}},"34":{"start":{"line":106,"column":2},"end":{"line":106,"column":18}},"35":{"start":{"line":109,"column":2},"end":{"line":109,"column":58}},"36":{"start":{"line":112,"column":2},"end":{"line":117,"column":5}},"37":{"start":{"line":113,"column":25},"end":{"line":113,"column":76}},"38":{"start":{"line":114,"column":22},"end":{"line":114,"column":77}},"39":{"start":{"line":127,"column":0},"end":{"line":134,"column":2}},"40":{"start":{"line":130,"column":2},"end":{"line":130,"column":49}},"41":{"start":{"line":133,"column":2},"end":{"line":133,"column":47}}},"branchMap":{"1":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":19},"end":{"line":41,"column":38}},{"start":{"line":41,"column":42},"end":{"line":41,"column":44}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"3":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":30}},{"start":{"line":45,"column":34},"end":{"line":45,"column":53}}]},"4":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"5":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]}},"code":["","/**"," * Module dependencies"," */","","var _ = require('lodash');","var Association = require('../association');","var utils = require('../../../utils/helpers');","var hasOwnProperty = utils.object.hasOwnProperty;","","/**"," * Add association getters and setters for any has_many"," * attributes."," *"," * @param {Object} context"," * @param {Object} proto"," * @api private"," */","","var Define = module.exports = function(context, proto) {","  var self = this;","","  this.proto = proto;","","  // Build Associations Listing","  Object.defineProperty(proto, 'associations', {","    enumerable: false,","    writable: true,","    value: {}","  });","","  // Build associations cache to hold original values.","  // Used to check if values have been mutated and need to be synced when","  // a model.save call is made.","  Object.defineProperty(proto, 'associationsCache', {","    enumerable: false,","    writable: true,","    value: {}","  });","","  var attributes = context._attributes || {};","  var collections = this.collectionKeys(attributes);","  var models = this.modelKeys(attributes);","","  if (collections.length === 0 && models.length === 0) return;","","  // Create an Association getter and setter for each collection","  collections.forEach(function(collection) {","    self.buildHasManyProperty(collection);","  });","","  // Attach Models to the prototype and set in the associations object","  models.forEach(function(model) {","    self.buildBelongsToProperty(model);","  });","};","","/**"," * Find Collection Keys"," *"," * @param {Object} attributes"," * @api private"," * @return {Array}"," */","","Define.prototype.collectionKeys = function(attributes) {","  var collections = [];","","  // Find any collection keys","  for (var attribute in attributes) {","    if (!hasOwnProperty(attributes[attribute], 'collection')) continue;","    collections.push(_.cloneDeep(attribute));","  }","","  return collections;","};","","/**"," * Find Model Keys"," *"," * @param {Object} attributes"," * @api private"," * @return {Array}"," */","","Define.prototype.modelKeys = function(attributes) {","  var models = [];","","  // Find any collection keys","  for (var attribute in attributes) {","    if (!hasOwnProperty(attributes[attribute], 'model')) continue;","    models.push({ key: _.cloneDeep(attribute), val: _.cloneDeep(attributes[attribute]) });","  }","","  return models;","};","","/**"," * Create Getter/Setter for hasMany associations"," *"," * @param {String} collection"," * @api private"," */","","Define.prototype.buildHasManyProperty = function(collection) {","  var self = this;","","  // Attach to a non-enumerable property","  this.proto.associations[collection] = new Association();","","  // Attach getter and setter to the model","  Object.defineProperty(this.proto, collection, {","    set: function(val) { self.proto.associations[collection]._setValue(val); },","    get: function() { return self.proto.associations[collection]._getValue(); },","    enumerable: true,","    configurable: true","  });","};","","/**"," * Add belongsTo attributes to associations object"," *"," * @param {String} collection"," * @api private"," */","","Define.prototype.buildBelongsToProperty = function(model) {","","  // Attach to a non-enumerable property","  this.proto.associations[model.key] = model.val;","","  // Build a cache for this model","  this.proto.associationsCache[model.key] = {};","};",""],"l":{"6":1,"7":1,"8":1,"9":1,"20":1,"21":0,"23":0,"26":0,"35":0,"41":0,"42":0,"43":0,"45":0,"48":0,"49":0,"53":0,"54":0,"66":1,"67":0,"70":0,"71":0,"72":0,"75":0,"86":1,"87":0,"90":0,"91":0,"92":0,"95":0,"105":1,"106":0,"109":0,"112":0,"113":0,"114":0,"127":1,"130":0,"133":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/association.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/model/lib/association.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":35},"end":{"line":6,"column":46}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":34},"end":{"line":19,"column":50}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":34},"end":{"line":34,"column":45}}},"4":{"name":"add","line":42,"loc":{"start":{"line":42,"column":14},"end":{"line":42,"column":32}}},"5":{"name":"(anonymous_5)","line":44,"loc":{"start":{"line":44,"column":18},"end":{"line":44,"column":31}}},"6":{"name":"remove","line":52,"loc":{"start":{"line":52,"column":17},"end":{"line":52,"column":38}}},"7":{"name":"(anonymous_7)","line":54,"loc":{"start":{"line":54,"column":18},"end":{"line":54,"column":31}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":10,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":7,"column":22}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":25}},"4":{"start":{"line":9,"column":2},"end":{"line":9,"column":18}},"5":{"start":{"line":19,"column":0},"end":{"line":26,"column":2}},"6":{"start":{"line":20,"column":2},"end":{"line":23,"column":3}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":23}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":11}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":36}},"10":{"start":{"line":34,"column":0},"end":{"line":63,"column":2}},"11":{"start":{"line":35,"column":2},"end":{"line":35,"column":18}},"12":{"start":{"line":36,"column":2},"end":{"line":36,"column":25}},"13":{"start":{"line":42,"column":2},"end":{"line":50,"column":4}},"14":{"start":{"line":43,"column":4},"end":{"line":49,"column":5}},"15":{"start":{"line":44,"column":6},"end":{"line":46,"column":9}},"16":{"start":{"line":45,"column":8},"end":{"line":45,"column":32}},"17":{"start":{"line":48,"column":6},"end":{"line":48,"column":31}},"18":{"start":{"line":52,"column":2},"end":{"line":60,"column":4}},"19":{"start":{"line":53,"column":4},"end":{"line":59,"column":5}},"20":{"start":{"line":54,"column":6},"end":{"line":56,"column":9}},"21":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"22":{"start":{"line":58,"column":6},"end":{"line":58,"column":34}},"23":{"start":{"line":62,"column":2},"end":{"line":62,"column":15}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"3":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]}},"code":["","/**"," * Handles an Association"," */","","var Association = module.exports = function() {","  this.addModels = [];","  this.removeModels = [];","  this.value = [];","};","","/**"," * Set Value"," *"," * @param {Number|Object} value"," * @api private"," */","","Association.prototype._setValue = function(value) {","  if (Array.isArray(value)) {","    this.value = value;","    return;","  }","","  this.value = this.value = [value];","};","","/**"," * Get Value"," *"," * @api private"," */","","Association.prototype._getValue = function() {","  var self = this;","  var value = this.value;","","  // Attach association methods to values array","  // This allows access using the getter and the desired","  // API for synchronously adding and removing associations.","","  value.add = function add(obj) {","    if (Array.isArray(obj)) {","      obj.forEach(function(el) {","        self.addModels.push(el);","      });","    } else {","      self.addModels.push(obj);","    }","  };","","  value.remove = function remove(obj) {","    if (Array.isArray(obj)) {","      obj.forEach(function(el) {","        self.removeModels.push(el);","      });","    } else {","      self.removeModels.push(obj);","    }","  };","","  return value;","};",""],"l":{"6":1,"7":0,"8":0,"9":0,"19":1,"20":0,"21":0,"22":0,"25":0,"34":1,"35":0,"36":0,"42":0,"43":0,"44":0,"45":0,"48":0,"52":0,"53":0,"54":0,"55":0,"58":0,"62":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/core/typecast.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/core/typecast.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0,0,0,0,0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":28},"end":{"line":22,"column":39}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":28},"end":{"line":36,"column":44}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":29},"end":{"line":39,"column":43}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":21},"end":{"line":53,"column":38}}},"5":{"name":"(anonymous_5)","line":60,"loc":{"start":{"line":60,"column":30},"end":{"line":60,"column":44}}},"6":{"name":"string","line":116,"loc":{"start":{"line":116,"column":24},"end":{"line":116,"column":45}}},"7":{"name":"integer","line":129,"loc":{"start":{"line":129,"column":25},"end":{"line":129,"column":54}}},"8":{"name":"float","line":155,"loc":{"start":{"line":155,"column":23},"end":{"line":155,"column":45}}},"9":{"name":"boolean","line":175,"loc":{"start":{"line":175,"column":25},"end":{"line":175,"column":49}}},"10":{"name":"date","line":205,"loc":{"start":{"line":205,"column":22},"end":{"line":205,"column":43}}},"11":{"name":"array","line":227,"loc":{"start":{"line":227,"column":23},"end":{"line":227,"column":45}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"5":{"start":{"line":22,"column":0},"end":{"line":26,"column":2}},"6":{"start":{"line":23,"column":2},"end":{"line":23,"column":19}},"7":{"start":{"line":25,"column":2},"end":{"line":25,"column":14}},"8":{"start":{"line":36,"column":0},"end":{"line":42,"column":2}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":18}},"10":{"start":{"line":39,"column":2},"end":{"line":41,"column":5}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":84}},"12":{"start":{"line":53,"column":0},"end":{"line":106,"column":2}},"13":{"start":{"line":54,"column":2},"end":{"line":54,"column":18}},"14":{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},"15":{"start":{"line":57,"column":4},"end":{"line":57,"column":11}},"16":{"start":{"line":60,"column":2},"end":{"line":103,"column":5}},"17":{"start":{"line":63,"column":4},"end":{"line":63,"column":55}},"18":{"start":{"line":63,"column":36},"end":{"line":63,"column":55}},"19":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"20":{"start":{"line":65,"column":6},"end":{"line":65,"column":13}},"21":{"start":{"line":69,"column":4},"end":{"line":69,"column":45}},"22":{"start":{"line":69,"column":38},"end":{"line":69,"column":45}},"23":{"start":{"line":72,"column":4},"end":{"line":72,"column":32}},"24":{"start":{"line":75,"column":4},"end":{"line":102,"column":5}},"25":{"start":{"line":78,"column":8},"end":{"line":78,"column":47}},"26":{"start":{"line":79,"column":8},"end":{"line":79,"column":14}},"27":{"start":{"line":82,"column":8},"end":{"line":82,"column":53}},"28":{"start":{"line":83,"column":8},"end":{"line":83,"column":14}},"29":{"start":{"line":86,"column":8},"end":{"line":86,"column":46}},"30":{"start":{"line":87,"column":8},"end":{"line":87,"column":14}},"31":{"start":{"line":92,"column":8},"end":{"line":92,"column":45}},"32":{"start":{"line":93,"column":8},"end":{"line":93,"column":14}},"33":{"start":{"line":96,"column":8},"end":{"line":96,"column":48}},"34":{"start":{"line":97,"column":8},"end":{"line":97,"column":14}},"35":{"start":{"line":100,"column":8},"end":{"line":100,"column":46}},"36":{"start":{"line":101,"column":8},"end":{"line":101,"column":14}},"37":{"start":{"line":105,"column":2},"end":{"line":105,"column":16}},"38":{"start":{"line":116,"column":0},"end":{"line":118,"column":2}},"39":{"start":{"line":117,"column":2},"end":{"line":117,"column":73}},"40":{"start":{"line":129,"column":0},"end":{"line":145,"column":2}},"41":{"start":{"line":130,"column":2},"end":{"line":130,"column":13}},"42":{"start":{"line":135,"column":2},"end":{"line":135,"column":57}},"43":{"start":{"line":135,"column":33},"end":{"line":135,"column":57}},"44":{"start":{"line":138,"column":2},"end":{"line":142,"column":3}},"45":{"start":{"line":139,"column":4},"end":{"line":139,"column":33}},"46":{"start":{"line":141,"column":4},"end":{"line":141,"column":17}},"47":{"start":{"line":144,"column":2},"end":{"line":144,"column":16}},"48":{"start":{"line":155,"column":0},"end":{"line":165,"column":2}},"49":{"start":{"line":156,"column":2},"end":{"line":156,"column":13}},"50":{"start":{"line":158,"column":2},"end":{"line":162,"column":3}},"51":{"start":{"line":159,"column":4},"end":{"line":159,"column":31}},"52":{"start":{"line":161,"column":4},"end":{"line":161,"column":17}},"53":{"start":{"line":164,"column":2},"end":{"line":164,"column":16}},"54":{"start":{"line":175,"column":0},"end":{"line":195,"column":2}},"55":{"start":{"line":176,"column":2},"end":{"line":176,"column":13}},"56":{"start":{"line":178,"column":2},"end":{"line":182,"column":3}},"57":{"start":{"line":179,"column":4},"end":{"line":179,"column":38}},"58":{"start":{"line":179,"column":26},"end":{"line":179,"column":38}},"59":{"start":{"line":180,"column":4},"end":{"line":180,"column":40}},"60":{"start":{"line":180,"column":27},"end":{"line":180,"column":40}},"61":{"start":{"line":181,"column":4},"end":{"line":181,"column":17}},"62":{"start":{"line":185,"column":2},"end":{"line":189,"column":3}},"63":{"start":{"line":186,"column":4},"end":{"line":186,"column":33}},"64":{"start":{"line":188,"column":4},"end":{"line":188,"column":17}},"65":{"start":{"line":191,"column":2},"end":{"line":191,"column":33}},"66":{"start":{"line":191,"column":20},"end":{"line":191,"column":33}},"67":{"start":{"line":192,"column":2},"end":{"line":192,"column":32}},"68":{"start":{"line":192,"column":20},"end":{"line":192,"column":32}},"69":{"start":{"line":194,"column":2},"end":{"line":194,"column":15}},"70":{"start":{"line":205,"column":0},"end":{"line":217,"column":2}},"71":{"start":{"line":206,"column":2},"end":{"line":206,"column":13}},"72":{"start":{"line":207,"column":2},"end":{"line":213,"column":3}},"73":{"start":{"line":208,"column":4},"end":{"line":208,"column":39}},"74":{"start":{"line":209,"column":9},"end":{"line":213,"column":3}},"75":{"start":{"line":210,"column":4},"end":{"line":210,"column":28}},"76":{"start":{"line":212,"column":4},"end":{"line":212,"column":41}},"77":{"start":{"line":215,"column":2},"end":{"line":215,"column":57}},"78":{"start":{"line":215,"column":44},"end":{"line":215,"column":57}},"79":{"start":{"line":216,"column":2},"end":{"line":216,"column":16}},"80":{"start":{"line":227,"column":0},"end":{"line":230,"column":2}},"81":{"start":{"line":228,"column":2},"end":{"line":228,"column":41}},"82":{"start":{"line":228,"column":28},"end":{"line":228,"column":41}},"83":{"start":{"line":229,"column":2},"end":{"line":229,"column":17}}},"branchMap":{"1":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":57},"end":{"line":40,"column":72}},{"start":{"line":40,"column":75},"end":{"line":40,"column":83}}]},"2":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"3":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":26}},{"start":{"line":56,"column":30},"end":{"line":56,"column":45}}]},"4":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"5":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"6":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":41}},{"start":{"line":64,"column":45},"end":{"line":64,"column":65}},{"start":{"line":64,"column":69},"end":{"line":64,"column":97}}]},"7":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"8":{"line":75,"type":"switch","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":20}},{"start":{"line":77,"column":6},"end":{"line":79,"column":14}},{"start":{"line":81,"column":6},"end":{"line":83,"column":14}},{"start":{"line":85,"column":6},"end":{"line":87,"column":14}},{"start":{"line":89,"column":6},"end":{"line":89,"column":18}},{"start":{"line":90,"column":6},"end":{"line":90,"column":18}},{"start":{"line":91,"column":6},"end":{"line":93,"column":14}},{"start":{"line":95,"column":6},"end":{"line":97,"column":14}},{"start":{"line":99,"column":6},"end":{"line":101,"column":14}}]},"9":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":47},"end":{"line":117,"column":61}},{"start":{"line":117,"column":64},"end":{"line":117,"column":72}}]},"10":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":2},"end":{"line":135,"column":2}},{"start":{"line":135,"column":2},"end":{"line":135,"column":2}}]},"11":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"12":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"13":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":4},"end":{"line":180,"column":4}},{"start":{"line":180,"column":4},"end":{"line":180,"column":4}}]},"14":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"15":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"16":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":2},"end":{"line":207,"column":2}},{"start":{"line":207,"column":2},"end":{"line":207,"column":2}}]},"17":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":9},"end":{"line":209,"column":9}},{"start":{"line":209,"column":9},"end":{"line":209,"column":9}}]},"18":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"19":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":2},"end":{"line":228,"column":2}},{"start":{"line":228,"column":2},"end":{"line":228,"column":2}}]}},"code":["/**"," * Module dependencies"," */","","var types = require('../utils/types');","var utils = require('../utils/helpers');","var hasOwnProperty = utils.object.hasOwnProperty;","var _ = require('lodash');","","/**"," * Cast Types"," *"," * Will take values and cast they to the correct type based on the"," * type defined in the schema."," *"," * Especially handy for converting numbers passed as strings to the"," * correct integer type."," *"," * Should be run before sending values to an adapter."," */","","var Cast = module.exports = function() {","  this._types = {};","","  return this;","};","","/**"," * Builds an internal _types object that contains each"," * attribute with it's type. This can later be used to"," * transform values into the correct type."," *"," * @param {Object} attrs"," */","","Cast.prototype.initialize = function(attrs) {","  var self = this;","","  Object.keys(attrs).forEach(function(key) {","    self._types[key] = ~types.indexOf(attrs[key].type) ? attrs[key].type : 'string';","  });","};","","/**"," * Converts a set of values into the proper types"," * based on the Collection's schema."," *"," * @param {Object} values"," * @return {Object}"," * @api public"," */","","Cast.prototype.run = function(values) {","  var self = this;","","  if (values === undefined || values === null) {","    return;","  }","","  Object.keys(values).forEach(function(key) {","","    // Set undefined to null","    if (_.isUndefined(values[key])) values[key] = null;","    if (!hasOwnProperty(self._types, key) || values[key] === null || !hasOwnProperty(values, key)) {","      return;","    }","","    // If the value is a plain object, don't attempt to cast it","    if (_.isPlainObject(values[key])) return;","","    // Find the value's type","    var type = self._types[key];","","    // Casting Function","    switch (type) {","      case 'string':","      case 'text':","        values[key] = self.string(values[key]);","        break;","","      case 'integer':","        values[key] = self.integer(key, values[key]);","        break;","","      case 'float':","        values[key] = self.float(values[key]);","        break;","","      case 'date':","      case 'time':","      case 'datetime':","        values[key] = self.date(values[key]);","        break;","","      case 'boolean':","        values[key] = self.boolean(values[key]);","        break;","","      case 'array':","        values[key] = self.array(values[key]);","        break;","    }","  });","","  return values;","};","","/**"," * Cast String Values"," *"," * @param {String} str"," * @return {String}"," * @api private"," */","","Cast.prototype.string = function string(str) {","  return typeof str.toString !== 'undefined' ? str.toString() : '' + str;","};","","/**"," * Cast Integer Values"," *"," * @param {String} key"," * @param {Integer} value"," * @return {Integer}"," * @api private"," */","","Cast.prototype.integer = function integer(key, value) {","  var _value;","","  // Attempt to see if the value is resembles a MongoID","  // if so let's not try and cast it and instead return a string representation of","  // it. Needed for sails-mongo.","  if (utils.matchMongoId(value)) return value.toString();","","  // Attempt to parseInt","  try {","    _value = parseInt(value, 10);","  } catch(e) {","    return value;","  }","","  return _value;","};","","/**"," * Cast Float Values"," *"," * @param {Float} value"," * @return {Float}"," * @api private"," */","","Cast.prototype.float = function float(value) {","  var _value;","","  try {","    _value = parseFloat(value);","  } catch(e) {","    return value;","  }","","  return _value;","};","","/**"," * Cast Boolean Values"," *"," * @param {Boolean} value"," * @return {Boolean}"," * @api private"," */","","Cast.prototype.boolean = function boolean(value) {","  var parsed;","","  if (_.isString(value)) {","    if (value === 'true') return true;","    if (value === 'false') return false;","    return value;","  }","","  // Nicely cast [0, 1] to true and false","  try {","    parsed = parseInt(value, 10);","  } catch(e) {","    return false;","  }","","  if (parsed === 0) return false;","  if (parsed === 1) return true;","","  return value;","};","","/**"," * Cast Date Values"," *"," * @param {String|Date} value"," * @return {Date}"," * @api private"," */","","Cast.prototype.date = function date(value) {","  var _value;","  if (value.__proto__ == Date.prototype) {","    _value = new Date(value.getTime());","  } else if (typeof value.toDate === 'function') {","    _value = value.toDate();","  } else {","    _value = new Date(Date.parse(value));","  }","","  if (_value.toString() === 'Invalid Date') return value;","  return _value;","};","","/**"," * Cast Array Values"," *"," * @param {Array|String} value"," * @return {Array}"," * @api private"," */","","Cast.prototype.array = function array(value) {","  if (Array.isArray(value)) return value;","  return [value];","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"22":1,"23":0,"25":0,"36":1,"37":0,"39":0,"40":0,"53":1,"54":0,"56":0,"57":0,"60":0,"63":0,"64":0,"65":0,"69":0,"72":0,"75":0,"78":0,"79":0,"82":0,"83":0,"86":0,"87":0,"92":0,"93":0,"96":0,"97":0,"100":0,"101":0,"105":0,"116":1,"117":0,"129":1,"130":0,"135":0,"138":0,"139":0,"141":0,"144":0,"155":1,"156":0,"158":0,"159":0,"161":0,"164":0,"175":1,"176":0,"178":0,"179":0,"180":0,"181":0,"185":0,"186":0,"188":0,"191":0,"192":0,"194":0,"205":1,"206":0,"207":0,"208":0,"209":0,"210":0,"212":0,"215":0,"216":0,"227":1,"228":0,"229":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/core/schema.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/core/schema.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0,0,0,0,0,0,0,0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":37,"loc":{"start":{"line":37,"column":30},"end":{"line":37,"column":48}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":30},"end":{"line":52,"column":77}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":29},"end":{"line":56,"column":43}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":31},"end":{"line":63,"column":45}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":35},"end":{"line":82,"column":61}}},"6":{"name":"(anonymous_6)","line":194,"loc":{"start":{"line":194,"column":31},"end":{"line":194,"column":48}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}},"5":{"start":{"line":37,"column":0},"end":{"line":42,"column":2}},"6":{"start":{"line":38,"column":2},"end":{"line":38,"column":31}},"7":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"8":{"start":{"line":41,"column":2},"end":{"line":41,"column":14}},"9":{"start":{"line":52,"column":0},"end":{"line":70,"column":2}},"10":{"start":{"line":53,"column":2},"end":{"line":53,"column":18}},"11":{"start":{"line":56,"column":2},"end":{"line":59,"column":5}},"12":{"start":{"line":57,"column":4},"end":{"line":57,"column":57}},"13":{"start":{"line":57,"column":50},"end":{"line":57,"column":57}},"14":{"start":{"line":58,"column":4},"end":{"line":58,"column":61}},"15":{"start":{"line":62,"column":2},"end":{"line":66,"column":3}},"16":{"start":{"line":63,"column":4},"end":{"line":65,"column":7}},"17":{"start":{"line":64,"column":6},"end":{"line":64,"column":28}},"18":{"start":{"line":69,"column":2},"end":{"line":69,"column":71}},"19":{"start":{"line":82,"column":0},"end":{"line":177,"column":2}},"20":{"start":{"line":83,"column":2},"end":{"line":83,"column":16}},"21":{"start":{"line":85,"column":2},"end":{"line":174,"column":3}},"22":{"start":{"line":86,"column":4},"end":{"line":173,"column":5}},"23":{"start":{"line":91,"column":8},"end":{"line":91,"column":71}},"24":{"start":{"line":92,"column":8},"end":{"line":92,"column":14}},"25":{"start":{"line":96,"column":8},"end":{"line":96,"column":37}},"26":{"start":{"line":97,"column":8},"end":{"line":97,"column":14}},"27":{"start":{"line":101,"column":8},"end":{"line":101,"column":37}},"28":{"start":{"line":102,"column":8},"end":{"line":102,"column":27}},"29":{"start":{"line":103,"column":8},"end":{"line":103,"column":14}},"30":{"start":{"line":107,"column":8},"end":{"line":107,"column":37}},"31":{"start":{"line":108,"column":8},"end":{"line":108,"column":14}},"32":{"start":{"line":112,"column":8},"end":{"line":112,"column":37}},"33":{"start":{"line":113,"column":8},"end":{"line":113,"column":14}},"34":{"start":{"line":117,"column":8},"end":{"line":117,"column":29}},"35":{"start":{"line":118,"column":8},"end":{"line":118,"column":14}},"36":{"start":{"line":122,"column":8},"end":{"line":122,"column":30}},"37":{"start":{"line":123,"column":8},"end":{"line":123,"column":14}},"38":{"start":{"line":127,"column":8},"end":{"line":127,"column":40}},"39":{"start":{"line":128,"column":8},"end":{"line":128,"column":30}},"40":{"start":{"line":129,"column":8},"end":{"line":129,"column":14}},"41":{"start":{"line":133,"column":8},"end":{"line":133,"column":33}},"42":{"start":{"line":134,"column":8},"end":{"line":134,"column":14}},"43":{"start":{"line":138,"column":8},"end":{"line":138,"column":32}},"44":{"start":{"line":139,"column":8},"end":{"line":139,"column":14}},"45":{"start":{"line":143,"column":8},"end":{"line":143,"column":31}},"46":{"start":{"line":144,"column":8},"end":{"line":144,"column":14}},"47":{"start":{"line":148,"column":8},"end":{"line":148,"column":31}},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":14}},"49":{"start":{"line":153,"column":8},"end":{"line":153,"column":34}},"50":{"start":{"line":154,"column":8},"end":{"line":154,"column":14}},"51":{"start":{"line":158,"column":8},"end":{"line":158,"column":17}},"52":{"start":{"line":159,"column":8},"end":{"line":159,"column":87}},"53":{"start":{"line":161,"column":8},"end":{"line":166,"column":9}},"54":{"start":{"line":162,"column":10},"end":{"line":165,"column":11}},"55":{"start":{"line":163,"column":12},"end":{"line":163,"column":41}},"56":{"start":{"line":164,"column":12},"end":{"line":164,"column":18}},"57":{"start":{"line":168,"column":8},"end":{"line":168,"column":39}},"58":{"start":{"line":169,"column":8},"end":{"line":169,"column":46}},"59":{"start":{"line":170,"column":8},"end":{"line":170,"column":31}},"60":{"start":{"line":171,"column":8},"end":{"line":171,"column":30}},"61":{"start":{"line":172,"column":8},"end":{"line":172,"column":14}},"62":{"start":{"line":176,"column":2},"end":{"line":176,"column":14}},"63":{"start":{"line":194,"column":0},"end":{"line":211,"column":2}},"64":{"start":{"line":196,"column":2},"end":{"line":196,"column":17}},"65":{"start":{"line":198,"column":2},"end":{"line":208,"column":3}},"66":{"start":{"line":202,"column":4},"end":{"line":206,"column":5}},"67":{"start":{"line":205,"column":6},"end":{"line":205,"column":31}},"68":{"start":{"line":210,"column":2},"end":{"line":210,"column":15}}},"branchMap":{"1":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":17},"end":{"line":38,"column":24}},{"start":{"line":38,"column":28},"end":{"line":38,"column":30}}]},"2":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"3":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"4":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":54},"end":{"line":69,"column":63}},{"start":{"line":69,"column":66},"end":{"line":69,"column":70}}]},"5":{"line":86,"type":"switch","locations":[{"start":{"line":89,"column":6},"end":{"line":92,"column":14}},{"start":{"line":95,"column":6},"end":{"line":97,"column":14}},{"start":{"line":100,"column":6},"end":{"line":103,"column":14}},{"start":{"line":106,"column":6},"end":{"line":108,"column":14}},{"start":{"line":111,"column":6},"end":{"line":113,"column":14}},{"start":{"line":116,"column":6},"end":{"line":118,"column":14}},{"start":{"line":121,"column":6},"end":{"line":123,"column":14}},{"start":{"line":126,"column":6},"end":{"line":129,"column":14}},{"start":{"line":132,"column":6},"end":{"line":134,"column":14}},{"start":{"line":137,"column":6},"end":{"line":139,"column":14}},{"start":{"line":142,"column":6},"end":{"line":144,"column":14}},{"start":{"line":147,"column":6},"end":{"line":149,"column":14}},{"start":{"line":152,"column":6},"end":{"line":154,"column":14}},{"start":{"line":157,"column":6},"end":{"line":172,"column":14}}]},"6":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":49},"end":{"line":91,"column":59}},{"start":{"line":91,"column":62},"end":{"line":91,"column":70}}]},"7":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":10},"end":{"line":162,"column":10}},{"start":{"line":162,"column":10},"end":{"line":162,"column":10}}]},"8":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":14},"end":{"line":162,"column":60}},{"start":{"line":162,"column":64},"end":{"line":162,"column":91}}]},"9":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"10":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":9},"end":{"line":202,"column":23}},{"start":{"line":202,"column":27},"end":{"line":202,"column":59}},{"start":{"line":203,"column":9},"end":{"line":203,"column":24}},{"start":{"line":203,"column":28},"end":{"line":203,"column":139}}]},"11":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":30},"end":{"line":203,"column":75}},{"start":{"line":203,"column":79},"end":{"line":203,"column":138}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var types = require('../utils/types');","var utils = require('../utils/helpers');","var hasOwnProperty = utils.object.hasOwnProperty;","","/**"," * Builds a Schema Object from an attributes"," * object in a model."," *"," * Loops through an attributes object to build a schema"," * containing attribute name as key and a type for casting"," * in the database. Also includes a default value if supplied."," *"," * Example:"," *"," * attributes: {"," *   name: 'string',"," *   phone: {"," *     type: 'string',"," *     defaultsTo: '555-555-5555'"," *   }"," * }"," *"," * Returns: {"," *   name: { type: 'string' },"," *   phone: { type: 'string, defaultsTo: '555-555-5555' }"," * }"," *"," * @param {Object} context"," * @return {Object}"," */","","var Schema = module.exports = function(context) {","  this.context = context || {};","  this.schema = {};","","  return this;","};","","/**"," * Initialize the internal schema object"," *"," * @param {Object} attrs"," * @param {Object} associations"," * @param {Boolean} hasSchema"," */","","Schema.prototype.initialize = function(attrs, hasSchema, reservedAttributes) {","  var self = this;","","  // Build normal attributes","  Object.keys(attrs).forEach(function(key) {","    if (hasOwnProperty(attrs[key], 'collection')) return;","    self.schema[key] = self.objectAttribute(key, attrs[key]);","  });","","  // Build Reserved Attributes","  if (Array.isArray(reservedAttributes)) {","    reservedAttributes.forEach(function(key) {","      self.schema[key] = {};","    });","  }","","  // Set hasSchema to determine if values should be cleansed or not","  this.hasSchema = typeof hasSchema !== 'undefined' ? hasSchema : true;","};","","/**"," * Handle the building of an Object attribute"," *"," * Cleans any unnecessary attributes such as validation properties off of"," * the internal schema and set's defaults for incorrect values."," *"," * @param {Object} value"," * @return {Object}"," */","","Schema.prototype.objectAttribute = function(attrName, value) {","  var attr = {};","","  for (var key in value) {","    switch (key) {","","      // Set schema[attribute].type","      case 'type':","        // Allow validation types in attributes and transform them to strings","        attr.type = ~types.indexOf(value[key]) ? value[key] : 'string';","        break;","","      // Set schema[attribute].defaultsTo","      case 'defaultsTo':","        attr.defaultsTo = value[key];","        break;","","      // Set schema[attribute].primaryKey","      case 'primaryKey':","        attr.primaryKey = value[key];","        attr.unique = true;","        break;","","      // Set schema[attribute].foreignKey","      case 'foreignKey':","        attr.foreignKey = value[key];","        break;","","      // Set schema[attribute].references","      case 'references':","        attr.references = value[key];","        break;","","      // Set schema[attribute].on","      case 'on':","        attr.on = value[key];","        break;","","      // Set schema[attribute].via","      case 'via':","        attr.via = value[key];","        break;","","      // Set schema[attribute].autoIncrement","      case 'autoIncrement':","        attr.autoIncrement = value[key];","        attr.type = 'integer';","        break;","","      // Set schema[attribute].unique","      case 'unique':","        attr.unique = value[key];","        break;","","      // Set schema[attribute].index","      case 'index':","        attr.index = value[key];","        break;","","      // Set schema[attribute].enum","      case 'enum':","        attr.enum = value[key];","        break;","","      // Set schema[attribute].size","      case 'size':","        attr.size = value[key];","        break;","","      // Set schema[attribute].notNull","      case 'notNull':","        attr.notNull = value[key];","        break;","","      // Handle Belongs To Attributes","      case 'model':","        var type;","        var attrs = this.context.waterline.schema[value[key].toLowerCase()].attributes;","","        for (var attribute in attrs) {","          if (hasOwnProperty(attrs[attribute], 'primaryKey') && attrs[attribute].primaryKey) {","            type = attrs[attribute].type;","            break;","          }","        }","","        attr.type = type.toLowerCase();","        attr.model = value[key].toLowerCase();","        attr.foreignKey = true;","        attr.alias = attrName;","        break;","    }","  }","","  return attr;","};","","","/**"," * Clean Values"," *"," * Takes user inputted data and strips out any values not defined in"," * the schema."," *"," * This is run after all the validations and right before being sent to the"," * adapter. This allows you to add temporary properties when doing validation"," * callbacks and have them stripped before being sent to the database."," *"," * @param {Object} values to clean"," * @return {Object} clone of values, stripped of any extra properties"," */","","Schema.prototype.cleanValues = function(values) {","","  var clone = {};","","  for (var key in values) {","","    // The value can pass through if either the collection does have a schema and the key is in the schema,","    // or otherwise if the collection is schemaless and the key does not represent an associated collection.","    if ((this.hasSchema && hasOwnProperty(this.schema, key)) ||","        (!this.hasSchema && !(hasOwnProperty(this.context._attributes, key) && hasOwnProperty(this.context._attributes[key], 'collection')))) {","","      clone[key] = values[key];","    }","","  }","","  return clone;","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"37":1,"38":0,"39":0,"41":0,"52":1,"53":0,"56":0,"57":0,"58":0,"62":0,"63":0,"64":0,"69":0,"82":1,"83":0,"85":0,"86":0,"91":0,"92":0,"96":0,"97":0,"101":0,"102":0,"103":0,"107":0,"108":0,"112":0,"113":0,"117":0,"118":0,"122":0,"123":0,"127":0,"128":0,"129":0,"133":0,"134":0,"138":0,"139":0,"143":0,"144":0,"148":0,"149":0,"153":0,"154":0,"158":0,"159":0,"161":0,"162":0,"163":0,"164":0,"168":0,"169":0,"170":0,"171":0,"172":0,"176":0,"194":1,"196":0,"198":0,"202":0,"205":0,"210":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/core/dictionary.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/core/dictionary.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":34},"end":{"line":18,"column":65}}},"2":{"name":"_build","line":30,"loc":{"start":{"line":30,"column":30},"end":{"line":30,"column":59}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":34},"end":{"line":31,"column":71}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":32},"end":{"line":34,"column":49}}},"5":{"name":"_smash","line":50,"loc":{"start":{"line":50,"column":30},"end":{"line":50,"column":55}}},"6":{"name":"(anonymous_6)","line":51,"loc":{"start":{"line":51,"column":57},"end":{"line":51,"column":79}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":26}},"2":{"start":{"line":18,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":19,"column":2},"end":{"line":19,"column":45}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":30}},"5":{"start":{"line":30,"column":0},"end":{"line":38,"column":2}},"6":{"start":{"line":31,"column":2},"end":{"line":37,"column":5}},"7":{"start":{"line":32,"column":4},"end":{"line":32,"column":45}},"8":{"start":{"line":34,"column":4},"end":{"line":36,"column":7}},"9":{"start":{"line":35,"column":6},"end":{"line":35,"column":28}},"10":{"start":{"line":50,"column":0},"end":{"line":56,"column":2}},"11":{"start":{"line":51,"column":2},"end":{"line":53,"column":11}},"12":{"start":{"line":52,"column":4},"end":{"line":52,"column":40}},"13":{"start":{"line":55,"column":2},"end":{"line":55,"column":45}}},"branchMap":{"1":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":18},"end":{"line":32,"column":37}},{"start":{"line":32,"column":41},"end":{"line":32,"column":44}}]},"2":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":30},"end":{"line":51,"column":37}},{"start":{"line":51,"column":41},"end":{"line":51,"column":44}}]}},"code":["var _ = require('lodash');","","/**"," * Handle Building an Adapter/Connection dictionary"," *"," * @param {Object} connections"," * @param {Array} ordered"," * @return {Object}"," * @api public"," *"," * Manages a 'dictionary' object of the following structure:"," * {"," *    CONNECTION: {"," *      METHOD: ADAPTER_NAME"," *    }"," * }"," */","var Dictionary = module.exports = function(connections, ordered) {","  this.dictionary = this._build(connections);","  return this._smash(ordered);","};","","/**"," * Build Dictionary. This maps adapter methods to the effective connection"," * for which the method is pertinent."," *"," * @param {Object} connections"," * @api private"," */","Dictionary.prototype._build = function _build(connections) {","  return _.mapValues(connections, function(connection, connectionName) {","    var adapter = connection._adapter || { };","","    return _.mapValues(adapter, function(method) {","      return connectionName;","    });","  });","};","","/**"," * Combine Dictionary into a single level object."," *"," * Appends methods from other adapters onto the left most connection adapter,"," * but does not override any existing methods defined in the leftmost adapter."," *"," * @param {Array} ordered"," * @return {Object}"," * @api private"," */","Dictionary.prototype._smash = function _smash(ordered) {","  var mergeArguments = _.map((ordered || [ ]).reverse(), function(adapterName) {","    return this.dictionary[adapterName];","  }, this);","","  return _.merge.apply(null, mergeArguments);","};",""],"l":{"1":1,"18":1,"19":0,"20":0,"30":1,"31":0,"32":0,"34":0,"35":0,"50":1,"51":0,"52":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/core/validations.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/core/validations.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":33},"end":{"line":22,"column":51}}},"2":{"name":"(anonymous_2)","line":54,"loc":{"start":{"line":54,"column":33},"end":{"line":54,"column":66}}},"3":{"name":"(anonymous_3)","line":72,"loc":{"start":{"line":72,"column":29},"end":{"line":72,"column":44}}},"4":{"name":"(anonymous_4)","line":75,"loc":{"start":{"line":75,"column":37},"end":{"line":75,"column":52}}},"5":{"name":"(anonymous_5)","line":115,"loc":{"start":{"line":115,"column":31},"end":{"line":115,"column":65}}},"6":{"name":"_eachValidation","line":144,"loc":{"start":{"line":144,"column":26},"end":{"line":144,"column":67}}},"7":{"name":"_eachKey","line":189,"loc":{"start":{"line":189,"column":47},"end":{"line":189,"column":76}}},"8":{"name":"(anonymous_8)","line":202,"loc":{"start":{"line":202,"column":44},"end":{"line":202,"column":61}}},"9":{"name":"afterwards","line":210,"loc":{"start":{"line":210,"column":7},"end":{"line":210,"column":42}}},"10":{"name":"(anonymous_10)","line":244,"loc":{"start":{"line":244,"column":30},"end":{"line":244,"column":44}}},"11":{"name":"allValidationsChecked","line":254,"loc":{"start":{"line":254,"column":5},"end":{"line":254,"column":41}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":31}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":29}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":62}},"7":{"start":{"line":22,"column":0},"end":{"line":24,"column":2}},"8":{"start":{"line":23,"column":2},"end":{"line":23,"column":24}},"9":{"start":{"line":54,"column":0},"end":{"line":92,"column":2}},"10":{"start":{"line":55,"column":2},"end":{"line":55,"column":18}},"11":{"start":{"line":57,"column":2},"end":{"line":57,"column":28}},"12":{"start":{"line":59,"column":2},"end":{"line":61,"column":99}},"13":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"14":{"start":{"line":65,"column":4},"end":{"line":65,"column":88}},"15":{"start":{"line":69,"column":2},"end":{"line":69,"column":22}},"16":{"start":{"line":70,"column":2},"end":{"line":70,"column":23}},"17":{"start":{"line":72,"column":2},"end":{"line":91,"column":5}},"18":{"start":{"line":73,"column":4},"end":{"line":73,"column":32}},"19":{"start":{"line":75,"column":4},"end":{"line":90,"column":7}},"20":{"start":{"line":78,"column":6},"end":{"line":78,"column":49}},"21":{"start":{"line":78,"column":40},"end":{"line":78,"column":47}},"22":{"start":{"line":81,"column":6},"end":{"line":81,"column":65}},"23":{"start":{"line":81,"column":56},"end":{"line":81,"column":63}},"24":{"start":{"line":84,"column":6},"end":{"line":87,"column":7}},"25":{"start":{"line":85,"column":8},"end":{"line":85,"column":57}},"26":{"start":{"line":86,"column":8},"end":{"line":86,"column":15}},"27":{"start":{"line":89,"column":6},"end":{"line":89,"column":55}},"28":{"start":{"line":115,"column":0},"end":{"line":268,"column":2}},"29":{"start":{"line":116,"column":2},"end":{"line":116,"column":18}},"30":{"start":{"line":117,"column":2},"end":{"line":117,"column":18}},"31":{"start":{"line":118,"column":2},"end":{"line":118,"column":50}},"32":{"start":{"line":122,"column":2},"end":{"line":140,"column":3}},"33":{"start":{"line":124,"column":6},"end":{"line":124,"column":23}},"34":{"start":{"line":125,"column":6},"end":{"line":125,"column":12}},"35":{"start":{"line":127,"column":6},"end":{"line":127,"column":34}},"36":{"start":{"line":128,"column":6},"end":{"line":128,"column":12}},"37":{"start":{"line":130,"column":6},"end":{"line":133,"column":7}},"38":{"start":{"line":131,"column":8},"end":{"line":131,"column":34}},"39":{"start":{"line":132,"column":8},"end":{"line":132,"column":14}},"40":{"start":{"line":136,"column":6},"end":{"line":138,"column":7}},"41":{"start":{"line":137,"column":8},"end":{"line":137,"column":71}},"42":{"start":{"line":144,"column":2},"end":{"line":266,"column":5}},"43":{"start":{"line":145,"column":4},"end":{"line":145,"column":53}},"44":{"start":{"line":148,"column":4},"end":{"line":148,"column":21}},"45":{"start":{"line":149,"column":4},"end":{"line":155,"column":5}},"46":{"start":{"line":150,"column":6},"end":{"line":150,"column":43}},"47":{"start":{"line":154,"column":6},"end":{"line":154,"column":19}},"48":{"start":{"line":156,"column":4},"end":{"line":156,"column":45}},"49":{"start":{"line":159,"column":4},"end":{"line":159,"column":35}},"50":{"start":{"line":160,"column":4},"end":{"line":162,"column":5}},"51":{"start":{"line":161,"column":6},"end":{"line":161,"column":19}},"52":{"start":{"line":166,"column":4},"end":{"line":170,"column":5}},"53":{"start":{"line":167,"column":6},"end":{"line":169,"column":7}},"54":{"start":{"line":168,"column":8},"end":{"line":168,"column":20}},"55":{"start":{"line":173,"column":4},"end":{"line":177,"column":5}},"56":{"start":{"line":174,"column":6},"end":{"line":176,"column":7}},"57":{"start":{"line":175,"column":8},"end":{"line":175,"column":20}},"58":{"start":{"line":180,"column":4},"end":{"line":184,"column":5}},"59":{"start":{"line":181,"column":6},"end":{"line":183,"column":7}},"60":{"start":{"line":182,"column":8},"end":{"line":182,"column":20}},"61":{"start":{"line":189,"column":4},"end":{"line":252,"column":7}},"62":{"start":{"line":190,"column":6},"end":{"line":209,"column":7}},"63":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"64":{"start":{"line":192,"column":10},"end":{"line":192,"column":24}},"65":{"start":{"line":196,"column":8},"end":{"line":199,"column":9}},"66":{"start":{"line":197,"column":10},"end":{"line":197,"column":76}},"67":{"start":{"line":198,"column":10},"end":{"line":198,"column":24}},"68":{"start":{"line":202,"column":8},"end":{"line":205,"column":11}},"69":{"start":{"line":203,"column":10},"end":{"line":203,"column":42}},"70":{"start":{"line":204,"column":10},"end":{"line":204,"column":17}},"71":{"start":{"line":208,"column":8},"end":{"line":208,"column":23}},"72":{"start":{"line":211,"column":6},"end":{"line":214,"column":7}},"73":{"start":{"line":213,"column":8},"end":{"line":213,"column":33}},"74":{"start":{"line":220,"column":6},"end":{"line":224,"column":7}},"75":{"start":{"line":221,"column":8},"end":{"line":223,"column":9}},"76":{"start":{"line":222,"column":10},"end":{"line":222,"column":22}},"77":{"start":{"line":227,"column":6},"end":{"line":227,"column":26}},"78":{"start":{"line":228,"column":6},"end":{"line":234,"column":7}},"79":{"start":{"line":229,"column":8},"end":{"line":229,"column":70}},"80":{"start":{"line":233,"column":8},"end":{"line":233,"column":21}},"81":{"start":{"line":237,"column":6},"end":{"line":239,"column":7}},"82":{"start":{"line":238,"column":8},"end":{"line":238,"column":20}},"83":{"start":{"line":242,"column":6},"end":{"line":242,"column":30}},"84":{"start":{"line":244,"column":6},"end":{"line":249,"column":9}},"85":{"start":{"line":245,"column":8},"end":{"line":247,"column":9}},"86":{"start":{"line":246,"column":10},"end":{"line":246,"column":30}},"87":{"start":{"line":248,"column":8},"end":{"line":248,"column":74}},"88":{"start":{"line":251,"column":6},"end":{"line":251,"column":18}},"89":{"start":{"line":256,"column":4},"end":{"line":258,"column":5}},"90":{"start":{"line":257,"column":6},"end":{"line":257,"column":21}},"91":{"start":{"line":261,"column":4},"end":{"line":263,"column":5}},"92":{"start":{"line":262,"column":6},"end":{"line":262,"column":18}},"93":{"start":{"line":265,"column":4},"end":{"line":265,"column":33}}},"branchMap":{"1":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":13},"end":{"line":57,"column":21}},{"start":{"line":57,"column":25},"end":{"line":57,"column":27}}]},"2":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"3":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":31}},{"start":{"line":64,"column":35},"end":{"line":64,"column":75}}]},"4":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":10},"end":{"line":69,"column":15}},{"start":{"line":69,"column":19},"end":{"line":69,"column":21}}]},"5":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":6},"end":{"line":78,"column":6}},{"start":{"line":78,"column":6},"end":{"line":78,"column":6}}]},"6":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":6}},{"start":{"line":81,"column":6},"end":{"line":81,"column":6}}]},"7":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":6},"end":{"line":84,"column":6}},{"start":{"line":84,"column":6},"end":{"line":84,"column":6}}]},"8":{"line":122,"type":"switch","locations":[{"start":{"line":123,"column":4},"end":{"line":125,"column":12}},{"start":{"line":126,"column":4},"end":{"line":128,"column":12}},{"start":{"line":129,"column":4},"end":{"line":133,"column":7}},{"start":{"line":134,"column":4},"end":{"line":138,"column":7}}]},"9":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":6}},{"start":{"line":130,"column":6},"end":{"line":130,"column":6}}]},"10":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":6},"end":{"line":136,"column":6}},{"start":{"line":136,"column":6},"end":{"line":136,"column":6}}]},"11":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"12":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"13":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":6}},{"start":{"line":167,"column":6},"end":{"line":167,"column":6}}]},"14":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":10},"end":{"line":167,"column":24}},{"start":{"line":167,"column":28},"end":{"line":167,"column":40}}]},"15":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"16":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":30}},{"start":{"line":173,"column":34},"end":{"line":173,"column":66}},{"start":{"line":173,"column":71},"end":{"line":173,"column":99}},{"start":{"line":173,"column":103},"end":{"line":173,"column":117}}]},"17":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":6},"end":{"line":174,"column":6}},{"start":{"line":174,"column":6},"end":{"line":174,"column":6}}]},"18":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":10},"end":{"line":174,"column":37}},{"start":{"line":174,"column":41},"end":{"line":174,"column":69}}]},"19":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":4},"end":{"line":180,"column":4}},{"start":{"line":180,"column":4},"end":{"line":180,"column":4}}]},"20":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":8},"end":{"line":180,"column":60}},{"start":{"line":180,"column":64},"end":{"line":180,"column":111}}]},"21":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":6},"end":{"line":181,"column":6}},{"start":{"line":181,"column":6},"end":{"line":181,"column":6}}]},"22":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":191,"column":8}},{"start":{"line":191,"column":8},"end":{"line":191,"column":8}}]},"23":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":8},"end":{"line":196,"column":8}},{"start":{"line":196,"column":8},"end":{"line":196,"column":8}}]},"24":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":6},"end":{"line":211,"column":6}},{"start":{"line":211,"column":6},"end":{"line":211,"column":6}}]},"25":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":6}},{"start":{"line":220,"column":6},"end":{"line":220,"column":6}}]},"26":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":10},"end":{"line":220,"column":54}},{"start":{"line":220,"column":58},"end":{"line":220,"column":85}}]},"27":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":8},"end":{"line":221,"column":8}},{"start":{"line":221,"column":8},"end":{"line":221,"column":8}}]},"28":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":6},"end":{"line":237,"column":6}},{"start":{"line":237,"column":6},"end":{"line":237,"column":6}}]},"29":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":8},"end":{"line":245,"column":8}},{"start":{"line":245,"column":8},"end":{"line":245,"column":8}}]},"30":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":4},"end":{"line":256,"column":4}},{"start":{"line":256,"column":4},"end":{"line":256,"column":4}}]},"31":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":4},"end":{"line":261,"column":4}},{"start":{"line":261,"column":4},"end":{"line":261,"column":4}}]}},"code":["/**"," * Handles validation on a model"," *"," * Uses Anchor for validating"," * https://github.com/balderdashy/anchor"," */","","var _ = require('lodash');","var anchor = require('anchor');","var async = require('async');","var utils = require('../utils/helpers');","var hasOwnProperty = utils.object.hasOwnProperty;","var WLValidationError = require('../error/WLValidationError');","","","/**"," * Build up validations using the Anchor module."," *"," * @param {String} adapter"," */","","var Validator = module.exports = function(adapter) {","  this.validations = {};","};","","/**"," * Builds a Validation Object from a normalized attributes"," * object."," *"," * Loops through an attributes object to build a validation object"," * containing attribute name as key and a series of validations that"," * are run on each model. Skips over type and defaultsTo as they are"," * schema properties."," *"," * Example:"," *"," * attributes: {"," *   name: {"," *     type: 'string',"," *     length: { min: 2, max: 5 }"," *   }"," *   email: {"," *     type: 'string',"," *     required: true"," *   }"," * }"," *"," * Returns: {"," *   name: { length: { min:2, max: 5 }},"," *   email: { required: true }"," * }"," */","","Validator.prototype.initialize = function(attrs, types, defaults) {","  var self = this;","","  defaults = defaults || {};","","  this.reservedProperties = ['defaultsTo', 'primaryKey', 'autoIncrement', 'unique', 'index', 'collection', 'dominant', 'through',","          'columnName', 'foreignKey', 'references', 'on', 'groupKey', 'model', 'via', 'size',","          'example', 'validationMessage', 'validations', 'populateSettings', 'onKey', 'protected'];","","","  if (defaults.ignoreProperties && Array.isArray(defaults.ignoreProperties)) {","    this.reservedProperties = this.reservedProperties.concat(defaults.ignoreProperties);","  }","","  // Add custom type definitions to anchor","  types = types || {};","  anchor.define(types);","","  Object.keys(attrs).forEach(function(attr) {","    self.validations[attr] = {};","","    Object.keys(attrs[attr]).forEach(function(prop) {","","      // Ignore null values","      if (attrs[attr][prop] === null) { return; }","","      // If property is reserved don't do anything with it","      if (self.reservedProperties.indexOf(prop) > -1) { return; }","","      // use the Anchor `in` method for enums","      if (prop === 'enum') {","        self.validations[attr]['in'] = attrs[attr][prop];","        return;","      }","","      self.validations[attr][prop] = attrs[attr][prop];","    });","  });","};","","","/**"," * Validator.prototype.validate()"," *"," * Accepts a dictionary of values and validates them against"," * the validation rules expected by this schema (`this.validations`)."," * Validation is performed using Anchor."," *"," *"," * @param {Dictionary} values"," *        The dictionary of values to validate."," *"," * @param {Boolean|String|String[]} presentOnly"," *        only validate present values (if `true`) or validate the"," *        specified attribute(s)."," *"," * @param {Function} callback"," *        @param {Error} err - a fatal error, if relevant."," *        @param {Array} invalidAttributes - an array of errors"," */","","Validator.prototype.validate = function(values, presentOnly, cb) {","  var self = this;","  var errors = {};","  var validations = Object.keys(this.validations);","","  // Handle optional second arg AND Use present values only, specified values, or all validations","  /* eslint-disable no-fallthrough */","  switch (typeof presentOnly) {","    case 'function':","      cb = presentOnly;","      break;","    case 'string':","      validations = [presentOnly];","      break;","    case 'object':","      if (Array.isArray(presentOnly)) {","        validations = presentOnly;","        break;","      } // Fall through to the default if the object is not an array","    default:","      // Any other truthy value.","      if (presentOnly) {","        validations = _.intersection(validations, Object.keys(values));","      }","    /* eslint-enable no-fallthrough */","  }","","","  // Validate all validations in parallel","  async.each(validations, function _eachValidation(validation, cb) {","    var curValidation = self.validations[validation];","","    // Build Requirements","    var requirements;","    try {","      requirements = anchor(curValidation);","    }","    catch (e) {","      // Handle fatal error:","      return cb(e);","    }","    requirements = _.cloneDeep(requirements);","","    // Grab value and set to null if undefined","    var value = values[validation];","    if (typeof value == 'undefined') {","      value = null;","    }","","    // If value is not required and empty then don't","    // try and validate it","    if (!curValidation.required) {","      if (value === null || value === '') {","        return cb();","      }","    }","","    // If Boolean and required manually check","    if (curValidation.required && curValidation.type === 'boolean' && (typeof value !== 'undefined' && value !== null)) {","      if (value.toString() === 'true' || value.toString() === 'false') {","        return cb();","      }","    }","","    // If type is integer and the value matches a mongoID let it validate","    if (hasOwnProperty(self.validations[validation], 'type') && self.validations[validation].type === 'integer') {","      if (utils.matchMongoId(value)) {","        return cb();","      }","    }","","    // Rule values may be specified as sync or async functions.","    // Call them and replace the rule value with the function's result","    // before running validations.","    async.each(Object.keys(requirements.data), function _eachKey(key, next) {","      try {","        if (typeof requirements.data[key] !== 'function') {","          return next();","        }","","        // Run synchronous function","        if (requirements.data[key].length < 1) {","          requirements.data[key] = requirements.data[key].apply(values, []);","          return next();","        }","","        // Run async function","        requirements.data[key].call(values, function(result) {","          requirements.data[key] = result;","          next();","        });","      }","      catch (e) {","        return next(e);","      }","    }, function afterwards(unexpectedErr) {","      if (unexpectedErr) {","        // Handle fatal error","        return cb(unexpectedErr);","      }","","      // If the value has a dynamic required function and it evaluates to false lets look and see","      // if the value supplied is null or undefined. If so then we don't need to check anything. This","      // prevents type errors like `undefined` should be a string.","      // if required is set to 'false', don't enforce as required rule","      if (requirements.data.hasOwnProperty('required') && !requirements.data.required) {","        if (_.isNull(value)) {","          return cb();","        }","      }","","      // Now run the validations using Anchor.","      var validationError;","      try {","        validationError = anchor(value).to(requirements.data, values);","      }","      catch (e) {","        // Handle fatal error:","        return cb(e);","      }","","      // If no validation errors, bail.","      if (!validationError) {","        return cb();","      }","","      // Build an array of errors.","      errors[validation] = [];","","      validationError.forEach(function(obj) {","        if (obj.property) {","          delete obj.property;","        }","        errors[validation].push({ rule: obj.rule, message: obj.message });","      });","","      return cb();","    });","","  }, function allValidationsChecked(err) {","    // Handle fatal error:","    if (err) {","      return cb(err);","    }","","","    if (Object.keys(errors).length === 0) {","      return cb();","    }","","    return cb(undefined, errors);","  });","","};",""],"l":{"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"22":1,"23":0,"54":1,"55":0,"57":0,"59":0,"64":0,"65":0,"69":0,"70":0,"72":0,"73":0,"75":0,"78":0,"81":0,"84":0,"85":0,"86":0,"89":0,"115":1,"116":0,"117":0,"118":0,"122":0,"124":0,"125":0,"127":0,"128":0,"130":0,"131":0,"132":0,"136":0,"137":0,"144":0,"145":0,"148":0,"149":0,"150":0,"154":0,"156":0,"159":0,"160":0,"161":0,"166":0,"167":0,"168":0,"173":0,"174":0,"175":0,"180":0,"181":0,"182":0,"189":0,"190":0,"191":0,"192":0,"196":0,"197":0,"198":0,"202":0,"203":0,"204":0,"208":0,"211":0,"213":0,"220":0,"221":0,"222":0,"227":0,"228":0,"229":0,"233":0,"237":0,"238":0,"242":0,"244":0,"245":0,"246":0,"248":0,"251":0,"256":0,"257":0,"261":0,"262":0,"265":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/error/WLValidationError.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/error/WLValidationError.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":0,"28":0,"29":1,"30":0,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":0,"38":1,"39":0,"40":1,"41":0,"42":1,"43":0,"44":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"WLValidationError","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":63},"end":{"line":52,"column":89}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":24},"end":{"line":53,"column":39}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":26},"end":{"line":63,"column":61}}},"5":{"name":"(anonymous_5)","line":65,"loc":{"start":{"line":65,"column":31},"end":{"line":65,"column":55}}},"6":{"name":"(anonymous_6)","line":81,"loc":{"start":{"line":81,"column":54},"end":{"line":81,"column":65}}},"7":{"name":"(anonymous_7)","line":82,"loc":{"start":{"line":82,"column":45},"end":{"line":82,"column":71}}},"8":{"name":"(anonymous_8)","line":93,"loc":{"start":{"line":93,"column":57},"end":{"line":93,"column":68}}},"9":{"name":"(anonymous_9)","line":94,"loc":{"start":{"line":94,"column":45},"end":{"line":94,"column":71}}},"10":{"name":"(anonymous_10)","line":98,"loc":{"start":{"line":98,"column":55},"end":{"line":98,"column":66}}},"11":{"name":"(anonymous_11)","line":108,"loc":{"start":{"line":108,"column":59},"end":{"line":108,"column":70}}},"12":{"name":"(anonymous_12)","line":111,"loc":{"start":{"line":111,"column":53},"end":{"line":111,"column":64}}},"13":{"name":"(anonymous_13)","line":121,"loc":{"start":{"line":121,"column":55},"end":{"line":121,"column":66}}},"14":{"name":"(anonymous_14)","line":132,"loc":{"start":{"line":132,"column":64},"end":{"line":132,"column":75}}},"15":{"name":"(anonymous_15)","line":148,"loc":{"start":{"line":148,"column":0},"end":{"line":148,"column":11}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":45}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"5":{"start":{"line":16,"column":0},"end":{"line":72,"column":1}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":50}},"7":{"start":{"line":22,"column":2},"end":{"line":26,"column":3}},"8":{"start":{"line":23,"column":4},"end":{"line":25,"column":7}},"9":{"start":{"line":35,"column":2},"end":{"line":35,"column":37}},"10":{"start":{"line":36,"column":2},"end":{"line":39,"column":31}},"11":{"start":{"line":42,"column":2},"end":{"line":42,"column":29}},"12":{"start":{"line":45,"column":2},"end":{"line":45,"column":41}},"13":{"start":{"line":49,"column":2},"end":{"line":49,"column":32}},"14":{"start":{"line":52,"column":2},"end":{"line":59,"column":5}},"15":{"start":{"line":53,"column":4},"end":{"line":58,"column":7}},"16":{"start":{"line":54,"column":6},"end":{"line":56,"column":7}},"17":{"start":{"line":55,"column":8},"end":{"line":55,"column":107}},"18":{"start":{"line":57,"column":6},"end":{"line":57,"column":18}},"19":{"start":{"line":62,"column":2},"end":{"line":70,"column":9}},"20":{"start":{"line":64,"column":4},"end":{"line":64,"column":36}},"21":{"start":{"line":65,"column":4},"end":{"line":68,"column":11}},"22":{"start":{"line":66,"column":6},"end":{"line":66,"column":39}},"23":{"start":{"line":67,"column":6},"end":{"line":67,"column":18}},"24":{"start":{"line":69,"column":4},"end":{"line":69,"column":16}},"25":{"start":{"line":73,"column":0},"end":{"line":73,"column":42}},"26":{"start":{"line":81,"column":0},"end":{"line":85,"column":3}},"27":{"start":{"line":82,"column":2},"end":{"line":84,"column":5}},"28":{"start":{"line":83,"column":4},"end":{"line":83,"column":34}},"29":{"start":{"line":93,"column":0},"end":{"line":97,"column":3}},"30":{"start":{"line":94,"column":2},"end":{"line":96,"column":5}},"31":{"start":{"line":95,"column":4},"end":{"line":95,"column":37}},"32":{"start":{"line":98,"column":0},"end":{"line":100,"column":3}},"33":{"start":{"line":99,"column":2},"end":{"line":99,"column":23}},"34":{"start":{"line":108,"column":0},"end":{"line":110,"column":3}},"35":{"start":{"line":109,"column":2},"end":{"line":109,"column":40}},"36":{"start":{"line":111,"column":0},"end":{"line":113,"column":3}},"37":{"start":{"line":112,"column":2},"end":{"line":112,"column":25}},"38":{"start":{"line":121,"column":0},"end":{"line":123,"column":3}},"39":{"start":{"line":122,"column":2},"end":{"line":122,"column":32}},"40":{"start":{"line":132,"column":0},"end":{"line":139,"column":3}},"41":{"start":{"line":138,"column":2},"end":{"line":138,"column":32}},"42":{"start":{"line":146,"column":0},"end":{"line":156,"column":2}},"43":{"start":{"line":149,"column":2},"end":{"line":155,"column":4}},"44":{"start":{"line":159,"column":0},"end":{"line":159,"column":35}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":17},"end":{"line":38,"column":19}},{"start":{"line":38,"column":22},"end":{"line":38,"column":25}}]},"3":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":17},"end":{"line":39,"column":21}},{"start":{"line":39,"column":24},"end":{"line":39,"column":29}}]},"4":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":16},"end":{"line":45,"column":33}},{"start":{"line":45,"column":37},"end":{"line":45,"column":40}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":6},"end":{"line":54,"column":6}},{"start":{"line":54,"column":6},"end":{"line":54,"column":6}}]}},"code":["/**"," * Module dependencies"," */","","var WLError = require('./WLError');","var WLUsageError = require('./WLUsageError');","var util = require('util');","var _ = require('lodash');","","","/**"," * WLValidationError"," *"," * @extends WLError"," */","function WLValidationError(properties) {","","  // Call superclass","  WLValidationError.super_.call(this, properties);","","  // Ensure valid usage","  if (typeof this.invalidAttributes !== 'object') {","    return new WLUsageError({","      reason: 'An `invalidAttributes` object must be passed into the constructor for `WLValidationError`'","    });","  }","  // if ( typeof this.model !== 'string' ) {","  //   return new WLUsageError({","  //     reason: 'A `model` string (the collection\\'s `globalId`) must be passed into the constructor for `WLValidationError`'","  //   });","  // }","","  // Customize the `reason` based on the # of invalid attributes","  // (`reason` may not be overridden)","  var isSingular = this.length === 1;","  this.reason = util.format('%d attribute%s %s invalid',","    this.length,","    isSingular ? '' : 's',","    isSingular ? 'is' : 'are');","","  // Always apply the 'E_VALIDATION' error code, even if it was overridden.","  this.code = 'E_VALIDATION';","","  // Status may be overridden.","  this.status = properties.status || 400;","","  // Model should always be set.","  // (this should be the globalId of model, or \"collection\")","  this.model = properties.model;","","  // Ensure messages exist for each invalidAttribute","  this.invalidAttributes = _.mapValues(this.invalidAttributes, function(rules, attrName) {","    return _.map(rules, function(rule) {","      if (!rule.message) {","        rule.message = util.format('A record with that `%s` already exists (`%s`).', attrName, rule.value);","      }","      return rule;","    });","  });","","  // Customize the `details`","  this.details = util.format('Invalid attributes sent to %s:\\n', this.model) +","  _.reduce(this.messages, function(memo, messages, attrName) {","    memo += ' • ' + attrName + '\\n';","    memo += _.reduce(messages, function(memo, message) {","      memo += '   • ' + message + '\\n';","      return memo;","    }, '');","    return memo;","  }, '');","","}","util.inherits(WLValidationError, WLError);","","","/**"," * `rules`"," *"," * @return {Object[Array[String]]} dictionary of validation rule ids, indexed by attribute"," */","WLValidationError.prototype.__defineGetter__('rules', function() {","  return _.mapValues(this.invalidAttributes, function(rules, attrName) {","    return _.pluck(rules, 'rule');","  });","});","","","/**"," * `messages` (aka `errors`)"," *"," * @return {Object[Array[String]]} dictionary of validation messages, indexed by attribute"," */","WLValidationError.prototype.__defineGetter__('messages', function() {","  return _.mapValues(this.invalidAttributes, function(rules, attrName) {","    return _.pluck(rules, 'message');","  });","});","WLValidationError.prototype.__defineGetter__('errors', function() {","  return this.messages;","});","","","/**"," * `attributes` (aka `keys`)"," *"," * @return {Array[String]} of invalid attribute names"," */","WLValidationError.prototype.__defineGetter__('attributes', function() {","  return _.keys(this.invalidAttributes);","});","WLValidationError.prototype.__defineGetter__('keys', function() {","  return this.attributes;","});","","","/**"," * `.length`"," *"," * @return {Integer} number of invalid attributes"," */","WLValidationError.prototype.__defineGetter__('length', function() {","  return this.attributes.length;","});","","","/**"," * `.ValidationError`"," * (backwards-compatibility)"," *"," * @return {Object[Array[Object]]} number of invalid attributes"," */","WLValidationError.prototype.__defineGetter__('ValidationError', function() {","  //","  // TODO:","  // Down the road- emit deprecation event here--","  // (will log information about new error handling options)","  //","  return this.invalidAttributes;","});","","","/**"," * [toJSON description]"," * @type {[type]}"," */","WLValidationError.prototype.toJSON =","WLValidationError.prototype.toPOJO =","function() {","  return {","    error: this.code,","    status: this.status,","    summary: this.reason,","    model: this.model,","    invalidAttributes: this.invalidAttributes","  };","};","","","module.exports = WLValidationError;",""],"l":{"5":1,"6":1,"7":1,"8":1,"16":1,"19":0,"22":0,"23":0,"35":0,"36":0,"42":0,"45":0,"49":0,"52":0,"53":0,"54":0,"55":0,"57":0,"62":0,"64":0,"65":0,"66":0,"67":0,"69":0,"73":1,"81":1,"82":0,"83":0,"93":1,"94":0,"95":0,"98":1,"99":0,"108":1,"109":0,"111":1,"112":0,"121":1,"122":0,"132":1,"138":0,"146":1,"149":0,"159":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/error/WLUsageError.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/error/WLUsageError.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"WLUsageError","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":14,"column":0},"end":{"line":18,"column":1}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":45}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"6":{"start":{"line":23,"column":0},"end":{"line":24,"column":10}},"7":{"start":{"line":25,"column":0},"end":{"line":26,"column":2}},"8":{"start":{"line":27,"column":0},"end":{"line":28,"column":16}},"9":{"start":{"line":31,"column":0},"end":{"line":31,"column":30}}},"branchMap":{},"code":["/**"," * Module dependencies"," */","","var WLError = require('./WLError');","var util = require('util');","","","/**"," * WLUsageError"," *"," * @extends WLError"," */","function WLUsageError(properties) {","","  // Call superclass","  WLUsageError.super_.call(this, properties);","}","util.inherits(WLUsageError, WLError);","","","// Override WLError defaults with WLUsageError properties.","WLUsageError.prototype.code =","'E_USAGE';","WLUsageError.prototype.status =","0;","WLUsageError.prototype.reason =","'Invalid usage';","","","module.exports = WLUsageError;",""],"l":{"5":1,"6":1,"14":1,"17":0,"19":1,"23":1,"25":1,"27":1,"31":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/core/transformations.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/core/transformations.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":38},"end":{"line":19,"column":67}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":38},"end":{"line":37,"column":67}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":34},"end":{"line":40,"column":49}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":42},"end":{"line":49,"column":56}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":37},"end":{"line":77,"column":68}}},"6":{"name":"recursiveParse","line":83,"loc":{"start":{"line":83,"column":2},"end":{"line":83,"column":31}}},"7":{"name":"(anonymous_7)","line":98,"loc":{"start":{"line":98,"column":29},"end":{"line":98,"column":48}}},"8":{"name":"(anonymous_8)","line":152,"loc":{"start":{"line":152,"column":39},"end":{"line":152,"column":60}}},"9":{"name":"(anonymous_9)","line":157,"loc":{"start":{"line":157,"column":45},"end":{"line":157,"column":59}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"4":{"start":{"line":19,"column":0},"end":{"line":28,"column":2}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":29}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":38}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":14}},"8":{"start":{"line":37,"column":0},"end":{"line":67,"column":2}},"9":{"start":{"line":38,"column":2},"end":{"line":38,"column":18}},"10":{"start":{"line":40,"column":2},"end":{"line":66,"column":5}},"11":{"start":{"line":43,"column":4},"end":{"line":43,"column":77}},"12":{"start":{"line":43,"column":70},"end":{"line":43,"column":77}},"13":{"start":{"line":46,"column":4},"end":{"line":46,"column":62}},"14":{"start":{"line":46,"column":55},"end":{"line":46,"column":62}},"15":{"start":{"line":49,"column":4},"end":{"line":65,"column":7}},"16":{"start":{"line":52,"column":6},"end":{"line":52,"column":39}},"17":{"start":{"line":52,"column":32},"end":{"line":52,"column":39}},"18":{"start":{"line":55,"column":6},"end":{"line":57,"column":7}},"19":{"start":{"line":56,"column":8},"end":{"line":56,"column":70}},"20":{"start":{"line":60,"column":6},"end":{"line":63,"column":7}},"21":{"start":{"line":61,"column":8},"end":{"line":61,"column":51}},"22":{"start":{"line":61,"column":44},"end":{"line":61,"column":51}},"23":{"start":{"line":62,"column":8},"end":{"line":62,"column":60}},"24":{"start":{"line":77,"column":0},"end":{"line":142,"column":2}},"25":{"start":{"line":78,"column":2},"end":{"line":78,"column":18}},"26":{"start":{"line":79,"column":2},"end":{"line":79,"column":35}},"27":{"start":{"line":81,"column":2},"end":{"line":81,"column":35}},"28":{"start":{"line":83,"column":2},"end":{"line":136,"column":3}},"29":{"start":{"line":86,"column":4},"end":{"line":86,"column":21}},"30":{"start":{"line":86,"column":14},"end":{"line":86,"column":21}},"31":{"start":{"line":89,"column":4},"end":{"line":96,"column":5}},"32":{"start":{"line":90,"column":6},"end":{"line":93,"column":7}},"33":{"start":{"line":91,"column":8},"end":{"line":91,"column":44}},"34":{"start":{"line":92,"column":8},"end":{"line":92,"column":15}},"35":{"start":{"line":95,"column":6},"end":{"line":95,"column":13}},"36":{"start":{"line":98,"column":4},"end":{"line":135,"column":7}},"37":{"start":{"line":101,"column":6},"end":{"line":101,"column":49}},"38":{"start":{"line":101,"column":42},"end":{"line":101,"column":49}},"39":{"start":{"line":104,"column":6},"end":{"line":110,"column":7}},"40":{"start":{"line":105,"column":8},"end":{"line":108,"column":9}},"41":{"start":{"line":106,"column":10},"end":{"line":106,"column":72}},"42":{"start":{"line":107,"column":10},"end":{"line":107,"column":31}},"43":{"start":{"line":109,"column":8},"end":{"line":109,"column":15}},"44":{"start":{"line":113,"column":6},"end":{"line":113,"column":98}},"45":{"start":{"line":113,"column":61},"end":{"line":113,"column":98}},"46":{"start":{"line":116,"column":6},"end":{"line":127,"column":7}},"47":{"start":{"line":119,"column":8},"end":{"line":124,"column":9}},"48":{"start":{"line":120,"column":10},"end":{"line":120,"column":72}},"49":{"start":{"line":121,"column":10},"end":{"line":121,"column":31}},"50":{"start":{"line":123,"column":10},"end":{"line":123,"column":70}},"51":{"start":{"line":126,"column":8},"end":{"line":126,"column":45}},"52":{"start":{"line":130,"column":6},"end":{"line":134,"column":7}},"53":{"start":{"line":132,"column":8},"end":{"line":132,"column":61}},"54":{"start":{"line":133,"column":8},"end":{"line":133,"column":29}},"55":{"start":{"line":139,"column":2},"end":{"line":139,"column":25}},"56":{"start":{"line":141,"column":2},"end":{"line":141,"column":16}},"57":{"start":{"line":152,"column":0},"end":{"line":167,"column":2}},"58":{"start":{"line":153,"column":2},"end":{"line":153,"column":18}},"59":{"start":{"line":154,"column":2},"end":{"line":154,"column":35}},"60":{"start":{"line":157,"column":2},"end":{"line":164,"column":5}},"61":{"start":{"line":158,"column":4},"end":{"line":158,"column":49}},"62":{"start":{"line":160,"column":4},"end":{"line":160,"column":57}},"63":{"start":{"line":160,"column":50},"end":{"line":160,"column":57}},"64":{"start":{"line":162,"column":4},"end":{"line":162,"column":42}},"65":{"start":{"line":163,"column":4},"end":{"line":163,"column":56}},"66":{"start":{"line":163,"column":29},"end":{"line":163,"column":56}},"67":{"start":{"line":166,"column":2},"end":{"line":166,"column":16}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":6}},{"start":{"line":52,"column":6},"end":{"line":52,"column":6}}]},"4":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":6}},{"start":{"line":55,"column":6},"end":{"line":55,"column":6}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":8}},{"start":{"line":61,"column":8},"end":{"line":61,"column":8}}]},"7":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":13},"end":{"line":81,"column":21}},{"start":{"line":81,"column":25},"end":{"line":81,"column":34}}]},"8":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"9":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"10":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":6}},{"start":{"line":90,"column":6},"end":{"line":90,"column":6}}]},"11":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":6},"end":{"line":101,"column":6}},{"start":{"line":101,"column":6},"end":{"line":101,"column":6}}]},"12":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":6},"end":{"line":104,"column":6}},{"start":{"line":104,"column":6},"end":{"line":104,"column":6}}]},"13":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"14":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":6},"end":{"line":113,"column":6}},{"start":{"line":113,"column":6},"end":{"line":113,"column":6}}]},"15":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":10},"end":{"line":113,"column":38}},{"start":{"line":113,"column":42},"end":{"line":113,"column":59}}]},"16":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":6},"end":{"line":116,"column":6}},{"start":{"line":116,"column":6},"end":{"line":116,"column":6}}]},"17":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":11},"end":{"line":116,"column":59}},{"start":{"line":116,"column":65},"end":{"line":116,"column":95}}]},"18":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":8}},{"start":{"line":119,"column":8},"end":{"line":119,"column":8}}]},"19":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":6}},{"start":{"line":130,"column":6},"end":{"line":130,"column":6}}]},"20":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"21":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":163,"column":4}},{"start":{"line":163,"column":4},"end":{"line":163,"column":4}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var utils = require('../utils/helpers');","var hasOwnProperty = utils.object.hasOwnProperty;","","/**"," * Transformation"," *"," * Allows for a Waterline Collection to have different"," * attributes than what actually exist in an adater's representation."," *"," * @param {Object} attributes"," * @param {Object} tables"," */","","var Transformation = module.exports = function(attributes, tables) {","","  // Hold an internal mapping of keys to transform","  this._transformations = {};","","  // Initialize","  this.initialize(attributes, tables);","","  return this;","};","","/**"," * Initial mapping of transformations."," *"," * @param {Object} attributes"," * @param {Object} tables"," */","","Transformation.prototype.initialize = function(attributes, tables) {","  var self = this;","","  Object.keys(attributes).forEach(function(attr) {","","    // Ignore Functions and Strings","    if (['function', 'string'].indexOf(typeof attributes[attr]) > -1) return;","","    // If not an object, ignore","    if (attributes[attr] !== Object(attributes[attr])) return;","","    // Loop through an attribute and check for transformation keys","    Object.keys(attributes[attr]).forEach(function(key) {","","      // Currently just works with `columnName`, `collection`, `groupKey`","      if (key !== 'columnName') return;","","      // Error if value is not a string","      if (typeof attributes[attr][key] !== 'string') {","        throw new Error('columnName transformation must be a string');","      }","","      // Set transformation attr to new key","      if (key === 'columnName') {","        if (attr === attributes[attr][key]) return;","        self._transformations[attr] = attributes[attr][key];","      }","","    });","  });","};","","/**"," * Transforms a set of attributes into a representation used"," * in an adapter."," *"," * @param {Object} attributes to transform"," * @return {Object}"," */","","Transformation.prototype.serialize = function(attributes, behavior) {","  var self = this;","  var values = _.clone(attributes);","","  behavior = behavior || 'default';","","  function recursiveParse(obj) {","","    // Return if no object","    if (!obj) return;","","    // Handle array of types for findOrCreateEach","    if (typeof obj === 'string') {","      if (hasOwnProperty(self._transformations, obj)) {","        values = self._transformations[obj];","        return;","      }","","      return;","    }","","    Object.keys(obj).forEach(function(property) {","","      // Just a double check to exit if hasOwnProperty fails","      if (!hasOwnProperty(obj, property)) return;","","      // Schema must be serialized in first level only","      if (behavior === 'schema') {","        if (hasOwnProperty(self._transformations, property)) {","          obj[self._transformations[property]] = _.clone(obj[property]);","          delete obj[property];","        }","        return;","      }","","      // Recursively parse `OR` criteria objects to transform keys","      if (Array.isArray(obj[property]) && property === 'or') return recursiveParse(obj[property]);","","      // If Nested Object call function again passing the property as obj","      if ((toString.call(obj[property]) !== '[object Date]') && (_.isPlainObject(obj[property]))) {","","        // check if object key is in the transformations","        if (hasOwnProperty(self._transformations, property)) {","          obj[self._transformations[property]] = _.clone(obj[property]);","          delete obj[property];","","          return recursiveParse(obj[self._transformations[property]]);","        }","","        return recursiveParse(obj[property]);","      }","","      // Check if property is a transformation key","      if (hasOwnProperty(self._transformations, property)) {","","        obj[self._transformations[property]] = obj[property];","        delete obj[property];","      }","    });","  }","","  // Recursivly parse attributes to handle nested criteria","  recursiveParse(values);","","  return values;","};","","/**"," * Transforms a set of attributes received from an adapter"," * into a representation used in a collection."," *"," * @param {Object} attributes to transform"," * @return {Object}"," */","","Transformation.prototype.unserialize = function(attributes) {","  var self = this;","  var values = _.clone(attributes);","","  // Loop through the attributes and change them","  Object.keys(this._transformations).forEach(function(key) {","    var transformed = self._transformations[key];","","    if (!hasOwnProperty(attributes, transformed)) return;","","    values[key] = attributes[transformed];","    if (transformed !== key) delete values[transformed];","  });","","  return values;","};",""],"l":{"5":1,"6":1,"7":1,"19":1,"22":0,"25":0,"27":0,"37":1,"38":0,"40":0,"43":0,"46":0,"49":0,"52":0,"55":0,"56":0,"60":0,"61":0,"62":0,"77":1,"78":0,"79":0,"81":0,"83":1,"86":0,"89":0,"90":0,"91":0,"92":0,"95":0,"98":0,"101":0,"104":0,"105":0,"106":0,"107":0,"109":0,"113":0,"116":0,"119":0,"120":0,"121":0,"123":0,"126":0,"130":0,"132":0,"133":0,"139":0,"141":0,"152":1,"153":0,"154":0,"157":0,"158":0,"160":0,"162":0,"163":0,"166":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":29},"end":{"line":16,"column":40}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":23},"end":{"line":40,"column":36}}},"3":{"name":"(anonymous_3)","line":51,"loc":{"start":{"line":51,"column":35},"end":{"line":51,"column":60}}},"4":{"name":"(anonymous_4)","line":67,"loc":{"start":{"line":67,"column":37},"end":{"line":67,"column":51}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":38}},"7":{"start":{"line":16,"column":0},"end":{"line":32,"column":2}},"8":{"start":{"line":19,"column":2},"end":{"line":25,"column":5}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":26}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":29}},"11":{"start":{"line":40,"column":0},"end":{"line":75,"column":2}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":18}},"13":{"start":{"line":51,"column":2},"end":{"line":58,"column":5}},"14":{"start":{"line":52,"column":4},"end":{"line":52,"column":60}},"15":{"start":{"line":55,"column":4},"end":{"line":57,"column":5}},"16":{"start":{"line":56,"column":6},"end":{"line":56,"column":28}},"17":{"start":{"line":61,"column":2},"end":{"line":74,"column":131}},"18":{"start":{"line":64,"column":4},"end":{"line":64,"column":72}},"19":{"start":{"line":67,"column":4},"end":{"line":70,"column":7}},"20":{"start":{"line":68,"column":6},"end":{"line":68,"column":30}},"21":{"start":{"line":68,"column":15},"end":{"line":68,"column":30}},"22":{"start":{"line":69,"column":6},"end":{"line":69,"column":11}},"23":{"start":{"line":74,"column":7},"end":{"line":74,"column":131}},"24":{"start":{"line":78,"column":0},"end":{"line":89,"column":2}},"25":{"start":{"line":92,"column":0},"end":{"line":92,"column":22}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":16},"end":{"line":22,"column":30}},{"start":{"line":22,"column":34},"end":{"line":22,"column":47}}]},"2":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"3":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":32}},{"start":{"line":55,"column":36},"end":{"line":55,"column":53}}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"5":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":18}},{"start":{"line":61,"column":22},"end":{"line":61,"column":84}}]},"6":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":6}},{"start":{"line":68,"column":6},"end":{"line":68,"column":6}}]}},"code":["/**"," * Dependencies"," */","","var _ = require('lodash');","var extend = require('../utils/extend');","var AdapterBase = require('../adapter');","var utils = require('../utils/helpers');","var AdapterMixin = require('./adapters');","var hop = utils.object.hasOwnProperty;","","/**"," * Query"," */","","var Query = module.exports = function() {","","  // Create a reference to an internal Adapter Base","  this.adapter = new AdapterBase({","    connections: this.connections,","    query: this,","    collection: this.tableName || this.identity,","    identity: this.identity,","    dictionary: this.adapterDictionary","  });","","  // Mixin Custom Adapter Functions.","  AdapterMixin.call(this);","","  // Generate Dynamic Finders","  this.buildDynamicFinders();","};","","","/**"," * Automigrate"," *"," * @param  {Function} cb"," */","Query.prototype.sync = function(cb) {","  var self = this;","","  // If any adapters used in this collection have syncable turned off set migrate to safe.","  //","  // I don't think a collection would ever need two adapters where one needs migrations and","  // the other doesn't but it may be a possibility. The way the auto-migrations work now doesn't","  // allow for this either way so this should be good. We will probably need to revist this soonish","  // however and take a pass at getting something working for better migration systems.","  // - particlebanana","","  _.keys(this.connections).forEach(function(connectionName) {","    var adapter = self.connections[connectionName]._adapter;","","    // If not syncable, don't sync","    if (hop(adapter, 'syncable') && !adapter.syncable) {","      self.migrate = 'safe';","    }","  });","","  // Assign synchronization behavior depending on migrate option in collection","  if (this.migrate && ['drop', 'alter', 'create', 'safe'].indexOf(this.migrate) > -1) {","","    // Determine which sync strategy to use","    var strategyMethodName = 'migrate' + utils.capitalize(this.migrate);","","    // Run automigration strategy","    this.adapter[strategyMethodName](function(err) {","      if (err) return cb(err);","      cb();","    });","  }","","  // Throw Error","  else cb(new Error('Invalid `migrate` strategy defined for collection. Must be one of the following: drop, alter, create, safe'));","};","","","_.extend(","  Query.prototype,","  require('./validate'),","  require('./ddl'),","  require('./dql'),","  require('./aggregate'),","  require('./composite'),","  require('./finders/basic'),","  require('./finders/helpers'),","  require('./finders/dynamicFinders'),","  require('./stream')",");","","// Make Extendable","Query.extend = extend;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"16":1,"19":0,"28":0,"31":0,"40":1,"41":0,"51":0,"52":0,"55":0,"56":0,"61":0,"64":0,"67":0,"68":0,"69":0,"74":0,"78":1,"92":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":31},"end":{"line":7,"column":49}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":7,"column":0},"end":{"line":26,"column":2}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":47}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":45}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":35}},"6":{"start":{"line":20,"column":2},"end":{"line":20,"column":45}},"7":{"start":{"line":23,"column":2},"end":{"line":23,"column":41}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":14}},"9":{"start":{"line":28,"column":0},"end":{"line":37,"column":2}}},"branchMap":{"1":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":21},"end":{"line":10,"column":40}},{"start":{"line":10,"column":44},"end":{"line":10,"column":46}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":38}},{"start":{"line":13,"column":42},"end":{"line":13,"column":44}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":15},"end":{"line":17,"column":28}},{"start":{"line":17,"column":32},"end":{"line":17,"column":34}}]},"4":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":20},"end":{"line":20,"column":38}},{"start":{"line":20,"column":42},"end":{"line":20,"column":44}}]},"5":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":18},"end":{"line":23,"column":34}},{"start":{"line":23,"column":38},"end":{"line":23,"column":40}}]}},"code":["/**"," * Base Adapter Definition"," */","","var _ = require('lodash');","","var Adapter = module.exports = function(options) {","","  // Ensure the connections are set","  this.connections = options.connections || {};","","  // Ensure the dictionary is built","  this.dictionary = options.dictionary || {};","","  // Set a Query instance to get access to top","  // level query functions","  this.query = options.query || {};","","  // Set Collection Name","  this.collection = options.collection || '';","","  // Set Model Identity","  this.identity = options.identity || '';","","  return this;","};","","_.extend(","  Adapter.prototype,","  require('./dql'),","  require('./ddl'),","  require('./compoundQueries'),","  require('./aggregateQueries'),","  require('./setupTeardown'),","  require('./sync'),","  require('./stream')",");",""],"l":{"5":1,"7":1,"10":0,"13":0,"17":0,"20":0,"23":0,"25":0,"28":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/dql.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/dql.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":11},"end":{"line":16,"column":22}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":31}}},"3":{"name":"(anonymous_3)","line":65,"loc":{"start":{"line":65,"column":10},"end":{"line":65,"column":31}}},"4":{"name":"afterwards","line":84,"loc":{"start":{"line":84,"column":73},"end":{"line":84,"column":113}}},"5":{"name":"(anonymous_5)","line":103,"loc":{"start":{"line":103,"column":8},"end":{"line":103,"column":31}}},"6":{"name":"(anonymous_6)","line":132,"loc":{"start":{"line":132,"column":11},"end":{"line":132,"column":34}}},"7":{"name":"(anonymous_7)","line":162,"loc":{"start":{"line":162,"column":24},"end":{"line":162,"column":46}}},"8":{"name":"(anonymous_8)","line":176,"loc":{"start":{"line":176,"column":9},"end":{"line":176,"column":32}}},"9":{"name":"(anonymous_9)","line":201,"loc":{"start":{"line":201,"column":24},"end":{"line":201,"column":46}}},"10":{"name":"(anonymous_10)","line":216,"loc":{"start":{"line":216,"column":10},"end":{"line":216,"column":41}}},"11":{"name":"afterwards","line":239,"loc":{"start":{"line":239,"column":83},"end":{"line":239,"column":124}}},"12":{"name":"(anonymous_12)","line":255,"loc":{"start":{"line":255,"column":11},"end":{"line":255,"column":34}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":71}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"5":{"start":{"line":14,"column":0},"end":{"line":273,"column":2}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":51}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":44}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":32}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":53}},"10":{"start":{"line":41,"column":4},"end":{"line":41,"column":76}},"11":{"start":{"line":41,"column":50},"end":{"line":41,"column":76}},"12":{"start":{"line":43,"column":4},"end":{"line":43,"column":40}},"13":{"start":{"line":44,"column":4},"end":{"line":44,"column":54}},"14":{"start":{"line":46,"column":4},"end":{"line":46,"column":68}},"15":{"start":{"line":46,"column":42},"end":{"line":46,"column":68}},"16":{"start":{"line":50,"column":4},"end":{"line":50,"column":76}},"17":{"start":{"line":52,"column":4},"end":{"line":52,"column":58}},"18":{"start":{"line":67,"column":4},"end":{"line":67,"column":39}},"19":{"start":{"line":70,"column":4},"end":{"line":70,"column":32}},"20":{"start":{"line":72,"column":4},"end":{"line":72,"column":77}},"21":{"start":{"line":72,"column":31},"end":{"line":72,"column":77}},"22":{"start":{"line":75,"column":4},"end":{"line":75,"column":55}},"23":{"start":{"line":78,"column":4},"end":{"line":78,"column":78}},"24":{"start":{"line":78,"column":52},"end":{"line":78,"column":78}},"25":{"start":{"line":80,"column":4},"end":{"line":80,"column":42}},"26":{"start":{"line":81,"column":4},"end":{"line":81,"column":54}},"27":{"start":{"line":83,"column":4},"end":{"line":83,"column":70}},"28":{"start":{"line":83,"column":44},"end":{"line":83,"column":70}},"29":{"start":{"line":84,"column":4},"end":{"line":90,"column":8}},"30":{"start":{"line":85,"column":6},"end":{"line":89,"column":42}},"31":{"start":{"line":86,"column":8},"end":{"line":86,"column":58}},"32":{"start":{"line":86,"column":37},"end":{"line":86,"column":58}},"33":{"start":{"line":87,"column":8},"end":{"line":87,"column":23}},"34":{"start":{"line":89,"column":11},"end":{"line":89,"column":42}},"35":{"start":{"line":106,"column":4},"end":{"line":106,"column":44}},"36":{"start":{"line":107,"column":4},"end":{"line":107,"column":32}},"37":{"start":{"line":110,"column":4},"end":{"line":110,"column":53}},"38":{"start":{"line":113,"column":4},"end":{"line":113,"column":76}},"39":{"start":{"line":113,"column":50},"end":{"line":113,"column":76}},"40":{"start":{"line":115,"column":4},"end":{"line":115,"column":40}},"41":{"start":{"line":116,"column":4},"end":{"line":116,"column":54}},"42":{"start":{"line":118,"column":4},"end":{"line":118,"column":49}},"43":{"start":{"line":118,"column":23},"end":{"line":118,"column":49}},"44":{"start":{"line":119,"column":4},"end":{"line":119,"column":58}},"45":{"start":{"line":135,"column":4},"end":{"line":135,"column":33}},"46":{"start":{"line":138,"column":4},"end":{"line":138,"column":32}},"47":{"start":{"line":141,"column":4},"end":{"line":141,"column":98}},"48":{"start":{"line":144,"column":4},"end":{"line":144,"column":72}},"49":{"start":{"line":144,"column":46},"end":{"line":144,"column":72}},"50":{"start":{"line":147,"column":4},"end":{"line":156,"column":5}},"51":{"start":{"line":148,"column":6},"end":{"line":148,"column":45}},"52":{"start":{"line":149,"column":6},"end":{"line":149,"column":56}},"53":{"start":{"line":151,"column":6},"end":{"line":155,"column":7}},"54":{"start":{"line":153,"column":8},"end":{"line":153,"column":48}},"55":{"start":{"line":154,"column":8},"end":{"line":154,"column":72}},"56":{"start":{"line":160,"column":4},"end":{"line":160,"column":23}},"57":{"start":{"line":162,"column":4},"end":{"line":167,"column":7}},"58":{"start":{"line":163,"column":6},"end":{"line":163,"column":34}},"59":{"start":{"line":163,"column":19},"end":{"line":163,"column":34}},"60":{"start":{"line":164,"column":6},"end":{"line":164,"column":44}},"61":{"start":{"line":164,"column":29},"end":{"line":164,"column":44}},"62":{"start":{"line":166,"column":6},"end":{"line":166,"column":23}},"63":{"start":{"line":177,"column":4},"end":{"line":177,"column":17}},"64":{"start":{"line":180,"column":4},"end":{"line":180,"column":32}},"65":{"start":{"line":181,"column":4},"end":{"line":181,"column":44}},"66":{"start":{"line":184,"column":4},"end":{"line":184,"column":92}},"67":{"start":{"line":187,"column":4},"end":{"line":194,"column":5}},"68":{"start":{"line":190,"column":6},"end":{"line":190,"column":78}},"69":{"start":{"line":190,"column":52},"end":{"line":190,"column":78}},"70":{"start":{"line":193,"column":6},"end":{"line":193,"column":38}},"71":{"start":{"line":196,"column":4},"end":{"line":196,"column":52}},"72":{"start":{"line":196,"column":19},"end":{"line":196,"column":52}},"73":{"start":{"line":197,"column":4},"end":{"line":197,"column":54}},"74":{"start":{"line":199,"column":4},"end":{"line":199,"column":104}},"75":{"start":{"line":199,"column":42},"end":{"line":199,"column":104}},"76":{"start":{"line":201,"column":4},"end":{"line":205,"column":7}},"77":{"start":{"line":202,"column":6},"end":{"line":202,"column":30}},"78":{"start":{"line":202,"column":15},"end":{"line":202,"column":30}},"79":{"start":{"line":203,"column":6},"end":{"line":203,"column":47}},"80":{"start":{"line":204,"column":6},"end":{"line":204,"column":21}},"81":{"start":{"line":217,"column":4},"end":{"line":217,"column":39}},"82":{"start":{"line":221,"column":4},"end":{"line":221,"column":32}},"83":{"start":{"line":222,"column":4},"end":{"line":222,"column":44}},"84":{"start":{"line":224,"column":4},"end":{"line":228,"column":5}},"85":{"start":{"line":225,"column":6},"end":{"line":225,"column":26}},"86":{"start":{"line":226,"column":11},"end":{"line":228,"column":5}},"87":{"start":{"line":227,"column":6},"end":{"line":227,"column":59}},"88":{"start":{"line":231,"column":4},"end":{"line":231,"column":55}},"89":{"start":{"line":234,"column":4},"end":{"line":234,"column":78}},"90":{"start":{"line":234,"column":52},"end":{"line":234,"column":78}},"91":{"start":{"line":236,"column":4},"end":{"line":236,"column":42}},"92":{"start":{"line":237,"column":4},"end":{"line":237,"column":54}},"93":{"start":{"line":239,"column":4},"end":{"line":245,"column":8}},"94":{"start":{"line":240,"column":6},"end":{"line":243,"column":7}},"95":{"start":{"line":241,"column":8},"end":{"line":241,"column":58}},"96":{"start":{"line":241,"column":37},"end":{"line":241,"column":58}},"97":{"start":{"line":242,"column":8},"end":{"line":242,"column":23}},"98":{"start":{"line":244,"column":6},"end":{"line":244,"column":38}},"99":{"start":{"line":258,"column":4},"end":{"line":258,"column":32}},"100":{"start":{"line":259,"column":4},"end":{"line":259,"column":44}},"101":{"start":{"line":262,"column":4},"end":{"line":262,"column":56}},"102":{"start":{"line":265,"column":4},"end":{"line":265,"column":79}},"103":{"start":{"line":265,"column":53},"end":{"line":265,"column":79}},"104":{"start":{"line":267,"column":4},"end":{"line":267,"column":43}},"105":{"start":{"line":268,"column":4},"end":{"line":268,"column":54}},"106":{"start":{"line":270,"column":4},"end":{"line":270,"column":61}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"3":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"4":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"5":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"6":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":6},"end":{"line":85,"column":6}},{"start":{"line":85,"column":6},"end":{"line":85,"column":6}}]},"7":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"8":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"9":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"10":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"11":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":8},"end":{"line":144,"column":17}},{"start":{"line":144,"column":21},"end":{"line":144,"column":44}}]},"12":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":147,"column":4}},{"start":{"line":147,"column":4},"end":{"line":147,"column":4}}]},"13":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":6}},{"start":{"line":151,"column":6},"end":{"line":151,"column":6}}]},"14":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":6},"end":{"line":163,"column":6}},{"start":{"line":163,"column":6},"end":{"line":163,"column":6}}]},"15":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":6}},{"start":{"line":164,"column":6},"end":{"line":164,"column":6}}]},"16":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"17":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":6},"end":{"line":190,"column":6}},{"start":{"line":190,"column":6},"end":{"line":190,"column":6}}]},"18":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":4}},{"start":{"line":196,"column":4},"end":{"line":196,"column":4}}]},"19":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"20":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":6},"end":{"line":202,"column":6}},{"start":{"line":202,"column":6},"end":{"line":202,"column":6}}]},"21":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":18},"end":{"line":203,"column":24}},{"start":{"line":203,"column":28},"end":{"line":203,"column":41}},{"start":{"line":203,"column":45},"end":{"line":203,"column":46}}]},"22":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":224,"column":4}},{"start":{"line":224,"column":4},"end":{"line":224,"column":4}}]},"23":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":11},"end":{"line":226,"column":11}},{"start":{"line":226,"column":11},"end":{"line":226,"column":11}}]},"24":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":4},"end":{"line":234,"column":4}},{"start":{"line":234,"column":4},"end":{"line":234,"column":4}}]},"25":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":6},"end":{"line":240,"column":6}},{"start":{"line":240,"column":6},"end":{"line":240,"column":6}}]},"26":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":8},"end":{"line":241,"column":8}},{"start":{"line":241,"column":8},"end":{"line":241,"column":8}}]},"27":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":4},"end":{"line":265,"column":4}},{"start":{"line":265,"column":4},"end":{"line":265,"column":4}}]}},"code":["/**"," * Module Dependencies"," */","","var normalize = require('../utils/normalize');","var schema = require('../utils/schema');","var hasOwnProperty = require('../utils/helpers').object.hasOwnProperty;","var _ = require('lodash');","","","/**"," * DQL Adapter Normalization"," */","module.exports = {","","  hasJoin: function() {","    return hasOwnProperty(this.dictionary, 'join');","  },","","","  /**","   * join()","   *","   * If `join` is defined in the adapter, Waterline will use it to optimize","   * the `.populate()` implementation when joining collections within the same","   * database connection.","   *","   * @param  {[type]}   criteria","   * @param  {Function} cb","   */","  join: function(criteria, cb) {","","    // Normalize Arguments","    criteria = normalize.criteria(criteria);","    cb = normalize.callback(cb);","","    // Build Default Error Message","    var err = 'No join() method defined in adapter!';","","    // Find the connection to run this on","    if (!hasOwnProperty(this.dictionary, 'join')) return cb(new Error(err));","","    var connName = this.dictionary.join;","    var adapter = this.connections[connName]._adapter;","","    if (!hasOwnProperty(adapter, 'join')) return cb(new Error(err));","","    // Parse Join Criteria and set references to any collection tableName properties.","    // This is done here so that everywhere else in the codebase can use the collection identity.","    criteria = schema.serializeJoins(criteria, this.query.waterline.schema);","","    adapter.join(connName, this.collection, criteria, cb);","  },","","","  /**","   * create()","   *","   * Create one or more models.","   *","   * @param  {[type]}   values [description]","   * @param  {Function} cb     [description]","   * @return {[type]}          [description]","   */","  create: function(values, cb) {","","    var globalId = this.query.globalId;","","    // Normalize Arguments","    cb = normalize.callback(cb);","","    if (Array.isArray(values)) return this.createEach.call(this, values, cb);","","    // Build Default Error Message","    var err = 'No create() method defined in adapter!';","","    // Find the connection to run this on","    if (!hasOwnProperty(this.dictionary, 'create')) return cb(new Error(err));","","    var connName = this.dictionary.create;","    var adapter = this.connections[connName]._adapter;","","    if (!hasOwnProperty(adapter, 'create')) return cb(new Error(err));","    adapter.create(connName, this.collection, values, normalize.callback(function afterwards(err, createdRecord) {","      if (err) {","        if (typeof err === 'object') err.model = globalId;","        return cb(err);","      }","      else return cb(null, createdRecord);","    }));","  },","","","  /**","   * find()","   *","   * Find a set of models.","   *","   * @param  {[type]}   criteria [description]","   * @param  {Function} cb       [description]","   * @return {[type]}            [description]","   */","  find: function(criteria, cb) {","","    // Normalize Arguments","    criteria = normalize.criteria(criteria);","    cb = normalize.callback(cb);","","    // Build Default Error Message","    var err = 'No find() method defined in adapter!';","","    // Find the connection to run this on","    if (!hasOwnProperty(this.dictionary, 'find')) return cb(new Error(err));","","    var connName = this.dictionary.find;","    var adapter = this.connections[connName]._adapter;","","    if (!adapter.find) return cb(new Error(err));","    adapter.find(connName, this.collection, criteria, cb);","  },","","","  /**","   * findOne()","   *","   * Find exactly one model.","   *","   * @param  {[type]}   criteria [description]","   * @param  {Function} cb       [description]","   * @return {[type]}            [description]","   */","  findOne: function(criteria, cb) {","","    // make shallow copy of criteria so original does not get modified","    criteria = _.clone(criteria);","","    // Normalize Arguments","    cb = normalize.callback(cb);","","    // Build Default Error Message","    var err = '.findOne() requires a criteria. If you want the first record try .find().limit(1)';","","    // If no criteria is specified or where is empty return an error","    if (!criteria || criteria.where === null) return cb(new Error(err));","","    // Detects if there is a `findOne` in the adapter. Use it if it exists.","    if (hasOwnProperty(this.dictionary, 'findOne')) {","      var connName = this.dictionary.findOne;","      var adapter = this.connections[connName]._adapter;","","      if (adapter.findOne) {","        // Normalize Arguments","        criteria = normalize.criteria(criteria);","        return adapter.findOne(connName, this.collection, criteria, cb);","      }","    }","","    // Fallback to use `find()` to simulate a `findOne()`","    // Enforce limit to 1","    criteria.limit = 1;","","    this.find(criteria, function(err, models) {","      if (!models) return cb(err);","      if (models.length < 1) return cb(err);","","      cb(null, models);","    });","  },","","  /**","   * [count description]","   * @param  {[type]}   criteria [description]","   * @param  {Function} cb       [description]","   * @return {[type]}            [description]","   */","  count: function(criteria, cb) {","    var connName;","","    // Normalize Arguments","    cb = normalize.callback(cb);","    criteria = normalize.criteria(criteria);","","    // Build Default Error Message","    var err = '.count() requires the adapter define either a count method or a find method';","","    // Find the connection to run this on","    if (!hasOwnProperty(this.dictionary, 'count')) {","","      // If a count method isn't defined make sure a find method is","      if (!hasOwnProperty(this.dictionary, 'find')) return cb(new Error(err));","","      // Use the find method","      connName = this.dictionary.find;","    }","","    if (!connName) connName = this.dictionary.count;","    var adapter = this.connections[connName]._adapter;","","    if (hasOwnProperty(adapter, 'count')) return adapter.count(connName, this.collection, criteria, cb);","","    this.find(criteria, function(err, models) {","      if (err) return cb(err);","      var count = models && models.length || 0;","      cb(err, count);","    });","  },","","","  /**","   * [update description]","   * @param  {[type]}   criteria [description]","   * @param  {[type]}   values   [description]","   * @param  {Function} cb       [description]","   * @return {[type]}            [description]","   */","  update: function(criteria, values, cb) {","    var globalId = this.query.globalId;","","","    // Normalize Arguments","    cb = normalize.callback(cb);","    criteria = normalize.criteria(criteria);","","    if (criteria === false) {","      return cb(null, []);","    } else if (!criteria) {","      return cb(new Error('No criteria or id specified!'));","    }","","    // Build Default Error Message","    var err = 'No update() method defined in adapter!';","","    // Find the connection to run this on","    if (!hasOwnProperty(this.dictionary, 'update')) return cb(new Error(err));","","    var connName = this.dictionary.update;","    var adapter = this.connections[connName]._adapter;","","    adapter.update(connName, this.collection, criteria, values, normalize.callback(function afterwards(err, updatedRecords) {","      if (err) {","        if (typeof err === 'object') err.model = globalId;","        return cb(err);","      }","      return cb(null, updatedRecords);","    }));","  },","","","  /**","   * [destroy description]","   * @param  {[type]}   criteria [description]","   * @param  {Function} cb       [description]","   * @return {[type]}            [description]","   */","  destroy: function(criteria, cb) {","","    // Normalize Arguments","    cb = normalize.callback(cb);","    criteria = normalize.criteria(criteria);","","    // Build Default Error Message","    var err = 'No destroy() method defined in adapter!';","","    // Find the connection to run this on","    if (!hasOwnProperty(this.dictionary, 'destroy')) return cb(new Error(err));","","    var connName = this.dictionary.destroy;","    var adapter = this.connections[connName]._adapter;","","    adapter.destroy(connName, this.collection, criteria, cb);","  }","","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"14":1,"17":0,"34":0,"35":0,"38":0,"41":0,"43":0,"44":0,"46":0,"50":0,"52":0,"67":0,"70":0,"72":0,"75":0,"78":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"106":0,"107":0,"110":0,"113":0,"115":0,"116":0,"118":0,"119":0,"135":0,"138":0,"141":0,"144":0,"147":0,"148":0,"149":0,"151":0,"153":0,"154":0,"160":0,"162":0,"163":0,"164":0,"166":0,"177":0,"180":0,"181":0,"184":0,"187":0,"190":0,"193":0,"196":0,"197":0,"199":0,"201":0,"202":0,"203":0,"204":0,"217":0,"221":0,"222":0,"224":0,"225":0,"226":0,"227":0,"231":0,"234":0,"236":0,"237":0,"239":0,"240":0,"241":0,"242":0,"244":0,"258":0,"259":0,"262":0,"265":0,"267":0,"268":0,"270":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/normalize.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/normalize.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":1,"168":0,"169":0,"170":0,"171":1,"172":0,"173":1,"174":0,"175":1,"176":0,"177":1,"178":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0,0,0,0,0,0,0,0,0,0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0,0],"37":[0,0],"38":[0,0,0],"39":[0,0],"40":[0,0,0],"41":[0,0],"42":[0,0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0,0],"47":[0,0],"48":[0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":12},"end":{"line":11,"column":39}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":19},"end":{"line":52,"column":32}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":19},"end":{"line":54,"column":32}}},"4":{"name":"(anonymous_4)","line":58,"loc":{"start":{"line":58,"column":19},"end":{"line":58,"column":32}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":12},"end":{"line":79,"column":35}}},"6":{"name":"(anonymous_6)","line":96,"loc":{"start":{"line":96,"column":21},"end":{"line":96,"column":40}}},"7":{"name":"(anonymous_7)","line":200,"loc":{"start":{"line":200,"column":42},"end":{"line":200,"column":56}}},"8":{"name":"(anonymous_8)","line":219,"loc":{"start":{"line":219,"column":32},"end":{"line":219,"column":52}}},"9":{"name":"(anonymous_9)","line":220,"loc":{"start":{"line":220,"column":36},"end":{"line":220,"column":50}}},"10":{"name":"(anonymous_10)","line":246,"loc":{"start":{"line":246,"column":41},"end":{"line":246,"column":56}}},"11":{"name":"(anonymous_11)","line":262,"loc":{"start":{"line":262,"column":41},"end":{"line":262,"column":56}}},"12":{"name":"(anonymous_12)","line":280,"loc":{"start":{"line":280,"column":16},"end":{"line":280,"column":57}}},"13":{"name":"(anonymous_13)","line":299,"loc":{"start":{"line":299,"column":13},"end":{"line":299,"column":33}}},"14":{"name":"(anonymous_14)","line":313,"loc":{"start":{"line":313,"column":12},"end":{"line":313,"column":25}}},"15":{"name":"(anonymous_15)","line":319,"loc":{"start":{"line":319,"column":24},"end":{"line":319,"column":38}}},"16":{"name":"_defaultErrorHandler","line":351,"loc":{"start":{"line":351,"column":13},"end":{"line":351,"column":45}}},"17":{"name":"numberizeModel","line":380,"loc":{"start":{"line":380,"column":0},"end":{"line":380,"column":31}}},"18":{"name":"numberize","line":386,"loc":{"start":{"line":386,"column":0},"end":{"line":386,"column":25}}},"19":{"name":"isNumbery","line":392,"loc":{"start":{"line":392,"column":0},"end":{"line":392,"column":26}}},"20":{"name":"escapeLikeQuery","line":397,"loc":{"start":{"line":397,"column":0},"end":{"line":397,"column":40}}},"21":{"name":"unescapeLikeQuery","line":402,"loc":{"start":{"line":402,"column":0},"end":{"line":402,"column":42}}},"22":{"name":"applyInOriginalCtx","line":420,"loc":{"start":{"line":420,"column":0},"end":{"line":420,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":26}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":32}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"7":{"start":{"line":8,"column":0},"end":{"line":376,"column":2}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":18}},"9":{"start":{"line":17,"column":4},"end":{"line":29,"column":5}},"10":{"start":{"line":19,"column":6},"end":{"line":28,"column":7}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":89}},"12":{"start":{"line":20,"column":80},"end":{"line":20,"column":89}},"13":{"start":{"line":23,"column":8},"end":{"line":23,"column":58}},"14":{"start":{"line":23,"column":49},"end":{"line":23,"column":58}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":17}},"16":{"start":{"line":27,"column":8},"end":{"line":27,"column":14}},"17":{"start":{"line":33,"column":4},"end":{"line":40,"column":5}},"18":{"start":{"line":35,"column":6},"end":{"line":35,"column":40}},"19":{"start":{"line":38,"column":6},"end":{"line":38,"column":19}},"20":{"start":{"line":39,"column":6},"end":{"line":39,"column":31}},"21":{"start":{"line":44,"column":4},"end":{"line":72,"column":5}},"22":{"start":{"line":46,"column":6},"end":{"line":46,"column":19}},"23":{"start":{"line":47,"column":6},"end":{"line":49,"column":7}},"24":{"start":{"line":48,"column":8},"end":{"line":48,"column":18}},"25":{"start":{"line":51,"column":6},"end":{"line":59,"column":7}},"26":{"start":{"line":52,"column":8},"end":{"line":52,"column":46}},"27":{"start":{"line":52,"column":33},"end":{"line":52,"column":44}},"28":{"start":{"line":53,"column":13},"end":{"line":59,"column":7}},"29":{"start":{"line":54,"column":8},"end":{"line":54,"column":64}},"30":{"start":{"line":54,"column":33},"end":{"line":54,"column":62}},"31":{"start":{"line":58,"column":8},"end":{"line":58,"column":45}},"32":{"start":{"line":58,"column":33},"end":{"line":58,"column":43}},"33":{"start":{"line":62,"column":6},"end":{"line":70,"column":7}},"34":{"start":{"line":63,"column":8},"end":{"line":63,"column":48}},"35":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"36":{"start":{"line":68,"column":10},"end":{"line":68,"column":46}},"37":{"start":{"line":74,"column":4},"end":{"line":74,"column":19}},"38":{"start":{"line":80,"column":4},"end":{"line":80,"column":45}},"39":{"start":{"line":83,"column":4},"end":{"line":83,"column":44}},"40":{"start":{"line":83,"column":28},"end":{"line":83,"column":44}},"41":{"start":{"line":85,"column":4},"end":{"line":89,"column":5}},"42":{"start":{"line":86,"column":6},"end":{"line":88,"column":8}},"43":{"start":{"line":93,"column":4},"end":{"line":93,"column":49}},"44":{"start":{"line":93,"column":33},"end":{"line":93,"column":49}},"45":{"start":{"line":96,"column":4},"end":{"line":98,"column":7}},"46":{"start":{"line":97,"column":6},"end":{"line":97,"column":51}},"47":{"start":{"line":97,"column":30},"end":{"line":97,"column":51}},"48":{"start":{"line":102,"column":4},"end":{"line":106,"column":5}},"49":{"start":{"line":103,"column":6},"end":{"line":105,"column":8}},"50":{"start":{"line":108,"column":4},"end":{"line":110,"column":5}},"51":{"start":{"line":109,"column":6},"end":{"line":109,"column":37}},"52":{"start":{"line":113,"column":4},"end":{"line":113,"column":97}},"53":{"start":{"line":113,"column":31},"end":{"line":113,"column":97}},"54":{"start":{"line":116,"column":4},"end":{"line":132,"column":61}},"55":{"start":{"line":121,"column":6},"end":{"line":121,"column":28}},"56":{"start":{"line":122,"column":6},"end":{"line":122,"column":28}},"57":{"start":{"line":123,"column":6},"end":{"line":123,"column":27}},"58":{"start":{"line":124,"column":6},"end":{"line":124,"column":28}},"59":{"start":{"line":125,"column":6},"end":{"line":125,"column":27}},"60":{"start":{"line":126,"column":6},"end":{"line":126,"column":27}},"61":{"start":{"line":127,"column":6},"end":{"line":129,"column":8}},"62":{"start":{"line":132,"column":11},"end":{"line":132,"column":61}},"63":{"start":{"line":132,"column":41},"end":{"line":132,"column":61}},"64":{"start":{"line":136,"column":4},"end":{"line":143,"column":5}},"65":{"start":{"line":137,"column":6},"end":{"line":137,"column":67}},"66":{"start":{"line":138,"column":6},"end":{"line":138,"column":49}},"67":{"start":{"line":138,"column":30},"end":{"line":138,"column":49}},"68":{"start":{"line":139,"column":6},"end":{"line":139,"column":34}},"69":{"start":{"line":140,"column":11},"end":{"line":143,"column":5}},"70":{"start":{"line":141,"column":6},"end":{"line":141,"column":52}},"71":{"start":{"line":142,"column":6},"end":{"line":142,"column":49}},"72":{"start":{"line":142,"column":30},"end":{"line":142,"column":49}},"73":{"start":{"line":145,"column":4},"end":{"line":152,"column":5}},"74":{"start":{"line":146,"column":6},"end":{"line":146,"column":65}},"75":{"start":{"line":147,"column":6},"end":{"line":147,"column":47}},"76":{"start":{"line":147,"column":29},"end":{"line":147,"column":47}},"77":{"start":{"line":148,"column":6},"end":{"line":148,"column":33}},"78":{"start":{"line":149,"column":11},"end":{"line":152,"column":5}},"79":{"start":{"line":150,"column":6},"end":{"line":150,"column":50}},"80":{"start":{"line":151,"column":6},"end":{"line":151,"column":47}},"81":{"start":{"line":151,"column":29},"end":{"line":151,"column":47}},"82":{"start":{"line":154,"column":4},"end":{"line":157,"column":5}},"83":{"start":{"line":155,"column":6},"end":{"line":155,"column":51}},"84":{"start":{"line":156,"column":6},"end":{"line":156,"column":33}},"85":{"start":{"line":160,"column":4},"end":{"line":163,"column":5}},"86":{"start":{"line":161,"column":6},"end":{"line":161,"column":49}},"87":{"start":{"line":162,"column":6},"end":{"line":162,"column":32}},"88":{"start":{"line":165,"column":4},"end":{"line":168,"column":5}},"89":{"start":{"line":166,"column":6},"end":{"line":166,"column":57}},"90":{"start":{"line":167,"column":6},"end":{"line":167,"column":36}},"91":{"start":{"line":170,"column":4},"end":{"line":173,"column":5}},"92":{"start":{"line":171,"column":6},"end":{"line":171,"column":57}},"93":{"start":{"line":172,"column":6},"end":{"line":172,"column":36}},"94":{"start":{"line":175,"column":4},"end":{"line":178,"column":5}},"95":{"start":{"line":176,"column":6},"end":{"line":176,"column":49}},"96":{"start":{"line":177,"column":6},"end":{"line":177,"column":32}},"97":{"start":{"line":180,"column":4},"end":{"line":183,"column":5}},"98":{"start":{"line":181,"column":6},"end":{"line":181,"column":49}},"99":{"start":{"line":182,"column":6},"end":{"line":182,"column":32}},"100":{"start":{"line":185,"column":4},"end":{"line":188,"column":5}},"101":{"start":{"line":186,"column":6},"end":{"line":186,"column":55}},"102":{"start":{"line":187,"column":6},"end":{"line":187,"column":35}},"103":{"start":{"line":191,"column":4},"end":{"line":193,"column":5}},"104":{"start":{"line":192,"column":6},"end":{"line":192,"column":28}},"105":{"start":{"line":198,"column":4},"end":{"line":207,"column":5}},"106":{"start":{"line":199,"column":6},"end":{"line":199,"column":24}},"107":{"start":{"line":200,"column":6},"end":{"line":204,"column":9}},"108":{"start":{"line":201,"column":8},"end":{"line":203,"column":9}},"109":{"start":{"line":202,"column":10},"end":{"line":202,"column":23}},"110":{"start":{"line":206,"column":6},"end":{"line":206,"column":30}},"111":{"start":{"line":206,"column":17},"end":{"line":206,"column":30}},"112":{"start":{"line":211,"column":4},"end":{"line":228,"column":5}},"113":{"start":{"line":214,"column":6},"end":{"line":216,"column":7}},"114":{"start":{"line":215,"column":8},"end":{"line":215,"column":107}},"115":{"start":{"line":218,"column":6},"end":{"line":218,"column":50}},"116":{"start":{"line":219,"column":6},"end":{"line":225,"column":9}},"117":{"start":{"line":220,"column":8},"end":{"line":224,"column":11}},"118":{"start":{"line":221,"column":10},"end":{"line":223,"column":11}},"119":{"start":{"line":222,"column":12},"end":{"line":222,"column":32}},"120":{"start":{"line":227,"column":6},"end":{"line":227,"column":33}},"121":{"start":{"line":231,"column":4},"end":{"line":271,"column":5}},"122":{"start":{"line":234,"column":6},"end":{"line":243,"column":7}},"123":{"start":{"line":235,"column":8},"end":{"line":235,"column":45}},"124":{"start":{"line":238,"column":8},"end":{"line":238,"column":61}},"125":{"start":{"line":241,"column":8},"end":{"line":241,"column":27}},"126":{"start":{"line":242,"column":8},"end":{"line":242,"column":43}},"127":{"start":{"line":246,"column":6},"end":{"line":259,"column":9}},"128":{"start":{"line":248,"column":8},"end":{"line":255,"column":9}},"129":{"start":{"line":249,"column":10},"end":{"line":249,"column":66}},"130":{"start":{"line":252,"column":10},"end":{"line":254,"column":11}},"131":{"start":{"line":253,"column":12},"end":{"line":253,"column":80}},"132":{"start":{"line":257,"column":8},"end":{"line":257,"column":67}},"133":{"start":{"line":257,"column":43},"end":{"line":257,"column":67}},"134":{"start":{"line":258,"column":8},"end":{"line":258,"column":69}},"135":{"start":{"line":258,"column":44},"end":{"line":258,"column":69}},"136":{"start":{"line":262,"column":6},"end":{"line":264,"column":9}},"137":{"start":{"line":263,"column":8},"end":{"line":263,"column":64}},"138":{"start":{"line":263,"column":39},"end":{"line":263,"column":64}},"139":{"start":{"line":268,"column":6},"end":{"line":270,"column":7}},"140":{"start":{"line":269,"column":8},"end":{"line":269,"column":93}},"141":{"start":{"line":273,"column":4},"end":{"line":273,"column":20}},"142":{"start":{"line":283,"column":4},"end":{"line":283,"column":52}},"143":{"start":{"line":283,"column":39},"end":{"line":283,"column":52}},"144":{"start":{"line":285,"column":4},"end":{"line":285,"column":33}},"145":{"start":{"line":287,"column":4},"end":{"line":287,"column":56}},"146":{"start":{"line":287,"column":25},"end":{"line":287,"column":56}},"147":{"start":{"line":290,"column":4},"end":{"line":290,"column":73}},"148":{"start":{"line":290,"column":18},"end":{"line":290,"column":73}},"149":{"start":{"line":292,"column":4},"end":{"line":292,"column":46}},"150":{"start":{"line":294,"column":4},"end":{"line":294,"column":20}},"151":{"start":{"line":302,"column":4},"end":{"line":302,"column":53}},"152":{"start":{"line":317,"column":4},"end":{"line":317,"column":24}},"153":{"start":{"line":318,"column":4},"end":{"line":337,"column":5}},"154":{"start":{"line":319,"column":6},"end":{"line":336,"column":8}},"155":{"start":{"line":323,"column":8},"end":{"line":325,"column":9}},"156":{"start":{"line":324,"column":10},"end":{"line":324,"column":51}},"157":{"start":{"line":329,"column":8},"end":{"line":329,"column":28}},"158":{"start":{"line":331,"column":8},"end":{"line":331,"column":68}},"159":{"start":{"line":332,"column":8},"end":{"line":332,"column":34}},"160":{"start":{"line":335,"column":8},"end":{"line":335,"column":52}},"161":{"start":{"line":348,"column":4},"end":{"line":348,"column":48}},"162":{"start":{"line":348,"column":27},"end":{"line":348,"column":48}},"163":{"start":{"line":349,"column":4},"end":{"line":354,"column":7}},"164":{"start":{"line":352,"column":8},"end":{"line":352,"column":76}},"165":{"start":{"line":380,"column":0},"end":{"line":382,"column":1}},"166":{"start":{"line":381,"column":2},"end":{"line":381,"column":39}},"167":{"start":{"line":386,"column":0},"end":{"line":389,"column":1}},"168":{"start":{"line":387,"column":2},"end":{"line":388,"column":19}},"169":{"start":{"line":387,"column":83},"end":{"line":387,"column":96}},"170":{"start":{"line":388,"column":7},"end":{"line":388,"column":19}},"171":{"start":{"line":392,"column":0},"end":{"line":394,"column":1}},"172":{"start":{"line":393,"column":2},"end":{"line":393,"column":33}},"173":{"start":{"line":397,"column":0},"end":{"line":399,"column":1}},"174":{"start":{"line":398,"column":2},"end":{"line":398,"column":52}},"175":{"start":{"line":402,"column":0},"end":{"line":404,"column":1}},"176":{"start":{"line":403,"column":2},"end":{"line":403,"column":44}},"177":{"start":{"line":420,"column":0},"end":{"line":422,"column":1}},"178":{"start":{"line":421,"column":2},"end":{"line":421,"column":82}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":8}},{"start":{"line":20,"column":8},"end":{"line":20,"column":8}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":8}},{"start":{"line":23,"column":8},"end":{"line":23,"column":8}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"5":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":27}},{"start":{"line":33,"column":31},"end":{"line":33,"column":50}},{"start":{"line":33,"column":54},"end":{"line":33,"column":76}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"7":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":15}},{"start":{"line":44,"column":19},"end":{"line":44,"column":30}}]},"8":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":6}},{"start":{"line":47,"column":6},"end":{"line":47,"column":6}}]},"9":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":6}},{"start":{"line":51,"column":6},"end":{"line":51,"column":6}}]},"10":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":13},"end":{"line":53,"column":13}},{"start":{"line":53,"column":13},"end":{"line":53,"column":13}}]},"11":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":6}},{"start":{"line":62,"column":6},"end":{"line":62,"column":6}}]},"12":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":8}},{"start":{"line":67,"column":8},"end":{"line":67,"column":8}}]},"13":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"14":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"15":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"16":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":6},"end":{"line":97,"column":6}},{"start":{"line":97,"column":6},"end":{"line":97,"column":6}}]},"17":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"18":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":21}},{"start":{"line":104,"column":25},"end":{"line":104,"column":33}}]},"19":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"20":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":8},"end":{"line":108,"column":28}},{"start":{"line":108,"column":32},"end":{"line":108,"column":47}},{"start":{"line":108,"column":51},"end":{"line":108,"column":74}}]},"21":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"22":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"23":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":23}},{"start":{"line":116,"column":27},"end":{"line":116,"column":42}},{"start":{"line":116,"column":46},"end":{"line":116,"column":60}},{"start":{"line":116,"column":64},"end":{"line":116,"column":79}},{"start":{"line":116,"column":83},"end":{"line":116,"column":97}},{"start":{"line":117,"column":6},"end":{"line":117,"column":20}},{"start":{"line":117,"column":24},"end":{"line":117,"column":37}},{"start":{"line":117,"column":41},"end":{"line":117,"column":58}},{"start":{"line":118,"column":6},"end":{"line":118,"column":23}},{"start":{"line":118,"column":27},"end":{"line":118,"column":40}},{"start":{"line":118,"column":44},"end":{"line":118,"column":57}},{"start":{"line":118,"column":61},"end":{"line":118,"column":77}}]},"24":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":11},"end":{"line":132,"column":11}},{"start":{"line":132,"column":11},"end":{"line":132,"column":11}}]},"25":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"26":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":30}},{"start":{"line":136,"column":34},"end":{"line":136,"column":57}},{"start":{"line":136,"column":61},"end":{"line":136,"column":89}}]},"27":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"28":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":11},"end":{"line":140,"column":11}},{"start":{"line":140,"column":11},"end":{"line":140,"column":11}}]},"29":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":6}},{"start":{"line":142,"column":6},"end":{"line":142,"column":6}}]},"30":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"31":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":30}},{"start":{"line":145,"column":34},"end":{"line":145,"column":57}},{"start":{"line":145,"column":61},"end":{"line":145,"column":88}}]},"32":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":6},"end":{"line":147,"column":6}},{"start":{"line":147,"column":6},"end":{"line":147,"column":6}}]},"33":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":11},"end":{"line":149,"column":11}},{"start":{"line":149,"column":11},"end":{"line":149,"column":11}}]},"34":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":6}},{"start":{"line":151,"column":6},"end":{"line":151,"column":6}}]},"35":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"36":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":30}},{"start":{"line":154,"column":34},"end":{"line":154,"column":57}},{"start":{"line":154,"column":61},"end":{"line":154,"column":88}}]},"37":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"38":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":8},"end":{"line":160,"column":30}},{"start":{"line":160,"column":34},"end":{"line":160,"column":57}},{"start":{"line":160,"column":61},"end":{"line":160,"column":87}}]},"39":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":165,"column":4}},{"start":{"line":165,"column":4},"end":{"line":165,"column":4}}]},"40":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":8},"end":{"line":165,"column":30}},{"start":{"line":165,"column":34},"end":{"line":165,"column":57}},{"start":{"line":165,"column":61},"end":{"line":165,"column":91}}]},"41":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":170,"column":4}},{"start":{"line":170,"column":4},"end":{"line":170,"column":4}}]},"42":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":8},"end":{"line":170,"column":30}},{"start":{"line":170,"column":34},"end":{"line":170,"column":57}},{"start":{"line":170,"column":61},"end":{"line":170,"column":91}}]},"43":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"44":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":8},"end":{"line":175,"column":30}},{"start":{"line":175,"column":34},"end":{"line":175,"column":57}},{"start":{"line":175,"column":61},"end":{"line":175,"column":87}}]},"45":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":4},"end":{"line":180,"column":4}},{"start":{"line":180,"column":4},"end":{"line":180,"column":4}}]},"46":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":8},"end":{"line":180,"column":30}},{"start":{"line":180,"column":34},"end":{"line":180,"column":57}},{"start":{"line":180,"column":61},"end":{"line":180,"column":87}}]},"47":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":185,"column":4}},{"start":{"line":185,"column":4},"end":{"line":185,"column":4}}]},"48":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":8},"end":{"line":185,"column":30}},{"start":{"line":185,"column":34},"end":{"line":185,"column":57}},{"start":{"line":185,"column":61},"end":{"line":185,"column":90}}]},"49":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":191,"column":4}},{"start":{"line":191,"column":4},"end":{"line":191,"column":4}}]},"50":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":8},"end":{"line":191,"column":22}},{"start":{"line":191,"column":26},"end":{"line":191,"column":61}}]},"51":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"52":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":201,"column":8}},{"start":{"line":201,"column":8},"end":{"line":201,"column":8}}]},"53":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":12},"end":{"line":201,"column":46}},{"start":{"line":201,"column":50},"end":{"line":201,"column":82}}]},"54":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":6},"end":{"line":206,"column":6}},{"start":{"line":206,"column":6},"end":{"line":206,"column":6}}]},"55":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"56":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":8},"end":{"line":211,"column":22}},{"start":{"line":211,"column":26},"end":{"line":211,"column":51}}]},"57":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":6},"end":{"line":214,"column":6}},{"start":{"line":214,"column":6},"end":{"line":214,"column":6}}]},"58":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":10},"end":{"line":221,"column":10}},{"start":{"line":221,"column":10},"end":{"line":221,"column":10}}]},"59":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":14},"end":{"line":221,"column":40}},{"start":{"line":221,"column":44},"end":{"line":221,"column":68}}]},"60":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":4},"end":{"line":231,"column":4}},{"start":{"line":231,"column":4},"end":{"line":231,"column":4}}]},"61":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":8},"end":{"line":231,"column":29}},{"start":{"line":231,"column":33},"end":{"line":231,"column":55}}]},"62":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":6},"end":{"line":234,"column":6}},{"start":{"line":234,"column":6},"end":{"line":234,"column":6}}]},"63":{"line":238,"type":"cond-expr","locations":[{"start":{"line":238,"column":30},"end":{"line":238,"column":52}},{"start":{"line":238,"column":55},"end":{"line":238,"column":60}}]},"64":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":248,"column":8}},{"start":{"line":248,"column":8},"end":{"line":248,"column":8}}]},"65":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":10},"end":{"line":252,"column":10}},{"start":{"line":252,"column":10},"end":{"line":252,"column":10}}]},"66":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":14},"end":{"line":252,"column":43}},{"start":{"line":252,"column":47},"end":{"line":252,"column":77}}]},"67":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":8},"end":{"line":257,"column":8}},{"start":{"line":257,"column":8},"end":{"line":257,"column":8}}]},"68":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8}},{"start":{"line":258,"column":8},"end":{"line":258,"column":8}}]},"69":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":8},"end":{"line":263,"column":8}},{"start":{"line":263,"column":8},"end":{"line":263,"column":8}}]},"70":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":6},"end":{"line":268,"column":6}},{"start":{"line":268,"column":6},"end":{"line":268,"column":6}}]},"71":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":10},"end":{"line":268,"column":36}},{"start":{"line":268,"column":40},"end":{"line":268,"column":68}}]},"72":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":4},"end":{"line":283,"column":4}},{"start":{"line":283,"column":4},"end":{"line":283,"column":4}}]},"73":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]},"74":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":4},"end":{"line":290,"column":4}},{"start":{"line":290,"column":4},"end":{"line":290,"column":4}}]},"75":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":4},"end":{"line":318,"column":4}},{"start":{"line":318,"column":4},"end":{"line":318,"column":4}}]},"76":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":8},"end":{"line":323,"column":8}},{"start":{"line":323,"column":8},"end":{"line":323,"column":8}}]},"77":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":4},"end":{"line":348,"column":4}},{"start":{"line":348,"column":4},"end":{"line":348,"column":4}}]},"78":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":2},"end":{"line":387,"column":2}},{"start":{"line":387,"column":2},"end":{"line":387,"column":2}}]},"79":{"line":387,"type":"binary-expr","locations":[{"start":{"line":387,"column":6},"end":{"line":387,"column":22}},{"start":{"line":387,"column":26},"end":{"line":387,"column":41}},{"start":{"line":387,"column":45},"end":{"line":387,"column":81}}]}},"code":["var _ = require('lodash');","var util = require('./helpers');","var hop = util.object.hasOwnProperty;","var switchback = require('switchback');","var errorify = require('../error');","var WLUsageError = require('../error/WLUsageError');","","var normalize = module.exports = {","","  // Expand Primary Key criteria into objects","  expandPK: function(context, options) {","","    // Default to id as primary key","    var pk = 'id';","","    // If autoPK is not used, attempt to find a primary key","    if (!context.autoPK) {","      // Check which attribute is used as primary key","      for (var key in context.attributes) {","        if (!util.object.hasOwnProperty(context.attributes[key], 'primaryKey')) continue;","","        // Check if custom primaryKey value is falsy","        if (!context.attributes[key].primaryKey) continue;","","        // If a custom primary key is defined, use it","        pk = key;","        break;","      }","    }","","    // Check if options is an integer or string and normalize criteria","    // to object, using the specified primary key field.","    if (_.isNumber(options) || _.isString(options) || Array.isArray(options)) {","      // Temporary store the given criteria","      var pkCriteria = _.clone(options);","","      // Make the criteria object, with the primary key","      options = {};","      options[pk] = pkCriteria;","    }","","    // If we're querying by primary key, create a coercion function for it","    // depending on the data type of the key","    if (options && options[pk]) {","","      var coercePK;","      if(!context.attributes[pk]) {","        return pk;","      }","      ","      if (context.attributes[pk].type == 'integer') {","        coercePK = function(pk) {return +pk;};","      } else if (context.attributes[pk].type == 'string') {","        coercePK = function(pk) {return String(pk).toString();};","","      // If the data type is unspecified, return the key as-is","      } else {","        coercePK = function(pk) {return pk;};","      }","","      // If the criteria is an array of PKs, coerce them all","      if (Array.isArray(options[pk])) {","        options[pk] = options[pk].map(coercePK);","","      // Otherwise just coerce the one","      } else {","        if (!_.isObject(options[pk])) {","          options[pk] = coercePK(options[pk]);","        }","      }","","    }","","    return options;","","  },","","  // Normalize the different ways of specifying criteria into a uniform object","  criteria: function(origCriteria) {","    var criteria = _.cloneDeep(origCriteria);","","    // If original criteria is already false, keep it that way.","    if (criteria === false) return criteria;","","    if (!criteria) {","      return {","        where: null","      };","    }","","    // Let the calling method normalize array criteria. It could be an IN query","    // where we need the PK of the collection or a .findOrCreateEach","    if (Array.isArray(criteria)) return criteria;","","    // Empty undefined values from criteria object","    _.each(criteria, function(val, key) {","      if (_.isUndefined(val)) criteria[key] = null;","    });","","    // Convert non-objects (ids) into a criteria","    // TODO: use customizable primary key attribute","    if (!_.isObject(criteria)) {","      criteria = {","        id: +criteria || criteria","      };","    }","","    if (_.isObject(criteria) && !criteria.where && criteria.where !== null) {","      criteria = { where: criteria };","    }","","    // Return string to indicate an error","    if (!_.isObject(criteria)) throw new WLUsageError('Invalid options/criteria :: ' + criteria);","","    // If criteria doesn't seem to contain operational keys, assume all the keys are criteria","    if (!criteria.where && !criteria.joins && !criteria.join && !criteria.limit && !criteria.skip &&","      !criteria.sort && !criteria.sum && !criteria.average &&","      !criteria.groupBy && !criteria.min && !criteria.max && !criteria.select) {","","      // Delete any residuals and then use the remaining keys as attributes in a criteria query","      delete criteria.where;","      delete criteria.joins;","      delete criteria.join;","      delete criteria.limit;","      delete criteria.skip;","      delete criteria.sort;","      criteria = {","        where: criteria","      };","","    // If where is null, turn it into an object","    } else if (_.isNull(criteria.where)) criteria.where = {};","","","    // Move Limit, Skip, sort outside the where criteria","    if (hop(criteria, 'where') && criteria.where !== null && hop(criteria.where, 'limit')) {","      criteria.limit = parseInt(_.clone(criteria.where.limit), 10);","      if (criteria.limit < 0) criteria.limit = 0;","      delete criteria.where.limit;","    } else if (hop(criteria, 'limit')) {","      criteria.limit = parseInt(criteria.limit, 10);","      if (criteria.limit < 0) criteria.limit = 0;","    }","","    if (hop(criteria, 'where') && criteria.where !== null && hop(criteria.where, 'skip')) {","      criteria.skip = parseInt(_.clone(criteria.where.skip), 10);","      if (criteria.skip < 0) criteria.skip = 0;","      delete criteria.where.skip;","    } else if (hop(criteria, 'skip')) {","      criteria.skip = parseInt(criteria.skip, 10);","      if (criteria.skip < 0) criteria.skip = 0;","    }","","    if (hop(criteria, 'where') && criteria.where !== null && hop(criteria.where, 'sort')) {","      criteria.sort = _.clone(criteria.where.sort);","      delete criteria.where.sort;","    }","","    // Pull out aggregation keys from where key","    if (hop(criteria, 'where') && criteria.where !== null && hop(criteria.where, 'sum')) {","      criteria.sum = _.clone(criteria.where.sum);","      delete criteria.where.sum;","    }","","    if (hop(criteria, 'where') && criteria.where !== null && hop(criteria.where, 'average')) {","      criteria.average = _.clone(criteria.where.average);","      delete criteria.where.average;","    }","","    if (hop(criteria, 'where') && criteria.where !== null && hop(criteria.where, 'groupBy')) {","      criteria.groupBy = _.clone(criteria.where.groupBy);","      delete criteria.where.groupBy;","    }","","    if (hop(criteria, 'where') && criteria.where !== null && hop(criteria.where, 'min')) {","      criteria.min = _.clone(criteria.where.min);","      delete criteria.where.min;","    }","","    if (hop(criteria, 'where') && criteria.where !== null && hop(criteria.where, 'max')) {","      criteria.max = _.clone(criteria.where.max);","      delete criteria.where.max;","    }","","    if (hop(criteria, 'where') && criteria.where !== null && hop(criteria.where, 'select')) {","      criteria.select = _.clone(criteria.where.select);","      delete criteria.where.select;","    }","","    // If WHERE is {}, always change it back to null","    if (criteria.where && _.keys(criteria.where).length === 0) {","      criteria.where = null;","    }","","    // If an IN was specified in the top level query and is an empty array, we can return an","    // empty object without running the query because nothing will match anyway. Let's return","    // false from here so the query knows to exit out.","    if (criteria.where) {","      var falsy = false;","      Object.keys(criteria.where).forEach(function(key) {","        if (Array.isArray(criteria.where[key]) && criteria.where[key].length === 0) {","          falsy = true;","        }","      });","","      if (falsy) return false;","    }","","    // If an IN was specified inside an OR clause and is an empty array, remove it because nothing will","    // match it anyway and it can prevent errors in the adapters","    if (criteria.where && hop(criteria.where, 'or')) {","","      // Ensure `or` is an array","      if (!_.isArray(criteria.where.or)) {","        throw new WLUsageError('An `or` clause in a query should be specified as an array of subcriteria');","      }","","      var _clone = _.cloneDeep(criteria.where.or);","      criteria.where.or.forEach(function(clause, i) {","        Object.keys(clause).forEach(function(key) {","          if (Array.isArray(clause[key]) && clause[key].length === 0) {","            _clone.splice(i, 1);","          }","        });","      });","","      criteria.where.or = _clone;","    }","","    // Normalize sort criteria","    if (hop(criteria, 'sort') && criteria.sort !== null) {","","      // Split string into attr and sortDirection parts (default to 'asc')","      if (_.isString(criteria.sort)) {","        var parts = criteria.sort.split(' ');","","        // Set default sort to asc","        parts[1] = parts[1] ? parts[1].toLowerCase() : 'asc';","","        // Expand criteria.sort into object","        criteria.sort = {};","        criteria.sort[parts[0]] = parts[1];","      }","","      // normalize ASC/DESC notation","      Object.keys(criteria.sort).forEach(function(attr) {","","        if (_.isString(criteria.sort[attr])) {","          criteria.sort[attr] = criteria.sort[attr].toLowerCase();","","          // Throw error on invalid sort order","          if (criteria.sort[attr] !== 'asc' && criteria.sort[attr] !== 'desc') {","            throw new WLUsageError('Invalid sort criteria :: ' + criteria.sort);","          }","        }","","        if (criteria.sort[attr] === 'asc') criteria.sort[attr] = 1;","        if (criteria.sort[attr] === 'desc') criteria.sort[attr] = -1;","      });","","      // normalize binary sorting criteria","      Object.keys(criteria.sort).forEach(function(attr) {","        if (criteria.sort[attr] === 0) criteria.sort[attr] = -1;","      });","","      // Verify that user either specified a proper object","      // or provided explicit comparator function","      if (!_.isObject(criteria.sort) && !_.isFunction(criteria.sort)) {","        throw new WLUsageError('Invalid sort criteria for ' + attrName + ' :: ' + direction);","      }","    }","","    return criteria;","  },","","  // Normalize the capitalization and % wildcards in a like query","  // Returns false if criteria is invalid,","  // otherwise returns normalized criteria obj.","  // Enhancer is an optional function to run on each criterion to preprocess the string","  likeCriteria: function(criteria, attributes, enhancer) {","","    // Only accept criteria as an object","    if (criteria !== Object(criteria)) return false;","","    criteria = _.clone(criteria);","","    if (!criteria.where) criteria = { where: criteria };","","    // Apply enhancer to each","    if (enhancer) criteria.where = util.objMap(criteria.where, enhancer);","","    criteria.where = { like: criteria.where };","","    return criteria;","  },","","","  // Normalize a result set from an adapter","  resultSet: function(resultSet) {","","    // Ensure that any numbers that can be parsed have been","    return util.pluralize(resultSet, numberizeModel);","  },","","","  /**","   * Normalize the different ways of specifying callbacks in built-in Waterline methods.","   * Switchbacks vs. Callbacks (but not deferred objects/promises)","   *","   * @param  {Function|Handlers} cb","   * @return {Handlers}","   */","  callback: function(cb) {","","    // Build modified callback:","    // (only works for functions currently)","    var wrappedCallback;","    if (_.isFunction(cb)) {","      wrappedCallback = function(err) {","","        // If no error occurred, immediately trigger the original callback","        // without messing up the context or arguments:","        if (!err) {","          return applyInOriginalCtx(cb, arguments);","        }","","        // If an error argument is present, upgrade it to a WLError","        // (if it isn't one already)","        err = errorify(err);","","        var modifiedArgs = Array.prototype.slice.call(arguments, 1);","        modifiedArgs.unshift(err);","","        // Trigger callback without messing up the context or arguments:","        return applyInOriginalCtx(cb, modifiedArgs);","      };","    }","","","    //","    // TODO: Make it clear that switchback support it experimental.","    //","    // Push switchback support off until >= v0.11","    // or at least add a warning about it being a `stage 1: experimental`","    // feature.","    //","","    if (!_.isFunction(cb)) wrappedCallback = cb;","    return switchback(wrappedCallback, {","      invalid: 'error', // Redirect 'invalid' handler to 'error' handler","      error: function _defaultErrorHandler() {","        console.error.apply(console, Array.prototype.slice.call(arguments));","      }","    });","","","    // ????","    // TODO: determine support target for 2-way switchback usage","    // ????","","    // Allow callback to be -HANDLED- in different ways","    // at the app-level.","    // `cb` may be passed in (at app-level) as either:","    //    => an object of handlers","    //    => or a callback function","    //","    // If a callback function was provided, it will be","    // automatically upgraded to a simplerhandler object.","    // var cb_fromApp = switchback(cb);","","    // Allow callback to be -INVOKED- in different ways.","    // (adapter def)","    // var cb_fromAdapter = cb_fromApp;","","  }","};","","// If any attribute looks like a number, but it's a string","// cast it to a number","function numberizeModel(model) {","  return util.objMap(model, numberize);","}","","","// If specified attr looks like a number, but it's a string, cast it to a number","function numberize(attr) {","  if (_.isString(attr) && isNumbery(attr) && parseInt(attr, 10) < Math.pow(2, 53)) return +attr;","  else return attr;","}","","// Returns whether this value can be successfully parsed as a finite number","function isNumbery(value) {","  return Math.pow(+value, 2) > 0;","}","","// Replace % with %%%","function escapeLikeQuery(likeCriterion) {","  return likeCriterion.replace(/[^%]%[^%]/g, '%%%');","}","","// Replace %%% with %","function unescapeLikeQuery(likeCriterion) {","  return likeCriterion.replace(/%%%/g, '%');","}","","","/**"," * Like _.partial, but accepts an array of arguments instead of"," * comma-seperated args (if _.partial is `call`, this is `apply`.)"," * The biggest difference from `_.partial`, other than the usage,"," * is that this helper actually CALLS the partially applied function."," *"," * This helper is mainly useful for callbacks."," *"," * @param  {Function} fn   [description]"," * @param  {[type]}   args [description]"," * @return {[type]}        [description]"," */","","function applyInOriginalCtx(fn, args) {","  return (_.partial.apply(null, [fn].concat(Array.prototype.slice.call(args))))();","}",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"8":1,"14":0,"17":0,"19":0,"20":0,"23":0,"26":0,"27":0,"33":0,"35":0,"38":0,"39":0,"44":0,"46":0,"47":0,"48":0,"51":0,"52":0,"53":0,"54":0,"58":0,"62":0,"63":0,"67":0,"68":0,"74":0,"80":0,"83":0,"85":0,"86":0,"93":0,"96":0,"97":0,"102":0,"103":0,"108":0,"109":0,"113":0,"116":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"132":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"154":0,"155":0,"156":0,"160":0,"161":0,"162":0,"165":0,"166":0,"167":0,"170":0,"171":0,"172":0,"175":0,"176":0,"177":0,"180":0,"181":0,"182":0,"185":0,"186":0,"187":0,"191":0,"192":0,"198":0,"199":0,"200":0,"201":0,"202":0,"206":0,"211":0,"214":0,"215":0,"218":0,"219":0,"220":0,"221":0,"222":0,"227":0,"231":0,"234":0,"235":0,"238":0,"241":0,"242":0,"246":0,"248":0,"249":0,"252":0,"253":0,"257":0,"258":0,"262":0,"263":0,"268":0,"269":0,"273":0,"283":0,"285":0,"287":0,"290":0,"292":0,"294":0,"302":0,"317":0,"318":0,"319":0,"323":0,"324":0,"329":0,"331":0,"332":0,"335":0,"348":0,"349":0,"352":0,"380":1,"381":0,"386":1,"387":0,"388":0,"392":1,"393":0,"397":1,"398":0,"402":1,"403":0,"420":1,"421":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/error/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/error/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"errorify","line":34,"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":40}}},"2":{"name":"duckType","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":23}}},"3":{"name":"_isConstraintViolation","line":77,"loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":37}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":55}},"5":{"start":{"line":34,"column":0},"end":{"line":40,"column":2}},"6":{"start":{"line":37,"column":2},"end":{"line":37,"column":68}},"7":{"start":{"line":37,"column":57},"end":{"line":37,"column":68}},"8":{"start":{"line":39,"column":2},"end":{"line":39,"column":23}},"9":{"start":{"line":49,"column":0},"end":{"line":69,"column":1}},"10":{"start":{"line":55,"column":2},"end":{"line":60,"column":3}},"11":{"start":{"line":59,"column":4},"end":{"line":59,"column":38}},"12":{"start":{"line":66,"column":2},"end":{"line":68,"column":5}},"13":{"start":{"line":77,"column":0},"end":{"line":88,"column":1}},"14":{"start":{"line":80,"column":2},"end":{"line":87,"column":20}},"15":{"start":{"line":81,"column":4},"end":{"line":81,"column":16}},"16":{"start":{"line":87,"column":7},"end":{"line":87,"column":20}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"2":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":29}},{"start":{"line":37,"column":33},"end":{"line":37,"column":55}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"4":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"5":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":9}},{"start":{"line":80,"column":13},"end":{"line":80,"column":36}},{"start":{"line":80,"column":40},"end":{"line":80,"column":63}}]}},"code":["/**"," * Module dependencies"," */","","var util = require('util');","var _ = require('lodash');","var WLError = require('./WLError');","var WLValidationError = require('./WLValidationError');","","","/**"," * A classifier which normalizes a mystery error into a simple,"," * consistent format.  This ensures that our instance which is"," * \"new\"-ed up belongs to one of a handful of distinct categories"," * and has a predictable method signature and properties."," *"," * The returned error instance will always be or extend from"," * `WLError` (which extends from `Error`)"," *"," * NOTE:"," * This method should eventually be deprecated in a"," * future version of Waterline.  It exists to help"," * w/ error type negotiation.  In general, Waterline"," * should use WLError, or errors which extend from it"," * to construct error objects of the appropriate type."," * In other words, no ** new ** errors should need to"," * be wrapped in a call to `errorify` - instead, code"," * necessary to handle any new error conditions should"," * construct a `WLError` directly and return that."," *"," * @param  {???} err"," * @return {WLError}"," */","module.exports = function errorify(err) {","","  // If specified `err` is already a WLError, just return it.","  if (typeof err === 'object' && err instanceof WLError) return err;","","  return duckType(err);","};","","","/**"," * Determine which type of error we're working with."," * Err... using hacks."," *"," * @return {[type]} [description]"," */","function duckType(err) {","","  // Validation or constraint violation error (`E_VALIDATION`)","  //","  // i.e. detected before talking to adapter, like `minLength`","  // i.e. constraint violation reported by adapter, like `unique`","  if (/* _isValidationError(err) || */ _isConstraintViolation(err)) {","","    // Dress `unique` rule violations to be consistent with other","    // validation errors.","    return new WLValidationError(err);","  }","","  // Unexpected miscellaneous error  (`E_UNKNOWN`)","  //","  // (i.e. helmet fire. The database crashed or something. Or there's an adapter","  //  bug. Or a bug in WL core.)","  return new WLError({","    originalError: err","  });","}","","","/**"," * @param  {?} err"," * @return {Boolean} whether this is an adapter-level constraint"," * violation (e.g. `unique`)"," */","function _isConstraintViolation(err) {","","  // If a proper error code is specified, this error can be classified.","  if (err && typeof err === 'object' && err.code === 'E_UNIQUE') {","    return true;","  }","","  // Otherwise, there is not enough information to call this a","  // constraint violation error and provide proper explanation to","  // the architect.","  else return false;","}","","","// /**","//  * @param  {?} err","//  * @return {Boolean} whether this is a validation error (e.g. minLength exceeded for attribute)","//  */","// function _isValidationError(err) {","//   return _.isObject(err) && err.ValidationError;","// }","",""],"l":{"5":1,"6":1,"7":1,"8":1,"34":1,"37":0,"39":0,"49":1,"55":0,"59":0,"66":0,"77":1,"80":0,"81":0,"87":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/ddl/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/ddl/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":10},"end":{"line":17,"column":23}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":18},"end":{"line":42,"column":52}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":34},"end":{"line":47,"column":48}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":12},"end":{"line":63,"column":25}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":8},"end":{"line":82,"column":32}}},"6":{"name":"(anonymous_6)","line":113,"loc":{"start":{"line":113,"column":9},"end":{"line":113,"column":22}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":74}},"5":{"start":{"line":15,"column":0},"end":{"line":131,"column":2}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":20}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":32}},"8":{"start":{"line":24,"column":4},"end":{"line":24,"column":58}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":58}},"10":{"start":{"line":30,"column":4},"end":{"line":33,"column":7}},"11":{"start":{"line":42,"column":4},"end":{"line":60,"column":7}},"12":{"start":{"line":43,"column":6},"end":{"line":43,"column":30}},"13":{"start":{"line":43,"column":15},"end":{"line":43,"column":30}},"14":{"start":{"line":44,"column":6},"end":{"line":44,"column":132}},"15":{"start":{"line":44,"column":30},"end":{"line":44,"column":132}},"16":{"start":{"line":47,"column":6},"end":{"line":50,"column":9}},"17":{"start":{"line":48,"column":8},"end":{"line":48,"column":37}},"18":{"start":{"line":48,"column":30},"end":{"line":48,"column":37}},"19":{"start":{"line":49,"column":8},"end":{"line":49,"column":27}},"20":{"start":{"line":53,"column":6},"end":{"line":53,"column":66}},"21":{"start":{"line":53,"column":54},"end":{"line":53,"column":66}},"22":{"start":{"line":55,"column":6},"end":{"line":55,"column":44}},"23":{"start":{"line":56,"column":6},"end":{"line":56,"column":56}},"24":{"start":{"line":58,"column":6},"end":{"line":58,"column":75}},"25":{"start":{"line":58,"column":46},"end":{"line":58,"column":75}},"26":{"start":{"line":59,"column":6},"end":{"line":59,"column":60}},"27":{"start":{"line":66,"column":4},"end":{"line":66,"column":32}},"28":{"start":{"line":69,"column":4},"end":{"line":69,"column":57}},"29":{"start":{"line":73,"column":4},"end":{"line":73,"column":66}},"30":{"start":{"line":73,"column":54},"end":{"line":73,"column":66}},"31":{"start":{"line":75,"column":4},"end":{"line":75,"column":44}},"32":{"start":{"line":76,"column":4},"end":{"line":76,"column":54}},"33":{"start":{"line":78,"column":4},"end":{"line":78,"column":72}},"34":{"start":{"line":78,"column":46},"end":{"line":78,"column":72}},"35":{"start":{"line":79,"column":4},"end":{"line":79,"column":52}},"36":{"start":{"line":84,"column":4},"end":{"line":87,"column":5}},"37":{"start":{"line":85,"column":6},"end":{"line":85,"column":21}},"38":{"start":{"line":86,"column":6},"end":{"line":86,"column":21}},"39":{"start":{"line":89,"column":4},"end":{"line":89,"column":19}},"40":{"start":{"line":98,"column":4},"end":{"line":98,"column":32}},"41":{"start":{"line":101,"column":4},"end":{"line":101,"column":53}},"42":{"start":{"line":104,"column":4},"end":{"line":104,"column":76}},"43":{"start":{"line":104,"column":50},"end":{"line":104,"column":76}},"44":{"start":{"line":106,"column":4},"end":{"line":106,"column":40}},"45":{"start":{"line":107,"column":4},"end":{"line":107,"column":54}},"46":{"start":{"line":109,"column":4},"end":{"line":109,"column":68}},"47":{"start":{"line":109,"column":42},"end":{"line":109,"column":68}},"48":{"start":{"line":110,"column":4},"end":{"line":110,"column":59}},"49":{"start":{"line":116,"column":4},"end":{"line":116,"column":32}},"50":{"start":{"line":119,"column":4},"end":{"line":119,"column":54}},"51":{"start":{"line":122,"column":4},"end":{"line":122,"column":77}},"52":{"start":{"line":122,"column":51},"end":{"line":122,"column":77}},"53":{"start":{"line":124,"column":4},"end":{"line":124,"column":41}},"54":{"start":{"line":125,"column":4},"end":{"line":125,"column":54}},"55":{"start":{"line":127,"column":4},"end":{"line":127,"column":69}},"56":{"start":{"line":127,"column":43},"end":{"line":127,"column":69}},"57":{"start":{"line":128,"column":4},"end":{"line":128,"column":49}}},"branchMap":{"1":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":17},"end":{"line":27,"column":51}},{"start":{"line":27,"column":55},"end":{"line":27,"column":57}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":6}},{"start":{"line":43,"column":6},"end":{"line":43,"column":6}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":8}},{"start":{"line":48,"column":8},"end":{"line":48,"column":8}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]},"7":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"8":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"9":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"10":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"11":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"12":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"13":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var normalize = require('../../utils/normalize');","var getRelations = require('../../utils/getRelations');","var hasOwnProperty = require('../../utils/helpers').object.hasOwnProperty;","","","/**"," * DDL Adapter Normalization"," */","","module.exports = {","","  define: function(cb) {","    var self = this;","","    // Normalize Arguments","    cb = normalize.callback(cb);","","    // Build Default Error Message","    var errMsg = 'No define() method defined in adapter!';","","    // Grab attributes from definition","    var schema = _.clone(this.query._schema.schema) || {};","","    // Find any junctionTables that reference this collection","    var relations = getRelations({","      schema: self.query.waterline.schema,","      parentCollection: self.collection","    });","","    //","    // TODO: if junction tables don't exist, define them","    // console.log(relations);","    //","","    // Verify that collection doesn't already exist","    // and then define it and trigger callback","    this.describe(function(err, existingAttributes) {","      if (err) return cb(err);","      if (existingAttributes) return cb(new Error('Trying to define a collection (' + self.collection + ') which already exists.'));","","      // Remove hasMany association keys before sending down to adapter","      Object.keys(schema).forEach(function(key) {","        if (schema[key].type) return;","        delete schema[key];","      });","","      // Find the connection to run this on","      if (!hasOwnProperty(self.dictionary, 'define')) return cb();","","      var connName = self.dictionary.define;","      var adapter = self.connections[connName]._adapter;","","      if (!hasOwnProperty(adapter, 'define')) return cb(new Error(errMsg));","      adapter.define(connName, self.collection, schema, cb);","    });","  },","","  describe: function(cb) {","","    // Normalize Arguments","    cb = normalize.callback(cb);","","    // Build Default Error Message","    var err = 'No describe() method defined in adapter!';","","    // Find the connection to run this on","    // NOTE: if `describe` doesn't exist, an error is not being returned.","    if (!hasOwnProperty(this.dictionary, 'describe')) return cb();","","    var connName = this.dictionary.describe;","    var adapter = this.connections[connName]._adapter;","","    if (!hasOwnProperty(adapter, 'describe')) return cb(new Error(err));","    adapter.describe(connName, this.collection, cb);","  },","","  drop: function(relations, cb) {","    // Allow relations to be optional","    if (typeof relations === 'function') {","      cb = relations;","      relations = [];","    }","","    relations = [];","","    //","    // TODO:","    // Use a more normalized strategy to get relations so we can omit the extra argument above.","    // e.g. getRelations({ schema: self.query.waterline.schema, parentCollection: self.collection });","    //","","    // Normalize Arguments","    cb = normalize.callback(cb);","","    // Build Default Error Message","    var err = 'No drop() method defined in adapter!';","","    // Find the connection to run this on","    if (!hasOwnProperty(this.dictionary, 'drop')) return cb(new Error(err));","","    var connName = this.dictionary.drop;","    var adapter = this.connections[connName]._adapter;","","    if (!hasOwnProperty(adapter, 'drop')) return cb(new Error(err));","    adapter.drop(connName, this.collection, relations, cb);","  },","","  alter: function(cb) {","","    // Normalize arguments","    cb = normalize.callback(cb);","","    // Build Default Error Message","    var err = 'No alter() method defined in adapter!';","","    // Find the connection to run this on","    if (!hasOwnProperty(this.dictionary, 'alter')) return cb(new Error(err));","","    var connName = this.dictionary.alter;","    var adapter = this.connections[connName]._adapter;","","    if (!hasOwnProperty(adapter, 'alter')) return cb(new Error(err));","    adapter.alter(connName, this.collection, cb);","  }","","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"15":1,"18":0,"21":0,"24":0,"27":0,"30":0,"42":0,"43":0,"44":0,"47":0,"48":0,"49":0,"53":0,"55":0,"56":0,"58":0,"59":0,"66":0,"69":0,"73":0,"75":0,"76":0,"78":0,"79":0,"84":0,"85":0,"86":0,"89":0,"98":0,"101":0,"104":0,"106":0,"107":0,"109":0,"110":0,"116":0,"119":0,"122":0,"124":0,"125":0,"127":0,"128":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/getRelations.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/getRelations.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"getRelations","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":48}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":30},"end":{"line":17,"column":51}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":53},"end":{"line":21,"column":67}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":29,"column":2}},"2":{"start":{"line":14,"column":2},"end":{"line":14,"column":30}},"3":{"start":{"line":15,"column":2},"end":{"line":15,"column":21}},"4":{"start":{"line":17,"column":2},"end":{"line":26,"column":5}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":46}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":66}},"7":{"start":{"line":19,"column":59},"end":{"line":19,"column":66}},"8":{"start":{"line":21,"column":4},"end":{"line":25,"column":7}},"9":{"start":{"line":22,"column":6},"end":{"line":22,"column":81}},"10":{"start":{"line":22,"column":74},"end":{"line":22,"column":81}},"11":{"start":{"line":23,"column":6},"end":{"line":23,"column":91}},"12":{"start":{"line":23,"column":84},"end":{"line":23,"column":91}},"13":{"start":{"line":24,"column":6},"end":{"line":24,"column":33}},"14":{"start":{"line":28,"column":2},"end":{"line":28,"column":19}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":6}},{"start":{"line":22,"column":6},"end":{"line":22,"column":6}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":6}},{"start":{"line":23,"column":6},"end":{"line":23,"column":6}}]}},"code":["/**"," * getRelations"," *"," * Find any `junctionTables` that reference the parent collection."," *"," * @param  {[type]} options [description]"," *    @option parentCollection"," *    @option schema"," * @return {[type]}         [relations]"," */","","module.exports = function getRelations(options) {","","  var schema = options.schema;","  var relations = [];","","  Object.keys(schema).forEach(function(collection) {","    var collectionSchema = schema[collection];","    if (!collectionSchema.hasOwnProperty('junctionTable')) return;","","    Object.keys(collectionSchema.attributes).forEach(function(key) {","      if (!collectionSchema.attributes[key].hasOwnProperty('foreignKey')) return;","      if (collectionSchema.attributes[key].references !== options.parentCollection) return;","      relations.push(collection);","    });","  });","","  return relations;","};",""],"l":{"12":1,"14":0,"15":0,"17":0,"18":0,"19":0,"21":0,"22":0,"23":0,"24":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/compoundQueries.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/compoundQueries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":16},"end":{"line":11,"column":47}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":27},"end":{"line":38,"column":49}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":71}},"4":{"start":{"line":9,"column":0},"end":{"line":46,"column":2}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":20}},"6":{"start":{"line":13,"column":4},"end":{"line":14,"column":16}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":69}},"8":{"start":{"line":17,"column":17},"end":{"line":17,"column":69}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":44}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":32}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":65}},"12":{"start":{"line":27,"column":4},"end":{"line":34,"column":5}},"13":{"start":{"line":28,"column":6},"end":{"line":28,"column":46}},"14":{"start":{"line":29,"column":6},"end":{"line":29,"column":52}},"15":{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},"16":{"start":{"line":32,"column":8},"end":{"line":32,"column":75}},"17":{"start":{"line":38,"column":4},"end":{"line":43,"column":7}},"18":{"start":{"line":39,"column":6},"end":{"line":39,"column":30}},"19":{"start":{"line":39,"column":15},"end":{"line":39,"column":30}},"20":{"start":{"line":40,"column":6},"end":{"line":40,"column":45}},"21":{"start":{"line":40,"column":18},"end":{"line":40,"column":45}},"22":{"start":{"line":42,"column":6},"end":{"line":42,"column":30}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":43},"end":{"line":17,"column":57}},{"start":{"line":17,"column":60},"end":{"line":17,"column":68}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"5":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":6}},{"start":{"line":39,"column":6},"end":{"line":39,"column":6}}]},"6":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":6}},{"start":{"line":40,"column":6},"end":{"line":40,"column":6}}]}},"code":["/**"," * Compound Queries Adapter Normalization"," */","","var _ = require('lodash');","var normalize = require('../utils/normalize');","var hasOwnProperty = require('../utils/helpers').object.hasOwnProperty;","","module.exports = {","","  findOrCreate: function(criteria, values, cb) {","    var self = this;","    var connName,","        adapter;","","    // If no values were specified, use criteria","    if (!values) values = criteria.where ? criteria.where : criteria;","","    // Normalize Arguments","    criteria = normalize.criteria(criteria);","    cb = normalize.callback(cb);","","    // Build Default Error Message","    var err = 'No find() or create() method defined in adapter!';","","    // Custom user adapter behavior","    if (hasOwnProperty(this.dictionary, 'findOrCreate')) {","      connName = this.dictionary.findOrCreate;","      adapter = this.connections[connName]._adapter;","","      if (hasOwnProperty(adapter, 'findOrCreate')) {","        return adapter.findOrCreate(connName, this.collection, values, cb);","      }","    }","","    // Default behavior","    // WARNING: Not transactional!  (unless your data adapter is)","    this.findOne(criteria, function(err, result) {","      if (err) return cb(err);","      if (result) return cb(null, result[0]);","","      self.create(values, cb);","    });","  }","","};",""],"l":{"5":1,"6":1,"7":1,"9":1,"12":0,"13":0,"17":0,"20":0,"21":0,"24":0,"27":0,"28":0,"29":0,"31":0,"32":0,"38":0,"39":0,"40":0,"42":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/aggregateQueries.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/aggregateQueries.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":14},"end":{"line":13,"column":39}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":33},"end":{"line":46,"column":54}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":56},"end":{"line":47,"column":75}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":7},"end":{"line":52,"column":21}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":20},"end":{"line":59,"column":64}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":33},"end":{"line":95,"column":54}}},"7":{"name":"(anonymous_7)","line":103,"loc":{"start":{"line":103,"column":52},"end":{"line":103,"column":71}}},"8":{"name":"(anonymous_8)","line":113,"loc":{"start":{"line":113,"column":34},"end":{"line":113,"column":53}}},"9":{"name":"(anonymous_9)","line":118,"loc":{"start":{"line":118,"column":60},"end":{"line":118,"column":81}}},"10":{"name":"(anonymous_10)","line":126,"loc":{"start":{"line":126,"column":7},"end":{"line":126,"column":21}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":71}},"5":{"start":{"line":10,"column":0},"end":{"line":132,"column":2}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":20}},"7":{"start":{"line":15,"column":4},"end":{"line":16,"column":16}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":32}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":71}},"10":{"start":{"line":25,"column":4},"end":{"line":32,"column":5}},"11":{"start":{"line":26,"column":6},"end":{"line":26,"column":44}},"12":{"start":{"line":27,"column":6},"end":{"line":27,"column":52}},"13":{"start":{"line":29,"column":6},"end":{"line":31,"column":7}},"14":{"start":{"line":30,"column":8},"end":{"line":30,"column":77}},"15":{"start":{"line":36,"column":4},"end":{"line":36,"column":21}},"16":{"start":{"line":39,"column":4},"end":{"line":39,"column":78}},"17":{"start":{"line":39,"column":52},"end":{"line":39,"column":78}},"18":{"start":{"line":41,"column":4},"end":{"line":41,"column":38}},"19":{"start":{"line":42,"column":4},"end":{"line":42,"column":50}},"20":{"start":{"line":44,"column":4},"end":{"line":44,"column":70}},"21":{"start":{"line":44,"column":44},"end":{"line":44,"column":70}},"22":{"start":{"line":46,"column":4},"end":{"line":55,"column":7}},"23":{"start":{"line":47,"column":6},"end":{"line":51,"column":9}},"24":{"start":{"line":48,"column":8},"end":{"line":48,"column":32}},"25":{"start":{"line":48,"column":17},"end":{"line":48,"column":32}},"26":{"start":{"line":49,"column":8},"end":{"line":49,"column":26}},"27":{"start":{"line":50,"column":8},"end":{"line":50,"column":13}},"28":{"start":{"line":53,"column":6},"end":{"line":53,"column":30}},"29":{"start":{"line":53,"column":15},"end":{"line":53,"column":30}},"30":{"start":{"line":54,"column":6},"end":{"line":54,"column":24}},"31":{"start":{"line":60,"column":4},"end":{"line":60,"column":20}},"32":{"start":{"line":61,"column":4},"end":{"line":61,"column":17}},"33":{"start":{"line":62,"column":4},"end":{"line":62,"column":16}},"34":{"start":{"line":65,"column":4},"end":{"line":65,"column":32}},"35":{"start":{"line":67,"column":4},"end":{"line":67,"column":30}},"36":{"start":{"line":69,"column":4},"end":{"line":75,"column":5}},"37":{"start":{"line":70,"column":6},"end":{"line":73,"column":7}},"38":{"start":{"line":72,"column":8},"end":{"line":72,"column":103}},"39":{"start":{"line":74,"column":6},"end":{"line":74,"column":27}},"40":{"start":{"line":78,"column":4},"end":{"line":78,"column":51}},"41":{"start":{"line":79,"column":4},"end":{"line":79,"column":37}},"42":{"start":{"line":82,"column":4},"end":{"line":89,"column":5}},"43":{"start":{"line":83,"column":6},"end":{"line":83,"column":50}},"44":{"start":{"line":84,"column":6},"end":{"line":84,"column":52}},"45":{"start":{"line":86,"column":6},"end":{"line":88,"column":7}},"46":{"start":{"line":87,"column":8},"end":{"line":87,"column":83}},"47":{"start":{"line":92,"column":4},"end":{"line":92,"column":20}},"48":{"start":{"line":93,"column":4},"end":{"line":93,"column":14}},"49":{"start":{"line":95,"column":4},"end":{"line":129,"column":7}},"50":{"start":{"line":96,"column":6},"end":{"line":96,"column":105}},"51":{"start":{"line":96,"column":31},"end":{"line":96,"column":105}},"52":{"start":{"line":99,"column":6},"end":{"line":99,"column":24}},"53":{"start":{"line":101,"column":6},"end":{"line":116,"column":7}},"54":{"start":{"line":102,"column":8},"end":{"line":111,"column":9}},"55":{"start":{"line":103,"column":10},"end":{"line":105,"column":13}},"56":{"start":{"line":104,"column":12},"end":{"line":104,"column":50}},"57":{"start":{"line":106,"column":10},"end":{"line":108,"column":11}},"58":{"start":{"line":107,"column":12},"end":{"line":107,"column":16}},"59":{"start":{"line":110,"column":10},"end":{"line":110,"column":109}},"60":{"start":{"line":113,"column":8},"end":{"line":115,"column":11}},"61":{"start":{"line":114,"column":10},"end":{"line":114,"column":48}},"62":{"start":{"line":118,"column":6},"end":{"line":125,"column":9}},"63":{"start":{"line":119,"column":8},"end":{"line":119,"column":32}},"64":{"start":{"line":119,"column":17},"end":{"line":119,"column":32}},"65":{"start":{"line":122,"column":8},"end":{"line":122,"column":38}},"66":{"start":{"line":122,"column":19},"end":{"line":122,"column":38}},"67":{"start":{"line":124,"column":8},"end":{"line":124,"column":24}},"68":{"start":{"line":127,"column":6},"end":{"line":127,"column":30}},"69":{"start":{"line":127,"column":15},"end":{"line":127,"column":30}},"70":{"start":{"line":128,"column":6},"end":{"line":128,"column":23}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":6},"end":{"line":29,"column":6}},{"start":{"line":29,"column":6},"end":{"line":29,"column":6}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"5":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":8}},{"start":{"line":48,"column":8},"end":{"line":48,"column":8}}]},"6":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"7":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"8":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":6}},{"start":{"line":70,"column":6},"end":{"line":70,"column":6}}]},"9":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":10},"end":{"line":70,"column":38}},{"start":{"line":71,"column":8},"end":{"line":71,"column":54}}]},"10":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"11":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":6}},{"start":{"line":86,"column":6},"end":{"line":86,"column":6}}]},"12":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":6},"end":{"line":96,"column":6}},{"start":{"line":96,"column":6},"end":{"line":96,"column":6}}]},"13":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":6},"end":{"line":101,"column":6}},{"start":{"line":101,"column":6},"end":{"line":101,"column":6}}]},"14":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":102,"column":8}},{"start":{"line":102,"column":8},"end":{"line":102,"column":8}}]},"15":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":10},"end":{"line":106,"column":10}},{"start":{"line":106,"column":10},"end":{"line":106,"column":10}}]},"16":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":8}},{"start":{"line":119,"column":8},"end":{"line":119,"column":8}}]},"17":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":122,"column":8}},{"start":{"line":122,"column":8},"end":{"line":122,"column":8}}]},"18":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":6},"end":{"line":127,"column":6}},{"start":{"line":127,"column":6},"end":{"line":127,"column":6}}]}},"code":["/**"," * Aggregate Queries Adapter Normalization"," */","","var _ = require('lodash');","var async = require('async');","var normalize = require('../utils/normalize');","var hasOwnProperty = require('../utils/helpers').object.hasOwnProperty;","","module.exports = {","","  // If an optimized createEach exists, use it, otherwise use an asynchronous loop with create()","  createEach: function(valuesList, cb) {","    var self = this;","    var connName,","        adapter;","","    // Normalize Arguments","    cb = normalize.callback(cb);","","    // Build Default Error Message","    var err = 'No createEach() or create() method defined in adapter!';","","    // Custom user adapter behavior","    if (hasOwnProperty(this.dictionary, 'createEach')) {","      connName = this.dictionary.createEach;","      adapter = this.connections[connName]._adapter;","","      if (hasOwnProperty(adapter, 'createEach')) {","        return adapter.createEach(connName, this.collection, valuesList, cb);","      }","    }","","    // Default behavior","    // WARNING: Not transactional!  (unless your data adapter is)","    var results = [];","","    // Find the connection to run this on","    if (!hasOwnProperty(this.dictionary, 'create')) return cb(new Error(err));","","    connName = this.dictionary.create;","    adapter = this.connections[connName]._adapter;","","    if (!hasOwnProperty(adapter, 'create')) return cb(new Error(err));","","    async.eachSeries(valuesList, function(values, cb) {","      adapter.create(connName, self.collection, values, function(err, row) {","        if (err) return cb(err);","        results.push(row);","        cb();","      });","    }, function(err) {","      if (err) return cb(err);","      cb(null, results);","    });","  },","","  // If an optimized findOrCreateEach exists, use it, otherwise use an asynchronous loop with create()","  findOrCreateEach: function(attributesToCheck, valuesList, cb) {","    var self = this;","    var connName;","    var adapter;","","    // Normalize Arguments","    cb = normalize.callback(cb);","","    var isObjectArray = false;","","    if (_.isObject(attributesToCheck[0])) {","      if (attributesToCheck.length > 1 &&","        attributesToCheck.length !== valuesList.length) {","        return cb(new Error('findOrCreateEach: The two passed arrays have to be of the same length.'));","      }","      isObjectArray = true;","    }","","    // Clone sensitive data","    attributesToCheck = _.clone(attributesToCheck);","    valuesList = _.clone(valuesList);","","    // Custom user adapter behavior","    if (hasOwnProperty(this.dictionary, 'findOrCreateEach')) {","      connName = this.dictionary.findOrCreateEach;","      adapter = this.connections[connName]._adapter;","","      if (hasOwnProperty(adapter, 'findOrCreateEach')) {","        return adapter.findOrCreateEach(connName, this.collection, valuesList, cb);","      }","    }","","    // Build a list of models","    var models = [];","    var i = 0;","","    async.eachSeries(valuesList, function(values, cb) {","      if (!_.isObject(values)) return cb(new Error('findOrCreateEach: Unexpected value in valuesList.'));","      // Check that each of the criteria keys match:","      // build a criteria query","      var criteria = {};","","      if (isObjectArray) {","        if (_.isObject(attributesToCheck[i])) {","          Object.keys(attributesToCheck[i]).forEach(function(attrName) {","            criteria[attrName] = values[attrName];","          });","          if (attributesToCheck.length > 1) {","            i++;","          }","        } else {","          return cb(new Error('findOrCreateEach: Element ' + i + ' in attributesToCheck is not an object.'));","        }","      } else {","        attributesToCheck.forEach(function(attrName) {","          criteria[attrName] = values[attrName];","        });","      }","","      return self.findOrCreate.call(self, criteria, values, function(err, model) {","        if (err) return cb(err);","","        // Add model to list","        if (model) models.push(model);","","        cb(null, model);","      });","    }, function(err) {","      if (err) return cb(err);","      cb(null, models);","    });","  }","","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"10":1,"14":0,"15":0,"19":0,"22":0,"25":0,"26":0,"27":0,"29":0,"30":0,"36":0,"39":0,"41":0,"42":0,"44":0,"46":0,"47":0,"48":0,"49":0,"50":0,"53":0,"54":0,"60":0,"61":0,"62":0,"65":0,"67":0,"69":0,"70":0,"72":0,"74":0,"78":0,"79":0,"82":0,"83":0,"84":0,"86":0,"87":0,"92":0,"93":0,"95":0,"96":0,"99":0,"101":0,"102":0,"103":0,"104":0,"106":0,"107":0,"110":0,"113":0,"114":0,"118":0,"119":0,"122":0,"124":0,"127":0,"128":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/setupTeardown.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/setupTeardown.js","s":{"1":1,"2":0,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":12},"end":{"line":11,"column":25}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":19,"column":2}},"2":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"3":{"start":{"line":13,"column":6},"end":{"line":13,"column":58}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":9}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]}},"code":["/**"," * Setup and Teardown Adapter Normalization"," */","","module.exports = {","","  // Teardown is fired once-per-adapter","  // Should tear down any open connections, etc. for each collection","  // (i.e. tear down any remaining connections to the underlying data model)","  // (i.e. flush data to disk before the adapter shuts down)","  teardown: function(cb) {","    if (this.adapter.teardown) {","      return this.adapter.teardown.apply(this, arguments);","    };","","    cb();","  }","","};",""],"l":{"5":1,"12":0,"13":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/sync/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/sync/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":7,"column":2}}},"branchMap":{},"code":["// TODO: probably can eliminate this file","module.exports = {","  migrateDrop: require('./strategies/drop.js'),","  migrateAlter: require('./strategies/alter.js'),","  migrateCreate: require('./strategies/create.js'),","  migrateSafe: require('./strategies/safe.js')","};",""],"l":{"2":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/sync/strategies/drop.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/sync/strategies/drop.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"drop","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":35}}},"2":{"name":"afterDrop","line":31,"loc":{"start":{"line":31,"column":12},"end":{"line":31,"column":42}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":16},"end":{"line":34,"column":27}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"3":{"start":{"line":15,"column":0},"end":{"line":38,"column":2}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":18}},"5":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":123}},"7":{"start":{"line":31,"column":2},"end":{"line":37,"column":5}},"8":{"start":{"line":32,"column":4},"end":{"line":32,"column":28}},"9":{"start":{"line":32,"column":13},"end":{"line":32,"column":28}},"10":{"start":{"line":34,"column":4},"end":{"line":36,"column":7}},"11":{"start":{"line":35,"column":6},"end":{"line":35,"column":60}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var getRelations = require('../../../utils/getRelations');","","","/**"," * Drop and recreate collection"," *"," * @param  {Function} cb"," */","","module.exports = function drop(cb) {","  var self = this;","","  // Refuse to run this migration strategy in production.","  if (process.env.NODE_ENV === 'production') {","    return cb(new Error('`migrate: \"drop\"` strategy is not supported in production, please change to `migrate: \"safe\"`.'));","  }","","  // Find any junctionTables that reference this collection","  // var relations = getRelations({","  //   schema: self.query.waterline.schema,","  //   parentCollection: self.collection","  // });","","  // Pass along relations to the drop method","  // console.log('Dropping ' + self.collection);","  this.drop(function afterDrop(err, data) {","    if (err) return cb(err);","","    self.define(function() {","      cb.apply(null, Array.prototype.slice.call(arguments));","    });","  });","};",""],"l":{"5":1,"6":1,"15":1,"16":0,"19":0,"20":0,"31":0,"32":0,"34":0,"35":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/sync/strategies/alter.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/sync/strategies/alter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":30}}},"2":{"name":"afterDescribe","line":33,"loc":{"start":{"line":33,"column":16},"end":{"line":33,"column":51}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":90},"end":{"line":43,"column":115}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":40},"end":{"line":56,"column":54}}},"5":{"name":"(anonymous_5)","line":101,"loc":{"start":{"line":101,"column":29},"end":{"line":101,"column":57}}},"6":{"name":"dealWithBuffers","line":115,"loc":{"start":{"line":115,"column":45},"end":{"line":115,"column":75}}},"7":{"name":"(anonymous_7)","line":128,"loc":{"start":{"line":128,"column":54},"end":{"line":128,"column":88}}},"8":{"name":"(anonymous_8)","line":134,"loc":{"start":{"line":134,"column":30},"end":{"line":134,"column":60}}},"9":{"name":"(anonymous_9)","line":138,"loc":{"start":{"line":138,"column":58},"end":{"line":138,"column":72}}},"10":{"name":"(anonymous_10)","line":143,"loc":{"start":{"line":143,"column":54},"end":{"line":143,"column":68}}},"11":{"name":"(anonymous_11)","line":163,"loc":{"start":{"line":163,"column":30},"end":{"line":163,"column":53}}},"12":{"name":"(anonymous_12)","line":176,"loc":{"start":{"line":176,"column":48},"end":{"line":176,"column":64}}},"13":{"name":"afterAsyncEach","line":186,"loc":{"start":{"line":186,"column":9},"end":{"line":186,"column":38}}},"14":{"name":"(anonymous_14)","line":190,"loc":{"start":{"line":190,"column":29},"end":{"line":190,"column":43}}},"15":{"name":"(anonymous_15)","line":194,"loc":{"start":{"line":194,"column":22},"end":{"line":194,"column":36}}},"16":{"name":"(anonymous_16)","line":204,"loc":{"start":{"line":204,"column":40},"end":{"line":204,"column":54}}},"17":{"name":"uhoh","line":250,"loc":{"start":{"line":250,"column":0},"end":{"line":250,"column":35}}},"18":{"name":"(anonymous_18)","line":262,"loc":{"start":{"line":262,"column":13},"end":{"line":262,"column":24}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":58}},"4":{"start":{"line":16,"column":0},"end":{"line":231,"column":2}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":18}},"6":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":124}},"8":{"start":{"line":25,"column":2},"end":{"line":28,"column":5}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":17}},"10":{"start":{"line":33,"column":2},"end":{"line":230,"column":5}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":28}},"12":{"start":{"line":35,"column":13},"end":{"line":35,"column":28}},"13":{"start":{"line":38,"column":4},"end":{"line":38,"column":39}},"14":{"start":{"line":38,"column":16},"end":{"line":38,"column":39}},"15":{"start":{"line":40,"column":4},"end":{"line":40,"column":100}},"16":{"start":{"line":43,"column":4},"end":{"line":52,"column":11}},"17":{"start":{"line":45,"column":6},"end":{"line":50,"column":7}},"18":{"start":{"line":46,"column":8},"end":{"line":46,"column":35}},"19":{"start":{"line":49,"column":8},"end":{"line":49,"column":24}},"20":{"start":{"line":51,"column":6},"end":{"line":51,"column":18}},"21":{"start":{"line":56,"column":4},"end":{"line":58,"column":8}},"22":{"start":{"line":57,"column":6},"end":{"line":57,"column":33}},"23":{"start":{"line":84,"column":4},"end":{"line":84,"column":41}},"24":{"start":{"line":93,"column":4},"end":{"line":93,"column":22}},"25":{"start":{"line":95,"column":4},"end":{"line":99,"column":5}},"26":{"start":{"line":96,"column":6},"end":{"line":96,"column":38}},"27":{"start":{"line":98,"column":6},"end":{"line":98,"column":25}},"28":{"start":{"line":101,"column":4},"end":{"line":214,"column":7}},"29":{"start":{"line":103,"column":6},"end":{"line":110,"column":7}},"30":{"start":{"line":109,"column":8},"end":{"line":109,"column":23}},"31":{"start":{"line":115,"column":6},"end":{"line":119,"column":9}},"32":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"33":{"start":{"line":117,"column":10},"end":{"line":117,"column":29}},"34":{"start":{"line":126,"column":6},"end":{"line":126,"column":78}},"35":{"start":{"line":127,"column":6},"end":{"line":127,"column":74}},"36":{"start":{"line":128,"column":6},"end":{"line":132,"column":13}},"37":{"start":{"line":129,"column":8},"end":{"line":129,"column":32}},"38":{"start":{"line":130,"column":8},"end":{"line":130,"column":27}},"39":{"start":{"line":131,"column":8},"end":{"line":131,"column":20}},"40":{"start":{"line":133,"column":6},"end":{"line":133,"column":62}},"41":{"start":{"line":134,"column":6},"end":{"line":213,"column":9}},"42":{"start":{"line":135,"column":8},"end":{"line":135,"column":72}},"43":{"start":{"line":138,"column":8},"end":{"line":140,"column":11}},"44":{"start":{"line":139,"column":10},"end":{"line":139,"column":69}},"45":{"start":{"line":143,"column":8},"end":{"line":145,"column":11}},"46":{"start":{"line":144,"column":10},"end":{"line":144,"column":52}},"47":{"start":{"line":147,"column":8},"end":{"line":185,"column":32}},"48":{"start":{"line":149,"column":10},"end":{"line":149,"column":41}},"49":{"start":{"line":150,"column":10},"end":{"line":150,"column":25}},"50":{"start":{"line":151,"column":10},"end":{"line":155,"column":54}},"51":{"start":{"line":156,"column":10},"end":{"line":156,"column":24}},"52":{"start":{"line":157,"column":10},"end":{"line":157,"column":68}},"53":{"start":{"line":158,"column":10},"end":{"line":158,"column":24}},"54":{"start":{"line":159,"column":10},"end":{"line":159,"column":96}},"55":{"start":{"line":163,"column":10},"end":{"line":184,"column":13}},"56":{"start":{"line":165,"column":12},"end":{"line":165,"column":41}},"57":{"start":{"line":165,"column":21},"end":{"line":165,"column":41}},"58":{"start":{"line":166,"column":12},"end":{"line":166,"column":93}},"59":{"start":{"line":167,"column":12},"end":{"line":183,"column":131}},"60":{"start":{"line":171,"column":14},"end":{"line":171,"column":98}},"61":{"start":{"line":173,"column":14},"end":{"line":173,"column":39}},"62":{"start":{"line":174,"column":14},"end":{"line":174,"column":54}},"63":{"start":{"line":176,"column":14},"end":{"line":178,"column":17}},"64":{"start":{"line":177,"column":16},"end":{"line":177,"column":67}},"65":{"start":{"line":179,"column":14},"end":{"line":179,"column":31}},"66":{"start":{"line":183,"column":19},"end":{"line":183,"column":131}},"67":{"start":{"line":185,"column":15},"end":{"line":185,"column":32}},"68":{"start":{"line":187,"column":8},"end":{"line":187,"column":32}},"69":{"start":{"line":187,"column":17},"end":{"line":187,"column":32}},"70":{"start":{"line":190,"column":8},"end":{"line":212,"column":11}},"71":{"start":{"line":191,"column":10},"end":{"line":191,"column":52}},"72":{"start":{"line":191,"column":19},"end":{"line":191,"column":52}},"73":{"start":{"line":194,"column":10},"end":{"line":211,"column":13}},"74":{"start":{"line":195,"column":12},"end":{"line":195,"column":54}},"75":{"start":{"line":195,"column":21},"end":{"line":195,"column":54}},"76":{"start":{"line":204,"column":12},"end":{"line":209,"column":15}},"77":{"start":{"line":205,"column":14},"end":{"line":205,"column":56}},"78":{"start":{"line":205,"column":23},"end":{"line":205,"column":56}},"79":{"start":{"line":208,"column":14},"end":{"line":208,"column":26}},"80":{"start":{"line":250,"column":0},"end":{"line":271,"column":1}},"81":{"start":{"line":252,"column":2},"end":{"line":252,"column":115}},"82":{"start":{"line":253,"column":2},"end":{"line":253,"column":97}},"83":{"start":{"line":254,"column":2},"end":{"line":254,"column":74}},"84":{"start":{"line":255,"column":2},"end":{"line":255,"column":18}},"85":{"start":{"line":256,"column":2},"end":{"line":256,"column":56}},"86":{"start":{"line":257,"column":2},"end":{"line":257,"column":18}},"87":{"start":{"line":258,"column":2},"end":{"line":258,"column":21}},"88":{"start":{"line":259,"column":2},"end":{"line":259,"column":18}},"89":{"start":{"line":260,"column":2},"end":{"line":260,"column":18}},"90":{"start":{"line":262,"column":2},"end":{"line":269,"column":11}},"91":{"start":{"line":263,"column":4},"end":{"line":263,"column":54}},"92":{"start":{"line":264,"column":4},"end":{"line":264,"column":34}},"93":{"start":{"line":265,"column":4},"end":{"line":265,"column":54}},"94":{"start":{"line":266,"column":4},"end":{"line":266,"column":22}},"95":{"start":{"line":267,"column":4},"end":{"line":267,"column":28}},"96":{"start":{"line":268,"column":4},"end":{"line":268,"column":19}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"5":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"6":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":6}},{"start":{"line":103,"column":6},"end":{"line":103,"column":6}}]},"7":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":8}},{"start":{"line":116,"column":8},"end":{"line":116,"column":8}}]},"8":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":8},"end":{"line":147,"column":8}},{"start":{"line":147,"column":8},"end":{"line":147,"column":8}}]},"9":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":12},"end":{"line":165,"column":12}},{"start":{"line":165,"column":12},"end":{"line":165,"column":12}}]},"10":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":37},"end":{"line":166,"column":63}},{"start":{"line":166,"column":67},"end":{"line":166,"column":92}}]},"11":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":12},"end":{"line":167,"column":12}},{"start":{"line":167,"column":12},"end":{"line":167,"column":12}}]},"12":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":187,"column":8}},{"start":{"line":187,"column":8},"end":{"line":187,"column":8}}]},"13":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":10},"end":{"line":191,"column":10}},{"start":{"line":191,"column":10},"end":{"line":191,"column":10}}]},"14":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":12},"end":{"line":195,"column":12}},{"start":{"line":195,"column":12},"end":{"line":195,"column":12}}]},"15":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":14},"end":{"line":205,"column":14}},{"start":{"line":205,"column":14},"end":{"line":205,"column":14}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var async = require('async');","var getRelations = require('../../../utils/getRelations');","","","/**"," * Try and synchronize the underlying physical-layer schema"," * to work with our app's collections. (i.e. models)"," *"," * @param  {Function} cb"," */","module.exports = function(cb) {","  var self = this;","","  // Refuse to run this migration strategy in production.","  if (process.env.NODE_ENV === 'production') {","    return cb(new Error('`migrate: \"alter\"` strategy is not supported in production, please change to `migrate: \"safe\"`.'));","  }","","  // Find any junctionTables that reference this collection","  var relations = getRelations({","    schema: self.query.waterline.schema,","    parentCollection: self.collection","  });","","  var backupData;","","  // Check that collection exists--","  self.describe(function afterDescribe(err, attrs) {","","    if (err) return cb(err);","","    // if it doesn't go ahead and add it and get out","    if (!attrs) return self.define(cb);","","    var collectionName = _.find(self.query.waterline.schema, {tableName: self.collection}).identity;","","    // Create a mapping of column names -> attribute names","    var columnNamesMap = _.reduce(self.query.waterline.schema[collectionName].attributes, function(memo, val, key) {","      // If the attribute has a custom column name, use it as the key for the mapping","      if (val.columnName) {","        memo[val.columnName] = key;","      // Otherwise just use the attribute name","      } else {","        memo[key] = key;","      }","      return memo;","    }, {});","","    // Transform column names into attribute names using the columnNamesMap,","    // removing attributes that no longer exist (they will be dropped)","    attrs = _.compact(_.keys(attrs).map(function(key) {","      return columnNamesMap[key];","    }));","","    //","    // TODO:","    // Take a look and see if anything important has changed.","    // If it has (at all), we still have to follow the naive strategy below,","    // but it will at least save time in the general case.","    // (because it really sucks to have to wait for all of this to happen","    //  every time you initialize Waterline.)","    //","","","    //","    // OK so we have to fix up the schema and migrate the data...","    //","    // ... we'll let Waterline do it for us.","    //","    // Load all data from this collection into memory.","    // If this doesn't work, crash to avoid corrupting any data.","    // (see `waterline/lib/adapter/ddl/README.md` for more info about this)","    //","    // Make sure we only select the existing keys for the schema.","    // The default \"find all\" will select each attribute in the schema, which","    // now includes attributes that haven't been added to the table yet, so","    // on SQL databases the query will fail with \"unknown field\" error.","    //","    var hasSchema = self.query.hasSchema;","","    // If we have a schema, make sure we only select the existing keys for the schema.","    // The default \"find all\" will select each attribute in the schema, which","    // now includes attributes that haven't been added to the table yet, so","    // on SQL databases the query will fail with \"unknown field\" error.","    //","    // If we don't have a schema then we need to select all the values to make","    // sure we don't lose data in the process.","    var queryCriteria;","","    if (hasSchema) {","      queryCriteria = {select: attrs};","    } else {","      queryCriteria = {};","    }","","    self.find(queryCriteria, function(err, existingData) {","","      if (err) {","        //","        // TODO:","        // If this was a memory error, log a more useful error","        // explaining what happened.","        //","        return cb(err);","      }","","      //","      // From this point forward, we must be very careful.","      //","      backupData = _.cloneDeep(existingData, function dealWithBuffers(val) {","        if (val instanceof Buffer) {","          return val.slice();","        }","      });","","","      // Check to see if there is anything obviously troublesome","      // that will cause the drop and redefinition of our schemaful","      // collections to fail.","      // (i.e. violation of uniqueness constraints)","      var attrs = self.query.waterline.collections[self.identity]._attributes;","      var pk = self.query.waterline.collections[self.identity].primaryKey;","      var attrsAsArray = _.reduce(_.cloneDeep(attrs), function(memo, attrDef, attrName) {","        attrDef.name = attrName;","        memo.push(attrDef);","        return memo;","      }, []);","      var uniqueAttrs = _.where(attrsAsArray, {unique: true});","      async.each(uniqueAttrs, function(uniqueAttr, each_cb) {","        var uniqueData = _.uniq(_.pluck(existingData, uniqueAttr.name));","","        // Remove any unique values who have their values set to undefined or null","        var cleansedExistingData = _.filter(existingData, function(val) {","          return [undefined, null].indexOf(val[uniqueAttr.name]) < 0;","        });","","        // Remove any undefined or null values from the unique data","        var cleansedUniqueData = _.filter(uniqueData, function(val) {","          return [undefined, null].indexOf(val) < 0;","        });","","        if (cleansedUniqueData.length < cleansedExistingData.length) {","          // Some existing data violates a new uniqueness constraint","          var prompt = require('prompt');","          prompt.start();","          console.log(","            'One or more existing records in your database violate ' +","            'a new uniqueness constraint\\n' +","            'on `' + uniqueAttr.name + '` ' +","            'in your `' + self.identity + '` model.');","          console.log();","          console.log('Should we automatically remove duplicates?');","          console.log();","          console.log('** WARNING: DO NOT TYPE \"y\" IF YOU ARE WORKING WITH PRODUCTION DATA **');","          // var laptimer = setInterval(function beepbeepbeepbeep(){","          //   process.stdout.write('\\u0007');","          // }, 1500);","          prompt.get(['y/n'], function(err, results) {","            // clearInterval(laptimer);","            if (err) return each_cb(err);","            var wasConfirmedByUser = _.isString(results['y/n']) && results['y/n'].match(/y/);","            if (wasConfirmedByUser) {","","              // Wipe out duplicate records in `backupData` and continue","              // to perform the automigration","              var diff = _.difference(existingData, _.uniq(existingData, false, uniqueAttr.name));","","              var destroyCriteria = {};","              destroyCriteria[pk] = _.pluck(diff, pk);","              // console.log(diff, '\\n', destroyCriteria);","              backupData = _.remove(backupData, function(datum) {","                return !_.contains(destroyCriteria[pk], datum[pk]);","              });","              return each_cb();","              // console.log(backupData);","              // throw new Error();","              // self.query.waterline.collections[self.collection].destroy(destroyCriteria).exec(each_cb);","            } else return each_cb(new Error('Auto-migration aborted. Please migrate your data manually and then try this again.'));","          });","        } else return each_cb();","      }, function afterAsyncEach(err) {","        if (err) return cb(err);","","        // Now we'll drop the collection.","        self.drop(relations, function(err) {","          if (err) return uhoh(err, backupData, cb);","","          // Now we'll redefine the collection.","          self.define(function(err) {","            if (err) return uhoh(err, backupData, cb);","","            // Now we'll create the `backupData` again,","            // being careful not to run any lifecycle callbacks","            // and disable automatic updating of `createdAt` and","            // `updatedAt` attributes:","            //","            // ((((TODO: actually be careful about said things))))","            //","            self.createEach(backupData, function(err) {","              if (err) return uhoh(err, backupData, cb);","","              // Done.","              return cb();","            });","","          }); // </define>","        }); // </drop>","      }); // </find>","    });","","","    //","    // The old way-- (doesn't always work, and is way more","    // complex than we should spend time on for now)","    //","    //   ||      ||      ||      ||      ||      ||","    //   \\/      \\/      \\/      \\/      \\/      \\/","    //","    // Otherwise, if it *DOES* exist, we'll try and guess what changes need to be made","    // self.alter(function(err) {","    //   if (err) return cb(err);","    //   cb();","    // });","","  });","};","","","/**"," * uh oh."," *"," * If we can't persist the data again, we'll log an error message, then"," * stream the data to stdout as JSON to make sure that it gets persisted"," * SOMEWHERE at least."," *"," * (this is another reason this automigration strategy cannot be used in"," * production currently..)"," *"," * @param  {[type]}   err        [description]"," * @param  {[type]}   backupData [description]"," * @param  {Function} cb         [description]"," * @return {[type]}              [description]"," */","","function uhoh(err, backupData, cb) {","","  console.error('Waterline encountered a fatal error when trying to perform the `alter` auto-migration strategy.');","  console.error('In a couple of seconds, the data (cached in memory) will be logged to stdout.');","  console.error('(a failsafe put in place to preserve development data)');","  console.error();","  console.error('In the mean time, here\\'s the error:');","  console.error();","  console.error(err);","  console.error();","  console.error();","","  setTimeout(function() {","    console.error('================================');","    console.error('Data backup:');","    console.error('================================');","    console.error('');","    console.log(backupData);","    return cb(err);","  }, 1200);","","}",""],"l":{"5":1,"6":1,"7":1,"16":1,"17":0,"20":0,"21":0,"25":0,"30":0,"33":0,"35":0,"38":0,"40":0,"43":0,"45":0,"46":0,"49":0,"51":0,"56":0,"57":0,"84":0,"93":0,"95":0,"96":0,"98":0,"101":0,"103":0,"109":0,"115":0,"116":0,"117":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"133":0,"134":0,"135":0,"138":0,"139":0,"143":0,"144":0,"147":0,"149":0,"150":0,"151":0,"156":0,"157":0,"158":0,"159":0,"163":0,"165":0,"166":0,"167":0,"171":0,"173":0,"174":0,"176":0,"177":0,"179":0,"183":0,"185":0,"187":0,"190":0,"191":0,"194":0,"195":0,"204":0,"205":0,"208":0,"250":1,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/sync/strategies/create.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/sync/strategies/create.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":30}}},"2":{"name":"afterDescribe","line":22,"loc":{"start":{"line":22,"column":16},"end":{"line":22,"column":51}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":32},"end":{"line":48,"column":46}}},"4":{"name":"checkAttribute","line":56,"loc":{"start":{"line":56,"column":41},"end":{"line":56,"column":101}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":44},"end":{"line":64,"column":69}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":77}},"4":{"start":{"line":17,"column":0},"end":{"line":70,"column":2}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":18}},"6":{"start":{"line":22,"column":2},"end":{"line":69,"column":5}},"7":{"start":{"line":24,"column":4},"end":{"line":24,"column":28}},"8":{"start":{"line":24,"column":13},"end":{"line":24,"column":28}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":39}},"10":{"start":{"line":27,"column":16},"end":{"line":27,"column":39}},"11":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"12":{"start":{"line":31,"column":6},"end":{"line":31,"column":18}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":48}},"14":{"start":{"line":36,"column":4},"end":{"line":36,"column":54}},"15":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"16":{"start":{"line":40,"column":6},"end":{"line":40,"column":18}},"17":{"start":{"line":44,"column":4},"end":{"line":44,"column":39}},"18":{"start":{"line":47,"column":4},"end":{"line":47,"column":58}},"19":{"start":{"line":48,"column":4},"end":{"line":51,"column":7}},"20":{"start":{"line":49,"column":6},"end":{"line":49,"column":35}},"21":{"start":{"line":49,"column":28},"end":{"line":49,"column":35}},"22":{"start":{"line":50,"column":6},"end":{"line":50,"column":25}},"23":{"start":{"line":56,"column":4},"end":{"line":61,"column":11}},"24":{"start":{"line":57,"column":6},"end":{"line":59,"column":7}},"25":{"start":{"line":58,"column":8},"end":{"line":58,"column":44}},"26":{"start":{"line":60,"column":6},"end":{"line":60,"column":27}},"27":{"start":{"line":64,"column":4},"end":{"line":67,"column":11}},"28":{"start":{"line":65,"column":6},"end":{"line":65,"column":44}},"29":{"start":{"line":66,"column":6},"end":{"line":66,"column":76}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"5":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":17},"end":{"line":47,"column":51}},{"start":{"line":47,"column":55},"end":{"line":47,"column":57}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"7":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var async = require('async');","var hasOwnProperty = require('../../../utils/helpers').object.hasOwnProperty;","","","/**"," * Try and synchronize the underlying physical-layer schema"," * in safely manner by only adding new collections and new attributes"," * to work with our app's collections. (i.e. models)"," *"," * @param  {Function} cb"," */","module.exports = function(cb) {","  var self = this;","","","  // Check that collection exists","  self.describe(function afterDescribe(err, attrs) {","","    if (err) return cb(err);","","    // if it doesn't go ahead and add it and get out","    if (!attrs) return self.define(cb);","","    // Check if an addAttribute adapter method is defined","    if (!hasOwnProperty(self.dictionary, 'addAttribute')) {","      return cb();","    }","","    // Find the relevant connections to run this on","    var connName = self.dictionary.addAttribute;","    var adapter = self.connections[connName]._adapter;","","    // Check if adapter has addAttribute method","    if (!hasOwnProperty(adapter, 'addAttribute')) {","      return cb();","    }","","    // The collection we're working with","    var collectionID = self.collection;","","    // Remove hasMany association keys before sending down to adapter","    var schema = _.clone(self.query._schema.schema) || {};","    Object.keys(schema).forEach(function(key) {","      if (schema[key].type) return;","      delete schema[key];","    });","","    // Iterate through each attribute in the new definition","    // Used for keeping track of previously undefined attributes","    // when updating the data stored at the physical layer.","    var newAttributes = _.reduce(schema, function checkAttribute(newAttributes, attribute, attrName) {","      if (!attrs[attrName]) {","        newAttributes[attrName] = attribute;","      }","      return newAttributes;","    }, {});","","    // Add new attributes","    async.eachSeries(_.keys(newAttributes), function(attrName, next) {","      var attrDef = newAttributes[attrName];","      adapter.addAttribute(connName, collectionID, attrName, attrDef, next);","    }, cb);","","  });","};",""],"l":{"5":1,"6":1,"7":1,"17":1,"18":0,"22":0,"24":0,"27":0,"30":0,"31":0,"35":0,"36":0,"39":0,"40":0,"44":0,"47":0,"48":0,"49":0,"50":0,"56":0,"57":0,"58":0,"60":0,"64":0,"65":0,"66":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/sync/strategies/safe.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/sync/strategies/safe.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":17},"end":{"line":13,"column":30}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":13,"column":0},"end":{"line":15,"column":2}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":7}}},"branchMap":{},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","","","/**"," * Do absolutely nothing to the schema of the underlying datastore."," *"," * @param  {Function} cb"," */","module.exports = function(cb) {","  cb();","};",""],"l":{"5":1,"13":1,"14":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/stream.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/adapter/stream.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":10},"end":{"line":16,"column":37}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":71}},"3":{"start":{"line":12,"column":0},"end":{"line":34,"column":2}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":44}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":55}},"6":{"start":{"line":25,"column":4},"end":{"line":25,"column":86}},"7":{"start":{"line":25,"column":52},"end":{"line":25,"column":86}},"8":{"start":{"line":27,"column":4},"end":{"line":27,"column":42}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":54}},"10":{"start":{"line":30,"column":4},"end":{"line":30,"column":78}},"11":{"start":{"line":30,"column":44},"end":{"line":30,"column":78}},"12":{"start":{"line":31,"column":4},"end":{"line":31,"column":64}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]}},"code":["/**"," * Module Dependencies"," */","","var normalize = require('../utils/normalize');","var hasOwnProperty = require('../utils/helpers').object.hasOwnProperty;","","/**"," * Stream Normalization"," */","","module.exports = {","","  // stream.write() is used to send data","  // Must call stream.end() to complete stream","  stream: function(criteria, stream) {","","    // Normalize Arguments","    criteria = normalize.criteria(criteria);","","    // Build Default Error Message","    var err = 'No stream() method defined in adapter!';","","    // Find the connection to run this on","    if (!hasOwnProperty(this.dictionary, 'stream')) return stream.end(new Error(err));","","    var connName = this.dictionary.stream;","    var adapter = this.connections[connName]._adapter;","","    if (!hasOwnProperty(adapter, 'stream')) return stream.end(new Error(err));","    adapter.stream(connName, this.collection, criteria, stream);","  }","","};",""],"l":{"5":1,"6":1,"12":1,"19":0,"22":0,"25":0,"27":0,"28":0,"30":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/adapters.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/adapters.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":28}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":40},"end":{"line":8,"column":55}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":33},"end":{"line":12,"column":47}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":18},"end":{"line":28,"column":29}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":44,"column":2}},"2":{"start":{"line":6,"column":2},"end":{"line":6,"column":18}},"3":{"start":{"line":8,"column":2},"end":{"line":42,"column":5}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":56}},"5":{"start":{"line":12,"column":4},"end":{"line":41,"column":7}},"6":{"start":{"line":15,"column":6},"end":{"line":15,"column":62}},"7":{"start":{"line":15,"column":55},"end":{"line":15,"column":62}},"8":{"start":{"line":18,"column":6},"end":{"line":18,"column":28}},"9":{"start":{"line":18,"column":21},"end":{"line":18,"column":28}},"10":{"start":{"line":21,"column":6},"end":{"line":24,"column":7}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":33}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":15}},"13":{"start":{"line":28,"column":6},"end":{"line":40,"column":8}},"14":{"start":{"line":30,"column":8},"end":{"line":30,"column":56}},"15":{"start":{"line":34,"column":8},"end":{"line":34,"column":74}},"16":{"start":{"line":38,"column":8},"end":{"line":38,"column":77}},"17":{"start":{"line":39,"column":8},"end":{"line":39,"column":46}}},"branchMap":{"1":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":18},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":55}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":6}},{"start":{"line":15,"column":6},"end":{"line":15,"column":6}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":6}},{"start":{"line":18,"column":6},"end":{"line":18,"column":6}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":6}},{"start":{"line":21,"column":6},"end":{"line":21,"column":6}}]},"5":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":24},"end":{"line":30,"column":38}},{"start":{"line":30,"column":42},"end":{"line":30,"column":55}}]},"6":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":47},"end":{"line":34,"column":53}},{"start":{"line":34,"column":56},"end":{"line":34,"column":73}}]}},"code":["/**"," * Mixes Custom Non-CRUD Adapter Methods into the prototype."," */","","module.exports = function() {","  var self = this;","","  Object.keys(this.connections).forEach(function(conn) {","","    var adapter = self.connections[conn]._adapter || {};","","    Object.keys(adapter).forEach(function(key) {","","      // Ignore the Identity Property","      if (['identity', 'tableName'].indexOf(key) >= 0) return;","","      // Don't override keys that already exists","      if (self[key]) return;","","      // Don't override a property, only functions","      if (typeof adapter[key] != 'function') {","        self[key] = adapter[key];","        return;","      }","","      // Apply the Function with passed in args and set this.identity as","      // the first argument","      self[key] = function() {","","        var tableName = self.tableName || self.identity;","","        // If this is the teardown method, just pass in the connection name,","        // otherwise pass the connection and the tableName","        var defaultArgs = key === 'teardown' ? [conn] : [conn, tableName];","","        // Concat self.identity with args (must massage arguments into a proper array)","        // Use a normalized _tableName set in the core module.","        var args = defaultArgs.concat(Array.prototype.slice.call(arguments));","        return adapter[key].apply(self, args);","      };","    });","  });","","};",""],"l":{"5":1,"6":0,"8":0,"10":0,"12":0,"15":0,"18":0,"21":0,"22":0,"23":0,"28":0,"30":0,"34":0,"38":0,"39":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/validate.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/validate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":46}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":6},"end":{"line":26,"column":19}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":21},"end":{"line":27,"column":46}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":34},"end":{"line":28,"column":48}}},"5":{"name":"(anonymous_5)","line":34,"loc":{"start":{"line":34,"column":65},"end":{"line":34,"column":79}}},"6":{"name":"(anonymous_6)","line":41,"loc":{"start":{"line":41,"column":6},"end":{"line":41,"column":19}}},"7":{"name":"_afterValidating","line":42,"loc":{"start":{"line":42,"column":54},"end":{"line":42,"column":104}}},"8":{"name":"(anonymous_8)","line":64,"loc":{"start":{"line":64,"column":6},"end":{"line":64,"column":19}}},"9":{"name":"(anonymous_9)","line":65,"loc":{"start":{"line":65,"column":21},"end":{"line":65,"column":46}}},"10":{"name":"(anonymous_10)","line":66,"loc":{"start":{"line":66,"column":23},"end":{"line":66,"column":37}}},"11":{"name":"(anonymous_11)","line":72,"loc":{"start":{"line":72,"column":64},"end":{"line":72,"column":78}}},"12":{"name":"(anonymous_12)","line":78,"loc":{"start":{"line":78,"column":7},"end":{"line":78,"column":21}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":62}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":29}},"4":{"start":{"line":12,"column":0},"end":{"line":84,"column":2}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":20}},"6":{"start":{"line":18,"column":4},"end":{"line":21,"column":5}},"7":{"start":{"line":19,"column":6},"end":{"line":19,"column":23}},"8":{"start":{"line":20,"column":6},"end":{"line":20,"column":26}},"9":{"start":{"line":23,"column":4},"end":{"line":81,"column":7}},"10":{"start":{"line":27,"column":8},"end":{"line":32,"column":10}},"11":{"start":{"line":28,"column":10},"end":{"line":31,"column":13}},"12":{"start":{"line":29,"column":12},"end":{"line":29,"column":42}},"13":{"start":{"line":29,"column":21},"end":{"line":29,"column":42}},"14":{"start":{"line":30,"column":12},"end":{"line":30,"column":23}},"15":{"start":{"line":34,"column":8},"end":{"line":37,"column":11}},"16":{"start":{"line":35,"column":10},"end":{"line":35,"column":34}},"17":{"start":{"line":35,"column":19},"end":{"line":35,"column":34}},"18":{"start":{"line":36,"column":10},"end":{"line":36,"column":15}},"19":{"start":{"line":42,"column":8},"end":{"line":60,"column":11}},"20":{"start":{"line":44,"column":10},"end":{"line":46,"column":11}},"21":{"start":{"line":45,"column":12},"end":{"line":45,"column":27}},"22":{"start":{"line":52,"column":10},"end":{"line":57,"column":11}},"23":{"start":{"line":53,"column":12},"end":{"line":56,"column":16}},"24":{"start":{"line":59,"column":10},"end":{"line":59,"column":15}},"25":{"start":{"line":65,"column":8},"end":{"line":70,"column":10}},"26":{"start":{"line":66,"column":10},"end":{"line":69,"column":13}},"27":{"start":{"line":67,"column":12},"end":{"line":67,"column":42}},"28":{"start":{"line":67,"column":21},"end":{"line":67,"column":42}},"29":{"start":{"line":68,"column":12},"end":{"line":68,"column":23}},"30":{"start":{"line":72,"column":8},"end":{"line":75,"column":11}},"31":{"start":{"line":73,"column":10},"end":{"line":73,"column":34}},"32":{"start":{"line":73,"column":19},"end":{"line":73,"column":34}},"33":{"start":{"line":74,"column":10},"end":{"line":74,"column":15}},"34":{"start":{"line":79,"column":6},"end":{"line":79,"column":30}},"35":{"start":{"line":79,"column":15},"end":{"line":79,"column":30}},"36":{"start":{"line":80,"column":6},"end":{"line":80,"column":11}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":12},"end":{"line":29,"column":12}},{"start":{"line":29,"column":12},"end":{"line":29,"column":12}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":10},"end":{"line":35,"column":10}},{"start":{"line":35,"column":10},"end":{"line":35,"column":10}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":10},"end":{"line":44,"column":10}},{"start":{"line":44,"column":10},"end":{"line":44,"column":10}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":10},"end":{"line":52,"column":10}},{"start":{"line":52,"column":10},"end":{"line":52,"column":10}}]},"6":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":21},"end":{"line":55,"column":34}},{"start":{"line":55,"column":38},"end":{"line":55,"column":59}}]},"7":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":12}},{"start":{"line":67,"column":12},"end":{"line":67,"column":12}}]},"8":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":10},"end":{"line":73,"column":10}},{"start":{"line":73,"column":10},"end":{"line":73,"column":10}}]},"9":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]}},"code":["/**"," * Validation"," *"," * Used in create and update methods validate a model"," * Can also be used independently"," */","","var _ = require('lodash');","var WLValidationError = require('../error/WLValidationError');","var async = require('async');","","module.exports = {","","  validate: function(values, presentOnly, cb) {","    var self = this;","","    // Handle optional second arg","    if (typeof presentOnly === 'function') {","      cb = presentOnly;","      presentOnly = false;","    }","","    async.series([","","      // Run Before Validate Lifecycle Callbacks","      function(cb) {","        var runner = function(item, callback) {","          item.call(self, values, function(err) {","            if (err) return callback(err);","            callback();","          });","        };","","        async.eachSeries(self._callbacks.beforeValidate, runner, function(err) {","          if (err) return cb(err);","          cb();","        });","      },","","      // Run Validation","      function(cb) {","        self._validator.validate(values, presentOnly, function _afterValidating(err, invalidAttributes) {","          // If fatal error occurred, handle it accordingly.","          if (err) {","            return cb(err);","          }","","          // Otherwise, check out the invalid attributes that were sent back.","          //","          // Create validation error here","          // (pass in the invalid attributes as well as the collection's globalId)","          if (invalidAttributes) {","            return cb(new WLValidationError({","              invalidAttributes: invalidAttributes,","              model: self.globalId || self.adapter.identity","            }));","          }","","          cb();","        });","      },","","      // Run After Validate Lifecycle Callbacks","      function(cb) {","        var runner = function(item, callback) {","          item(values, function(err) {","            if (err) return callback(err);","            callback();","          });","        };","","        async.eachSeries(self._callbacks.afterValidate, runner, function(err) {","          if (err) return cb(err);","          cb();","        });","      }","","    ], function(err) {","      if (err) return cb(err);","      cb();","    });","  }","","};",""],"l":{"8":1,"9":1,"10":1,"12":1,"15":0,"18":0,"19":0,"20":0,"23":0,"27":0,"28":0,"29":0,"30":0,"34":0,"35":0,"36":0,"42":0,"44":0,"45":0,"52":0,"53":0,"59":0,"65":0,"66":0,"67":0,"68":0,"72":0,"73":0,"74":0,"79":0,"80":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/ddl.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/ddl.js","s":{"1":1,"2":0,"3":0,"4":0},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":12},"end":{"line":11,"column":25}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":9},"end":{"line":19,"column":34}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":8},"end":{"line":27,"column":21}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":31,"column":2}},"2":{"start":{"line":12,"column":4},"end":{"line":12,"column":30}},"3":{"start":{"line":20,"column":4},"end":{"line":20,"column":39}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":26}}},"branchMap":{},"code":["/**"," * DDL Queries"," */","","module.exports = {","","  /**","   * Describe a collection","   */","","  describe: function(cb) {","    this.adapter.describe(cb);","  },","","  /**","   * Alter a table/set/etc","   */","","  alter: function(attributes, cb) {","    this.adapter.alter(attributes, cb);","  },","","  /**","   * Drop a table/set/etc","   */","","  drop: function(cb) {","    this.adapter.drop(cb);","  }","","};",""],"l":{"5":1,"12":0,"20":0,"28":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/dql/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/dql/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":12,"column":2}}},"branchMap":{},"code":["","/**"," * Export DQL Methods"," */","","module.exports = {","  create: require('./create'),","  update: require('./update'),","  destroy: require('./destroy'),","  count: require('./count'),","  join: require('./join')","};",""],"l":{"6":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/dql/create.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/dql/create.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":38}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":25},"end":{"line":36,"column":39}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":31},"end":{"line":45,"column":45}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":43},"end":{"line":69,"column":57}}},"5":{"name":"(anonymous_5)","line":72,"loc":{"start":{"line":72,"column":45},"end":{"line":72,"column":59}}},"6":{"name":"processValues","line":87,"loc":{"start":{"line":87,"column":0},"end":{"line":87,"column":31}}},"7":{"name":"createBelongsTo","line":116,"loc":{"start":{"line":116,"column":0},"end":{"line":116,"column":43}}},"8":{"name":"(anonymous_8)","line":119,"loc":{"start":{"line":119,"column":47},"end":{"line":119,"column":68}}},"9":{"name":"(anonymous_9)","line":148,"loc":{"start":{"line":148,"column":15},"end":{"line":148,"column":34}}},"10":{"name":"beforeCallbacks","line":168,"loc":{"start":{"line":168,"column":0},"end":{"line":168,"column":43}}},"11":{"name":"(anonymous_11)","line":174,"loc":{"start":{"line":174,"column":4},"end":{"line":174,"column":17}}},"12":{"name":"(anonymous_12)","line":179,"loc":{"start":{"line":179,"column":4},"end":{"line":179,"column":17}}},"13":{"name":"createValues","line":194,"loc":{"start":{"line":194,"column":0},"end":{"line":194,"column":40}}},"14":{"name":"(anonymous_14)","line":220,"loc":{"start":{"line":220,"column":43},"end":{"line":220,"column":65}}},"15":{"name":"(anonymous_15)","line":233,"loc":{"start":{"line":233,"column":120},"end":{"line":233,"column":134}}},"16":{"name":"after","line":240,"loc":{"start":{"line":240,"column":4},"end":{"line":240,"column":27}}},"17":{"name":"(anonymous_17)","line":243,"loc":{"start":{"line":243,"column":42},"end":{"line":243,"column":56}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":55}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":63}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":38}},"8":{"start":{"line":22,"column":0},"end":{"line":77,"column":2}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":18}},"10":{"start":{"line":27,"column":2},"end":{"line":31,"column":3}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":53}},"12":{"start":{"line":29,"column":4},"end":{"line":29,"column":20}},"13":{"start":{"line":30,"column":4},"end":{"line":30,"column":24}},"14":{"start":{"line":34,"column":2},"end":{"line":34,"column":24}},"15":{"start":{"line":36,"column":2},"end":{"line":40,"column":5}},"16":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"17":{"start":{"line":38,"column":6},"end":{"line":38,"column":38}},"18":{"start":{"line":42,"column":2},"end":{"line":42,"column":37}},"19":{"start":{"line":45,"column":2},"end":{"line":47,"column":5}},"20":{"start":{"line":46,"column":4},"end":{"line":46,"column":36}},"21":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"22":{"start":{"line":51,"column":4},"end":{"line":51,"column":41}},"23":{"start":{"line":55,"column":2},"end":{"line":57,"column":3}},"24":{"start":{"line":56,"column":4},"end":{"line":56,"column":55}},"25":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"26":{"start":{"line":62,"column":4},"end":{"line":62,"column":39}},"27":{"start":{"line":66,"column":2},"end":{"line":66,"column":54}},"28":{"start":{"line":69,"column":2},"end":{"line":76,"column":5}},"29":{"start":{"line":70,"column":4},"end":{"line":70,"column":28}},"30":{"start":{"line":70,"column":13},"end":{"line":70,"column":28}},"31":{"start":{"line":72,"column":4},"end":{"line":75,"column":7}},"32":{"start":{"line":73,"column":6},"end":{"line":73,"column":30}},"33":{"start":{"line":73,"column":15},"end":{"line":73,"column":30}},"34":{"start":{"line":74,"column":6},"end":{"line":74,"column":48}},"35":{"start":{"line":87,"column":0},"end":{"line":109,"column":1}},"36":{"start":{"line":90,"column":2},"end":{"line":95,"column":3}},"37":{"start":{"line":91,"column":4},"end":{"line":94,"column":5}},"38":{"start":{"line":92,"column":6},"end":{"line":92,"column":55}},"39":{"start":{"line":93,"column":6},"end":{"line":93,"column":101}},"40":{"start":{"line":98,"column":2},"end":{"line":98,"column":36}},"41":{"start":{"line":99,"column":2},"end":{"line":99,"column":108}},"42":{"start":{"line":103,"column":2},"end":{"line":103,"column":114}},"43":{"start":{"line":106,"column":2},"end":{"line":106,"column":34}},"44":{"start":{"line":108,"column":2},"end":{"line":108,"column":81}},"45":{"start":{"line":116,"column":0},"end":{"line":159,"column":1}},"46":{"start":{"line":117,"column":2},"end":{"line":117,"column":18}},"47":{"start":{"line":119,"column":2},"end":{"line":158,"column":9}},"48":{"start":{"line":122,"column":4},"end":{"line":122,"column":67}},"49":{"start":{"line":122,"column":53},"end":{"line":122,"column":67}},"50":{"start":{"line":125,"column":4},"end":{"line":125,"column":115}},"51":{"start":{"line":127,"column":4},"end":{"line":127,"column":50}},"52":{"start":{"line":128,"column":4},"end":{"line":128,"column":18}},"53":{"start":{"line":130,"column":4},"end":{"line":130,"column":71}},"54":{"start":{"line":130,"column":38},"end":{"line":130,"column":71}},"55":{"start":{"line":131,"column":4},"end":{"line":131,"column":61}},"56":{"start":{"line":131,"column":33},"end":{"line":131,"column":61}},"57":{"start":{"line":132,"column":4},"end":{"line":132,"column":34}},"58":{"start":{"line":132,"column":20},"end":{"line":132,"column":34}},"59":{"start":{"line":134,"column":4},"end":{"line":134,"column":54}},"60":{"start":{"line":135,"column":4},"end":{"line":135,"column":70}},"61":{"start":{"line":137,"column":4},"end":{"line":137,"column":22}},"62":{"start":{"line":138,"column":4},"end":{"line":138,"column":41}},"63":{"start":{"line":141,"column":4},"end":{"line":141,"column":14}},"64":{"start":{"line":142,"column":4},"end":{"line":146,"column":5}},"65":{"start":{"line":143,"column":6},"end":{"line":143,"column":70}},"66":{"start":{"line":145,"column":6},"end":{"line":145,"column":54}},"67":{"start":{"line":148,"column":4},"end":{"line":156,"column":7}},"68":{"start":{"line":149,"column":6},"end":{"line":149,"column":32}},"69":{"start":{"line":149,"column":15},"end":{"line":149,"column":32}},"70":{"start":{"line":152,"column":6},"end":{"line":152,"column":37}},"71":{"start":{"line":154,"column":6},"end":{"line":154,"column":37}},"72":{"start":{"line":155,"column":6},"end":{"line":155,"column":13}},"73":{"start":{"line":168,"column":0},"end":{"line":185,"column":1}},"74":{"start":{"line":169,"column":2},"end":{"line":169,"column":18}},"75":{"start":{"line":171,"column":2},"end":{"line":183,"column":9}},"76":{"start":{"line":175,"column":6},"end":{"line":175,"column":63}},"77":{"start":{"line":180,"column":6},"end":{"line":180,"column":60}},"78":{"start":{"line":194,"column":0},"end":{"line":253,"column":1}},"79":{"start":{"line":195,"column":2},"end":{"line":195,"column":18}},"80":{"start":{"line":196,"column":2},"end":{"line":196,"column":11}},"81":{"start":{"line":199,"column":2},"end":{"line":204,"column":3}},"82":{"start":{"line":200,"column":4},"end":{"line":203,"column":5}},"83":{"start":{"line":201,"column":6},"end":{"line":201,"column":32}},"84":{"start":{"line":202,"column":6},"end":{"line":202,"column":53}},"85":{"start":{"line":206,"column":2},"end":{"line":211,"column":3}},"86":{"start":{"line":207,"column":4},"end":{"line":210,"column":5}},"87":{"start":{"line":208,"column":6},"end":{"line":208,"column":32}},"88":{"start":{"line":209,"column":6},"end":{"line":209,"column":53}},"89":{"start":{"line":214,"column":2},"end":{"line":214,"column":73}},"90":{"start":{"line":217,"column":2},"end":{"line":217,"column":70}},"91":{"start":{"line":220,"column":2},"end":{"line":252,"column":5}},"92":{"start":{"line":221,"column":4},"end":{"line":224,"column":5}},"93":{"start":{"line":222,"column":6},"end":{"line":222,"column":72}},"94":{"start":{"line":222,"column":37},"end":{"line":222,"column":70}},"95":{"start":{"line":223,"column":6},"end":{"line":223,"column":21}},"96":{"start":{"line":227,"column":4},"end":{"line":227,"column":51}},"97":{"start":{"line":230,"column":4},"end":{"line":230,"column":81}},"98":{"start":{"line":230,"column":60},"end":{"line":230,"column":81}},"99":{"start":{"line":232,"column":4},"end":{"line":232,"column":46}},"100":{"start":{"line":233,"column":4},"end":{"line":237,"column":7}},"101":{"start":{"line":234,"column":6},"end":{"line":234,"column":30}},"102":{"start":{"line":234,"column":15},"end":{"line":234,"column":30}},"103":{"start":{"line":236,"column":6},"end":{"line":236,"column":43}},"104":{"start":{"line":240,"column":4},"end":{"line":250,"column":5}},"105":{"start":{"line":243,"column":6},"end":{"line":249,"column":9}},"106":{"start":{"line":244,"column":8},"end":{"line":244,"column":32}},"107":{"start":{"line":244,"column":17},"end":{"line":244,"column":32}},"108":{"start":{"line":247,"column":8},"end":{"line":247,"column":44}},"109":{"start":{"line":248,"column":8},"end":{"line":248,"column":24}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"3":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":11},"end":{"line":42,"column":30}},{"start":{"line":42,"column":34},"end":{"line":42,"column":36}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"8":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":6},"end":{"line":73,"column":6}},{"start":{"line":73,"column":6},"end":{"line":73,"column":6}}]},"9":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"10":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":9},"end":{"line":91,"column":26}},{"start":{"line":91,"column":30},"end":{"line":91,"column":55}},{"start":{"line":91,"column":60},"end":{"line":91,"column":99}}]},"11":{"line":93,"type":"cond-expr","locations":[{"start":{"line":93,"column":55},"end":{"line":93,"column":78}},{"start":{"line":93,"column":81},"end":{"line":93,"column":100}}]},"12":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"13":{"line":125,"type":"cond-expr","locations":[{"start":{"line":125,"column":67},"end":{"line":125,"column":107}},{"start":{"line":125,"column":110},"end":{"line":125,"column":114}}]},"14":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":130,"column":4}},{"start":{"line":130,"column":4},"end":{"line":130,"column":4}}]},"15":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"16":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":4}},{"start":{"line":132,"column":4},"end":{"line":132,"column":4}}]},"17":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"18":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":6},"end":{"line":149,"column":6}},{"start":{"line":149,"column":6},"end":{"line":149,"column":6}}]},"19":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":2},"end":{"line":199,"column":2}},{"start":{"line":199,"column":2},"end":{"line":199,"column":2}}]},"20":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":200,"column":4}},{"start":{"line":200,"column":4},"end":{"line":200,"column":4}}]},"21":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":13},"end":{"line":201,"column":17}},{"start":{"line":201,"column":21},"end":{"line":201,"column":31}}]},"22":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"23":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"24":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":13},"end":{"line":208,"column":17}},{"start":{"line":208,"column":21},"end":{"line":208,"column":31}}]},"25":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":4},"end":{"line":221,"column":4}},{"start":{"line":221,"column":4},"end":{"line":221,"column":4}}]},"26":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":6},"end":{"line":222,"column":6}},{"start":{"line":222,"column":6},"end":{"line":222,"column":6}}]},"27":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"28":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":6},"end":{"line":234,"column":6}},{"start":{"line":234,"column":6},"end":{"line":234,"column":6}}]},"29":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":8},"end":{"line":244,"column":8}},{"start":{"line":244,"column":8},"end":{"line":244,"column":8}}]}},"code":["/**"," * Module Dependencies"," */","","var async = require('async');","var _ = require('lodash');","var utils = require('../../utils/helpers');","var Deferred = require('../deferred');","var callbacks = require('../../utils/callbacksRunner');","var nestedOperations = require('../../utils/nestedOperations');","var hop = utils.object.hasOwnProperty;","","","/**"," * Create a new record"," *"," * @param {Object || Array} values for single model or array of multiple values"," * @param {Function} callback"," * @return Deferred object if no callback"," */","","module.exports = function(values, cb) {","","  var self = this;","","  // Handle Deferred where it passes criteria first","  if (arguments.length === 3) {","    var args = Array.prototype.slice.call(arguments);","    cb = args.pop();","    values = args.pop();","  }","","  // Loop through values and pull out any buffers before cloning","  var bufferValues = {};","","  _.each(_.keys(values), function(key) {","    if (Buffer.isBuffer(values[key])) {","      bufferValues[key] = values[key];","    }","  });","","  values = _.cloneDeep(values) || {};","","  // Replace clone keys with the buffer values","  _.each(_.keys(bufferValues), function(key) {","    values[key] = bufferValues[key];","  });","","  // Remove all undefined values","  if (_.isArray(values)) {","    values = _.remove(values, undefined);","  }","","  // Return Deferred or pass to adapter","  if (typeof cb !== 'function') {","    return new Deferred(this, this.create, {}, values);","  }","","","  // Handle Array of values","  if (Array.isArray(values)) {","    return this.createEach(values, cb);","  }","","  // Process Values","  var valuesObject = processValues.call(this, values);","","  // Create any of the belongsTo associations and set the foreign key values","  createBelongsTo.call(this, valuesObject, function(err) {","    if (err) return cb(err);","","    beforeCallbacks.call(self, valuesObject, function(err) {","      if (err) return cb(err);","      createValues.call(self, valuesObject, cb);","    });","  });","};","","","/**"," * Process Values"," *"," * @param {Object} values"," * @return {Object}"," */","","function processValues(values) {","","  // Set Default Values if available","  for (var key in this.attributes) {","    if ((!hop(values, key) || values[key] === undefined) && hop(this.attributes[key], 'defaultsTo')) {","      var defaultsTo = this.attributes[key].defaultsTo;","      values[key] = typeof defaultsTo === 'function' ? defaultsTo.call(values) : _.clone(defaultsTo);","    }","  }","","  // Pull out any associations in the values","  var _values = _.cloneDeep(values);","  var associations = nestedOperations.valuesParser.call(this, this.identity, this.waterline.schema, values);","","  // Replace associated models with their foreign key values if available.","  // Unless the association has a custom primary key (we want to create the object)","  values = nestedOperations.reduceAssociations.call(this, this.identity, this.waterline.schema, values, 'create');","","  // Cast values to proper types (handle numbers as strings)","  values = this._cast.run(values);","","  return { values: values, originalValues: _values, associations: associations };","}","","/**"," * Create BelongsTo Records"," *"," */","","function createBelongsTo(valuesObject, cb) {","  var self = this;","","  async.each(valuesObject.associations.models, function(item, next) {","","    // Check if value is an object. If not don't try and create it.","    if (!_.isPlainObject(valuesObject.values[item])) return next();","","    // Check for any transformations","    var attrName = hop(self._transformer._transformations, item) ? self._transformer._transformations[item] : item;","","    var attribute = self._schema.schema[attrName];","    var modelName;","","    if (hop(attribute, 'collection')) modelName = attribute.collection;","    if (hop(attribute, 'model')) modelName = attribute.model;","    if (!modelName) return next();","","    var model = self.waterline.collections[modelName];","    var pkValue = valuesObject.originalValues[item][model.primaryKey];","","    var criteria = {};","    criteria[model.primaryKey] = pkValue;","","    // If a pkValue if found, do a findOrCreate and look for a record matching the pk.","    var query;","    if (pkValue) {","      query = model.findOrCreate(criteria, valuesObject.values[item]);","    } else {","      query = model.create(valuesObject.values[item]);","    }","","    query.exec(function(err, val) {","      if (err) return next(err);","","      // attach the new model's pk value to the original value's key","      var pk = val[model.primaryKey];","","      valuesObject.values[item] = pk;","      next();","    });","","  }, cb);","}","","/**"," * Run Before* Lifecycle Callbacks"," *"," * @param {Object} valuesObject"," * @param {Function} cb"," */","","function beforeCallbacks(valuesObject, cb) {","  var self = this;","","  async.series([","","    // Run Validation with Validation LifeCycle Callbacks","    function(cb) {","      callbacks.validate(self, valuesObject.values, false, cb);","    },","","    // Before Create Lifecycle Callback","    function(cb) {","      callbacks.beforeCreate(self, valuesObject.values, cb);","    }","","  ], cb);","","}","","/**"," * Create Parent Record and any associated values"," *"," * @param {Object} valuesObject"," * @param {Function} cb"," */","","function createValues(valuesObject, cb) {","  var self = this;","  var date;","","  // Automatically add updatedAt and createdAt (if enabled)","  if (self.autoCreatedAt) {","    if (!valuesObject.values[self.autoCreatedAt]) {","      date = date || new Date();","      valuesObject.values[self.autoCreatedAt] = date;","    }","  }","","  if (self.autoUpdatedAt) {","    if (!valuesObject.values[self.autoUpdatedAt]) {","      date = date || new Date();","      valuesObject.values[self.autoUpdatedAt] = date;","    }","  }","","  // Transform Values","  valuesObject.values = self._transformer.serialize(valuesObject.values);","","  // Clean attributes","  valuesObject.values = self._schema.cleanValues(valuesObject.values);","","  // Pass to adapter here","  self.adapter.create(valuesObject.values, function(err, values) {","    if (err) {","      if (typeof err === 'object') { err.model = self._model.globalId; }","      return cb(err);","    }","","    // Unserialize values","    values = self._transformer.unserialize(values);","","    // If no associations were used, run after","    if (valuesObject.associations.collections.length === 0) return after(values);","","    var parentModel = new self._model(values);","    nestedOperations.create.call(self, parentModel, valuesObject.originalValues, valuesObject.associations.collections, function(err) {","      if (err) return cb(err);","","      return after(parentModel.toObject());","    });","","","    function after(values) {","","      // Run After Create Callbacks","      callbacks.afterCreate(self, values, function(err) {","        if (err) return cb(err);","","        // Return an instance of Model","        var model = new self._model(values);","        cb(null, model);","      });","    }","","  });","}",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"22":1,"24":0,"27":0,"28":0,"29":0,"30":0,"34":0,"36":0,"37":0,"38":0,"42":0,"45":0,"46":0,"50":0,"51":0,"55":0,"56":0,"61":0,"62":0,"66":0,"69":0,"70":0,"72":0,"73":0,"74":0,"87":1,"90":0,"91":0,"92":0,"93":0,"98":0,"99":0,"103":0,"106":0,"108":0,"116":1,"117":0,"119":0,"122":0,"125":0,"127":0,"128":0,"130":0,"131":0,"132":0,"134":0,"135":0,"137":0,"138":0,"141":0,"142":0,"143":0,"145":0,"148":0,"149":0,"152":0,"154":0,"155":0,"168":1,"169":0,"171":0,"175":0,"180":0,"194":1,"195":0,"196":0,"199":0,"200":0,"201":0,"202":0,"206":0,"207":0,"208":0,"209":0,"214":0,"217":0,"220":0,"221":0,"222":0,"223":0,"227":0,"230":0,"232":0,"233":0,"234":0,"236":0,"240":1,"243":0,"244":0,"247":0,"248":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/deferred.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/deferred.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":1,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":1,"134":0,"135":0,"136":1,"137":0,"138":0,"139":1,"140":0,"141":0,"142":1,"143":0,"144":0,"145":1,"146":0,"147":0,"148":1,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":0,"159":0,"160":0,"161":1,"162":0,"163":1,"164":0,"165":1,"166":0,"167":1,"168":1,"169":0,"170":0,"171":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":32},"end":{"line":19,"column":76}}},"2":{"name":"(anonymous_2)","line":48,"loc":{"start":{"line":48,"column":34},"end":{"line":48,"column":62}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":33},"end":{"line":73,"column":52}}},"4":{"name":"(anonymous_4)","line":75,"loc":{"start":{"line":75,"column":37},"end":{"line":75,"column":59}}},"5":{"name":"(anonymous_5)","line":92,"loc":{"start":{"line":92,"column":30},"end":{"line":92,"column":58}}},"6":{"name":"(anonymous_6)","line":103,"loc":{"start":{"line":103,"column":20},"end":{"line":103,"column":39}}},"7":{"name":"(anonymous_7)","line":139,"loc":{"start":{"line":139,"column":51},"end":{"line":139,"column":65}}},"8":{"name":"(anonymous_8)","line":199,"loc":{"start":{"line":199,"column":84},"end":{"line":199,"column":98}}},"9":{"name":"(anonymous_9)","line":217,"loc":{"start":{"line":217,"column":44},"end":{"line":217,"column":64}}},"10":{"name":"(anonymous_10)","line":231,"loc":{"start":{"line":231,"column":99},"end":{"line":231,"column":114}}},"11":{"name":"(anonymous_11)","line":280,"loc":{"start":{"line":280,"column":27},"end":{"line":280,"column":46}}},"12":{"name":"(anonymous_12)","line":285,"loc":{"start":{"line":285,"column":49},"end":{"line":285,"column":64}}},"13":{"name":"(anonymous_13)","line":304,"loc":{"start":{"line":304,"column":38},"end":{"line":304,"column":52}}},"14":{"name":"(anonymous_14)","line":320,"loc":{"start":{"line":320,"column":27},"end":{"line":320,"column":43}}},"15":{"name":"(anonymous_15)","line":333,"loc":{"start":{"line":333,"column":26},"end":{"line":333,"column":41}}},"16":{"name":"(anonymous_16)","line":348,"loc":{"start":{"line":348,"column":30},"end":{"line":348,"column":48}}},"17":{"name":"(anonymous_17)","line":373,"loc":{"start":{"line":373,"column":29},"end":{"line":373,"column":40}}},"18":{"name":"(anonymous_18)","line":386,"loc":{"start":{"line":386,"column":26},"end":{"line":386,"column":45}}},"19":{"name":"(anonymous_19)","line":395,"loc":{"start":{"line":395,"column":37},"end":{"line":395,"column":51}}},"20":{"name":"(anonymous_20)","line":410,"loc":{"start":{"line":410,"column":25},"end":{"line":410,"column":36}}},"21":{"name":"(anonymous_21)","line":421,"loc":{"start":{"line":421,"column":29},"end":{"line":421,"column":40}}},"22":{"name":"(anonymous_22)","line":432,"loc":{"start":{"line":432,"column":25},"end":{"line":432,"column":36}}},"23":{"name":"(anonymous_23)","line":443,"loc":{"start":{"line":443,"column":25},"end":{"line":443,"column":36}}},"24":{"name":"(anonymous_24)","line":456,"loc":{"start":{"line":456,"column":25},"end":{"line":456,"column":42}}},"25":{"name":"(anonymous_25)","line":470,"loc":{"start":{"line":470,"column":26},"end":{"line":470,"column":39}}},"26":{"name":"(anonymous_26)","line":492,"loc":{"start":{"line":492,"column":31},"end":{"line":492,"column":42}}},"27":{"name":"(anonymous_27)","line":504,"loc":{"start":{"line":504,"column":26},"end":{"line":504,"column":43}}},"28":{"name":"(anonymous_28)","line":512,"loc":{"start":{"line":512,"column":28},"end":{"line":512,"column":41}}},"29":{"name":"(anonymous_29)","line":520,"loc":{"start":{"line":520,"column":27},"end":{"line":520,"column":40}}},"30":{"name":"buildAggregate","line":537,"loc":{"start":{"line":537,"column":0},"end":{"line":537,"column":35}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":46}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":60}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":49}},"9":{"start":{"line":19,"column":0},"end":{"line":32,"column":2}},"10":{"start":{"line":21,"column":2},"end":{"line":21,"column":131}},"11":{"start":{"line":21,"column":16},"end":{"line":21,"column":131}},"12":{"start":{"line":22,"column":2},"end":{"line":22,"column":129}},"13":{"start":{"line":22,"column":15},"end":{"line":22,"column":129}},"14":{"start":{"line":24,"column":2},"end":{"line":24,"column":26}},"15":{"start":{"line":25,"column":2},"end":{"line":25,"column":24}},"16":{"start":{"line":26,"column":2},"end":{"line":26,"column":28}},"17":{"start":{"line":27,"column":2},"end":{"line":27,"column":32}},"18":{"start":{"line":29,"column":2},"end":{"line":29,"column":24}},"19":{"start":{"line":31,"column":2},"end":{"line":31,"column":14}},"20":{"start":{"line":48,"column":0},"end":{"line":65,"column":2}},"21":{"start":{"line":51,"column":2},"end":{"line":51,"column":40}},"22":{"start":{"line":54,"column":2},"end":{"line":54,"column":46}},"23":{"start":{"line":57,"column":2},"end":{"line":57,"column":57}},"24":{"start":{"line":64,"column":2},"end":{"line":64,"column":14}},"25":{"start":{"line":73,"column":0},"end":{"line":80,"column":2}},"26":{"start":{"line":74,"column":2},"end":{"line":74,"column":18}},"27":{"start":{"line":75,"column":2},"end":{"line":77,"column":5}},"28":{"start":{"line":76,"column":4},"end":{"line":76,"column":47}},"29":{"start":{"line":78,"column":2},"end":{"line":78,"column":14}},"30":{"start":{"line":92,"column":0},"end":{"line":271,"column":2}},"31":{"start":{"line":94,"column":2},"end":{"line":94,"column":18}},"32":{"start":{"line":95,"column":2},"end":{"line":95,"column":17}},"33":{"start":{"line":96,"column":2},"end":{"line":96,"column":16}},"34":{"start":{"line":97,"column":2},"end":{"line":97,"column":11}},"35":{"start":{"line":98,"column":2},"end":{"line":98,"column":11}},"36":{"start":{"line":102,"column":2},"end":{"line":107,"column":3}},"37":{"start":{"line":103,"column":4},"end":{"line":105,"column":7}},"38":{"start":{"line":104,"column":6},"end":{"line":104,"column":40}},"39":{"start":{"line":106,"column":4},"end":{"line":106,"column":16}},"40":{"start":{"line":110,"column":2},"end":{"line":131,"column":3}},"41":{"start":{"line":111,"column":4},"end":{"line":111,"column":44}},"42":{"start":{"line":121,"column":4},"end":{"line":121,"column":79}},"43":{"start":{"line":125,"column":4},"end":{"line":130,"column":6}},"44":{"start":{"line":133,"column":2},"end":{"line":270,"column":3}},"45":{"start":{"line":136,"column":4},"end":{"line":136,"column":86}},"46":{"start":{"line":139,"column":4},"end":{"line":143,"column":7}},"47":{"start":{"line":140,"column":6},"end":{"line":142,"column":7}},"48":{"start":{"line":141,"column":8},"end":{"line":141,"column":62}},"49":{"start":{"line":145,"column":4},"end":{"line":150,"column":5}},"50":{"start":{"line":146,"column":6},"end":{"line":149,"column":8}},"51":{"start":{"line":181,"column":4},"end":{"line":181,"column":100}},"52":{"start":{"line":185,"column":4},"end":{"line":195,"column":6}},"53":{"start":{"line":198,"column":4},"end":{"line":198,"column":20}},"54":{"start":{"line":199,"column":4},"end":{"line":207,"column":7}},"55":{"start":{"line":200,"column":6},"end":{"line":200,"column":80}},"56":{"start":{"line":201,"column":6},"end":{"line":204,"column":7}},"57":{"start":{"line":202,"column":8},"end":{"line":202,"column":25}},"58":{"start":{"line":203,"column":8},"end":{"line":203,"column":15}},"59":{"start":{"line":206,"column":6},"end":{"line":206,"column":34}},"60":{"start":{"line":209,"column":4},"end":{"line":209,"column":25}},"61":{"start":{"line":211,"column":4},"end":{"line":211,"column":65}},"62":{"start":{"line":212,"column":4},"end":{"line":212,"column":25}},"63":{"start":{"line":215,"column":4},"end":{"line":223,"column":5}},"64":{"start":{"line":216,"column":6},"end":{"line":216,"column":26}},"65":{"start":{"line":217,"column":6},"end":{"line":219,"column":9}},"66":{"start":{"line":218,"column":8},"end":{"line":218,"column":72}},"67":{"start":{"line":220,"column":11},"end":{"line":223,"column":5}},"68":{"start":{"line":221,"column":6},"end":{"line":221,"column":26}},"69":{"start":{"line":222,"column":6},"end":{"line":222,"column":97}},"70":{"start":{"line":225,"column":4},"end":{"line":225,"column":21}},"71":{"start":{"line":228,"column":4},"end":{"line":250,"column":5}},"72":{"start":{"line":231,"column":6},"end":{"line":234,"column":9}},"73":{"start":{"line":232,"column":8},"end":{"line":232,"column":97}},"74":{"start":{"line":233,"column":8},"end":{"line":233,"column":47}},"75":{"start":{"line":236,"column":6},"end":{"line":247,"column":8}},"76":{"start":{"line":249,"column":6},"end":{"line":249,"column":23}},"77":{"start":{"line":253,"column":4},"end":{"line":257,"column":5}},"78":{"start":{"line":254,"column":6},"end":{"line":254,"column":35}},"79":{"start":{"line":255,"column":11},"end":{"line":257,"column":5}},"80":{"start":{"line":256,"column":6},"end":{"line":256,"column":35}},"81":{"start":{"line":260,"column":4},"end":{"line":260,"column":85}},"82":{"start":{"line":262,"column":4},"end":{"line":262,"column":16}},"83":{"start":{"line":264,"column":4},"end":{"line":269,"column":6}},"84":{"start":{"line":280,"column":0},"end":{"line":311,"column":2}},"85":{"start":{"line":282,"column":2},"end":{"line":282,"column":29}},"86":{"start":{"line":282,"column":17},"end":{"line":282,"column":29}},"87":{"start":{"line":285,"column":2},"end":{"line":287,"column":3}},"88":{"start":{"line":285,"column":65},"end":{"line":285,"column":89}},"89":{"start":{"line":286,"column":4},"end":{"line":286,"column":30}},"90":{"start":{"line":290,"column":2},"end":{"line":290,"column":42}},"91":{"start":{"line":294,"column":2},"end":{"line":296,"column":3}},"92":{"start":{"line":295,"column":4},"end":{"line":295,"column":27}},"93":{"start":{"line":298,"column":2},"end":{"line":298,"column":48}},"94":{"start":{"line":298,"column":36},"end":{"line":298,"column":48}},"95":{"start":{"line":300,"column":2},"end":{"line":300,"column":43}},"96":{"start":{"line":300,"column":23},"end":{"line":300,"column":43}},"97":{"start":{"line":301,"column":2},"end":{"line":301,"column":41}},"98":{"start":{"line":304,"column":2},"end":{"line":306,"column":5}},"99":{"start":{"line":305,"column":4},"end":{"line":305,"column":37}},"100":{"start":{"line":308,"column":2},"end":{"line":308,"column":31}},"101":{"start":{"line":310,"column":2},"end":{"line":310,"column":14}},"102":{"start":{"line":320,"column":0},"end":{"line":324,"column":2}},"103":{"start":{"line":321,"column":2},"end":{"line":321,"column":31}},"104":{"start":{"line":323,"column":2},"end":{"line":323,"column":14}},"105":{"start":{"line":333,"column":0},"end":{"line":337,"column":2}},"106":{"start":{"line":334,"column":2},"end":{"line":334,"column":29}},"107":{"start":{"line":336,"column":2},"end":{"line":336,"column":14}},"108":{"start":{"line":348,"column":0},"end":{"line":365,"column":2}},"109":{"start":{"line":349,"column":2},"end":{"line":349,"column":24}},"110":{"start":{"line":351,"column":2},"end":{"line":351,"column":72}},"111":{"start":{"line":351,"column":29},"end":{"line":351,"column":72}},"112":{"start":{"line":353,"column":2},"end":{"line":353,"column":31}},"113":{"start":{"line":354,"column":2},"end":{"line":354,"column":44}},"114":{"start":{"line":355,"column":2},"end":{"line":355,"column":15}},"115":{"start":{"line":357,"column":2},"end":{"line":357,"column":47}},"116":{"start":{"line":357,"column":31},"end":{"line":357,"column":47}},"117":{"start":{"line":358,"column":2},"end":{"line":358,"column":59}},"118":{"start":{"line":358,"column":29},"end":{"line":358,"column":59}},"119":{"start":{"line":360,"column":2},"end":{"line":362,"column":16}},"120":{"start":{"line":364,"column":2},"end":{"line":364,"column":14}},"121":{"start":{"line":373,"column":0},"end":{"line":376,"column":2}},"122":{"start":{"line":374,"column":2},"end":{"line":374,"column":78}},"123":{"start":{"line":375,"column":2},"end":{"line":375,"column":14}},"124":{"start":{"line":386,"column":0},"end":{"line":402,"column":2}},"125":{"start":{"line":388,"column":2},"end":{"line":388,"column":29}},"126":{"start":{"line":388,"column":17},"end":{"line":388,"column":29}},"127":{"start":{"line":391,"column":2},"end":{"line":391,"column":52}},"128":{"start":{"line":393,"column":2},"end":{"line":393,"column":39}},"129":{"start":{"line":395,"column":2},"end":{"line":397,"column":5}},"130":{"start":{"line":396,"column":4},"end":{"line":396,"column":35}},"131":{"start":{"line":399,"column":2},"end":{"line":399,"column":29}},"132":{"start":{"line":401,"column":2},"end":{"line":401,"column":14}},"133":{"start":{"line":410,"column":0},"end":{"line":413,"column":2}},"134":{"start":{"line":411,"column":2},"end":{"line":411,"column":74}},"135":{"start":{"line":412,"column":2},"end":{"line":412,"column":14}},"136":{"start":{"line":421,"column":0},"end":{"line":424,"column":2}},"137":{"start":{"line":422,"column":2},"end":{"line":422,"column":78}},"138":{"start":{"line":423,"column":2},"end":{"line":423,"column":14}},"139":{"start":{"line":432,"column":0},"end":{"line":435,"column":2}},"140":{"start":{"line":433,"column":2},"end":{"line":433,"column":74}},"141":{"start":{"line":434,"column":2},"end":{"line":434,"column":14}},"142":{"start":{"line":443,"column":0},"end":{"line":446,"column":2}},"143":{"start":{"line":444,"column":2},"end":{"line":444,"column":74}},"144":{"start":{"line":445,"column":2},"end":{"line":445,"column":14}},"145":{"start":{"line":456,"column":0},"end":{"line":460,"column":2}},"146":{"start":{"line":457,"column":2},"end":{"line":457,"column":24}},"147":{"start":{"line":459,"column":2},"end":{"line":459,"column":14}},"148":{"start":{"line":470,"column":0},"end":{"line":486,"column":2}},"149":{"start":{"line":472,"column":2},"end":{"line":475,"column":3}},"150":{"start":{"line":473,"column":4},"end":{"line":473,"column":95}},"151":{"start":{"line":474,"column":4},"end":{"line":474,"column":11}},"152":{"start":{"line":478,"column":2},"end":{"line":478,"column":30}},"153":{"start":{"line":481,"column":2},"end":{"line":481,"column":34}},"154":{"start":{"line":482,"column":2},"end":{"line":482,"column":52}},"155":{"start":{"line":482,"column":20},"end":{"line":482,"column":52}},"156":{"start":{"line":485,"column":2},"end":{"line":485,"column":42}},"157":{"start":{"line":492,"column":0},"end":{"line":497,"column":2}},"158":{"start":{"line":493,"column":2},"end":{"line":495,"column":3}},"159":{"start":{"line":494,"column":4},"end":{"line":494,"column":63}},"160":{"start":{"line":496,"column":2},"end":{"line":496,"column":24}},"161":{"start":{"line":504,"column":0},"end":{"line":506,"column":2}},"162":{"start":{"line":505,"column":2},"end":{"line":505,"column":39}},"163":{"start":{"line":512,"column":0},"end":{"line":514,"column":2}},"164":{"start":{"line":513,"column":2},"end":{"line":513,"column":37}},"165":{"start":{"line":520,"column":0},"end":{"line":522,"column":2}},"166":{"start":{"line":521,"column":2},"end":{"line":521,"column":36}},"167":{"start":{"line":528,"column":0},"end":{"line":528,"column":51}},"168":{"start":{"line":537,"column":0},"end":{"line":545,"column":1}},"169":{"start":{"line":540,"column":2},"end":{"line":542,"column":3}},"170":{"start":{"line":541,"column":4},"end":{"line":541,"column":19}},"171":{"start":{"line":544,"column":2},"end":{"line":544,"column":35}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"3":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":17},"end":{"line":27,"column":23}},{"start":{"line":27,"column":27},"end":{"line":27,"column":31}}]},"4":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"5":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":48},"end":{"line":121,"column":53}},{"start":{"line":121,"column":57},"end":{"line":121,"column":77}}]},"6":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":57},"end":{"line":121,"column":71}},{"start":{"line":121,"column":75},"end":{"line":121,"column":77}}]},"7":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":6}},{"start":{"line":140,"column":6},"end":{"line":140,"column":6}}]},"8":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":10},"end":{"line":140,"column":70}},{"start":{"line":140,"column":74},"end":{"line":140,"column":115}}]},"9":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":13},"end":{"line":141,"column":54}},{"start":{"line":141,"column":58},"end":{"line":141,"column":61}}]},"10":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"11":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":17},"end":{"line":187,"column":32}},{"start":{"line":187,"column":36},"end":{"line":187,"column":38}}]},"12":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":6},"end":{"line":201,"column":6}},{"start":{"line":201,"column":6},"end":{"line":201,"column":6}}]},"13":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"14":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":15},"end":{"line":218,"column":35}},{"start":{"line":218,"column":39},"end":{"line":218,"column":71}}]},"15":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":11},"end":{"line":220,"column":11}},{"start":{"line":220,"column":11},"end":{"line":220,"column":11}}]},"16":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":15},"end":{"line":220,"column":34}},{"start":{"line":220,"column":38},"end":{"line":220,"column":97}}]},"17":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"18":{"line":228,"type":"binary-expr","locations":[{"start":{"line":228,"column":8},"end":{"line":228,"column":17}},{"start":{"line":228,"column":21},"end":{"line":228,"column":47}}]},"19":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":15},"end":{"line":233,"column":38}},{"start":{"line":233,"column":42},"end":{"line":233,"column":46}}]},"20":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":4},"end":{"line":253,"column":4}},{"start":{"line":253,"column":4},"end":{"line":253,"column":4}}]},"21":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":8},"end":{"line":253,"column":16}},{"start":{"line":253,"column":20},"end":{"line":253,"column":36}}]},"22":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":11},"end":{"line":255,"column":11}},{"start":{"line":255,"column":11},"end":{"line":255,"column":11}}]},"23":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":50},"end":{"line":260,"column":70}},{"start":{"line":260,"column":74},"end":{"line":260,"column":76}}]},"24":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":2},"end":{"line":282,"column":2}},{"start":{"line":282,"column":2},"end":{"line":282,"column":2}}]},"25":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":2},"end":{"line":285,"column":2}},{"start":{"line":285,"column":2},"end":{"line":285,"column":2}}]},"26":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":6},"end":{"line":285,"column":29}},{"start":{"line":285,"column":33},"end":{"line":285,"column":91}}]},"27":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":2},"end":{"line":294,"column":2}},{"start":{"line":294,"column":2},"end":{"line":294,"column":2}}]},"28":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":2},"end":{"line":298,"column":2}},{"start":{"line":298,"column":2},"end":{"line":298,"column":2}}]},"29":{"line":298,"type":"binary-expr","locations":[{"start":{"line":298,"column":6},"end":{"line":298,"column":15}},{"start":{"line":298,"column":19},"end":{"line":298,"column":34}}]},"30":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":2},"end":{"line":300,"column":2}},{"start":{"line":300,"column":2},"end":{"line":300,"column":2}}]},"31":{"line":301,"type":"binary-expr","locations":[{"start":{"line":301,"column":14},"end":{"line":301,"column":34}},{"start":{"line":301,"column":38},"end":{"line":301,"column":40}}]},"32":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":2},"end":{"line":351,"column":2}},{"start":{"line":351,"column":2},"end":{"line":351,"column":2}}]},"33":{"line":353,"type":"binary-expr","locations":[{"start":{"line":353,"column":13},"end":{"line":353,"column":25}},{"start":{"line":353,"column":29},"end":{"line":353,"column":30}}]},"34":{"line":354,"type":"binary-expr","locations":[{"start":{"line":354,"column":14},"end":{"line":354,"column":27}},{"start":{"line":354,"column":31},"end":{"line":354,"column":43}}]},"35":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":2},"end":{"line":357,"column":2}},{"start":{"line":357,"column":2},"end":{"line":357,"column":2}}]},"36":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":6},"end":{"line":357,"column":14}},{"start":{"line":357,"column":18},"end":{"line":357,"column":29}}]},"37":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":2},"end":{"line":358,"column":2}},{"start":{"line":358,"column":2},"end":{"line":358,"column":2}}]},"38":{"line":358,"type":"binary-expr","locations":[{"start":{"line":358,"column":6},"end":{"line":358,"column":14}},{"start":{"line":358,"column":18},"end":{"line":358,"column":27}}]},"39":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":2},"end":{"line":388,"column":2}},{"start":{"line":388,"column":2},"end":{"line":388,"column":2}}]},"40":{"line":393,"type":"binary-expr","locations":[{"start":{"line":393,"column":13},"end":{"line":393,"column":32}},{"start":{"line":393,"column":36},"end":{"line":393,"column":38}}]},"41":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":2},"end":{"line":472,"column":2}},{"start":{"line":472,"column":2},"end":{"line":472,"column":2}}]},"42":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":2},"end":{"line":482,"column":2}},{"start":{"line":482,"column":2},"end":{"line":482,"column":2}}]},"43":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":2},"end":{"line":493,"column":2}},{"start":{"line":493,"column":2},"end":{"line":493,"column":2}}]},"44":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":2},"end":{"line":540,"column":2}},{"start":{"line":540,"column":2},"end":{"line":540,"column":2}}]},"45":{"line":544,"type":"binary-expr","locations":[{"start":{"line":544,"column":24},"end":{"line":544,"column":28}},{"start":{"line":544,"column":32},"end":{"line":544,"column":34}}]}},"code":["/**"," * Deferred Object"," *"," * Used for building up a Query"," */","","var util = require('util');","var Promise = require('bluebird');","var _ = require('lodash');","var normalize = require('../utils/normalize');","var utils = require('../utils/helpers');","var acyclicTraversal = require('../utils/acyclicTraversal');","var hasOwnProperty = utils.object.hasOwnProperty;","","// Alias \"catch\" as \"fail\", for backwards compatibility with projects","// that were created using Q","Promise.prototype.fail = Promise.prototype.catch;","","var Deferred = module.exports = function(context, method, criteria, values) {","","  if (!context) return new Error('Must supply a context to a new Deferred object. Usage: new Deferred(context, method, criteria)');","  if (!method) return new Error('Must supply a method to a new Deferred object. Usage: new Deferred(context, method, criteria)');","","  this._context = context;","  this._method = method;","  this._criteria = criteria;","  this._values = values || null;","","  this._deferred = null; // deferred object for promises","","  return this;","};","","","/**"," * Add join clause(s) to the criteria object to populate"," * the specified alias all the way down (or at least until a"," * circular pattern is detected.)"," *"," * @param  {String} keyName  [the initial alias aka named relation]"," * @param  {Object} criteria [optional]"," * @return this"," * @chainable"," *"," * WARNING:"," * This method is not finished yet!!"," */","Deferred.prototype.populateDeep = function(keyName, criteria) {","","  // The identity of the initial model","  var identity = this._context.identity;","","  // The input schema","  var schema = this._context.waterline.schema;","","  // Kick off recursive function to traverse the schema graph.","  var plan = acyclicTraversal(schema, identity, keyName);","","  // TODO: convert populate plan into a join plan","  // this._criteria.joins = ....","","  // TODO: also merge criteria object into query","","  return this;","};","","/**"," * Populate all associations of a collection."," *"," * @return this"," * @chainable"," */","Deferred.prototype.populateAll = function(criteria) {","  var self = this;","  this._context.associations.forEach(function(association) {","    self.populate(association.alias, criteria);","  });","  return this;","","};","","/**"," * Add a `joins` clause to the criteria object."," *"," * Used for populating associations."," *"," * @param {String|Array} key, the key to populate or array of string keys"," * @return this"," * @chainable"," */","","Deferred.prototype.populate = function(keyName, criteria) {","","  var self = this;","  var joins = [];","  var pk = 'id';","  var attr;","  var join;","","  // Adds support for arrays into keyName so that a list of","  // populates can be passed","  if (_.isArray(keyName)) {","    keyName.forEach(function(populate) {","      self.populate(populate, criteria);","    });","    return this;","  }","  ","  // Normalize sub-criteria","  try {","    criteria = normalize.criteria(criteria);","","    ////////////////////////////////////////////////////////////////////////","    // TODO:","    // instead of doing this, target the relevant pieces of code","    // with weird expectations and teach them a lesson","    // e.g. `lib/waterline/query/finders/operations.js:665:12`","    // (delete userCriteria.sort)","    //","    // Except make sure `where` exists","    criteria.where = criteria.where === false ? false : (criteria.where || {});","    ////////////////////////////////////////////////////////////////////////","","  } catch (e) {","    throw new Error(","      'Could not parse sub-criteria passed to ' +","      util.format('`.populate(\"%s\")`', keyName) +","      '\\nSub-criteria:\\n' + util.inspect(criteria, false, null) +","      '\\nDetails:\\n' + util.inspect(e, false, null)","    );","  }","","  try {","","    // Set the attr value to the generated schema attribute","    attr = this._context.waterline.schema[this._context.identity].attributes[keyName];","","    // Get the current collection's primary key attribute","    Object.keys(this._context._attributes).forEach(function(key) {","      if (hasOwnProperty(self._context._attributes[key], 'primaryKey') && self._context._attributes[key].primaryKey) {","        pk = self._context._attributes[key].columnName || key;","      }","    });","","    if (!attr) {","      throw new Error(","        'In ' + util.format('`.populate(\"%s\")`', keyName) +","        ', attempting to populate an attribute that doesn\\'t exist'","      );","    }","","    //////////////////////////////////////////////////////////////////////","    // (there has been significant progress made towards both of these ///","    // goals-- contact @mikermcneil if you want to help) /////////////////","    //////////////////////////////////////////////////////////////////////","    // TODO:","    // Create synonym for `.populate()` syntax using criteria object","    // syntax.  i.e. instead of using `joins` key in criteria object","    // at the app level.","    //////////////////////////////////////////////////////////////////////","    // TODO:","    // Support Mongoose-style `foo.bar.baz` syntax for nested `populate`s.","    // (or something comparable.)","    // One solution would be:","    // .populate({","    //   friends: {","    //     where: { name: 'mike' },","    //     populate: {","    //       dentist: {","    //         where: { name: 'rob' }","    //       }","    //     }","    //   }","    // }, optionalCriteria )","    ////////////////////////////////////////////////////////////////////","","","    // Grab the key being populated to check if it is a has many to belongs to","    // If it's a belongs_to the adapter needs to know that it should replace the foreign key","    // with the associated value.","    var parentKey = this._context.waterline.collections[this._context.identity].attributes[keyName];","","    // Build the initial join object that will link this collection to either another collection","    // or to a junction table.","    join = {","      parent: this._context.identity,","      parentKey: attr.columnName || pk,","      child: attr.references,","      childKey: attr.on,","      select: Object.keys(this._context.waterline.schema[attr.references].attributes),","      alias: keyName,","      removeParentKey: !!parentKey.model,","      model: !!hasOwnProperty(parentKey, 'model'),","      collection: !!hasOwnProperty(parentKey, 'collection')","    };","","    // Build select object to use in the integrator","    var select = [];","    Object.keys(this._context.waterline.schema[attr.references].attributes).forEach(function(key) {","      var obj = self._context.waterline.schema[attr.references].attributes[key];","      if (!hasOwnProperty(obj, 'columnName')) {","        select.push(key);","        return;","      }","","      select.push(obj.columnName);","    });","","    join.select = select;","","    var schema = this._context.waterline.schema[attr.references];","    var reference = null;","","    // If linking to a junction table the attributes shouldn't be included in the return value","    if (schema.junctionTable) {","      join.select = false;","      reference = _.find(schema.attributes, function(attribute) {","        return attribute.references && attribute.columnName !== attr.on;","      });","    } else if (schema.throughTable && schema.throughTable[self._context.identity + '.' + keyName]) {","      join.select = false;","      reference = schema.attributes[schema.throughTable[self._context.identity + '.' + keyName]];","    }","","    joins.push(join);","","    // If a junction table is used add an additional join to get the data","    if (reference && hasOwnProperty(attr, 'on')) {","      // Build out the second join object that will link a junction table with the","      // values being populated","      var selects = _.map(_.keys(this._context.waterline.schema[reference.references].attributes), function(attr) {","        var expandedAttr = self._context.waterline.schema[reference.references].attributes[attr];","        return expandedAttr.columnName || attr;","      });","","      join = {","        parent: attr.references,","        parentKey: reference.columnName,","        child: reference.references,","        childKey: reference.on,","        select: selects,","        alias: keyName,","        junctionTable: true,","        removeParentKey: !!parentKey.model,","        model: false,","        collection: true","      };","","      joins.push(join);","    }","","    // Append the criteria to the correct join if available","    if (criteria && joins.length > 1) {","      joins[1].criteria = criteria;","    } else if (criteria) {","      joins[0].criteria = criteria;","    }","","    // Set the criteria joins","    this._criteria.joins = Array.prototype.concat(this._criteria.joins || [], joins);","","    return this;","  } catch (e) {","    throw new Error(","      'Encountered unexpected error while building join instructions for ' +","      util.format('`.populate(\"%s\")`', keyName) +","      '\\nDetails:\\n' +","      util.inspect(e, false, null)","    );","  }","};","","/**"," * Add a Where clause to the criteria object"," *"," * @param {Object} criteria to append"," * @return this"," */","","Deferred.prototype.where = function(criteria) {","","  if (!criteria) return this;","","  // If the criteria is an array of objects, wrap it in an \"or\"","  if (Array.isArray(criteria) && _.all(criteria, function(crit) {return _.isObject(crit);})) {","    criteria = {or: criteria};","  }","","  // Normalize criteria","  criteria = normalize.criteria(criteria);","","  // Wipe out the existing WHERE clause if the specified criteria ends up `false`","  // (since neither could match anything)","  if (criteria === false) {","    this._criteria = false;","  }","","  if (!criteria || !criteria.where) return this;","","  if (!this._criteria) this._criteria = {};","  var where = this._criteria.where || {};","","  // Merge with existing WHERE clause","  Object.keys(criteria.where).forEach(function(key) {","    where[key] = criteria.where[key];","  });","","  this._criteria.where = where;","","  return this;","};","","/**"," * Add a Limit clause to the criteria object"," *"," * @param {Integer} number to limit"," * @return this"," */","","Deferred.prototype.limit = function(limit) {","  this._criteria.limit = limit;","","  return this;","};","","/**"," * Add a Skip clause to the criteria object"," *"," * @param {Integer} number to skip"," * @return this"," */","","Deferred.prototype.skip = function(skip) {","  this._criteria.skip = skip;","","  return this;","};","","/**"," * Add a Paginate clause to the criteria object"," *"," * This is syntatical sugar that calls skip and"," * limit from a single function."," *"," * @param {Object} page and limit"," * @return this"," */","Deferred.prototype.paginate = function(options) {","  var defaultLimit = 10;","","  if (options === undefined) options = { page: 0, limit: defaultLimit };","","  var page = options.page || 0;","  var limit = options.limit || defaultLimit;","  var skip = 0;","","  if (page > 0 && limit === 0) skip = page - 1;","  if (page > 0 && limit > 0) skip = (page * limit) - limit;","","  this","  .skip(skip)","  .limit(limit);","","  return this;","};","","/**"," * Add a groupBy clause to the criteria object"," *"," * @param {Array|Arguments} Keys to group by"," * @return this"," */","Deferred.prototype.groupBy = function() {","  buildAggregate.call(this, 'groupBy', Array.prototype.slice.call(arguments));","  return this;","};","","","/**"," * Add a Sort clause to the criteria object"," *"," * @param {String|Object} key and order"," * @return this"," */","","Deferred.prototype.sort = function(criteria) {","","  if (!criteria) return this;","","  // Normalize criteria","  criteria = normalize.criteria({ sort: criteria });","","  var sort = this._criteria.sort || {};","","  Object.keys(criteria.sort).forEach(function(key) {","    sort[key] = criteria.sort[key];","  });","","  this._criteria.sort = sort;","","  return this;","};","","/**"," * Add a Sum clause to the criteria object"," *"," * @param {Array|Arguments} Keys to sum over"," * @return this"," */","Deferred.prototype.sum = function() {","  buildAggregate.call(this, 'sum', Array.prototype.slice.call(arguments));","  return this;","};","","/**"," * Add an Average clause to the criteria object"," *"," * @param {Array|Arguments} Keys to average over"," * @return this"," */","Deferred.prototype.average = function() {","  buildAggregate.call(this, 'average', Array.prototype.slice.call(arguments));","  return this;","};","","/**"," * Add a min clause to the criteria object"," *"," * @param {Array|Arguments} Keys to min over"," * @return this"," */","Deferred.prototype.min = function() {","  buildAggregate.call(this, 'min', Array.prototype.slice.call(arguments));","  return this;","};","","/**"," * Add a min clause to the criteria object"," *"," * @param {Array|Arguments} Keys to min over"," * @return this"," */","Deferred.prototype.max = function() {","  buildAggregate.call(this, 'max', Array.prototype.slice.call(arguments));","  return this;","};","","","/**"," * Add values to be used in update or create query"," *"," * @param {Object, Array} values"," * @return this"," */","","Deferred.prototype.set = function(values) {","  this._values = values;","","  return this;","};","","/**"," * Execute a Query using the method passed into the"," * constuctor."," *"," * @param {Function} callback"," * @return callback with parameters (err, results)"," */","","Deferred.prototype.exec = function(cb) {","","  if (!cb) {","    console.log(new Error('Error: No Callback supplied, you must define a callback.').message);","    return;","  }","","  // Normalize callback/switchback","  cb = normalize.callback(cb);","","  // Set up arguments + callback","  var args = [this._criteria, cb];","  if (this._values) args.splice(1, 0, this._values);","","  // Pass control to the adapter with the appropriate arguments.","  this._method.apply(this._context, args);","};","","/**"," * Executes a Query, and returns a promise"," */","","Deferred.prototype.toPromise = function() {","  if (!this._deferred) {","    this._deferred = Promise.promisify(this.exec).bind(this)();","  }","  return this._deferred;","};","","/**"," * Executes a Query, and returns a promise that applies cb/ec to the"," * result/error."," */","","Deferred.prototype.then = function(cb, ec) {","  return this.toPromise().then(cb, ec);","};","","/**"," * Applies results to function fn.apply, and returns a promise"," */","","Deferred.prototype.spread = function(cb) {","  return this.toPromise().spread(cb);","};","","/**"," * returns a promise and gets resolved with error"," */","","Deferred.prototype.catch = function(cb) {","  return this.toPromise().catch(cb);","};","","","/**"," * Alias \"catch\" as \"fail\""," */","Deferred.prototype.fail = Deferred.prototype.catch;","","/**"," * Build An Aggregate Criteria Option"," *"," * @param {String} key"," * @api private"," */","","function buildAggregate(key, args) {","","  // If passed in a list, set that as the min criteria","  if (args[0] instanceof Array) {","    args = args[0];","  }","","  this._criteria[key] = args || {};","}",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"17":1,"19":1,"21":0,"22":0,"24":0,"25":0,"26":0,"27":0,"29":0,"31":0,"48":1,"51":0,"54":0,"57":0,"64":0,"73":1,"74":0,"75":0,"76":0,"78":0,"92":1,"94":0,"95":0,"96":0,"97":0,"98":0,"102":0,"103":0,"104":0,"106":0,"110":0,"111":0,"121":0,"125":0,"133":0,"136":0,"139":0,"140":0,"141":0,"145":0,"146":0,"181":0,"185":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"206":0,"209":0,"211":0,"212":0,"215":0,"216":0,"217":0,"218":0,"220":0,"221":0,"222":0,"225":0,"228":0,"231":0,"232":0,"233":0,"236":0,"249":0,"253":0,"254":0,"255":0,"256":0,"260":0,"262":0,"264":0,"280":1,"282":0,"285":0,"286":0,"290":0,"294":0,"295":0,"298":0,"300":0,"301":0,"304":0,"305":0,"308":0,"310":0,"320":1,"321":0,"323":0,"333":1,"334":0,"336":0,"348":1,"349":0,"351":0,"353":0,"354":0,"355":0,"357":0,"358":0,"360":0,"364":0,"373":1,"374":0,"375":0,"386":1,"388":0,"391":0,"393":0,"395":0,"396":0,"399":0,"401":0,"410":1,"411":0,"412":0,"421":1,"422":0,"423":0,"432":1,"433":0,"434":0,"443":1,"444":0,"445":0,"456":1,"457":0,"459":0,"470":1,"472":0,"473":0,"474":0,"478":0,"481":0,"482":0,"485":0,"492":1,"493":0,"494":0,"496":0,"504":1,"505":0,"512":1,"513":0,"520":1,"521":0,"528":1,"537":1,"540":0,"541":0,"544":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/acyclicTraversal.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/acyclicTraversal.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"acyclicTraversal","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":20,"column":82}}},"2":{"name":"traverseSchemaGraph","line":38,"loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":62}}},"3":{"name":"buildSubsetOfAssociations","line":82,"loc":{"start":{"line":82,"column":40},"end":{"line":82,"column":105}}},"4":{"name":"(anonymous_4)","line":96,"loc":{"start":{"line":96,"column":31},"end":{"line":96,"column":66}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":20,"column":0},"end":{"line":110,"column":2}},"3":{"start":{"line":23,"column":2},"end":{"line":28,"column":4}},"4":{"start":{"line":30,"column":2},"end":{"line":30,"column":60}},"5":{"start":{"line":38,"column":2},"end":{"line":108,"column":3}},"6":{"start":{"line":40,"column":4},"end":{"line":40,"column":45}},"7":{"start":{"line":41,"column":4},"end":{"line":41,"column":52}},"8":{"start":{"line":43,"column":4},"end":{"line":43,"column":20}},"9":{"start":{"line":47,"column":4},"end":{"line":50,"column":7}},"10":{"start":{"line":52,"column":4},"end":{"line":52,"column":28}},"11":{"start":{"line":52,"column":21},"end":{"line":52,"column":28}},"12":{"start":{"line":55,"column":4},"end":{"line":58,"column":7}},"13":{"start":{"line":61,"column":4},"end":{"line":61,"column":53}},"14":{"start":{"line":62,"column":4},"end":{"line":62,"column":106}},"15":{"start":{"line":62,"column":19},"end":{"line":62,"column":106}},"16":{"start":{"line":63,"column":4},"end":{"line":63,"column":71}},"17":{"start":{"line":66,"column":4},"end":{"line":66,"column":54}},"18":{"start":{"line":73,"column":4},"end":{"line":78,"column":5}},"19":{"start":{"line":74,"column":6},"end":{"line":77,"column":9}},"20":{"start":{"line":81,"column":4},"end":{"line":92,"column":13}},"21":{"start":{"line":83,"column":8},"end":{"line":90,"column":9}},"22":{"start":{"line":84,"column":10},"end":{"line":88,"column":23}},"23":{"start":{"line":89,"column":10},"end":{"line":89,"column":27}},"24":{"start":{"line":91,"column":8},"end":{"line":91,"column":25}},"25":{"start":{"line":96,"column":4},"end":{"line":107,"column":11}},"26":{"start":{"line":99,"column":6},"end":{"line":99,"column":99}},"27":{"start":{"line":102,"column":6},"end":{"line":104,"column":7}},"28":{"start":{"line":103,"column":8},"end":{"line":103,"column":46}},"29":{"start":{"line":106,"column":6},"end":{"line":106,"column":28}}},"branchMap":{"1":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"2":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"3":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":33},"end":{"line":63,"column":47}},{"start":{"line":63,"column":51},"end":{"line":63,"column":70}}]},"4":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"5":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":8}},{"start":{"line":83,"column":8},"end":{"line":83,"column":8}}]},"6":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":12},"end":{"line":83,"column":31}},{"start":{"line":83,"column":36},"end":{"line":83,"column":49}},{"start":{"line":83,"column":53},"end":{"line":83,"column":71}}]},"7":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":22},"end":{"line":86,"column":35}},{"start":{"line":86,"column":39},"end":{"line":86,"column":57}}]},"8":{"line":87,"type":"cond-expr","locations":[{"start":{"line":87,"column":41},"end":{"line":87,"column":48}},{"start":{"line":87,"column":51},"end":{"line":87,"column":63}}]},"9":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":6},"end":{"line":102,"column":6}},{"start":{"line":102,"column":6},"end":{"line":102,"column":6}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","","","/**"," * Traverse the shema to build a populate plan object"," * that will populate every relation, sub-relation, and so on"," * reachable from the initial model and relation at least once"," * (perhaps most notable is that this provides access to most"," * related data without getting caught in loops.)"," *"," * @param  {[type]} schema          [description]"," * @param  {[type]} initialModel    [description]"," * @param  {[type]} initialRelation [description]"," * @return {[type]}                 [description]"," */","module.exports = function acyclicTraversal(schema, initialModel, initialRelation) {","","  // Track the edges which have already been traversed","  var alreadyTraversed = [","    // {","    //   relation: initialRelation,","    //   model: initialModel","    // }","  ];","","  return traverseSchemaGraph(initialModel, initialRelation);","","  /**","   * Recursive function","   * @param  {[type]} modelIdentity  [description]","   * @param  {[type]} nameOfRelation [description]","   * @return {[type]}                [description]","   */","  function traverseSchemaGraph(modelIdentity, nameOfRelation) {","","    var currentModel = schema[modelIdentity];","    var currentAttributes = currentModel.attributes;","","    var isRedundant;","","    // If this relation has already been traversed, return.","    // (i.e. `schema.attributes.modelIdentity.nameOfRelation`)","    isRedundant = _.findWhere(alreadyTraversed, {","      alias: nameOfRelation,","      model: modelIdentity","    });","","    if (isRedundant) return;","","    // Push this relation onto the `alreadyTraversed` stack.","    alreadyTraversed.push({","      alias: nameOfRelation,","      model: modelIdentity","    });","","","    var relation = currentAttributes[nameOfRelation];","    if (!relation) throw new Error('Unknown relation in schema: ' + modelIdentity + '.' + nameOfRelation);","    var identityOfRelatedModel = relation.model || relation.collection;","","    // Get the related model","    var relatedModel = schema[identityOfRelatedModel];","","    // If this relation is a collection with a `via` back-reference,","    // push it on to the `alreadyTraversed` stack.","    // (because the information therein is probably redundant)","    // TODO: evaluate this-- it may or may not be a good idea","    // (but I think it's a nice touch)","    if (relation.via) {","      alreadyTraversed.push({","        alias: relation.via,","        model: identityOfRelatedModel","      });","    }","","    // Lookup ALL the relations OF THE RELATED model.","    var relations =","      _(relatedModel.attributes).reduce(function buildSubsetOfAssociations(relations, attrDef, attrName) {","        if (_.isObject(attrDef) && (attrDef.model || attrDef.collection)) {","          relations.push(_.merge({","            alias: attrName,","            identity: attrDef.model || attrDef.collection,","            cardinality: attrDef.model ? 'model' : 'collection'","          }, attrDef));","          return relations;","        }","        return relations;","      }, []);","","    // Return a piece of the result plan by calling `traverseSchemaGraph`","    // on each of the RELATED model's relations.","    return _.reduce(relations, function(resultPlanPart, relation) {","","      // Recursive step","      resultPlanPart[relation.alias] = traverseSchemaGraph(identityOfRelatedModel, relation.alias);","","      // Trim undefined result plan parts","      if (resultPlanPart[relation.alias] === undefined) {","        delete resultPlanPart[relation.alias];","      }","","      return resultPlanPart;","    }, {});","  }","","};",""],"l":{"5":1,"20":1,"23":0,"30":0,"38":1,"40":0,"41":0,"43":0,"47":0,"52":0,"55":0,"61":0,"62":0,"63":0,"66":0,"73":0,"74":0,"81":0,"83":0,"84":0,"89":0,"91":0,"96":0,"99":0,"102":0,"103":0,"106":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/callbacksRunner.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/callbacksRunner.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":61}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":22},"end":{"line":38,"column":52}}},"3":{"name":"(anonymous_3)","line":40,"loc":{"start":{"line":40,"column":11},"end":{"line":40,"column":32}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":21},"end":{"line":57,"column":51}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":11},"end":{"line":59,"column":32}}},"6":{"name":"(anonymous_6)","line":76,"loc":{"start":{"line":76,"column":22},"end":{"line":76,"column":52}}},"7":{"name":"(anonymous_7)","line":78,"loc":{"start":{"line":78,"column":11},"end":{"line":78,"column":32}}},"8":{"name":"(anonymous_8)","line":95,"loc":{"start":{"line":95,"column":21},"end":{"line":95,"column":51}}},"9":{"name":"(anonymous_9)","line":97,"loc":{"start":{"line":97,"column":11},"end":{"line":97,"column":32}}},"10":{"name":"(anonymous_10)","line":114,"loc":{"start":{"line":114,"column":23},"end":{"line":114,"column":55}}},"11":{"name":"(anonymous_11)","line":116,"loc":{"start":{"line":116,"column":11},"end":{"line":116,"column":32}}},"12":{"name":"(anonymous_12)","line":133,"loc":{"start":{"line":133,"column":22},"end":{"line":133,"column":52}}},"13":{"name":"(anonymous_13)","line":135,"loc":{"start":{"line":135,"column":11},"end":{"line":135,"column":32}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}},"3":{"start":{"line":24,"column":0},"end":{"line":26,"column":2}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":44}},"5":{"start":{"line":38,"column":0},"end":{"line":45,"column":2}},"6":{"start":{"line":40,"column":2},"end":{"line":42,"column":4}},"7":{"start":{"line":41,"column":4},"end":{"line":41,"column":37}},"8":{"start":{"line":44,"column":2},"end":{"line":44,"column":60}},"9":{"start":{"line":57,"column":0},"end":{"line":64,"column":2}},"10":{"start":{"line":59,"column":2},"end":{"line":61,"column":4}},"11":{"start":{"line":60,"column":4},"end":{"line":60,"column":37}},"12":{"start":{"line":63,"column":2},"end":{"line":63,"column":59}},"13":{"start":{"line":76,"column":0},"end":{"line":83,"column":2}},"14":{"start":{"line":78,"column":2},"end":{"line":80,"column":4}},"15":{"start":{"line":79,"column":4},"end":{"line":79,"column":37}},"16":{"start":{"line":82,"column":2},"end":{"line":82,"column":60}},"17":{"start":{"line":95,"column":0},"end":{"line":102,"column":2}},"18":{"start":{"line":97,"column":2},"end":{"line":99,"column":4}},"19":{"start":{"line":98,"column":4},"end":{"line":98,"column":37}},"20":{"start":{"line":101,"column":2},"end":{"line":101,"column":59}},"21":{"start":{"line":114,"column":0},"end":{"line":121,"column":2}},"22":{"start":{"line":116,"column":2},"end":{"line":118,"column":4}},"23":{"start":{"line":117,"column":4},"end":{"line":117,"column":39}},"24":{"start":{"line":120,"column":2},"end":{"line":120,"column":61}},"25":{"start":{"line":133,"column":0},"end":{"line":140,"column":2}},"26":{"start":{"line":135,"column":2},"end":{"line":137,"column":4}},"27":{"start":{"line":136,"column":4},"end":{"line":136,"column":37}},"28":{"start":{"line":139,"column":2},"end":{"line":139,"column":60}}},"branchMap":{},"code":["/**"," * Module Dependencies"," */","","var async = require('async');","","/**"," * Run Lifecycle Callbacks"," */","","var runner = module.exports = {};","","","/**"," * Run Validation Callbacks"," *"," * @param {Object} context"," * @param {Object} values"," * @param {Boolean} presentOnly"," * @param {Function} cb"," * @api public"," */","","runner.validate = function(context, values, presentOnly, cb) {","  context.validate(values, presentOnly, cb);","};","","","/**"," * Run Before Create Callbacks"," *"," * @param {Object} context"," * @param {Object} values"," * @param {Function} cb"," * @api public"," */","","runner.beforeCreate = function(context, values, cb) {","","  var fn = function(item, next) {","    item.call(context, values, next);","  };","","  async.eachSeries(context._callbacks.beforeCreate, fn, cb);","};","","","/**"," * Run After Create Callbacks"," *"," * @param {Object} context"," * @param {Object} values"," * @param {Function} cb"," * @api public"," */","","runner.afterCreate = function(context, values, cb) {","","  var fn = function(item, next) {","    item.call(context, values, next);","  };","","  async.eachSeries(context._callbacks.afterCreate, fn, cb);","};","","","/**"," * Run Before Update Callbacks"," *"," * @param {Object} context"," * @param {Object} values"," * @param {Function} cb"," * @api public"," */","","runner.beforeUpdate = function(context, values, cb) {","","  var fn = function(item, next) {","    item.call(context, values, next);","  };","","  async.eachSeries(context._callbacks.beforeUpdate, fn, cb);","};","","","/**"," * Run After Update Callbacks"," *"," * @param {Object} context"," * @param {Object} values"," * @param {Function} cb"," * @api public"," */","","runner.afterUpdate = function(context, values, cb) {","","  var fn = function(item, next) {","    item.call(context, values, next);","  };","","  async.eachSeries(context._callbacks.afterUpdate, fn, cb);","};","","","/**"," * Run Before Destroy Callbacks"," *"," * @param {Object} context"," * @param {Object} criteria"," * @param {Function} cb"," * @api public"," */","","runner.beforeDestroy = function(context, criteria, cb) {","","  var fn = function(item, next) {","    item.call(context, criteria, next);","  };","","  async.eachSeries(context._callbacks.beforeDestroy, fn, cb);","};","","","/**"," * Run After Destroy Callbacks"," *"," * @param {Object} context"," * @param {Object} values"," * @param {Function} cb"," * @api public"," */","","runner.afterDestroy = function(context, values, cb) {","","  var fn = function(item, next) {","    item.call(context, values, next);","  };","","  async.eachSeries(context._callbacks.afterDestroy, fn, cb);","};",""],"l":{"5":1,"11":1,"24":1,"25":0,"38":1,"40":0,"41":0,"44":0,"57":1,"59":0,"60":0,"63":0,"76":1,"78":0,"79":0,"82":0,"95":1,"97":0,"98":0,"101":0,"114":1,"116":0,"117":0,"120":0,"133":1,"135":0,"136":0,"139":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/dql/update.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/dql/update.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":17},"end":{"line":25,"column":48}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":43},"end":{"line":53,"column":57}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":52},"end":{"line":56,"column":66}}},"4":{"name":"prepareArguments","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":44}}},"5":{"name":"createBelongsTo","line":105,"loc":{"start":{"line":105,"column":0},"end":{"line":105,"column":43}}},"6":{"name":"(anonymous_6)","line":108,"loc":{"start":{"line":108,"column":56},"end":{"line":108,"column":77}}},"7":{"name":"(anonymous_7)","line":140,"loc":{"start":{"line":140,"column":15},"end":{"line":140,"column":34}}},"8":{"name":"(anonymous_8)","line":149,"loc":{"start":{"line":149,"column":49},"end":{"line":149,"column":65}}},"9":{"name":"beforeCallbacks","line":163,"loc":{"start":{"line":163,"column":0},"end":{"line":163,"column":37}}},"10":{"name":"(anonymous_10)","line":169,"loc":{"start":{"line":169,"column":4},"end":{"line":169,"column":17}}},"11":{"name":"(anonymous_11)","line":174,"loc":{"start":{"line":174,"column":4},"end":{"line":174,"column":17}}},"12":{"name":"updateRecords","line":188,"loc":{"start":{"line":188,"column":0},"end":{"line":188,"column":41}}},"13":{"name":"(anonymous_13)","line":208,"loc":{"start":{"line":208,"column":66},"end":{"line":208,"column":88}}},"14":{"name":"(anonymous_14)","line":218,"loc":{"start":{"line":218,"column":39},"end":{"line":218,"column":55}}},"15":{"name":"(anonymous_15)","line":223,"loc":{"start":{"line":223,"column":74},"end":{"line":223,"column":88}}},"16":{"name":"(anonymous_16)","line":226,"loc":{"start":{"line":226,"column":36},"end":{"line":226,"column":63}}},"17":{"name":"(anonymous_17)","line":228,"loc":{"start":{"line":228,"column":9},"end":{"line":228,"column":23}}},"18":{"name":"(anonymous_18)","line":231,"loc":{"start":{"line":231,"column":43},"end":{"line":231,"column":59}}},"19":{"name":"updatedNestedAssociations","line":250,"loc":{"start":{"line":250,"column":0},"end":{"line":250,"column":61}}},"20":{"name":"(anonymous_20)","line":256,"loc":{"start":{"line":256,"column":54},"end":{"line":256,"column":70}}},"21":{"name":"(anonymous_21)","line":267,"loc":{"start":{"line":267,"column":27},"end":{"line":267,"column":41}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":51}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":38}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":63}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}},"10":{"start":{"line":25,"column":0},"end":{"line":61,"column":2}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":18}},"12":{"start":{"line":29,"column":2},"end":{"line":32,"column":3}},"13":{"start":{"line":30,"column":4},"end":{"line":30,"column":18}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":20}},"15":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"16":{"start":{"line":36,"column":4},"end":{"line":36,"column":61}},"17":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"18":{"start":{"line":42,"column":4},"end":{"line":42,"column":24}},"19":{"start":{"line":46,"column":2},"end":{"line":46,"column":86}},"20":{"start":{"line":47,"column":2},"end":{"line":47,"column":76}},"21":{"start":{"line":47,"column":15},"end":{"line":47,"column":76}},"22":{"start":{"line":50,"column":2},"end":{"line":50,"column":67}},"23":{"start":{"line":53,"column":2},"end":{"line":60,"column":5}},"24":{"start":{"line":54,"column":4},"end":{"line":54,"column":28}},"25":{"start":{"line":54,"column":13},"end":{"line":54,"column":28}},"26":{"start":{"line":56,"column":4},"end":{"line":59,"column":7}},"27":{"start":{"line":57,"column":6},"end":{"line":57,"column":30}},"28":{"start":{"line":57,"column":15},"end":{"line":57,"column":30}},"29":{"start":{"line":58,"column":6},"end":{"line":58,"column":49}},"30":{"start":{"line":72,"column":0},"end":{"line":98,"column":1}},"31":{"start":{"line":76,"column":2},"end":{"line":76,"column":48}},"32":{"start":{"line":79,"column":2},"end":{"line":79,"column":42}},"33":{"start":{"line":82,"column":2},"end":{"line":82,"column":36}},"34":{"start":{"line":83,"column":2},"end":{"line":83,"column":108}},"35":{"start":{"line":87,"column":2},"end":{"line":87,"column":114}},"36":{"start":{"line":90,"column":2},"end":{"line":90,"column":34}},"37":{"start":{"line":92,"column":2},"end":{"line":97,"column":4}},"38":{"start":{"line":105,"column":0},"end":{"line":154,"column":1}},"39":{"start":{"line":106,"column":2},"end":{"line":106,"column":18}},"40":{"start":{"line":108,"column":2},"end":{"line":153,"column":9}},"41":{"start":{"line":111,"column":4},"end":{"line":111,"column":67}},"42":{"start":{"line":111,"column":53},"end":{"line":111,"column":67}},"43":{"start":{"line":114,"column":4},"end":{"line":114,"column":115}},"44":{"start":{"line":116,"column":4},"end":{"line":116,"column":50}},"45":{"start":{"line":117,"column":4},"end":{"line":117,"column":18}},"46":{"start":{"line":119,"column":4},"end":{"line":119,"column":71}},"47":{"start":{"line":119,"column":38},"end":{"line":119,"column":71}},"48":{"start":{"line":120,"column":4},"end":{"line":120,"column":61}},"49":{"start":{"line":120,"column":33},"end":{"line":120,"column":61}},"50":{"start":{"line":121,"column":4},"end":{"line":121,"column":34}},"51":{"start":{"line":121,"column":20},"end":{"line":121,"column":34}},"52":{"start":{"line":123,"column":4},"end":{"line":123,"column":54}},"53":{"start":{"line":124,"column":4},"end":{"line":124,"column":70}},"54":{"start":{"line":126,"column":4},"end":{"line":126,"column":22}},"55":{"start":{"line":128,"column":4},"end":{"line":128,"column":152}},"56":{"start":{"line":130,"column":4},"end":{"line":130,"column":32}},"57":{"start":{"line":133,"column":4},"end":{"line":133,"column":14}},"58":{"start":{"line":134,"column":4},"end":{"line":138,"column":5}},"59":{"start":{"line":135,"column":6},"end":{"line":135,"column":70}},"60":{"start":{"line":137,"column":6},"end":{"line":137,"column":54}},"61":{"start":{"line":140,"column":4},"end":{"line":151,"column":7}},"62":{"start":{"line":141,"column":6},"end":{"line":141,"column":32}},"63":{"start":{"line":141,"column":15},"end":{"line":141,"column":32}},"64":{"start":{"line":144,"column":6},"end":{"line":144,"column":37}},"65":{"start":{"line":146,"column":6},"end":{"line":146,"column":37}},"66":{"start":{"line":149,"column":6},"end":{"line":149,"column":92}},"67":{"start":{"line":149,"column":67},"end":{"line":149,"column":88}},"68":{"start":{"line":150,"column":6},"end":{"line":150,"column":13}},"69":{"start":{"line":163,"column":0},"end":{"line":179,"column":1}},"70":{"start":{"line":164,"column":2},"end":{"line":164,"column":18}},"71":{"start":{"line":166,"column":2},"end":{"line":178,"column":9}},"72":{"start":{"line":170,"column":6},"end":{"line":170,"column":49}},"73":{"start":{"line":175,"column":6},"end":{"line":175,"column":47}},"74":{"start":{"line":188,"column":0},"end":{"line":240,"column":1}},"75":{"start":{"line":189,"column":2},"end":{"line":189,"column":18}},"76":{"start":{"line":192,"column":2},"end":{"line":195,"column":3}},"77":{"start":{"line":194,"column":4},"end":{"line":194,"column":57}},"78":{"start":{"line":198,"column":2},"end":{"line":198,"column":73}},"79":{"start":{"line":201,"column":2},"end":{"line":201,"column":70}},"80":{"start":{"line":204,"column":2},"end":{"line":204,"column":77}},"81":{"start":{"line":208,"column":2},"end":{"line":239,"column":5}},"82":{"start":{"line":209,"column":4},"end":{"line":212,"column":5}},"83":{"start":{"line":210,"column":6},"end":{"line":210,"column":72}},"84":{"start":{"line":210,"column":37},"end":{"line":210,"column":70}},"85":{"start":{"line":211,"column":6},"end":{"line":211,"column":21}},"86":{"start":{"line":215,"column":4},"end":{"line":215,"column":50}},"87":{"start":{"line":215,"column":32},"end":{"line":215,"column":50}},"88":{"start":{"line":218,"column":4},"end":{"line":220,"column":7}},"89":{"start":{"line":219,"column":6},"end":{"line":219,"column":50}},"90":{"start":{"line":223,"column":4},"end":{"line":237,"column":7}},"91":{"start":{"line":224,"column":6},"end":{"line":224,"column":30}},"92":{"start":{"line":224,"column":15},"end":{"line":224,"column":30}},"93":{"start":{"line":226,"column":6},"end":{"line":236,"column":9}},"94":{"start":{"line":227,"column":8},"end":{"line":227,"column":54}},"95":{"start":{"line":229,"column":8},"end":{"line":229,"column":32}},"96":{"start":{"line":229,"column":17},"end":{"line":229,"column":32}},"97":{"start":{"line":231,"column":8},"end":{"line":233,"column":11}},"98":{"start":{"line":232,"column":10},"end":{"line":232,"column":40}},"99":{"start":{"line":235,"column":8},"end":{"line":235,"column":25}},"100":{"start":{"line":250,"column":0},"end":{"line":275,"column":1}},"101":{"start":{"line":252,"column":2},"end":{"line":252,"column":18}},"102":{"start":{"line":253,"column":2},"end":{"line":253,"column":53}},"103":{"start":{"line":256,"column":2},"end":{"line":259,"column":5}},"104":{"start":{"line":257,"column":4},"end":{"line":257,"column":50}},"105":{"start":{"line":258,"column":4},"end":{"line":258,"column":56}},"106":{"start":{"line":262,"column":2},"end":{"line":264,"column":3}},"107":{"start":{"line":263,"column":4},"end":{"line":263,"column":16}},"108":{"start":{"line":267,"column":2},"end":{"line":269,"column":5}},"109":{"start":{"line":268,"column":4},"end":{"line":268,"column":32}},"110":{"start":{"line":272,"column":2},"end":{"line":272,"column":83}},"111":{"start":{"line":273,"column":2},"end":{"line":273,"column":44}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"4":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"6":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"7":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"8":{"line":114,"type":"cond-expr","locations":[{"start":{"line":114,"column":67},"end":{"line":114,"column":107}},{"start":{"line":114,"column":110},"end":{"line":114,"column":114}}]},"9":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"10":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"11":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"12":{"line":128,"type":"cond-expr","locations":[{"start":{"line":128,"column":79},"end":{"line":128,"column":132}},{"start":{"line":128,"column":135},"end":{"line":128,"column":151}}]},"13":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"14":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":6},"end":{"line":141,"column":6}},{"start":{"line":141,"column":6},"end":{"line":141,"column":6}}]},"15":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"16":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"17":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":6},"end":{"line":210,"column":6}},{"start":{"line":210,"column":6},"end":{"line":210,"column":6}}]},"18":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"19":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":6},"end":{"line":224,"column":6}},{"start":{"line":224,"column":6},"end":{"line":224,"column":6}}]},"20":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":8},"end":{"line":229,"column":8}},{"start":{"line":229,"column":8},"end":{"line":229,"column":8}}]},"21":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":21},"end":{"line":253,"column":46}},{"start":{"line":253,"column":50},"end":{"line":253,"column":52}}]},"22":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":11},"end":{"line":258,"column":32}},{"start":{"line":258,"column":36},"end":{"line":258,"column":55}}]},"23":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":2},"end":{"line":262,"column":2}},{"start":{"line":262,"column":2},"end":{"line":262,"column":2}}]},"24":{"line":262,"type":"binary-expr","locations":[{"start":{"line":262,"column":6},"end":{"line":262,"column":43}},{"start":{"line":262,"column":47},"end":{"line":262,"column":79}}]}},"code":["/**"," * Module Dependencies"," */","","var async = require('async');","var _ = require('lodash');","var usageError = require('../../utils/usageError');","var utils = require('../../utils/helpers');","var normalize = require('../../utils/normalize');","var Deferred = require('../deferred');","var callbacks = require('../../utils/callbacksRunner');","var nestedOperations = require('../../utils/nestedOperations');","var hop = utils.object.hasOwnProperty;","","","/**"," * Update all records matching criteria"," *"," * @param {Object} criteria"," * @param {Object} values"," * @param {Function} cb"," * @return Deferred object if no callback"," */","","module.exports = function(criteria, values, cb) {","","  var self = this;","","  if (typeof criteria === 'function') {","    cb = criteria;","    criteria = null;","  }","","  // Return Deferred or pass to adapter","  if (typeof cb !== 'function') {","    return new Deferred(this, this.update, criteria, values);","  }","","  // If there was something defined in the criteria that would return no results, don't even","  // run the query and just return an empty result set.","  if (criteria === false) {","    return cb(null, []);","  }","","  // Ensure proper function signature","  var usage = utils.capitalize(this.identity) + '.update(criteria, values, callback)';","  if (!values) return usageError('No updated values specified!', usage, cb);","","  // Format Criteria and Values","  var valuesObject = prepareArguments.call(this, criteria, values);","","  // Create any of the belongsTo associations and set the foreign key values","  createBelongsTo.call(this, valuesObject, function(err) {","    if (err) return cb(err);","","    beforeCallbacks.call(self, valuesObject.values, function(err) {","      if (err) return cb(err);","      updateRecords.call(self, valuesObject, cb);","    });","  });","};","","","/**"," * Prepare Arguments"," *"," * @param {Object} criteria"," * @param {Object} values"," * @return {Object}"," */","","function prepareArguments(criteria, values) {","","  // Check if options is an integer or string and normalize criteria","  // to object, using the specified primary key field.","  criteria = normalize.expandPK(this, criteria);","","  // Normalize criteria","  criteria = normalize.criteria(criteria);","","  // Pull out any associations in the values","  var _values = _.cloneDeep(values);","  var associations = nestedOperations.valuesParser.call(this, this.identity, this.waterline.schema, values);","","  // Replace associated models with their foreign key values if available.","  // Unless the association has a custom primary key (we want to create the object)","  values = nestedOperations.reduceAssociations.call(this, this.identity, this.waterline.schema, values, 'update');","","  // Cast values to proper types (handle numbers as strings)","  values = this._cast.run(values);","","  return {","    criteria: criteria,","    values: values,","    originalValues: _values,","    associations: associations","  };","}","","/**"," * Create BelongsTo Records"," *"," */","","function createBelongsTo(valuesObject, cb) {","  var self = this;","","  async.each(valuesObject.associations.models.slice(0), function(item, next) {","","    // Check if value is an object. If not don't try and create it.","    if (!_.isPlainObject(valuesObject.values[item])) return next();","","    // Check for any transformations","    var attrName = hop(self._transformer._transformations, item) ? self._transformer._transformations[item] : item;","","    var attribute = self._schema.schema[attrName];","    var modelName;","","    if (hop(attribute, 'collection')) modelName = attribute.collection;","    if (hop(attribute, 'model')) modelName = attribute.model;","    if (!modelName) return next();","","    var model = self.waterline.collections[modelName];","    var pkValue = valuesObject.originalValues[item][model.primaryKey];","","    var criteria = {};","","    var pkField = hop(model._transformer._transformations, model.primaryKey) ? model._transformer._transformations[model.primaryKey] : model.primaryKey;","","    criteria[pkField] = pkValue;","","    // If a pkValue if found, do a findOrCreate and look for a record matching the pk.","    var query;","    if (pkValue) {","      query = model.findOrCreate(criteria, valuesObject.values[item]);","    } else {","      query = model.create(valuesObject.values[item]);","    }","","    query.exec(function(err, val) {","      if (err) return next(err);","","      // attach the new model's pk value to the original value's key","      var pk = val[model.primaryKey];","","      valuesObject.values[item] = pk;","","      // now we have pk value attached, remove it from models","      _.remove(valuesObject.associations.models, function(_item) { return _item == item; });","      next();","    });","","  }, cb);","}","","/**"," * Run Before* Lifecycle Callbacks"," *"," * @param {Object} values"," * @param {Function} cb"," */","","function beforeCallbacks(values, cb) {","  var self = this;","","  async.series([","","    // Run Validation with Validation LifeCycle Callbacks","    function(cb) {","      callbacks.validate(self, values, true, cb);","    },","","    // Before Update Lifecycle Callback","    function(cb) {","      callbacks.beforeUpdate(self, values, cb);","    }","","  ], cb);","}","","/**"," * Update Records"," *"," * @param {Object} valuesObjecy"," * @param {Function} cb"," */","","function updateRecords(valuesObject, cb) {","  var self = this;","","  // Automatically change updatedAt (if enabled)","  if (this.autoUpdatedAt) {","    // take into account that the autoUpdateAt attribute may be a string with a different column name","    valuesObject.values[self.autoUpdatedAt] = new Date();","  }","","  // Transform Values","  valuesObject.values = this._transformer.serialize(valuesObject.values);","","  // Clean attributes","  valuesObject.values = this._schema.cleanValues(valuesObject.values);","","  // Transform Search Criteria","  valuesObject.criteria = self._transformer.serialize(valuesObject.criteria);","","","  // Pass to adapter","  self.adapter.update(valuesObject.criteria, valuesObject.values, function(err, values) {","    if (err) {","      if (typeof err === 'object') { err.model = self._model.globalId; }","      return cb(err);","    }","","    // If values is not an array, return an array","    if (!Array.isArray(values)) values = [values];","","    // Unserialize each value","    var transformedValues = values.map(function(value) {","      return self._transformer.unserialize(value);","    });","","    // Update any nested associations and run afterUpdate lifecycle callbacks for each parent","    updatedNestedAssociations.call(self, valuesObject, transformedValues, function(err) {","      if (err) return cb(err);","","      async.each(transformedValues, function(record, callback) {","        callbacks.afterUpdate(self, record, callback);","      }, function(err) {","        if (err) return cb(err);","","        var models = transformedValues.map(function(value) {","          return new self._model(value);","        });","","        cb(null, models);","      });","    });","","  });","}","","/**"," * Update Nested Associations"," *"," * @param {Object} valuesObject"," * @param {Object} values"," * @param {Function} cb"," */","","function updatedNestedAssociations(valuesObject, values, cb) {","","  var self = this;","  var associations = valuesObject.associations || {};","","  // Only attempt nested updates if values are an object or an array","  associations.models = _.filter(associations.models, function(model) {","    var vals = valuesObject.originalValues[model];","    return _.isPlainObject(vals) || Array.isArray(vals);","  });","","  // If no associations were used, return callback","  if (associations.collections.length === 0 && associations.models.length === 0) {","    return cb();","  }","","  // Create an array of model instances for each parent","  var parents = values.map(function(val) {","    return new self._model(val);","  });","","  // Update any nested associations found in the values object","  var args = [parents, valuesObject.originalValues, valuesObject.associations, cb];","  nestedOperations.update.apply(self, args);","","}",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"25":1,"27":0,"29":0,"30":0,"31":0,"35":0,"36":0,"41":0,"42":0,"46":0,"47":0,"50":0,"53":0,"54":0,"56":0,"57":0,"58":0,"72":1,"76":0,"79":0,"82":0,"83":0,"87":0,"90":0,"92":0,"105":1,"106":0,"108":0,"111":0,"114":0,"116":0,"117":0,"119":0,"120":0,"121":0,"123":0,"124":0,"126":0,"128":0,"130":0,"133":0,"134":0,"135":0,"137":0,"140":0,"141":0,"144":0,"146":0,"149":0,"150":0,"163":1,"164":0,"166":0,"170":0,"175":0,"188":1,"189":0,"192":0,"194":0,"198":0,"201":0,"204":0,"208":0,"209":0,"210":0,"211":0,"215":0,"218":0,"219":0,"223":0,"224":0,"226":0,"227":0,"229":0,"231":0,"232":0,"235":0,"250":1,"252":0,"253":0,"256":0,"257":0,"258":0,"262":0,"263":0,"267":0,"268":0,"272":0,"273":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/usageError.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/usageError.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":42}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":9,"column":2}},"2":{"start":{"line":6,"column":2},"end":{"line":6,"column":156}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":29}},"4":{"start":{"line":7,"column":10},"end":{"line":7,"column":29}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":27}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":7,"column":2}},{"start":{"line":7,"column":2},"end":{"line":7,"column":2}}]}},"code":["/**"," * Create a nicely formatted usage error"," */","","module.exports = function(err, usage, cb) {","  var message = err + '\\n==============================================\\nProper usage :: \\n' + usage + '\\n==============================================\\n';","  if (cb) return cb(message);","  throw new Error(message);","};",""],"l":{"5":1,"6":0,"7":0,"8":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/dql/destroy.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/dql/destroy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":23,"loc":{"start":{"line":23,"column":17},"end":{"line":23,"column":40}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":42},"end":{"line":53,"column":56}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":35},"end":{"line":60,"column":57}}},"4":{"name":"destroyJoinTableRecords","line":87,"loc":{"start":{"line":87,"column":6},"end":{"line":87,"column":51}}},"5":{"name":"(anonymous_5)","line":91,"loc":{"start":{"line":91,"column":52},"end":{"line":91,"column":66}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":41},"end":{"line":102,"column":62}}},"7":{"name":"(anonymous_7)","line":115,"loc":{"start":{"line":115,"column":27},"end":{"line":115,"column":48}}},"8":{"name":"(anonymous_8)","line":135,"loc":{"start":{"line":135,"column":53},"end":{"line":135,"column":67}}},"9":{"name":"after","line":140,"loc":{"start":{"line":140,"column":6},"end":{"line":140,"column":23}}},"10":{"name":"(anonymous_10)","line":153,"loc":{"start":{"line":153,"column":43},"end":{"line":153,"column":59}}},"11":{"name":"(anonymous_11)","line":157,"loc":{"start":{"line":157,"column":56},"end":{"line":157,"column":70}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":51}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":38}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"10":{"start":{"line":23,"column":0},"end":{"line":165,"column":2}},"11":{"start":{"line":24,"column":2},"end":{"line":24,"column":18}},"12":{"start":{"line":25,"column":2},"end":{"line":25,"column":9}},"13":{"start":{"line":27,"column":2},"end":{"line":30,"column":3}},"14":{"start":{"line":28,"column":4},"end":{"line":28,"column":18}},"15":{"start":{"line":29,"column":4},"end":{"line":29,"column":18}},"16":{"start":{"line":34,"column":2},"end":{"line":34,"column":48}},"17":{"start":{"line":37,"column":2},"end":{"line":37,"column":42}},"18":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"19":{"start":{"line":41,"column":4},"end":{"line":41,"column":54}},"20":{"start":{"line":44,"column":2},"end":{"line":44,"column":80}},"21":{"start":{"line":45,"column":2},"end":{"line":45,"column":92}},"22":{"start":{"line":45,"column":32},"end":{"line":45,"column":92}},"23":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"24":{"start":{"line":50,"column":4},"end":{"line":50,"column":24}},"25":{"start":{"line":53,"column":2},"end":{"line":164,"column":5}},"26":{"start":{"line":54,"column":4},"end":{"line":54,"column":28}},"27":{"start":{"line":54,"column":13},"end":{"line":54,"column":28}},"28":{"start":{"line":57,"column":4},"end":{"line":57,"column":53}},"29":{"start":{"line":60,"column":4},"end":{"line":163,"column":7}},"30":{"start":{"line":61,"column":6},"end":{"line":61,"column":30}},"31":{"start":{"line":61,"column":15},"end":{"line":61,"column":30}},"32":{"start":{"line":64,"column":6},"end":{"line":67,"column":9}},"33":{"start":{"line":69,"column":6},"end":{"line":69,"column":49}},"34":{"start":{"line":69,"column":34},"end":{"line":69,"column":49}},"35":{"start":{"line":72,"column":6},"end":{"line":85,"column":7}},"36":{"start":{"line":73,"column":8},"end":{"line":73,"column":73}},"37":{"start":{"line":73,"column":64},"end":{"line":73,"column":73}},"38":{"start":{"line":76,"column":8},"end":{"line":76,"column":55}},"39":{"start":{"line":76,"column":46},"end":{"line":76,"column":55}},"40":{"start":{"line":78,"column":8},"end":{"line":82,"column":9}},"41":{"start":{"line":79,"column":10},"end":{"line":79,"column":47}},"42":{"start":{"line":81,"column":10},"end":{"line":81,"column":19}},"43":{"start":{"line":84,"column":8},"end":{"line":84,"column":14}},"44":{"start":{"line":87,"column":6},"end":{"line":133,"column":7}},"45":{"start":{"line":88,"column":8},"end":{"line":88,"column":58}},"46":{"start":{"line":89,"column":8},"end":{"line":89,"column":24}},"47":{"start":{"line":91,"column":8},"end":{"line":95,"column":11}},"48":{"start":{"line":92,"column":10},"end":{"line":92,"column":49}},"49":{"start":{"line":93,"column":10},"end":{"line":93,"column":56}},"50":{"start":{"line":93,"column":49},"end":{"line":93,"column":56}},"51":{"start":{"line":94,"column":10},"end":{"line":94,"column":27}},"52":{"start":{"line":99,"column":8},"end":{"line":99,"column":42}},"53":{"start":{"line":99,"column":28},"end":{"line":99,"column":42}},"54":{"start":{"line":102,"column":8},"end":{"line":107,"column":15}},"55":{"start":{"line":103,"column":10},"end":{"line":105,"column":11}},"56":{"start":{"line":104,"column":12},"end":{"line":104,"column":32}},"57":{"start":{"line":106,"column":10},"end":{"line":106,"column":22}},"58":{"start":{"line":109,"column":8},"end":{"line":109,"column":26}},"59":{"start":{"line":111,"column":8},"end":{"line":131,"column":9}},"60":{"start":{"line":113,"column":10},"end":{"line":126,"column":11}},"61":{"start":{"line":114,"column":12},"end":{"line":114,"column":32}},"62":{"start":{"line":115,"column":12},"end":{"line":119,"column":15}},"63":{"start":{"line":116,"column":14},"end":{"line":116,"column":29}},"64":{"start":{"line":117,"column":14},"end":{"line":117,"column":47}},"65":{"start":{"line":118,"column":14},"end":{"line":118,"column":37}},"66":{"start":{"line":121,"column":12},"end":{"line":123,"column":14}},"67":{"start":{"line":125,"column":12},"end":{"line":125,"column":53}},"68":{"start":{"line":128,"column":10},"end":{"line":128,"column":50}},"69":{"start":{"line":130,"column":10},"end":{"line":130,"column":24}},"70":{"start":{"line":135,"column":6},"end":{"line":138,"column":9}},"71":{"start":{"line":136,"column":8},"end":{"line":136,"column":32}},"72":{"start":{"line":136,"column":17},"end":{"line":136,"column":32}},"73":{"start":{"line":137,"column":8},"end":{"line":137,"column":16}},"74":{"start":{"line":140,"column":6},"end":{"line":161,"column":7}},"75":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"76":{"start":{"line":144,"column":10},"end":{"line":144,"column":22}},"77":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"78":{"start":{"line":149,"column":10},"end":{"line":149,"column":28}},"79":{"start":{"line":153,"column":8},"end":{"line":155,"column":11}},"80":{"start":{"line":154,"column":10},"end":{"line":154,"column":54}},"81":{"start":{"line":157,"column":8},"end":{"line":160,"column":11}},"82":{"start":{"line":158,"column":10},"end":{"line":158,"column":34}},"83":{"start":{"line":158,"column":19},"end":{"line":158,"column":34}},"84":{"start":{"line":159,"column":10},"end":{"line":159,"column":38}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":6}},{"start":{"line":61,"column":6},"end":{"line":61,"column":6}}]},"7":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"8":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":8}},{"start":{"line":73,"column":8},"end":{"line":73,"column":8}}]},"9":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"10":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":8}},{"start":{"line":78,"column":8},"end":{"line":78,"column":8}}]},"11":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":10},"end":{"line":93,"column":10}},{"start":{"line":93,"column":10},"end":{"line":93,"column":10}}]},"12":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":8}},{"start":{"line":99,"column":8},"end":{"line":99,"column":8}}]},"13":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":10},"end":{"line":103,"column":10}},{"start":{"line":103,"column":10},"end":{"line":103,"column":10}}]},"14":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"15":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":10},"end":{"line":113,"column":10}},{"start":{"line":113,"column":10},"end":{"line":113,"column":10}}]},"16":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]},"17":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":8}},{"start":{"line":143,"column":8},"end":{"line":143,"column":8}}]},"18":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":8}},{"start":{"line":148,"column":8},"end":{"line":148,"column":8}}]},"19":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":10},"end":{"line":158,"column":10}},{"start":{"line":158,"column":10},"end":{"line":158,"column":10}}]}},"code":["/**"," * Module Dependencies"," */","","var async = require('async');","var _ = require('lodash');","var usageError = require('../../utils/usageError');","var utils = require('../../utils/helpers');","var normalize = require('../../utils/normalize');","var Deferred = require('../deferred');","var getRelations = require('../../utils/getRelations');","var callbacks = require('../../utils/callbacksRunner');","var hasOwnProperty = utils.object.hasOwnProperty;","","/**"," * Destroy a Record"," *"," * @param {Object} criteria to destroy"," * @param {Function} callback"," * @return Deferred object if no callback"," */","","module.exports = function(criteria, cb) {","  var self = this;","  var pk;","","  if (typeof criteria === 'function') {","    cb = criteria;","    criteria = {};","  }","","  // Check if criteria is an integer or string and normalize criteria","  // to object, using the specified primary key field.","  criteria = normalize.expandPK(self, criteria);","","  // Normalize criteria","  criteria = normalize.criteria(criteria);","","  // Return Deferred or pass to adapter","  if (typeof cb !== 'function') {","    return new Deferred(this, this.destroy, criteria);","  }","","  var usage = utils.capitalize(this.identity) + '.destroy([options], callback)';","  if (typeof cb !== 'function') return usageError('Invalid callback specified!', usage, cb);","","  // If there was something defined in the criteria that would return no results, don't even","  // run the query and just return an empty result set.","  if (criteria === false) {","    return cb(null, []);","  }","","  callbacks.beforeDestroy(self, criteria, function(err) {","    if (err) return cb(err);","","    // Transform Search Criteria","    criteria = self._transformer.serialize(criteria);","","    // Pass to adapter","    self.adapter.destroy(criteria, function(err, result) {","      if (err) return cb(err);","","      // Look for any m:m associations and destroy the value in the join table","      var relations = getRelations({","        schema: self.waterline.schema,","        parentCollection: self.identity","      });","","      if (relations.length === 0) return after();","","      // Find the collection's primary key","      for (var key in self.attributes) {","        if (!self.attributes[key].hasOwnProperty('primaryKey')) continue;","","        // Check if custom primaryKey value is falsy","        if (!self.attributes[key].primaryKey) continue;","","        if (self.attributes[key].columnName) {","          pk = self.attributes[key].columnName;","        } else {","          pk = key;","        }","","        break;","      }","","      function destroyJoinTableRecords(item, next) {","        var collection = self.waterline.collections[item];","        var refKey = [];","","        Object.keys(collection._attributes).forEach(function(key) {","          var attr = collection._attributes[key];","          if (attr.references !== self.identity) return;","          refKey.push(key);","        });","","        // If no refKey return, this could leave orphaned join table values but it's better","        // than crashing.","        if (!refKey.length) return next();","","        // Make sure we don't return any undefined pks","        var mappedValues = result.reduce(function(memo, vals) {","          if (vals[pk] !== undefined) {","            memo.push(vals[pk]);","          }","          return memo;","        }, []);","","        var criteria = {};","","        if (mappedValues.length > 0) {","          // Handle reflexive associations by building up an OR clause.","          if (refKey.length > 1) {","            var orCriteria = [];","            _.each(refKey, function(columnName) {","              var where = {};","              where[columnName] = mappedValues;","              orCriteria.push(where);","            });","","            criteria = {","              or: orCriteria","            };","          } else {","            criteria[_.first(refKey)] = mappedValues;","          }","","          collection.destroy(criteria).exec(next);","        } else {","          return next();","        }","","      }","","      async.each(relations, destroyJoinTableRecords, function(err) {","        if (err) return cb(err);","        after();","      });","","      function after() {","","        // If no result was returned, default to empty array","        if (!result) {","          result = [];","        }","","        // If values is not an array, return an array","        if (!Array.isArray(result)) {","          result = [result];","        }","","        // Unserialize each value","        var transformedValues = result.map(function(value) {","          return self._transformer.unserialize(value);","        });","","        callbacks.afterDestroy(self, transformedValues, function(err) {","          if (err) return cb(err);","          cb(null, transformedValues);","        });","      }","","    });","  });","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"23":1,"24":0,"25":0,"27":0,"28":0,"29":0,"34":0,"37":0,"40":0,"41":0,"44":0,"45":0,"49":0,"50":0,"53":0,"54":0,"57":0,"60":0,"61":0,"64":0,"69":0,"72":0,"73":0,"76":0,"78":0,"79":0,"81":0,"84":0,"87":1,"88":0,"89":0,"91":0,"92":0,"93":0,"94":0,"99":0,"102":0,"103":0,"104":0,"106":0,"109":0,"111":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"121":0,"125":0,"128":0,"130":0,"135":0,"136":0,"137":0,"140":1,"143":0,"144":0,"148":0,"149":0,"153":0,"154":0,"157":0,"158":0,"159":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/dql/count.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/dql/count.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":20,"column":49}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":51}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"6":{"start":{"line":20,"column":0},"end":{"line":70,"column":2}},"7":{"start":{"line":21,"column":2},"end":{"line":21,"column":88}},"8":{"start":{"line":23,"column":2},"end":{"line":27,"column":3}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":20}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":19}},"12":{"start":{"line":29,"column":2},"end":{"line":32,"column":3}},"13":{"start":{"line":30,"column":4},"end":{"line":30,"column":17}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":19}},"15":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"16":{"start":{"line":36,"column":4},"end":{"line":36,"column":52}},"17":{"start":{"line":40,"column":2},"end":{"line":40,"column":42}},"18":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"19":{"start":{"line":45,"column":4},"end":{"line":45,"column":23}},"20":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"21":{"start":{"line":49,"column":4},"end":{"line":49,"column":47}},"22":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"23":{"start":{"line":53,"column":4},"end":{"line":53,"column":63}},"24":{"start":{"line":57,"column":2},"end":{"line":57,"column":51}},"25":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"26":{"start":{"line":62,"column":4},"end":{"line":62,"column":26}},"27":{"start":{"line":65,"column":2},"end":{"line":67,"column":3}},"28":{"start":{"line":66,"column":4},"end":{"line":66,"column":32}},"29":{"start":{"line":69,"column":2},"end":{"line":69,"column":35}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"5":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"6":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":25}},{"start":{"line":48,"column":29},"end":{"line":48,"column":49}}]},"7":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"8":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":28}},{"start":{"line":52,"column":32},"end":{"line":52,"column":53}}]},"9":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"10":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"11":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":20}},{"start":{"line":65,"column":24},"end":{"line":65,"column":55}}]}},"code":["/**"," * Module Dependencies"," */","","var _ = require('lodash');","var usageError = require('../../utils/usageError');","var utils = require('../../utils/helpers');","var normalize = require('../../utils/normalize');","var Deferred = require('../deferred');","","/**"," * Count of Records"," *"," * @param {Object} criteria"," * @param {Object} options"," * @param {Function} callback"," * @return Deferred object if no callback"," */","","module.exports = function(criteria, options, cb) {","  var usage = utils.capitalize(this.identity) + '.count([criteria],[options],callback)';","","  if (typeof criteria === 'function') {","    cb = criteria;","    criteria = null;","    options = null;","  }","","  if (typeof options === 'function') {","    cb = options;","    options = null;","  }","","  // Return Deferred or pass to adapter","  if (typeof cb !== 'function') {","    return new Deferred(this, this.count, criteria);","  }","","  // Normalize criteria and fold in options","  criteria = normalize.criteria(criteria);","","  // If there was something defined in the criteria that would return no results, don't even","  // run the query and just return 0","  if (criteria === false) {","    return cb(null, 0);","  }","","  if (_.isObject(options) && _.isObject(criteria)) {","    criteria = _.extend({}, criteria, options);","  }","","  if (_.isFunction(criteria) || _.isFunction(options)) {","    return usageError('Invalid options specified!', usage, cb);","  }","","  // Transform Search Criteria","  criteria = this._transformer.serialize(criteria);","","  // Remove any joins from the count criteria. They won't have any effect on the","  // number of results found.","  if (_.isArray(criteria.joins)) {","    delete criteria.joins;","  }","","  if (criteria.where && _.isArray(criteria.where.joins)) {","    delete criteria.where.joins;","  }","","  this.adapter.count(criteria, cb);","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"20":1,"21":0,"23":0,"24":0,"25":0,"26":0,"29":0,"30":0,"31":0,"35":0,"36":0,"40":0,"44":0,"45":0,"48":0,"49":0,"52":0,"53":0,"57":0,"61":0,"62":0,"65":0,"66":0,"69":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/dql/join.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/dql/join.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":50}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":10,"column":2}},"2":{"start":{"line":9,"column":2},"end":{"line":9,"column":45}}},"branchMap":{},"code":["/**"," * Join"," *"," * Join with another collection"," * (use optimized join in adapter if one was provided)"," */","","module.exports = function(collection, fk, pk, cb) {","  this._adapter.join(collection, fk, pk, cb);","};",""],"l":{"8":1,"9":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/aggregate.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/aggregate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":14},"end":{"line":24,"column":39}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":46},"end":{"line":50,"column":62}}},"3":{"name":"(anonymous_3)","line":68,"loc":{"start":{"line":68,"column":20},"end":{"line":68,"column":55}}},"4":{"name":"(anonymous_4)","line":98,"loc":{"start":{"line":98,"column":23},"end":{"line":98,"column":44}}},"5":{"name":"(anonymous_5)","line":103,"loc":{"start":{"line":103,"column":41},"end":{"line":103,"column":55}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":25},"end":{"line":109,"column":41}}},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":23},"end":{"line":125,"column":39}}},"8":{"name":"(anonymous_8)","line":134,"loc":{"start":{"line":134,"column":58},"end":{"line":134,"column":80}}},"9":{"name":"(anonymous_9)","line":140,"loc":{"start":{"line":140,"column":23},"end":{"line":140,"column":39}}},"10":{"name":"(anonymous_10)","line":149,"loc":{"start":{"line":149,"column":27},"end":{"line":149,"column":48}}},"11":{"name":"(anonymous_11)","line":151,"loc":{"start":{"line":151,"column":11},"end":{"line":151,"column":25}}},"12":{"name":"(anonymous_12)","line":157,"loc":{"start":{"line":157,"column":25},"end":{"line":157,"column":41}}},"13":{"name":"_validateValues","line":177,"loc":{"start":{"line":177,"column":0},"end":{"line":177,"column":37}}},"14":{"name":"_validate","line":198,"loc":{"start":{"line":198,"column":0},"end":{"line":198,"column":31}}},"15":{"name":"(anonymous_15)","line":215,"loc":{"start":{"line":215,"column":4},"end":{"line":215,"column":19}}},"16":{"name":"(anonymous_16)","line":220,"loc":{"start":{"line":220,"column":4},"end":{"line":220,"column":19}}},"17":{"name":"(anonymous_17)","line":224,"loc":{"start":{"line":224,"column":5},"end":{"line":224,"column":19}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":46}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":52}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"9":{"start":{"line":14,"column":0},"end":{"line":166,"column":2}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":20}},"11":{"start":{"line":28,"column":4},"end":{"line":32,"column":5}},"12":{"start":{"line":29,"column":6},"end":{"line":29,"column":55}},"13":{"start":{"line":30,"column":6},"end":{"line":30,"column":22}},"14":{"start":{"line":31,"column":6},"end":{"line":31,"column":30}},"15":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"16":{"start":{"line":36,"column":6},"end":{"line":36,"column":65}},"17":{"start":{"line":40,"column":4},"end":{"line":40,"column":86}},"18":{"start":{"line":42,"column":4},"end":{"line":42,"column":78}},"19":{"start":{"line":42,"column":21},"end":{"line":42,"column":78}},"20":{"start":{"line":43,"column":4},"end":{"line":43,"column":119}},"21":{"start":{"line":43,"column":36},"end":{"line":43,"column":119}},"22":{"start":{"line":44,"column":4},"end":{"line":44,"column":94}},"23":{"start":{"line":44,"column":34},"end":{"line":44,"column":94}},"24":{"start":{"line":46,"column":4},"end":{"line":46,"column":58}},"25":{"start":{"line":47,"column":4},"end":{"line":47,"column":53}},"26":{"start":{"line":47,"column":16},"end":{"line":47,"column":53}},"27":{"start":{"line":50,"column":4},"end":{"line":52,"column":7}},"28":{"start":{"line":51,"column":6},"end":{"line":51,"column":33}},"29":{"start":{"line":55,"column":4},"end":{"line":55,"column":58}},"30":{"start":{"line":69,"column":4},"end":{"line":69,"column":20}},"31":{"start":{"line":71,"column":4},"end":{"line":74,"column":5}},"32":{"start":{"line":72,"column":6},"end":{"line":72,"column":22}},"33":{"start":{"line":73,"column":6},"end":{"line":73,"column":24}},"34":{"start":{"line":77,"column":4},"end":{"line":77,"column":44}},"35":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"36":{"start":{"line":81,"column":6},"end":{"line":81,"column":77}},"37":{"start":{"line":85,"column":4},"end":{"line":85,"column":102}},"38":{"start":{"line":87,"column":4},"end":{"line":87,"column":94}},"39":{"start":{"line":87,"column":34},"end":{"line":87,"column":94}},"40":{"start":{"line":88,"column":4},"end":{"line":88,"column":74}},"41":{"start":{"line":88,"column":19},"end":{"line":88,"column":74}},"42":{"start":{"line":89,"column":4},"end":{"line":89,"column":89}},"43":{"start":{"line":89,"column":34},"end":{"line":89,"column":89}},"44":{"start":{"line":90,"column":4},"end":{"line":90,"column":78}},"45":{"start":{"line":90,"column":21},"end":{"line":90,"column":78}},"46":{"start":{"line":91,"column":4},"end":{"line":91,"column":119}},"47":{"start":{"line":91,"column":36},"end":{"line":91,"column":119}},"48":{"start":{"line":93,"column":4},"end":{"line":93,"column":45}},"49":{"start":{"line":94,"column":4},"end":{"line":94,"column":53}},"50":{"start":{"line":94,"column":16},"end":{"line":94,"column":53}},"51":{"start":{"line":98,"column":4},"end":{"line":100,"column":6}},"52":{"start":{"line":99,"column":6},"end":{"line":99,"column":39}},"53":{"start":{"line":103,"column":4},"end":{"line":164,"column":7}},"54":{"start":{"line":104,"column":6},"end":{"line":104,"column":30}},"55":{"start":{"line":104,"column":15},"end":{"line":104,"column":30}},"56":{"start":{"line":107,"column":6},"end":{"line":107,"column":33}},"57":{"start":{"line":109,"column":6},"end":{"line":117,"column":9}},"58":{"start":{"line":112,"column":8},"end":{"line":112,"column":51}},"59":{"start":{"line":115,"column":8},"end":{"line":115,"column":48}},"60":{"start":{"line":116,"column":8},"end":{"line":116,"column":38}},"61":{"start":{"line":120,"column":6},"end":{"line":120,"column":37}},"62":{"start":{"line":123,"column":6},"end":{"line":123,"column":35}},"63":{"start":{"line":125,"column":6},"end":{"line":128,"column":9}},"64":{"start":{"line":126,"column":8},"end":{"line":126,"column":51}},"65":{"start":{"line":127,"column":8},"end":{"line":127,"column":40}},"66":{"start":{"line":131,"column":6},"end":{"line":131,"column":37}},"67":{"start":{"line":134,"column":6},"end":{"line":163,"column":9}},"68":{"start":{"line":135,"column":8},"end":{"line":135,"column":32}},"69":{"start":{"line":135,"column":17},"end":{"line":135,"column":32}},"70":{"start":{"line":138,"column":8},"end":{"line":138,"column":36}},"71":{"start":{"line":140,"column":8},"end":{"line":143,"column":11}},"72":{"start":{"line":141,"column":10},"end":{"line":141,"column":55}},"73":{"start":{"line":142,"column":10},"end":{"line":142,"column":41}},"74":{"start":{"line":146,"column":8},"end":{"line":146,"column":36}},"75":{"start":{"line":149,"column":8},"end":{"line":162,"column":11}},"76":{"start":{"line":150,"column":10},"end":{"line":150,"column":50}},"77":{"start":{"line":152,"column":10},"end":{"line":152,"column":34}},"78":{"start":{"line":152,"column":19},"end":{"line":152,"column":34}},"79":{"start":{"line":154,"column":10},"end":{"line":154,"column":26}},"80":{"start":{"line":157,"column":10},"end":{"line":159,"column":13}},"81":{"start":{"line":158,"column":12},"end":{"line":158,"column":48}},"82":{"start":{"line":161,"column":10},"end":{"line":161,"column":27}},"83":{"start":{"line":177,"column":0},"end":{"line":187,"column":1}},"84":{"start":{"line":178,"column":2},"end":{"line":178,"column":10}},"85":{"start":{"line":180,"column":2},"end":{"line":184,"column":3}},"86":{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},"87":{"start":{"line":182,"column":6},"end":{"line":182,"column":89}},"88":{"start":{"line":186,"column":2},"end":{"line":186,"column":13}},"89":{"start":{"line":198,"column":0},"end":{"line":238,"column":1}},"90":{"start":{"line":199,"column":2},"end":{"line":199,"column":18}},"91":{"start":{"line":202,"column":2},"end":{"line":207,"column":3}},"92":{"start":{"line":203,"column":4},"end":{"line":206,"column":5}},"93":{"start":{"line":204,"column":6},"end":{"line":204,"column":55}},"94":{"start":{"line":205,"column":6},"end":{"line":205,"column":101}},"95":{"start":{"line":210,"column":2},"end":{"line":210,"column":34}},"96":{"start":{"line":212,"column":2},"end":{"line":237,"column":5}},"97":{"start":{"line":216,"column":6},"end":{"line":216,"column":51}},"98":{"start":{"line":221,"column":6},"end":{"line":221,"column":49}},"99":{"start":{"line":225,"column":4},"end":{"line":225,"column":28}},"100":{"start":{"line":225,"column":13},"end":{"line":225,"column":28}},"101":{"start":{"line":228,"column":4},"end":{"line":230,"column":5}},"102":{"start":{"line":229,"column":6},"end":{"line":229,"column":46}},"103":{"start":{"line":232,"column":4},"end":{"line":234,"column":5}},"104":{"start":{"line":233,"column":6},"end":{"line":233,"column":46}},"105":{"start":{"line":236,"column":4},"end":{"line":236,"column":9}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"5":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"6":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"7":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"8":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"9":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"10":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"11":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"12":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"13":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"14":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"15":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":6},"end":{"line":104,"column":6}},{"start":{"line":104,"column":6},"end":{"line":104,"column":6}}]},"16":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"17":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":10},"end":{"line":152,"column":10}},{"start":{"line":152,"column":10},"end":{"line":152,"column":10}}]},"18":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"19":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"20":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":20}},{"start":{"line":203,"column":24},"end":{"line":203,"column":45}},{"start":{"line":203,"column":49},"end":{"line":203,"column":99}}]},"21":{"line":205,"type":"cond-expr","locations":[{"start":{"line":205,"column":55},"end":{"line":205,"column":78}},{"start":{"line":205,"column":81},"end":{"line":205,"column":100}}]},"22":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":4}},{"start":{"line":225,"column":4},"end":{"line":225,"column":4}}]},"23":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"24":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":4},"end":{"line":232,"column":4}},{"start":{"line":232,"column":4},"end":{"line":232,"column":4}}]}},"code":["/**"," * Aggregate Queries"," */","","var async = require('async');","var _ = require('lodash');","var usageError = require('../utils/usageError');","var utils = require('../utils/helpers');","var normalize = require('../utils/normalize');","var callbacks = require('../utils/callbacksRunner');","var Deferred = require('./deferred');","var hasOwnProperty = utils.object.hasOwnProperty;","","module.exports = {","","  /**","   * Create an Array of records","   *","   * @param {Array} array of values to create","   * @param {Function} callback","   * @return Deferred object if no callback","   */","","  createEach: function(valuesList, cb) {","    var self = this;","","    // Handle Deferred where it passes criteria first","    if (arguments.length === 3) {","      var args = Array.prototype.slice.call(arguments);","      cb = args.pop();","      valuesList = args.pop();","    }","","    // Return Deferred or pass to adapter","    if (typeof cb !== 'function') {","      return new Deferred(this, this.createEach, {}, valuesList);","    }","","    // Validate Params","    var usage = utils.capitalize(this.identity) + '.createEach(valuesList, callback)';","","    if (!valuesList) return usageError('No valuesList specified!', usage, cb);","    if (!Array.isArray(valuesList)) return usageError('Invalid valuesList specified (should be an array!)', usage, cb);","    if (typeof cb !== 'function') return usageError('Invalid callback specified!', usage, cb);","","    var errStr = _validateValues(_.cloneDeep(valuesList));","    if (errStr) return usageError(errStr, usage, cb);","","    // Handle undefined values","    var filteredValues = _.filter(valuesList, function(value) {","      return value !== undefined;","    });","","    // Create will take care of cloning values so original isn't mutated","    async.map(filteredValues, self.create.bind(self), cb);","  },","","  /**","   * Iterate through a list of objects, trying to find each one","   * For any that don't exist, create them","   *","   * @param {Object} criteria","   * @param {Array} valuesList","   * @param {Function} callback","   * @return Deferred object if no callback","   */","","  findOrCreateEach: function(criteria, valuesList, cb) {","    var self = this;","","    if (typeof valuesList === 'function') {","      cb = valuesList;","      valuesList = null;","    }","","    // Normalize criteria","    criteria = normalize.criteria(criteria);","","    // Return Deferred or pass to adapter","    if (typeof cb !== 'function') {","      return new Deferred(this, this.findOrCreateEach, criteria, valuesList);","    }","","    // Validate Params","    var usage = utils.capitalize(this.identity) + '.findOrCreateEach(criteria, valuesList, callback)';","","    if (typeof cb !== 'function') return usageError('Invalid callback specified!', usage, cb);","    if (!criteria) return usageError('No criteria specified!', usage, cb);","    if (!Array.isArray(criteria)) return usageError('No criteria specified!', usage, cb);","    if (!valuesList) return usageError('No valuesList specified!', usage, cb);","    if (!Array.isArray(valuesList)) return usageError('Invalid valuesList specified (should be an array!)', usage, cb);","","    var errStr = _validateValues(valuesList);","    if (errStr) return usageError(errStr, usage, cb);","","    // Validate each record in the array and if all are valid","    // pass the array to the adapter's findOrCreateEach method","    var validateItem = function(item, next) {","      _validate.call(self, item, next);","    };","","","    async.each(valuesList, validateItem, function(err) {","      if (err) return cb(err);","","      // Transform Values","      var transformedValues = [];","","      valuesList.forEach(function(value) {","","        // Transform values","        value = self._transformer.serialize(value);","","        // Clean attributes","        value = self._schema.cleanValues(value);","        transformedValues.push(value);","      });","","      // Set values array to the transformed array","      valuesList = transformedValues;","","      // Transform Search Criteria","      var transformedCriteria = [];","","      criteria.forEach(function(value) {","        value = self._transformer.serialize(value);","        transformedCriteria.push(value);","      });","","      // Set criteria array to the transformed array","      criteria = transformedCriteria;","","      // Pass criteria and attributes to adapter definition","      self.adapter.findOrCreateEach(criteria, valuesList, function(err, values) {","        if (err) return cb(err);","","        // Unserialize Values","        var unserializedValues = [];","","        values.forEach(function(value) {","          value = self._transformer.unserialize(value);","          unserializedValues.push(value);","        });","","        // Set values array to the transformed array","        values = unserializedValues;","","        // Run AfterCreate Callbacks","        async.each(values, function(item, next) {","          callbacks.afterCreate(self, item, next);","        }, function(err) {","          if (err) return cb(err);","","          var models = [];","","          // Make each result an instance of model","          values.forEach(function(value) {","            models.push(new self._model(value));","          });","","          cb(null, models);","        });","      });","    });","  }","};","","","/**"," * Validate valuesList"," *"," * @param {Array} valuesList"," * @return {String}"," * @api private"," */","","function _validateValues(valuesList) {","  var err;","","  for (var i = 0; i < valuesList.length; i++) {","    if (valuesList[i] !== Object(valuesList[i])) {","      err = 'Invalid valuesList specified (should be an array of valid values objects!)';","    }","  }","","  return err;","}","","","/**"," * Validate values and add in default values"," *"," * @param {Object} record"," * @param {Function} cb"," * @api private"," */","","function _validate(record, cb) {","  var self = this;","","  // Set Default Values if available","  for (var key in self.attributes) {","    if (!record[key] && record[key] !== false && hasOwnProperty(self.attributes[key], 'defaultsTo')) {","      var defaultsTo = self.attributes[key].defaultsTo;","      record[key] = typeof defaultsTo === 'function' ? defaultsTo.call(record) : _.clone(defaultsTo);","    }","  }","","  // Cast values to proper types (handle numbers as strings)","  record = self._cast.run(record);","","  async.series([","","    // Run Validation with Validation LifeCycle Callbacks","    function(next) {","      callbacks.validate(self, record, true, next);","    },","","    // Before Create Lifecycle Callback","    function(next) {","      callbacks.beforeCreate(self, record, next);","    }","","  ], function(err) {","    if (err) return cb(err);","","    // Automatically add updatedAt and createdAt (if enabled)","    if (self.autoCreatedAt) {","      record[self.autoCreatedAt] = new Date();","    }","","    if (self.autoUpdatedAt) {","      record[self.autoUpdatedAt] = new Date();","    }","","    cb();","  });","}",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"14":1,"25":0,"28":0,"29":0,"30":0,"31":0,"35":0,"36":0,"40":0,"42":0,"43":0,"44":0,"46":0,"47":0,"50":0,"51":0,"55":0,"69":0,"71":0,"72":0,"73":0,"77":0,"80":0,"81":0,"85":0,"87":0,"88":0,"89":0,"90":0,"91":0,"93":0,"94":0,"98":0,"99":0,"103":0,"104":0,"107":0,"109":0,"112":0,"115":0,"116":0,"120":0,"123":0,"125":0,"126":0,"127":0,"131":0,"134":0,"135":0,"138":0,"140":0,"141":0,"142":0,"146":0,"149":0,"150":0,"152":0,"154":0,"157":0,"158":0,"161":0,"177":1,"178":0,"180":0,"181":0,"182":0,"186":0,"198":1,"199":0,"202":0,"203":0,"204":0,"205":0,"210":0,"212":0,"216":0,"221":0,"225":0,"228":0,"229":0,"232":0,"233":0,"236":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/composite.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/composite.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":16},"end":{"line":24,"column":47}}},"2":{"name":"(anonymous_2)","line":56,"loc":{"start":{"line":56,"column":29},"end":{"line":56,"column":52}}},"3":{"name":"(anonymous_3)","line":70,"loc":{"start":{"line":70,"column":31},"end":{"line":70,"column":53}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":46}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":49}},"8":{"start":{"line":13,"column":0},"end":{"line":77,"column":2}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":20}},"10":{"start":{"line":27,"column":4},"end":{"line":30,"column":5}},"11":{"start":{"line":28,"column":6},"end":{"line":28,"column":18}},"12":{"start":{"line":29,"column":6},"end":{"line":29,"column":20}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":96}},"14":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"15":{"start":{"line":35,"column":6},"end":{"line":35,"column":68}},"16":{"start":{"line":39,"column":4},"end":{"line":39,"column":44}},"17":{"start":{"line":41,"column":4},"end":{"line":41,"column":69}},"18":{"start":{"line":41,"column":17},"end":{"line":41,"column":69}},"19":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"20":{"start":{"line":45,"column":6},"end":{"line":45,"column":69}},"21":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"22":{"start":{"line":50,"column":6},"end":{"line":50,"column":57}},"23":{"start":{"line":53,"column":4},"end":{"line":53,"column":94}},"24":{"start":{"line":53,"column":34},"end":{"line":53,"column":94}},"25":{"start":{"line":56,"column":4},"end":{"line":74,"column":7}},"26":{"start":{"line":57,"column":6},"end":{"line":57,"column":30}},"27":{"start":{"line":57,"column":15},"end":{"line":57,"column":30}},"28":{"start":{"line":59,"column":6},"end":{"line":67,"column":7}},"29":{"start":{"line":62,"column":8},"end":{"line":62,"column":60}},"30":{"start":{"line":65,"column":8},"end":{"line":65,"column":45}},"31":{"start":{"line":66,"column":8},"end":{"line":66,"column":31}},"32":{"start":{"line":70,"column":6},"end":{"line":73,"column":9}},"33":{"start":{"line":71,"column":8},"end":{"line":71,"column":32}},"34":{"start":{"line":71,"column":17},"end":{"line":71,"column":32}},"35":{"start":{"line":72,"column":8},"end":{"line":72,"column":32}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"3":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":31}},{"start":{"line":34,"column":36},"end":{"line":34,"column":45}},{"start":{"line":34,"column":49},"end":{"line":34,"column":70}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"5":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":43},"end":{"line":41,"column":57}},{"start":{"line":41,"column":60},"end":{"line":41,"column":68}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"7":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"8":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":31}},{"start":{"line":49,"column":35},"end":{"line":49,"column":56}}]},"9":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"10":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"11":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":6}},{"start":{"line":59,"column":6},"end":{"line":59,"column":6}}]},"12":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":10},"end":{"line":59,"column":17}},{"start":{"line":59,"column":21},"end":{"line":59,"column":41}}]},"13":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]}},"code":["/**"," * Composite Queries"," */","","var async = require('async');","var _ = require('lodash');","var usageError = require('../utils/usageError');","var utils = require('../utils/helpers');","var normalize = require('../utils/normalize');","var Deferred = require('./deferred');","var hasOwnProperty = utils.object.hasOwnProperty;","","module.exports = {","","  /**","   * Find or Create a New Record","   *","   * @param {Object} search criteria","   * @param {Object} values to create if no record found","   * @param {Function} callback","   * @return Deferred object if no callback","   */","","  findOrCreate: function(criteria, values, cb) {","    var self = this;","","    if (typeof values === 'function') {","      cb = values;","      values = null;","    }","","    // If no criteria is specified, bail out with a vengeance.","    var usage = utils.capitalize(this.identity) + '.findOrCreate([criteria], values, callback)';","    if (typeof cb == 'function' && (!criteria || criteria.length === 0)) {","      return usageError('No criteria option specified!', usage, cb);","    }","","    // Normalize criteria","    criteria = normalize.criteria(criteria);","    // If no values were specified, use criteria","    if (!values) values = criteria.where ? criteria.where : criteria;","","    // Return Deferred or pass to adapter","    if (typeof cb !== 'function') {","      return new Deferred(this, this.findOrCreate, criteria, values);","    }","","    // This is actually an implicit call to findOrCreateEach","    if (Array.isArray(criteria) && Array.isArray(values)) {","      return this.findOrCreateEach(criteria, values, cb);","    }","","    if (typeof cb !== 'function') return usageError('Invalid callback specified!', usage, cb);","","    // Try a find first.","    this.find(criteria).exec(function(err, results) {","      if (err) return cb(err);","","      if (results && results.length !== 0) {","","        // Unserialize values","        results = self._transformer.unserialize(results[0]);","","        // Return an instance of Model","        var model = new self._model(results);","        return cb(null, model);","      }","","      // Create a new record if nothing is found.","      self.create(values).exec(function(err, result) {","        if (err) return cb(err);","        return cb(null, result);","      });","    });","  }","","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"25":0,"27":0,"28":0,"29":0,"33":0,"34":0,"35":0,"39":0,"41":0,"44":0,"45":0,"49":0,"50":0,"53":0,"56":0,"57":0,"59":0,"62":0,"65":0,"66":0,"70":0,"71":0,"72":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/finders/basic.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/finders/basic.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0,0],"70":[0,0],"71":[0,0],"72":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"(anonymous_1)","line":28,"loc":{"start":{"line":28,"column":11},"end":{"line":28,"column":34}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":51},"end":{"line":37,"column":66}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":29},"end":{"line":58,"column":44}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":19},"end":{"line":78,"column":41}}},"5":{"name":"(anonymous_5)","line":98,"loc":{"start":{"line":98,"column":47},"end":{"line":98,"column":61}}},"6":{"name":"(anonymous_6)","line":106,"loc":{"start":{"line":106,"column":59},"end":{"line":106,"column":82}}},"7":{"name":"(anonymous_7)","line":117,"loc":{"start":{"line":117,"column":31},"end":{"line":117,"column":46}}},"8":{"name":"(anonymous_8)","line":122,"loc":{"start":{"line":122,"column":35},"end":{"line":122,"column":52}}},"9":{"name":"(anonymous_9)","line":136,"loc":{"start":{"line":136,"column":24},"end":{"line":136,"column":38}}},"10":{"name":"(anonymous_10)","line":139,"loc":{"start":{"line":139,"column":33},"end":{"line":139,"column":48}}},"11":{"name":"returnResults","line":152,"loc":{"start":{"line":152,"column":6},"end":{"line":152,"column":38}}},"12":{"name":"(anonymous_12)","line":161,"loc":{"start":{"line":161,"column":24},"end":{"line":161,"column":41}}},"13":{"name":"(anonymous_13)","line":175,"loc":{"start":{"line":175,"column":28},"end":{"line":175,"column":44}}},"14":{"name":"(anonymous_14)","line":193,"loc":{"start":{"line":193,"column":8},"end":{"line":193,"column":40}}},"15":{"name":"(anonymous_15)","line":210,"loc":{"start":{"line":210,"column":51},"end":{"line":210,"column":66}}},"16":{"name":"(anonymous_16)","line":251,"loc":{"start":{"line":251,"column":29},"end":{"line":251,"column":44}}},"17":{"name":"(anonymous_17)","line":263,"loc":{"start":{"line":263,"column":19},"end":{"line":263,"column":41}}},"18":{"name":"(anonymous_18)","line":283,"loc":{"start":{"line":283,"column":47},"end":{"line":283,"column":61}}},"19":{"name":"(anonymous_19)","line":290,"loc":{"start":{"line":290,"column":59},"end":{"line":290,"column":82}}},"20":{"name":"(anonymous_20)","line":301,"loc":{"start":{"line":301,"column":31},"end":{"line":301,"column":46}}},"21":{"name":"(anonymous_21)","line":306,"loc":{"start":{"line":306,"column":35},"end":{"line":306,"column":52}}},"22":{"name":"(anonymous_22)","line":322,"loc":{"start":{"line":322,"column":24},"end":{"line":322,"column":38}}},"23":{"name":"(anonymous_23)","line":325,"loc":{"start":{"line":325,"column":33},"end":{"line":325,"column":48}}},"24":{"name":"returnResults","line":353,"loc":{"start":{"line":353,"column":6},"end":{"line":353,"column":38}}},"25":{"name":"(anonymous_25)","line":364,"loc":{"start":{"line":364,"column":26},"end":{"line":364,"column":43}}},"26":{"name":"(anonymous_26)","line":385,"loc":{"start":{"line":385,"column":28},"end":{"line":385,"column":44}}},"27":{"name":"(anonymous_27)","line":396,"loc":{"start":{"line":396,"column":9},"end":{"line":396,"column":20}}},"28":{"name":"(anonymous_28)","line":400,"loc":{"start":{"line":400,"column":10},"end":{"line":400,"column":21}}},"29":{"name":"(anonymous_29)","line":413,"loc":{"start":{"line":413,"column":11},"end":{"line":413,"column":43}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":51}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":41}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":54}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"13":{"start":{"line":18,"column":0},"end":{"line":434,"column":2}},"14":{"start":{"line":29,"column":4},"end":{"line":29,"column":20}},"15":{"start":{"line":31,"column":4},"end":{"line":34,"column":5}},"16":{"start":{"line":32,"column":6},"end":{"line":32,"column":20}},"17":{"start":{"line":33,"column":6},"end":{"line":33,"column":22}},"18":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"19":{"start":{"line":37,"column":67},"end":{"line":37,"column":91}},"20":{"start":{"line":38,"column":6},"end":{"line":38,"column":32}},"21":{"start":{"line":43,"column":4},"end":{"line":43,"column":50}},"22":{"start":{"line":46,"column":4},"end":{"line":46,"column":44}},"23":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"24":{"start":{"line":50,"column":6},"end":{"line":50,"column":56}},"25":{"start":{"line":54,"column":4},"end":{"line":54,"column":53}},"26":{"start":{"line":57,"column":4},"end":{"line":64,"column":5}},"27":{"start":{"line":58,"column":6},"end":{"line":63,"column":9}},"28":{"start":{"line":59,"column":8},"end":{"line":62,"column":9}},"29":{"start":{"line":60,"column":10},"end":{"line":60,"column":70}},"30":{"start":{"line":61,"column":10},"end":{"line":61,"column":91}},"31":{"start":{"line":68,"column":4},"end":{"line":72,"column":5}},"32":{"start":{"line":70,"column":6},"end":{"line":70,"column":100}},"33":{"start":{"line":71,"column":6},"end":{"line":71,"column":32}},"34":{"start":{"line":75,"column":4},"end":{"line":75,"column":63}},"35":{"start":{"line":78,"column":4},"end":{"line":181,"column":7}},"36":{"start":{"line":79,"column":6},"end":{"line":79,"column":30}},"37":{"start":{"line":79,"column":15},"end":{"line":79,"column":30}},"38":{"start":{"line":80,"column":6},"end":{"line":80,"column":37}},"39":{"start":{"line":80,"column":25},"end":{"line":80,"column":37}},"40":{"start":{"line":84,"column":6},"end":{"line":87,"column":7}},"41":{"start":{"line":85,"column":8},"end":{"line":85,"column":45}},"42":{"start":{"line":86,"column":8},"end":{"line":86,"column":37}},"43":{"start":{"line":90,"column":6},"end":{"line":92,"column":7}},"44":{"start":{"line":91,"column":8},"end":{"line":91,"column":58}},"45":{"start":{"line":96,"column":6},"end":{"line":96,"column":28}},"46":{"start":{"line":98,"column":6},"end":{"line":102,"column":9}},"47":{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},"48":{"start":{"line":100,"column":10},"end":{"line":100,"column":27}},"49":{"start":{"line":106,"column":6},"end":{"line":150,"column":9}},"50":{"start":{"line":107,"column":8},"end":{"line":107,"column":32}},"51":{"start":{"line":107,"column":17},"end":{"line":107,"column":32}},"52":{"start":{"line":108,"column":8},"end":{"line":108,"column":34}},"53":{"start":{"line":108,"column":22},"end":{"line":108,"column":34}},"54":{"start":{"line":114,"column":8},"end":{"line":114,"column":54}},"55":{"start":{"line":115,"column":8},"end":{"line":115,"column":43}},"56":{"start":{"line":115,"column":26},"end":{"line":115,"column":43}},"57":{"start":{"line":117,"column":8},"end":{"line":130,"column":11}},"58":{"start":{"line":118,"column":10},"end":{"line":118,"column":53}},"59":{"start":{"line":118,"column":46},"end":{"line":118,"column":53}},"60":{"start":{"line":121,"column":10},"end":{"line":126,"column":11}},"61":{"start":{"line":122,"column":12},"end":{"line":125,"column":15}},"62":{"start":{"line":123,"column":14},"end":{"line":123,"column":62}},"63":{"start":{"line":123,"column":55},"end":{"line":123,"column":62}},"64":{"start":{"line":124,"column":14},"end":{"line":124,"column":40}},"65":{"start":{"line":128,"column":10},"end":{"line":128,"column":63}},"66":{"start":{"line":128,"column":56},"end":{"line":128,"column":63}},"67":{"start":{"line":129,"column":10},"end":{"line":129,"column":41}},"68":{"start":{"line":133,"column":8},"end":{"line":133,"column":47}},"69":{"start":{"line":134,"column":8},"end":{"line":134,"column":86}},"70":{"start":{"line":136,"column":8},"end":{"line":147,"column":11}},"71":{"start":{"line":139,"column":10},"end":{"line":146,"column":13}},"72":{"start":{"line":140,"column":12},"end":{"line":140,"column":39}},"73":{"start":{"line":140,"column":32},"end":{"line":140,"column":39}},"74":{"start":{"line":141,"column":12},"end":{"line":141,"column":54}},"75":{"start":{"line":142,"column":12},"end":{"line":142,"column":32}},"76":{"start":{"line":142,"column":25},"end":{"line":142,"column":32}},"77":{"start":{"line":144,"column":12},"end":{"line":144,"column":35}},"78":{"start":{"line":145,"column":12},"end":{"line":145,"column":52}},"79":{"start":{"line":149,"column":8},"end":{"line":149,"column":31}},"80":{"start":{"line":152,"column":6},"end":{"line":180,"column":7}},"81":{"start":{"line":154,"column":8},"end":{"line":154,"column":34}},"82":{"start":{"line":154,"column":22},"end":{"line":154,"column":34}},"83":{"start":{"line":157,"column":8},"end":{"line":157,"column":68}},"84":{"start":{"line":157,"column":48},"end":{"line":157,"column":68}},"85":{"start":{"line":160,"column":8},"end":{"line":160,"column":36}},"86":{"start":{"line":161,"column":8},"end":{"line":163,"column":11}},"87":{"start":{"line":162,"column":10},"end":{"line":162,"column":73}},"88":{"start":{"line":165,"column":8},"end":{"line":165,"column":24}},"89":{"start":{"line":166,"column":8},"end":{"line":166,"column":57}},"90":{"start":{"line":167,"column":8},"end":{"line":167,"column":120}},"91":{"start":{"line":170,"column":8},"end":{"line":172,"column":9}},"92":{"start":{"line":171,"column":10},"end":{"line":171,"column":90}},"93":{"start":{"line":175,"column":8},"end":{"line":177,"column":11}},"94":{"start":{"line":176,"column":10},"end":{"line":176,"column":60}},"95":{"start":{"line":179,"column":8},"end":{"line":179,"column":28}},"96":{"start":{"line":194,"column":4},"end":{"line":194,"column":20}},"97":{"start":{"line":196,"column":4},"end":{"line":196,"column":106}},"98":{"start":{"line":198,"column":4},"end":{"line":202,"column":5}},"99":{"start":{"line":199,"column":6},"end":{"line":199,"column":20}},"100":{"start":{"line":200,"column":6},"end":{"line":200,"column":22}},"101":{"start":{"line":201,"column":6},"end":{"line":201,"column":21}},"102":{"start":{"line":204,"column":4},"end":{"line":207,"column":5}},"103":{"start":{"line":205,"column":6},"end":{"line":205,"column":19}},"104":{"start":{"line":206,"column":6},"end":{"line":206,"column":21}},"105":{"start":{"line":210,"column":4},"end":{"line":212,"column":5}},"106":{"start":{"line":210,"column":67},"end":{"line":210,"column":91}},"107":{"start":{"line":211,"column":6},"end":{"line":211,"column":32}},"108":{"start":{"line":216,"column":4},"end":{"line":216,"column":50}},"109":{"start":{"line":219,"column":4},"end":{"line":219,"column":44}},"110":{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},"111":{"start":{"line":223,"column":6},"end":{"line":223,"column":65}},"112":{"start":{"line":227,"column":4},"end":{"line":229,"column":5}},"113":{"start":{"line":228,"column":6},"end":{"line":228,"column":62}},"114":{"start":{"line":233,"column":4},"end":{"line":235,"column":5}},"115":{"start":{"line":234,"column":6},"end":{"line":234,"column":26}},"116":{"start":{"line":238,"column":4},"end":{"line":240,"column":5}},"117":{"start":{"line":239,"column":6},"end":{"line":239,"column":49}},"118":{"start":{"line":243,"column":4},"end":{"line":245,"column":5}},"119":{"start":{"line":244,"column":6},"end":{"line":244,"column":117}},"120":{"start":{"line":247,"column":4},"end":{"line":247,"column":53}},"121":{"start":{"line":250,"column":4},"end":{"line":257,"column":5}},"122":{"start":{"line":251,"column":6},"end":{"line":256,"column":9}},"123":{"start":{"line":252,"column":8},"end":{"line":255,"column":9}},"124":{"start":{"line":253,"column":10},"end":{"line":253,"column":70}},"125":{"start":{"line":254,"column":10},"end":{"line":254,"column":91}},"126":{"start":{"line":260,"column":4},"end":{"line":260,"column":60}},"127":{"start":{"line":263,"column":4},"end":{"line":393,"column":7}},"128":{"start":{"line":264,"column":6},"end":{"line":264,"column":30}},"129":{"start":{"line":264,"column":15},"end":{"line":264,"column":30}},"130":{"start":{"line":265,"column":6},"end":{"line":265,"column":37}},"131":{"start":{"line":265,"column":25},"end":{"line":265,"column":37}},"132":{"start":{"line":269,"column":6},"end":{"line":272,"column":7}},"133":{"start":{"line":270,"column":8},"end":{"line":270,"column":45}},"134":{"start":{"line":271,"column":8},"end":{"line":271,"column":37}},"135":{"start":{"line":275,"column":6},"end":{"line":277,"column":7}},"136":{"start":{"line":276,"column":8},"end":{"line":276,"column":58}},"137":{"start":{"line":281,"column":6},"end":{"line":281,"column":28}},"138":{"start":{"line":283,"column":6},"end":{"line":287,"column":9}},"139":{"start":{"line":284,"column":8},"end":{"line":286,"column":9}},"140":{"start":{"line":285,"column":10},"end":{"line":285,"column":27}},"141":{"start":{"line":290,"column":6},"end":{"line":351,"column":9}},"142":{"start":{"line":291,"column":8},"end":{"line":291,"column":32}},"143":{"start":{"line":291,"column":17},"end":{"line":291,"column":32}},"144":{"start":{"line":292,"column":8},"end":{"line":292,"column":34}},"145":{"start":{"line":292,"column":22},"end":{"line":292,"column":34}},"146":{"start":{"line":298,"column":8},"end":{"line":298,"column":54}},"147":{"start":{"line":299,"column":8},"end":{"line":299,"column":43}},"148":{"start":{"line":299,"column":26},"end":{"line":299,"column":43}},"149":{"start":{"line":301,"column":8},"end":{"line":314,"column":11}},"150":{"start":{"line":302,"column":10},"end":{"line":302,"column":53}},"151":{"start":{"line":302,"column":46},"end":{"line":302,"column":53}},"152":{"start":{"line":305,"column":10},"end":{"line":310,"column":11}},"153":{"start":{"line":306,"column":12},"end":{"line":309,"column":15}},"154":{"start":{"line":307,"column":14},"end":{"line":307,"column":62}},"155":{"start":{"line":307,"column":55},"end":{"line":307,"column":62}},"156":{"start":{"line":308,"column":14},"end":{"line":308,"column":40}},"157":{"start":{"line":312,"column":10},"end":{"line":312,"column":63}},"158":{"start":{"line":312,"column":56},"end":{"line":312,"column":63}},"159":{"start":{"line":313,"column":10},"end":{"line":313,"column":41}},"160":{"start":{"line":317,"column":8},"end":{"line":317,"column":47}},"161":{"start":{"line":318,"column":8},"end":{"line":318,"column":86}},"162":{"start":{"line":321,"column":8},"end":{"line":321,"column":26}},"163":{"start":{"line":322,"column":8},"end":{"line":348,"column":11}},"164":{"start":{"line":325,"column":10},"end":{"line":347,"column":13}},"165":{"start":{"line":326,"column":12},"end":{"line":326,"column":39}},"166":{"start":{"line":326,"column":32},"end":{"line":326,"column":39}},"167":{"start":{"line":327,"column":12},"end":{"line":327,"column":54}},"168":{"start":{"line":328,"column":12},"end":{"line":328,"column":35}},"169":{"start":{"line":329,"column":12},"end":{"line":331,"column":13}},"170":{"start":{"line":330,"column":14},"end":{"line":330,"column":54}},"171":{"start":{"line":338,"column":12},"end":{"line":338,"column":44}},"172":{"start":{"line":338,"column":37},"end":{"line":338,"column":44}},"173":{"start":{"line":340,"column":12},"end":{"line":342,"column":13}},"174":{"start":{"line":341,"column":14},"end":{"line":341,"column":43}},"175":{"start":{"line":344,"column":12},"end":{"line":346,"column":13}},"176":{"start":{"line":345,"column":14},"end":{"line":345,"column":55}},"177":{"start":{"line":350,"column":8},"end":{"line":350,"column":31}},"178":{"start":{"line":353,"column":6},"end":{"line":391,"column":7}},"179":{"start":{"line":355,"column":8},"end":{"line":355,"column":42}},"180":{"start":{"line":355,"column":22},"end":{"line":355,"column":42}},"181":{"start":{"line":358,"column":8},"end":{"line":358,"column":68}},"182":{"start":{"line":358,"column":48},"end":{"line":358,"column":68}},"183":{"start":{"line":361,"column":8},"end":{"line":361,"column":36}},"184":{"start":{"line":363,"column":8},"end":{"line":367,"column":9}},"185":{"start":{"line":364,"column":10},"end":{"line":366,"column":13}},"186":{"start":{"line":365,"column":12},"end":{"line":365,"column":75}},"187":{"start":{"line":369,"column":8},"end":{"line":369,"column":24}},"188":{"start":{"line":370,"column":8},"end":{"line":370,"column":57}},"189":{"start":{"line":371,"column":8},"end":{"line":371,"column":120}},"190":{"start":{"line":380,"column":8},"end":{"line":382,"column":9}},"191":{"start":{"line":381,"column":10},"end":{"line":381,"column":90}},"192":{"start":{"line":385,"column":8},"end":{"line":387,"column":11}},"193":{"start":{"line":386,"column":10},"end":{"line":386,"column":60}},"194":{"start":{"line":390,"column":8},"end":{"line":390,"column":25}},"195":{"start":{"line":397,"column":4},"end":{"line":397,"column":65}},"196":{"start":{"line":401,"column":4},"end":{"line":401,"column":65}},"197":{"start":{"line":414,"column":4},"end":{"line":418,"column":5}},"198":{"start":{"line":415,"column":6},"end":{"line":415,"column":20}},"199":{"start":{"line":416,"column":6},"end":{"line":416,"column":22}},"200":{"start":{"line":417,"column":6},"end":{"line":417,"column":21}},"201":{"start":{"line":420,"column":4},"end":{"line":423,"column":5}},"202":{"start":{"line":421,"column":6},"end":{"line":421,"column":19}},"203":{"start":{"line":422,"column":6},"end":{"line":422,"column":21}},"204":{"start":{"line":426,"column":4},"end":{"line":428,"column":5}},"205":{"start":{"line":427,"column":6},"end":{"line":427,"column":56}},"206":{"start":{"line":430,"column":4},"end":{"line":431,"column":97}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"3":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":31}},{"start":{"line":37,"column":35},"end":{"line":37,"column":93}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"5":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":8}},{"start":{"line":59,"column":8},"end":{"line":59,"column":8}}]},"7":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":12},"end":{"line":59,"column":25}},{"start":{"line":59,"column":29},"end":{"line":59,"column":48}}]},"8":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"9":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":26}},{"start":{"line":68,"column":30},"end":{"line":68,"column":53}}]},"10":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"11":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":6}},{"start":{"line":80,"column":6},"end":{"line":80,"column":6}}]},"12":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":6},"end":{"line":84,"column":6}},{"start":{"line":84,"column":6},"end":{"line":84,"column":6}}]},"13":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":6}},{"start":{"line":90,"column":6},"end":{"line":90,"column":6}}]},"14":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":8}},{"start":{"line":99,"column":8},"end":{"line":99,"column":8}}]},"15":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":12},"end":{"line":99,"column":65}},{"start":{"line":99,"column":69},"end":{"line":99,"column":104}}]},"16":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":8}},{"start":{"line":107,"column":8},"end":{"line":107,"column":8}}]},"17":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":108,"column":8}},{"start":{"line":108,"column":8},"end":{"line":108,"column":8}}]},"18":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":8}},{"start":{"line":115,"column":8},"end":{"line":115,"column":8}}]},"19":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":10},"end":{"line":118,"column":10}},{"start":{"line":118,"column":10},"end":{"line":118,"column":10}}]},"20":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":10},"end":{"line":121,"column":10}},{"start":{"line":121,"column":10},"end":{"line":121,"column":10}}]},"21":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":14},"end":{"line":123,"column":14}},{"start":{"line":123,"column":14},"end":{"line":123,"column":14}}]},"22":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":10},"end":{"line":128,"column":10}},{"start":{"line":128,"column":10},"end":{"line":128,"column":10}}]},"23":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":12},"end":{"line":140,"column":12}},{"start":{"line":140,"column":12},"end":{"line":140,"column":12}}]},"24":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":12},"end":{"line":142,"column":12}},{"start":{"line":142,"column":12},"end":{"line":142,"column":12}}]},"25":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]},"26":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":157,"column":8}},{"start":{"line":157,"column":8},"end":{"line":157,"column":8}}]},"27":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":12},"end":{"line":157,"column":35}},{"start":{"line":157,"column":39},"end":{"line":157,"column":46}}]},"28":{"line":166,"type":"cond-expr","locations":[{"start":{"line":166,"column":37},"end":{"line":166,"column":51}},{"start":{"line":166,"column":54},"end":{"line":166,"column":56}}]},"29":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":8},"end":{"line":170,"column":8}},{"start":{"line":170,"column":8},"end":{"line":170,"column":8}}]},"30":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":12},"end":{"line":170,"column":17}},{"start":{"line":170,"column":21},"end":{"line":170,"column":33}},{"start":{"line":170,"column":37},"end":{"line":170,"column":57}}]},"31":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"32":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":204,"column":4}},{"start":{"line":204,"column":4},"end":{"line":204,"column":4}}]},"33":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"34":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":8},"end":{"line":210,"column":31}},{"start":{"line":210,"column":35},"end":{"line":210,"column":93}}]},"35":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"36":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":8},"end":{"line":222,"column":38}},{"start":{"line":222,"column":42},"end":{"line":222,"column":71}}]},"37":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":227,"column":4}},{"start":{"line":227,"column":4},"end":{"line":227,"column":4}}]},"38":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":4},"end":{"line":233,"column":4}},{"start":{"line":233,"column":4},"end":{"line":233,"column":4}}]},"39":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":238,"column":4}},{"start":{"line":238,"column":4},"end":{"line":238,"column":4}}]},"40":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":8},"end":{"line":238,"column":35}},{"start":{"line":238,"column":39},"end":{"line":238,"column":68}}]},"41":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":4},"end":{"line":243,"column":4}},{"start":{"line":243,"column":4},"end":{"line":243,"column":4}}]},"42":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"43":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":8},"end":{"line":252,"column":8}},{"start":{"line":252,"column":8},"end":{"line":252,"column":8}}]},"44":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":12},"end":{"line":252,"column":25}},{"start":{"line":252,"column":29},"end":{"line":252,"column":48}}]},"45":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":6},"end":{"line":264,"column":6}},{"start":{"line":264,"column":6},"end":{"line":264,"column":6}}]},"46":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":6},"end":{"line":265,"column":6}},{"start":{"line":265,"column":6},"end":{"line":265,"column":6}}]},"47":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":6},"end":{"line":269,"column":6}},{"start":{"line":269,"column":6},"end":{"line":269,"column":6}}]},"48":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":6},"end":{"line":275,"column":6}},{"start":{"line":275,"column":6},"end":{"line":275,"column":6}}]},"49":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":8},"end":{"line":284,"column":8}},{"start":{"line":284,"column":8},"end":{"line":284,"column":8}}]},"50":{"line":284,"type":"binary-expr","locations":[{"start":{"line":284,"column":12},"end":{"line":284,"column":65}},{"start":{"line":284,"column":69},"end":{"line":284,"column":104}}]},"51":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":8},"end":{"line":291,"column":8}},{"start":{"line":291,"column":8},"end":{"line":291,"column":8}}]},"52":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":8},"end":{"line":292,"column":8}},{"start":{"line":292,"column":8},"end":{"line":292,"column":8}}]},"53":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":8},"end":{"line":299,"column":8}},{"start":{"line":299,"column":8},"end":{"line":299,"column":8}}]},"54":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":10},"end":{"line":302,"column":10}},{"start":{"line":302,"column":10},"end":{"line":302,"column":10}}]},"55":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":10},"end":{"line":305,"column":10}},{"start":{"line":305,"column":10},"end":{"line":305,"column":10}}]},"56":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":14},"end":{"line":307,"column":14}},{"start":{"line":307,"column":14},"end":{"line":307,"column":14}}]},"57":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":10},"end":{"line":312,"column":10}},{"start":{"line":312,"column":10},"end":{"line":312,"column":10}}]},"58":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":12},"end":{"line":326,"column":12}},{"start":{"line":326,"column":12},"end":{"line":326,"column":12}}]},"59":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":12},"end":{"line":329,"column":12}},{"start":{"line":329,"column":12},"end":{"line":329,"column":12}}]},"60":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":12},"end":{"line":338,"column":12}},{"start":{"line":338,"column":12},"end":{"line":338,"column":12}}]},"61":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":12},"end":{"line":340,"column":12}},{"start":{"line":340,"column":12},"end":{"line":340,"column":12}}]},"62":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":12},"end":{"line":344,"column":12}},{"start":{"line":344,"column":12},"end":{"line":344,"column":12}}]},"63":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":8},"end":{"line":355,"column":8}},{"start":{"line":355,"column":8},"end":{"line":355,"column":8}}]},"64":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":8},"end":{"line":358,"column":8}},{"start":{"line":358,"column":8},"end":{"line":358,"column":8}}]},"65":{"line":358,"type":"binary-expr","locations":[{"start":{"line":358,"column":12},"end":{"line":358,"column":35}},{"start":{"line":358,"column":39},"end":{"line":358,"column":46}}]},"66":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":8},"end":{"line":363,"column":8}},{"start":{"line":363,"column":8},"end":{"line":363,"column":8}}]},"67":{"line":370,"type":"cond-expr","locations":[{"start":{"line":370,"column":37},"end":{"line":370,"column":51}},{"start":{"line":370,"column":54},"end":{"line":370,"column":56}}]},"68":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":8},"end":{"line":380,"column":8}},{"start":{"line":380,"column":8},"end":{"line":380,"column":8}}]},"69":{"line":380,"type":"binary-expr","locations":[{"start":{"line":380,"column":12},"end":{"line":380,"column":17}},{"start":{"line":380,"column":21},"end":{"line":380,"column":33}},{"start":{"line":380,"column":37},"end":{"line":380,"column":57}}]},"70":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":4},"end":{"line":414,"column":4}},{"start":{"line":414,"column":4},"end":{"line":414,"column":4}}]},"71":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":4},"end":{"line":420,"column":4}},{"start":{"line":420,"column":4},"end":{"line":420,"column":4}}]},"72":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":4},"end":{"line":426,"column":4}},{"start":{"line":426,"column":4},"end":{"line":426,"column":4}}]}},"code":["/**"," * Basic Finder Queries"," */","","var usageError = require('../../utils/usageError');","var utils = require('../../utils/helpers');","var normalize = require('../../utils/normalize');","var sorter = require('../../utils/sorter');","var Deferred = require('../deferred');","var Joins = require('./joins');","var Operations = require('./operations');","var Integrator = require('../integrator');","var waterlineCriteria = require('waterline-criteria');","var _ = require('lodash');","var async = require('async');","var hasOwnProperty = utils.object.hasOwnProperty;","","module.exports = {","","  /**","   * Find a single record that meets criteria","   *","   * @param {Object} criteria to search","   * @param {Function} callback","   * @return Deferred object if no callback","   */","","  findOne: function(criteria, cb) {","    var self = this;","","    if (typeof criteria === 'function') {","      cb = criteria;","      criteria = null;","    }","","    // If the criteria is an array of objects, wrap it in an \"or\"","    if (Array.isArray(criteria) && _.all(criteria, function(crit) {return _.isObject(crit);})) {","      criteria = {or: criteria};","    }","","    // Check if criteria is an integer or string and normalize criteria","    // to object, using the specified primary key field.","    criteria = normalize.expandPK(self, criteria);","","    // Normalize criteria","    criteria = normalize.criteria(criteria);","","    // Return Deferred or pass to adapter","    if (typeof cb !== 'function') {","      return new Deferred(this, this.findOne, criteria);","    }","","    // Transform Search Criteria","    criteria = self._transformer.serialize(criteria);","","    // serialize populated object","    if (criteria.joins) {","      criteria.joins.forEach(function(join) {","        if (join.criteria && join.criteria.where) {","          var joinCollection = self.waterline.collections[join.child];","          join.criteria.where = joinCollection._transformer.serialize(join.criteria.where);","        }","      });","    }","","    // If there was something defined in the criteria that would return no results, don't even","    // run the query and just return an empty result set.","    if (criteria === false || criteria.where === null) {","      // Build Default Error Message","      var err = '.findOne() requires a criteria. If you want the first record try .find().limit(1)';","      return cb(new Error(err));","    }","","    // Build up an operations set","    var operations = new Operations(self, criteria, 'findOne');","","    // Run the operations","    operations.run(function(err, values) {","      if (err) return cb(err);","      if (!values.cache) return cb();","","      // If no joins are used grab the only item from the cache and pass to the returnResults","      // function.","      if (!criteria.joins) {","        values = values.cache[self.identity];","        return returnResults(values);","      }","","      // If the values are already combined, return the results","      if (values.combined) {","        return returnResults(values.cache[self.identity]);","      }","","      // Find the primaryKey of the current model so it can be passed down to the integrator.","      // Use 'id' as a good general default;","      var primaryKey = 'id';","","      Object.keys(self._schema.schema).forEach(function(key) {","        if (self._schema.schema[key].hasOwnProperty('primaryKey') && self._schema.schema[key].primaryKey) {","          primaryKey = key;","        }","      });","","","      // Perform in-memory joins","      Integrator(values.cache, criteria.joins, primaryKey, function(err, results) {","        if (err) return cb(err);","        if (!results) return cb();","","        // We need to run one last check on the results using the criteria. This allows a self","        // association where we end up with two records in the cache both having each other as","        // embedded objects and we only want one result. However we need to filter any join criteria","        // out of the top level where query so that searchs by primary key still work.","        var tmpCriteria = _.cloneDeep(criteria.where);","        if (!tmpCriteria) tmpCriteria = {};","","        criteria.joins.forEach(function(join) {","          if (!hasOwnProperty(join, 'alias')) return;","","          // Check for `OR` criteria","          if (hasOwnProperty(tmpCriteria, 'or')) {","            tmpCriteria.or.forEach(function(search) {","              if (!hasOwnProperty(search, join.alias)) return;","              delete search[join.alias];","            });","          }","","          if (!hasOwnProperty(tmpCriteria, join.alias)) return;","          delete tmpCriteria[join.alias];","        });","","        // Pass results into Waterline-Criteria","        var _criteria = { where: tmpCriteria };","        results = waterlineCriteria('parent', { parent: results }, _criteria).results;","","        results.forEach(function(res) {","","          // Go Ahead and perform any sorts on the associated data","          criteria.joins.forEach(function(join) {","            if (!join.criteria) return;","            var c = normalize.criteria(join.criteria);","            if (!c.sort) return;","","            var alias = join.alias;","            res[alias] = sorter(res[alias], c.sort);","          });","        });","","        returnResults(results);","      });","","      function returnResults(results) {","","        if (!results) return cb();","","        // Normalize results to an array","        if (!Array.isArray(results) && results) results = [results];","","        // Unserialize each of the results before attempting any join logic on them","        var unserializedModels = [];","        results.forEach(function(result) {","          unserializedModels.push(self._transformer.unserialize(result));","        });","","        var models = [];","        var joins = criteria.joins ? criteria.joins : [];","        var data = new Joins(joins, unserializedModels, self.identity, self._schema.schema, self.waterline.collections);","","        // If `data.models` is invalid (not an array) return early to avoid getting into trouble.","        if (!data || !data.models || !data.models.forEach) {","          return cb(new Error('Values returned from operations set are not an array...'));","        }","","        // Create a model for the top level values","        data.models.forEach(function(model) {","          models.push(new self._model(model, data.options));","        });","","        cb(null, models[0]);","      }","    });","  },","","  /**","   * Find All Records that meet criteria","   *","   * @param {Object} search criteria","   * @param {Object} options","   * @param {Function} callback","   * @return Deferred object if no callback","   */","","  find: function(criteria, options, cb) {","    var self = this;","","    var usage = utils.capitalize(this.identity) + '.find([criteria],[options]).exec(callback|switchback)';","","    if (typeof criteria === 'function') {","      cb = criteria;","      criteria = null;","      options = null;","    }","","    if (typeof options === 'function') {","      cb = options;","      options = null;","    }","","    // If the criteria is an array of objects, wrap it in an \"or\"","    if (Array.isArray(criteria) && _.all(criteria, function(crit) {return _.isObject(crit);})) {","      criteria = {or: criteria};","    }","","    // Check if criteria is an integer or string and normalize criteria","    // to object, using the specified primary key field.","    criteria = normalize.expandPK(self, criteria);","","    // Normalize criteria","    criteria = normalize.criteria(criteria);","","    // Validate Arguments","    if (typeof criteria === 'function' || typeof options === 'function') {","      return usageError('Invalid options specified!', usage, cb);","    }","","    // Return Deferred or pass to adapter","    if (typeof cb !== 'function') {","      return new Deferred(this, this.find, criteria, options);","    }","","    // If there was something defined in the criteria that would return no results, don't even","    // run the query and just return an empty result set.","    if (criteria === false) {","      return cb(null, []);","    }","","    // Fold in options","    if (options === Object(options) && criteria === Object(criteria)) {","      criteria = _.extend({}, criteria, options);","    }","","    // Transform Search Criteria","    if (!self._transformer) {","      throw new Error('Waterline can not access transformer-- maybe the context of the method is being overridden?');","    }","","    criteria = self._transformer.serialize(criteria);","","    // serialize populated object","    if (criteria.joins) {","      criteria.joins.forEach(function(join) {","        if (join.criteria && join.criteria.where) {","          var joinCollection = self.waterline.collections[join.child];","          join.criteria.where = joinCollection._transformer.serialize(join.criteria.where);","        }","      });","    }","","    // Build up an operations set","    var operations = new Operations(self, criteria, 'find');","","    // Run the operations","    operations.run(function(err, values) {","      if (err) return cb(err);","      if (!values.cache) return cb();","","      // If no joins are used grab current collection's item from the cache and pass to the returnResults","      // function.","      if (!criteria.joins) {","        values = values.cache[self.identity];","        return returnResults(values);","      }","","      // If the values are already combined, return the results","      if (values.combined) {","        return returnResults(values.cache[self.identity]);","      }","","      // Find the primaryKey of the current model so it can be passed down to the integrator.","      // Use 'id' as a good general default;","      var primaryKey = 'id';","","      Object.keys(self._schema.schema).forEach(function(key) {","        if (self._schema.schema[key].hasOwnProperty('primaryKey') && self._schema.schema[key].primaryKey) {","          primaryKey = key;","        }","      });","","      // Perform in-memory joins","      Integrator(values.cache, criteria.joins, primaryKey, function(err, results) {","        if (err) return cb(err);","        if (!results) return cb();","","        // We need to run one last check on the results using the criteria. This allows a self","        // association where we end up with two records in the cache both having each other as","        // embedded objects and we only want one result. However we need to filter any join criteria","        // out of the top level where query so that searchs by primary key still work.","        var tmpCriteria = _.cloneDeep(criteria.where);","        if (!tmpCriteria) tmpCriteria = {};","","        criteria.joins.forEach(function(join) {","          if (!hasOwnProperty(join, 'alias')) return;","","          // Check for `OR` criteria","          if (hasOwnProperty(tmpCriteria, 'or')) {","            tmpCriteria.or.forEach(function(search) {","              if (!hasOwnProperty(search, join.alias)) return;","              delete search[join.alias];","            });","          }","","          if (!hasOwnProperty(tmpCriteria, join.alias)) return;","          delete tmpCriteria[join.alias];","        });","","        // Pass results into Waterline-Criteria","        var _criteria = { where: tmpCriteria };","        results = waterlineCriteria('parent', { parent: results }, _criteria).results;","","        // Serialize values coming from an in-memory join before modelizing","        var _results = [];","        results.forEach(function(res) {","","          // Go Ahead and perform any sorts on the associated data","          criteria.joins.forEach(function(join) {","            if (!join.criteria) return;","            var c = normalize.criteria(join.criteria);","            var alias = join.alias;","            if (c.sort) {","              res[alias] = sorter(res[alias], c.sort);","            }","","            // If a junction table was used we need to do limit and skip in-memory","            // This is where it gets nasty, paginated stuff here is a pain and needs work","            // Hopefully we can get a chance to re-do it in WL2 and not have this. Basically","            // if you need paginated populates try and have all the tables in the query on the","            // same connection so it can be done in a nice single query.","            if (!join.junctionTable) return;","","            if (c.skip) {","              res[alias].splice(0, c.skip);","            }","","            if (c.limit) {","              res[alias] = _.take(res[alias], c.limit);","            }","          });","        });","","        returnResults(results);","      });","","      function returnResults(results) {","","        if (!results) return cb(null, []);","","        // Normalize results to an array","        if (!Array.isArray(results) && results) results = [results];","","        // Unserialize each of the results before attempting any join logic on them","        var unserializedModels = [];","","        if (results) {","          results.forEach(function(result) {","            unserializedModels.push(self._transformer.unserialize(result));","          });","        }","","        var models = [];","        var joins = criteria.joins ? criteria.joins : [];","        var data = new Joins(joins, unserializedModels, self.identity, self._schema.schema, self.waterline.collections);","","        // NOTE:","        // If a \"belongsTo\" (i.e. HAS_FK) association is null, should it be transformed into","        // an empty array here?  That is not what is happening currently, and it can cause","        // unexpected problems when implementing the native join method as an adapter implementor.","        // ~Mike June 22, 2014","","        // If `data.models` is invalid (not an array) return early to avoid getting into trouble.","        if (!data || !data.models || !data.models.forEach) {","          return cb(new Error('Values returned from operations set are not an array...'));","        }","","        // Create a model for the top level values","        data.models.forEach(function(model) {","          models.push(new self._model(model, data.options));","        });","","","        cb(null, models);","      }","","    });","  },","","  where: function() {","    this.find.apply(this, Array.prototype.slice.call(arguments));","  },","","  select: function() {","    this.find.apply(this, Array.prototype.slice.call(arguments));","  },","","","  /**","   * findAll","   * [[ Deprecated! ]]","   *","   * @param  {Object}   criteria","   * @param  {Object}   options","   * @param  {Function} cb","   */","  findAll: function(criteria, options, cb) {","    if (typeof criteria === 'function') {","      cb = criteria;","      criteria = null;","      options = null;","    }","","    if (typeof options === 'function') {","      cb = options;","      options = null;","    }","","    // Return Deferred or pass to adapter","    if (typeof cb !== 'function') {","      return new Deferred(this, this.findAll, criteria);","    }","","    cb(new Error('In Waterline >= 0.9, findAll() has been deprecated in favor of find().' +","                '\\nPlease visit the migration guide at http://sailsjs.org for help upgrading.'));","  }","","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"18":1,"29":0,"31":0,"32":0,"33":0,"37":0,"38":0,"43":0,"46":0,"49":0,"50":0,"54":0,"57":0,"58":0,"59":0,"60":0,"61":0,"68":0,"70":0,"71":0,"75":0,"78":0,"79":0,"80":0,"84":0,"85":0,"86":0,"90":0,"91":0,"96":0,"98":0,"99":0,"100":0,"106":0,"107":0,"108":0,"114":0,"115":0,"117":0,"118":0,"121":0,"122":0,"123":0,"124":0,"128":0,"129":0,"133":0,"134":0,"136":0,"139":0,"140":0,"141":0,"142":0,"144":0,"145":0,"149":0,"152":1,"154":0,"157":0,"160":0,"161":0,"162":0,"165":0,"166":0,"167":0,"170":0,"171":0,"175":0,"176":0,"179":0,"194":0,"196":0,"198":0,"199":0,"200":0,"201":0,"204":0,"205":0,"206":0,"210":0,"211":0,"216":0,"219":0,"222":0,"223":0,"227":0,"228":0,"233":0,"234":0,"238":0,"239":0,"243":0,"244":0,"247":0,"250":0,"251":0,"252":0,"253":0,"254":0,"260":0,"263":0,"264":0,"265":0,"269":0,"270":0,"271":0,"275":0,"276":0,"281":0,"283":0,"284":0,"285":0,"290":0,"291":0,"292":0,"298":0,"299":0,"301":0,"302":0,"305":0,"306":0,"307":0,"308":0,"312":0,"313":0,"317":0,"318":0,"321":0,"322":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"338":0,"340":0,"341":0,"344":0,"345":0,"350":0,"353":1,"355":0,"358":0,"361":0,"363":0,"364":0,"365":0,"369":0,"370":0,"371":0,"380":0,"381":0,"385":0,"386":0,"390":0,"397":0,"401":0,"414":0,"415":0,"416":0,"417":0,"420":0,"421":0,"422":0,"426":0,"427":0,"430":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/sorter.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/sorter.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"sortData","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":55}}},"2":{"name":"dynamicSort","line":20,"loc":{"start":{"line":20,"column":2},"end":{"line":20,"column":33}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":11},"end":{"line":27,"column":26}}},"4":{"name":"dynamicSortMultiple","line":33,"loc":{"start":{"line":33,"column":2},"end":{"line":33,"column":33}}},"5":{"name":"(anonymous_5)","line":35,"loc":{"start":{"line":35,"column":11},"end":{"line":35,"column":32}}},"6":{"name":"(anonymous_6)","line":50,"loc":{"start":{"line":50,"column":31},"end":{"line":50,"column":45}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":18,"column":0},"end":{"line":57,"column":2}},"3":{"start":{"line":20,"column":2},"end":{"line":31,"column":3}},"4":{"start":{"line":21,"column":4},"end":{"line":21,"column":22}},"5":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"6":{"start":{"line":23,"column":6},"end":{"line":23,"column":21}},"7":{"start":{"line":24,"column":6},"end":{"line":24,"column":36}},"8":{"start":{"line":27,"column":4},"end":{"line":30,"column":6}},"9":{"start":{"line":28,"column":6},"end":{"line":28,"column":90}},"10":{"start":{"line":29,"column":6},"end":{"line":29,"column":32}},"11":{"start":{"line":33,"column":2},"end":{"line":46,"column":3}},"12":{"start":{"line":34,"column":4},"end":{"line":34,"column":26}},"13":{"start":{"line":35,"column":4},"end":{"line":45,"column":6}},"14":{"start":{"line":36,"column":6},"end":{"line":36,"column":16}},"15":{"start":{"line":37,"column":6},"end":{"line":37,"column":21}},"16":{"start":{"line":38,"column":6},"end":{"line":38,"column":44}},"17":{"start":{"line":40,"column":6},"end":{"line":43,"column":7}},"18":{"start":{"line":41,"column":8},"end":{"line":41,"column":51}},"19":{"start":{"line":42,"column":8},"end":{"line":42,"column":12}},"20":{"start":{"line":44,"column":6},"end":{"line":44,"column":20}},"21":{"start":{"line":49,"column":2},"end":{"line":49,"column":21}},"22":{"start":{"line":50,"column":2},"end":{"line":53,"column":5}},"23":{"start":{"line":51,"column":4},"end":{"line":52,"column":29}},"24":{"start":{"line":51,"column":34},"end":{"line":51,"column":60}},"25":{"start":{"line":52,"column":9},"end":{"line":52,"column":29}},"26":{"start":{"line":55,"column":2},"end":{"line":55,"column":56}},"27":{"start":{"line":56,"column":2},"end":{"line":56,"column":14}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":49},"end":{"line":28,"column":51}},{"start":{"line":28,"column":54},"end":{"line":28,"column":89}}]},"3":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":84},"end":{"line":28,"column":85}},{"start":{"line":28,"column":88},"end":{"line":28,"column":89}}]},"4":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":13},"end":{"line":40,"column":25}},{"start":{"line":40,"column":29},"end":{"line":40,"column":51}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]}},"code":["/**"," * Module Dependencies"," */","","var _ = require('lodash');","","/**"," * Sort `data` (tuples) using `sortCriteria` (comparator)"," *"," * Based on method described here:"," * http://stackoverflow.com/a/4760279/909625"," *"," * @param  { Object[] } data         [tuples]"," * @param  { Object }   sortCriteria [mongo-style comparator object]"," * @return { Object[] }"," */","","module.exports = function sortData(data, sortCriteria) {","","  function dynamicSort(property) {","    var sortOrder = 1;","    if (property[0] === '-') {","      sortOrder = -1;","      property = property.substr(1);","    }","","    return function(a, b) {","      var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;","      return result * sortOrder;","    };","  }","","  function dynamicSortMultiple() {","    var props = arguments;","    return function(obj1, obj2) {","      var i = 0;","      var result = 0;","      var numberOfProperties = props.length;","","      while (result === 0 && i < numberOfProperties) {","        result = dynamicSort(props[i])(obj1, obj2);","        i++;","      }","      return result;","    };","  }","","  // build sort criteria in the format ['firstName', '-lastName']","  var sortArray = [];","  _.each(_.keys(sortCriteria), function(key) {","    if (sortCriteria[key] === -1) sortArray.push('-' + key);","    else sortArray.push(key);","  });","","  data.sort(dynamicSortMultiple.apply(null, sortArray));","  return data;","};",""],"l":{"5":1,"18":1,"20":1,"21":0,"22":0,"23":0,"24":0,"27":0,"28":0,"29":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"40":0,"41":0,"42":0,"44":0,"49":0,"50":0,"51":0,"52":0,"55":0,"56":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/finders/joins.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/finders/joins.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":29},"end":{"line":13,"column":84}}},"2":{"name":"modelOptions","line":44,"loc":{"start":{"line":44,"column":31},"end":{"line":44,"column":55}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":28},"end":{"line":58,"column":43}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":33},"end":{"line":70,"column":48}}},"5":{"name":"(anonymous_5)","line":76,"loc":{"start":{"line":76,"column":23},"end":{"line":76,"column":35}}},"6":{"name":"makeModels","line":97,"loc":{"start":{"line":97,"column":29},"end":{"line":97,"column":51}}},"7":{"name":"(anonymous_7)","line":107,"loc":{"start":{"line":107,"column":22},"end":{"line":107,"column":38}}},"8":{"name":"modelize","line":124,"loc":{"start":{"line":124,"column":27},"end":{"line":124,"column":52}}},"9":{"name":"(anonymous_9)","line":128,"loc":{"start":{"line":128,"column":29},"end":{"line":128,"column":43}}},"10":{"name":"(anonymous_10)","line":171,"loc":{"start":{"line":171,"column":25},"end":{"line":171,"column":39}}},"11":{"name":"checkForJoin","line":217,"loc":{"start":{"line":217,"column":31},"end":{"line":217,"column":58}}},"12":{"name":"(anonymous_12)","line":224,"loc":{"start":{"line":224,"column":21},"end":{"line":224,"column":36}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"4":{"start":{"line":13,"column":0},"end":{"line":36,"column":2}},"5":{"start":{"line":15,"column":2},"end":{"line":15,"column":27}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":27}},"7":{"start":{"line":21,"column":2},"end":{"line":21,"column":29}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":29}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":39}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":22}},"11":{"start":{"line":33,"column":2},"end":{"line":33,"column":34}},"12":{"start":{"line":35,"column":2},"end":{"line":35,"column":14}},"13":{"start":{"line":44,"column":0},"end":{"line":88,"column":2}},"14":{"start":{"line":46,"column":2},"end":{"line":46,"column":18}},"15":{"start":{"line":47,"column":2},"end":{"line":47,"column":12}},"16":{"start":{"line":50,"column":2},"end":{"line":52,"column":4}},"17":{"start":{"line":55,"column":2},"end":{"line":55,"column":26}},"18":{"start":{"line":55,"column":19},"end":{"line":55,"column":26}},"19":{"start":{"line":58,"column":2},"end":{"line":64,"column":5}},"20":{"start":{"line":61,"column":4},"end":{"line":61,"column":35}},"21":{"start":{"line":61,"column":22},"end":{"line":61,"column":35}},"22":{"start":{"line":63,"column":4},"end":{"line":63,"column":16}},"23":{"start":{"line":70,"column":2},"end":{"line":84,"column":5}},"24":{"start":{"line":71,"column":4},"end":{"line":71,"column":19}},"25":{"start":{"line":73,"column":4},"end":{"line":73,"column":47}},"26":{"start":{"line":73,"column":29},"end":{"line":73,"column":47}},"27":{"start":{"line":76,"column":4},"end":{"line":79,"column":7}},"28":{"start":{"line":77,"column":6},"end":{"line":77,"column":42}},"29":{"start":{"line":77,"column":35},"end":{"line":77,"column":42}},"30":{"start":{"line":78,"column":6},"end":{"line":78,"column":26}},"31":{"start":{"line":82,"column":4},"end":{"line":82,"column":28}},"32":{"start":{"line":82,"column":15},"end":{"line":82,"column":28}},"33":{"start":{"line":83,"column":4},"end":{"line":83,"column":22}},"34":{"start":{"line":87,"column":2},"end":{"line":87,"column":61}},"35":{"start":{"line":97,"column":0},"end":{"line":113,"column":2}},"36":{"start":{"line":99,"column":2},"end":{"line":99,"column":18}},"37":{"start":{"line":100,"column":2},"end":{"line":100,"column":18}},"38":{"start":{"line":101,"column":2},"end":{"line":101,"column":12}},"39":{"start":{"line":104,"column":2},"end":{"line":104,"column":63}},"40":{"start":{"line":104,"column":44},"end":{"line":104,"column":63}},"41":{"start":{"line":107,"column":2},"end":{"line":110,"column":5}},"42":{"start":{"line":108,"column":4},"end":{"line":108,"column":33}},"43":{"start":{"line":109,"column":4},"end":{"line":109,"column":23}},"44":{"start":{"line":112,"column":2},"end":{"line":112,"column":16}},"45":{"start":{"line":124,"column":0},"end":{"line":205,"column":2}},"46":{"start":{"line":125,"column":2},"end":{"line":125,"column":18}},"47":{"start":{"line":128,"column":2},"end":{"line":202,"column":5}},"48":{"start":{"line":130,"column":4},"end":{"line":130,"column":24}},"49":{"start":{"line":131,"column":4},"end":{"line":132,"column":19}},"50":{"start":{"line":135,"column":4},"end":{"line":135,"column":63}},"51":{"start":{"line":135,"column":56},"end":{"line":135,"column":63}},"52":{"start":{"line":141,"column":4},"end":{"line":141,"column":84}},"53":{"start":{"line":142,"column":4},"end":{"line":146,"column":5}},"54":{"start":{"line":143,"column":6},"end":{"line":143,"column":43}},"55":{"start":{"line":145,"column":6},"end":{"line":145,"column":30}},"56":{"start":{"line":150,"column":4},"end":{"line":150,"column":54}},"57":{"start":{"line":150,"column":47},"end":{"line":150,"column":54}},"58":{"start":{"line":153,"column":4},"end":{"line":153,"column":67}},"59":{"start":{"line":153,"column":46},"end":{"line":153,"column":67}},"60":{"start":{"line":157,"column":4},"end":{"line":157,"column":67}},"61":{"start":{"line":157,"column":60},"end":{"line":157,"column":67}},"62":{"start":{"line":160,"column":4},"end":{"line":160,"column":40}},"63":{"start":{"line":164,"column":4},"end":{"line":164,"column":33}},"64":{"start":{"line":164,"column":26},"end":{"line":164,"column":33}},"65":{"start":{"line":167,"column":4},"end":{"line":195,"column":5}},"66":{"start":{"line":169,"column":6},"end":{"line":169,"column":23}},"67":{"start":{"line":171,"column":6},"end":{"line":190,"column":9}},"68":{"start":{"line":172,"column":8},"end":{"line":173,"column":18}},"69":{"start":{"line":177,"column":8},"end":{"line":182,"column":9}},"70":{"start":{"line":178,"column":10},"end":{"line":178,"column":49}},"71":{"start":{"line":179,"column":10},"end":{"line":179,"column":57}},"72":{"start":{"line":180,"column":10},"end":{"line":180,"column":67}},"73":{"start":{"line":181,"column":10},"end":{"line":181,"column":37}},"74":{"start":{"line":186,"column":8},"end":{"line":186,"column":61}},"75":{"start":{"line":187,"column":8},"end":{"line":187,"column":55}},"76":{"start":{"line":188,"column":8},"end":{"line":188,"column":65}},"77":{"start":{"line":189,"column":8},"end":{"line":189,"column":35}},"78":{"start":{"line":193,"column":6},"end":{"line":193,"column":27}},"79":{"start":{"line":194,"column":6},"end":{"line":194,"column":13}},"80":{"start":{"line":199,"column":4},"end":{"line":199,"column":43}},"81":{"start":{"line":200,"column":4},"end":{"line":200,"column":65}},"82":{"start":{"line":201,"column":4},"end":{"line":201,"column":73}},"83":{"start":{"line":204,"column":2},"end":{"line":204,"column":15}},"84":{"start":{"line":217,"column":0},"end":{"line":231,"column":2}},"85":{"start":{"line":219,"column":2},"end":{"line":219,"column":19}},"86":{"start":{"line":220,"column":2},"end":{"line":220,"column":25}},"87":{"start":{"line":221,"column":2},"end":{"line":221,"column":18}},"88":{"start":{"line":224,"column":2},"end":{"line":228,"column":5}},"89":{"start":{"line":225,"column":4},"end":{"line":225,"column":35}},"90":{"start":{"line":225,"column":28},"end":{"line":225,"column":35}},"91":{"start":{"line":226,"column":4},"end":{"line":226,"column":22}},"92":{"start":{"line":227,"column":4},"end":{"line":227,"column":23}},"93":{"start":{"line":230,"column":2},"end":{"line":230,"column":49}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":15},"end":{"line":18,"column":20}},{"start":{"line":18,"column":24},"end":{"line":18,"column":26}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":16},"end":{"line":21,"column":22}},{"start":{"line":21,"column":26},"end":{"line":21,"column":28}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":16},"end":{"line":24,"column":22}},{"start":{"line":24,"column":26},"end":{"line":24,"column":28}}]},"4":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":21},"end":{"line":27,"column":32}},{"start":{"line":27,"column":36},"end":{"line":27,"column":38}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"6":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"7":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"8":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":6}},{"start":{"line":77,"column":6},"end":{"line":77,"column":6}}]},"9":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"10":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"11":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":6},"end":{"line":104,"column":18}},{"start":{"line":104,"column":22},"end":{"line":104,"column":42}}]},"12":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"13":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":31}},{"start":{"line":135,"column":35},"end":{"line":135,"column":54}}]},"14":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"15":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"16":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":12}},{"start":{"line":150,"column":16},"end":{"line":150,"column":45}}]},"17":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"18":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":12}},{"start":{"line":153,"column":16},"end":{"line":153,"column":44}}]},"19":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"20":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":8},"end":{"line":157,"column":15}},{"start":{"line":157,"column":19},"end":{"line":157,"column":58}}]},"21":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":164,"column":4}},{"start":{"line":164,"column":4},"end":{"line":164,"column":4}}]},"22":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]},"23":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":177,"column":8}},{"start":{"line":177,"column":8},"end":{"line":177,"column":8}}]},"24":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":4}},{"start":{"line":225,"column":4},"end":{"line":225,"column":4}}]}},"code":["/**"," * Module Dependencies"," */","","var _ = require('lodash');","var utils = require('../../utils/helpers');","var hop = utils.object.hasOwnProperty;","","/**"," * Logic For Handling Joins inside a Query Results Object"," */","","var Joins = module.exports = function(joins, values, identity, schema, collections) {","","  this.identity = identity;","","  // Hold Joins specified in the criteria","  this.joins = joins || [];","","  // Hold the result values","  this.values = values || [];","","  // Hold the overall schema","  this.schema = schema || {};","","  // Hold all the Waterline collections so we can make models","  this.collections = collections || {};","","  // Build up modelOptions","  this.modelOptions();","","  // Modelize values","  this.models = this.makeModels();","","  return this;","};","","/**"," * Build up Join Options that will be passed down to a Model instance."," *"," * @api private"," */","","Joins.prototype.modelOptions = function modelOptions() {","","  var self = this;","  var joins;","","  // Build Model Options, determines what associations to render in toObject","  this.options = {","    showJoins: !!this.joins","  };","","  // If no joins were used, just return","  if (!this.joins) return;","","  // Map out join names to pass down to the model instance","  joins = this.joins.filter(function(join) {","","    // If the value is not being selected, don't add it to the array","    if (!join.select) return false;","","    return join;","  });","","  // Map out join key names and attach to the options object.","  // For normal assoiciations, use the child table name that is being joined. For many-to-many","  // associations the child table name won't work so grab the alias used and use that for the","  // join name. It will be the one that is transformed.","  this.options.joins = joins.map(function(join) {","    var child = [];","    // If a junctionTable was not used, return the child table","    if (!join.junctionTable) return join.child;","","    // Find the original alias for the join","    self.joins.forEach(function(j) {","      if (j.child !== join.parent) return;","      child.push(j.alias);","    });","","    // If a child was found, return it otherwise just return the original child join","    if (child) return child;","    return join.child;","  });","","  // Flatten joins","  this.options.joins = _.uniq(_.flatten(this.options.joins));","};","","/**"," * Transform Values into instantiated Models."," *"," * @return {Array}"," * @api private"," */","","Joins.prototype.makeModels = function makeModels() {","","  var self = this;","  var models = [];","  var model;","","  // If values are invalid (not an array), return them early.","  if (!this.values || !this.values.forEach) return this.values;","","  // Make each result an instance of model","  this.values.forEach(function(value) {","    model = self.modelize(value);","    models.push(model);","  });","","  return models;","};","","/**"," * Handle a single Result and inspect it's values for anything"," * that needs to become a Model instance."," *"," * @param {Object} value"," * @return {Object}"," * @api private"," */","","Joins.prototype.modelize = function modelize(value) {","  var self = this;","","  // Look at each key in the object and see if it was used in a join","  Object.keys(value).forEach(function(key) {","","    var joinKey = false;","    var attr,","        usedInJoin;","","    // If showJoins wasn't set or no joins were found there is nothing to modelize","    if (!self.options.showJoins || !self.options.joins) return;","","    // Look at the schema for an attribute and check if it's a foreign key","    // or a virtual hasMany collection attribute","","    // Check if there is a transformation on this attribute","    var transformer = self.collections[self.identity]._transformer._transformations;","    if (hop(transformer, key)) {","      attr = self.schema[transformer[key]];","    } else {","      attr = self.schema[key];","    }","","    // If an attribute was found but it's not a model, this means it's a normal","    // key/value attribute and not an association so there is no need to modelize it.","    if (attr && !attr.hasOwnProperty('model')) return;","","    // If the attribute has a `model` property, the joinKey is the collection of the model","    if (attr && attr.hasOwnProperty('model')) joinKey = attr.model;","","    // If the attribute is a foreign key but it was not populated, just leave the foreign key","    // as it is and don't try and modelize it.","    if (joinKey && self.options.joins.indexOf(joinKey) < 0) return;","","    // Check if the key was used in a join","    usedInJoin = self.checkForJoin(key);","","    // If the attribute wasn't used in the join, don't turn it into a model instance.","    // NOTE: Not sure if this is correct or not?","    if (!usedInJoin.used) return;","","    // If the attribute is an array of child values, for each one make a model out of it.","    if (Array.isArray(value[key])) {","","      var records = [];","","      value[key].forEach(function(val) {","        var collection,","            model;","","        // If there is a joinKey this means it's a belongsTo association so the collection","        // containing the proper model will be the name of the joinKey model.","        if (joinKey) {","          collection = self.collections[joinKey];","          val = collection._transformer.unserialize(val);","          model = new collection._model(val, { showJoins: false });","          return records.push(model);","        }","","        // Otherwise look at the join used and determine which key should be used to get","        // the proper model from the collections.","        collection = self.collections[usedInJoin.join.child];","        val = collection._transformer.unserialize(val);","        model = new collection._model(val, { showJoins: false });","        return records.push(model);","      });","","      // Set the value to the array of model values","      value[key] = records;","      return;","    }","","    // If the value isn't an array it's a populated foreign key so modelize it and attach","    // it directly on the attribute","    collection = self.collections[joinKey];","    value[key] = collection._transformer.unserialize(value[key]);","    value[key] = new collection._model(value[key], { showJoins: false });","  });","","  return value;","};","","/**"," * Test if an attribute was used in a join."," * Requires generating a key to test against an attribute because the model process"," * will be run before any transformations have taken place."," *"," * @param {String} key"," * @return {Object}"," * @api private"," */","","Joins.prototype.checkForJoin = function checkForJoin(key) {","","  var generatedKey;","  var usedInJoin = false;","  var relatedJoin;","","  // Loop through each join and see if the given key matches a join used","  this.joins.forEach(function(join) {","    if (join.alias !== key) return;","    usedInJoin = true;","    relatedJoin = join;","  });","","  return { used: usedInJoin, join: relatedJoin };","};",""],"l":{"5":1,"6":1,"7":1,"13":1,"15":0,"18":0,"21":0,"24":0,"27":0,"30":0,"33":0,"35":0,"44":1,"46":0,"47":0,"50":0,"55":0,"58":0,"61":0,"63":0,"70":0,"71":0,"73":0,"76":0,"77":0,"78":0,"82":0,"83":0,"87":0,"97":1,"99":0,"100":0,"101":0,"104":0,"107":0,"108":0,"109":0,"112":0,"124":1,"125":0,"128":0,"130":0,"131":0,"135":0,"141":0,"142":0,"143":0,"145":0,"150":0,"153":0,"157":0,"160":0,"164":0,"167":0,"169":0,"171":0,"172":0,"177":0,"178":0,"179":0,"180":0,"181":0,"186":0,"187":0,"188":0,"189":0,"193":0,"194":0,"199":0,"200":0,"201":0,"204":0,"217":1,"219":0,"220":0,"221":0,"224":0,"225":0,"226":0,"227":0,"230":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/finders/operations.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/finders/operations.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":1,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":1,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":1,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":1,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":34},"end":{"line":19,"column":70}}},"2":{"name":"run","line":62,"loc":{"start":{"line":62,"column":27},"end":{"line":62,"column":44}}},"3":{"name":"(anonymous_3)","line":70,"loc":{"start":{"line":70,"column":78},"end":{"line":70,"column":101}}},"4":{"name":"(anonymous_4)","line":81,"loc":{"start":{"line":81,"column":33},"end":{"line":81,"column":47}}},"5":{"name":"_seedCache","line":105,"loc":{"start":{"line":105,"column":34},"end":{"line":105,"column":56}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":53},"end":{"line":109,"column":67}}},"7":{"name":"_buildOperations","line":121,"loc":{"start":{"line":121,"column":40},"end":{"line":121,"column":68}}},"8":{"name":"_stageOperations","line":167,"loc":{"start":{"line":167,"column":40},"end":{"line":167,"column":79}}},"9":{"name":"(anonymous_9)","line":182,"loc":{"start":{"line":182,"column":35},"end":{"line":182,"column":56}}},"10":{"name":"(anonymous_10)","line":198,"loc":{"start":{"line":198,"column":42},"end":{"line":198,"column":62}}},"11":{"name":"(anonymous_11)","line":218,"loc":{"start":{"line":218,"column":24},"end":{"line":218,"column":43}}},"12":{"name":"_createParentOperation","line":242,"loc":{"start":{"line":242,"column":46},"end":{"line":242,"column":91}}},"13":{"name":"(anonymous_13)","line":260,"loc":{"start":{"line":260,"column":29},"end":{"line":260,"column":44}}},"14":{"name":"_getConnections","line":312,"loc":{"start":{"line":312,"column":39},"end":{"line":312,"column":66}}},"15":{"name":"(anonymous_15)","line":327,"loc":{"start":{"line":327,"column":30},"end":{"line":327,"column":45}}},"16":{"name":"getConnection","line":332,"loc":{"start":{"line":332,"column":4},"end":{"line":332,"column":37}}},"17":{"name":"(anonymous_17)","line":347,"loc":{"start":{"line":347,"column":51},"end":{"line":347,"column":71}}},"18":{"name":"_runOperation","line":400,"loc":{"start":{"line":400,"column":37},"end":{"line":400,"column":98}}},"19":{"name":"_execChildOpts","line":426,"loc":{"start":{"line":426,"column":38},"end":{"line":426,"column":81}}},"20":{"name":"(anonymous_20)","line":432,"loc":{"start":{"line":432,"column":38},"end":{"line":432,"column":58}}},"21":{"name":"(anonymous_21)","line":436,"loc":{"start":{"line":436,"column":21},"end":{"line":436,"column":42}}},"22":{"name":"_buildChildOpts","line":458,"loc":{"start":{"line":458,"column":39},"end":{"line":458,"column":83}}},"23":{"name":"(anonymous_23)","line":464,"loc":{"start":{"line":464,"column":30},"end":{"line":464,"column":51}}},"24":{"name":"(anonymous_24)","line":472,"loc":{"start":{"line":472,"column":26},"end":{"line":472,"column":43}}},"25":{"name":"(anonymous_25)","line":522,"loc":{"start":{"line":522,"column":22},"end":{"line":522,"column":39}}},"26":{"name":"(anonymous_26)","line":573,"loc":{"start":{"line":573,"column":5},"end":{"line":573,"column":19}}},"27":{"name":"_collectChildResults","line":589,"loc":{"start":{"line":589,"column":44},"end":{"line":589,"column":84}}},"28":{"name":"(anonymous_28)","line":599,"loc":{"start":{"line":599,"column":25},"end":{"line":599,"column":45}}},"29":{"name":"(anonymous_29)","line":600,"loc":{"start":{"line":600,"column":55},"end":{"line":600,"column":77}}},"30":{"name":"_runChildOperations","line":636,"loc":{"start":{"line":636,"column":43},"end":{"line":636,"column":102}}},"31":{"name":"(anonymous_31)","line":644,"loc":{"start":{"line":644,"column":72},"end":{"line":644,"column":94}}},"32":{"name":"(anonymous_32)","line":658,"loc":{"start":{"line":658,"column":14},"end":{"line":658,"column":31}}},"33":{"name":"(anonymous_33)","line":688,"loc":{"start":{"line":688,"column":59},"end":{"line":688,"column":81}}},"34":{"name":"(anonymous_34)","line":692,"loc":{"start":{"line":692,"column":19},"end":{"line":692,"column":33}}},"35":{"name":"(anonymous_35)","line":693,"loc":{"start":{"line":693,"column":24},"end":{"line":693,"column":39}}},"36":{"name":"_findCollectionPK","line":714,"loc":{"start":{"line":714,"column":41},"end":{"line":714,"column":84}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":49}},"6":{"start":{"line":19,"column":0},"end":{"line":43,"column":2}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":18}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":25}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":27}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":23}},"11":{"start":{"line":34,"column":2},"end":{"line":34,"column":27}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":20}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":44}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":14}},"15":{"start":{"line":62,"column":0},"end":{"line":88,"column":2}},"16":{"start":{"line":64,"column":2},"end":{"line":64,"column":18}},"17":{"start":{"line":67,"column":2},"end":{"line":67,"column":41}},"18":{"start":{"line":70,"column":2},"end":{"line":86,"column":5}},"19":{"start":{"line":72,"column":4},"end":{"line":72,"column":28}},"20":{"start":{"line":72,"column":13},"end":{"line":72,"column":28}},"21":{"start":{"line":75,"column":4},"end":{"line":75,"column":46}},"22":{"start":{"line":78,"column":4},"end":{"line":78,"column":93}},"23":{"start":{"line":78,"column":38},"end":{"line":78,"column":93}},"24":{"start":{"line":81,"column":4},"end":{"line":84,"column":7}},"25":{"start":{"line":82,"column":6},"end":{"line":82,"column":30}},"26":{"start":{"line":82,"column":15},"end":{"line":82,"column":30}},"27":{"start":{"line":83,"column":6},"end":{"line":83,"column":66}},"28":{"start":{"line":105,"column":0},"end":{"line":112,"column":2}},"29":{"start":{"line":106,"column":2},"end":{"line":106,"column":18}},"30":{"start":{"line":109,"column":2},"end":{"line":111,"column":5}},"31":{"start":{"line":110,"column":4},"end":{"line":110,"column":25}},"32":{"start":{"line":121,"column":0},"end":{"line":158,"column":2}},"33":{"start":{"line":123,"column":2},"end":{"line":123,"column":18}},"34":{"start":{"line":124,"column":2},"end":{"line":124,"column":22}},"35":{"start":{"line":127,"column":2},"end":{"line":144,"column":3}},"36":{"start":{"line":130,"column":4},"end":{"line":130,"column":79}},"37":{"start":{"line":133,"column":4},"end":{"line":133,"column":67}},"38":{"start":{"line":134,"column":4},"end":{"line":134,"column":76}},"39":{"start":{"line":134,"column":25},"end":{"line":134,"column":76}},"40":{"start":{"line":136,"column":4},"end":{"line":141,"column":7}},"41":{"start":{"line":143,"column":4},"end":{"line":143,"column":22}},"42":{"start":{"line":148,"column":2},"end":{"line":148,"column":43}},"43":{"start":{"line":155,"column":2},"end":{"line":155,"column":50}},"44":{"start":{"line":157,"column":2},"end":{"line":157,"column":20}},"45":{"start":{"line":167,"column":0},"end":{"line":232,"column":2}},"46":{"start":{"line":169,"column":2},"end":{"line":169,"column":18}},"47":{"start":{"line":170,"column":2},"end":{"line":170,"column":22}},"48":{"start":{"line":173,"column":2},"end":{"line":173,"column":75}},"49":{"start":{"line":176,"column":2},"end":{"line":176,"column":69}},"50":{"start":{"line":179,"column":2},"end":{"line":179,"column":38}},"51":{"start":{"line":182,"column":2},"end":{"line":229,"column":5}},"52":{"start":{"line":187,"column":4},"end":{"line":187,"column":85}},"53":{"start":{"line":187,"column":78},"end":{"line":187,"column":85}},"54":{"start":{"line":196,"column":4},"end":{"line":196,"column":23}},"55":{"start":{"line":198,"column":4},"end":{"line":226,"column":7}},"56":{"start":{"line":200,"column":6},"end":{"line":200,"column":73}},"57":{"start":{"line":201,"column":6},"end":{"line":201,"column":70}},"58":{"start":{"line":203,"column":6},"end":{"line":208,"column":8}},"59":{"start":{"line":211,"column":6},"end":{"line":214,"column":7}},"60":{"start":{"line":212,"column":8},"end":{"line":212,"column":34}},"61":{"start":{"line":213,"column":8},"end":{"line":213,"column":15}},"62":{"start":{"line":217,"column":6},"end":{"line":217,"column":24}},"63":{"start":{"line":218,"column":6},"end":{"line":222,"column":9}},"64":{"start":{"line":219,"column":8},"end":{"line":219,"column":55}},"65":{"start":{"line":219,"column":48},"end":{"line":219,"column":55}},"66":{"start":{"line":220,"column":8},"end":{"line":220,"column":35}},"67":{"start":{"line":221,"column":8},"end":{"line":221,"column":21}},"68":{"start":{"line":224,"column":6},"end":{"line":224,"column":24}},"69":{"start":{"line":224,"column":17},"end":{"line":224,"column":24}},"70":{"start":{"line":225,"column":6},"end":{"line":225,"column":32}},"71":{"start":{"line":228,"column":4},"end":{"line":228,"column":46}},"72":{"start":{"line":231,"column":2},"end":{"line":231,"column":20}},"73":{"start":{"line":242,"column":0},"end":{"line":302,"column":2}},"74":{"start":{"line":244,"column":2},"end":{"line":244,"column":50}},"75":{"start":{"line":245,"column":2},"end":{"line":247,"column":17}},"76":{"start":{"line":251,"column":2},"end":{"line":279,"column":3}},"77":{"start":{"line":253,"column":4},"end":{"line":253,"column":57}},"78":{"start":{"line":254,"column":4},"end":{"line":254,"column":45}},"79":{"start":{"line":257,"column":4},"end":{"line":257,"column":33}},"80":{"start":{"line":260,"column":4},"end":{"line":263,"column":7}},"81":{"start":{"line":261,"column":6},"end":{"line":261,"column":66}},"82":{"start":{"line":261,"column":59},"end":{"line":261,"column":66}},"83":{"start":{"line":262,"column":6},"end":{"line":262,"column":30}},"84":{"start":{"line":266,"column":4},"end":{"line":278,"column":5}},"85":{"start":{"line":267,"column":6},"end":{"line":272,"column":9}},"86":{"start":{"line":275,"column":6},"end":{"line":275,"column":30}},"87":{"start":{"line":277,"column":6},"end":{"line":277,"column":23}},"88":{"start":{"line":282,"column":2},"end":{"line":282,"column":47}},"89":{"start":{"line":283,"column":2},"end":{"line":283,"column":27}},"90":{"start":{"line":285,"column":2},"end":{"line":285,"column":63}},"91":{"start":{"line":288,"column":2},"end":{"line":290,"column":3}},"92":{"start":{"line":289,"column":4},"end":{"line":289,"column":57}},"93":{"start":{"line":292,"column":2},"end":{"line":292,"column":43}},"94":{"start":{"line":294,"column":2},"end":{"line":299,"column":5}},"95":{"start":{"line":301,"column":2},"end":{"line":301,"column":19}},"96":{"start":{"line":312,"column":0},"end":{"line":384,"column":2}},"97":{"start":{"line":314,"column":2},"end":{"line":314,"column":18}},"98":{"start":{"line":315,"column":2},"end":{"line":315,"column":23}},"99":{"start":{"line":318,"column":2},"end":{"line":322,"column":4}},"100":{"start":{"line":327,"column":2},"end":{"line":382,"column":5}},"101":{"start":{"line":328,"column":4},"end":{"line":328,"column":19}},"102":{"start":{"line":329,"column":4},"end":{"line":329,"column":25}},"103":{"start":{"line":330,"column":4},"end":{"line":330,"column":24}},"104":{"start":{"line":332,"column":4},"end":{"line":337,"column":5}},"105":{"start":{"line":333,"column":6},"end":{"line":333,"column":68}},"106":{"start":{"line":334,"column":6},"end":{"line":334,"column":64}},"107":{"start":{"line":335,"column":6},"end":{"line":335,"column":98}},"108":{"start":{"line":336,"column":6},"end":{"line":336,"column":41}},"109":{"start":{"line":344,"column":4},"end":{"line":380,"column":5}},"110":{"start":{"line":347,"column":6},"end":{"line":349,"column":9}},"111":{"start":{"line":348,"column":8},"end":{"line":348,"column":46}},"112":{"start":{"line":352,"column":6},"end":{"line":352,"column":66}},"113":{"start":{"line":355,"column":6},"end":{"line":355,"column":52}},"114":{"start":{"line":356,"column":6},"end":{"line":356,"column":50}},"115":{"start":{"line":359,"column":6},"end":{"line":359,"column":53}},"116":{"start":{"line":360,"column":6},"end":{"line":360,"column":51}},"117":{"start":{"line":361,"column":6},"end":{"line":361,"column":50}},"118":{"start":{"line":364,"column":6},"end":{"line":364,"column":74}},"119":{"start":{"line":365,"column":6},"end":{"line":365,"column":72}},"120":{"start":{"line":366,"column":6},"end":{"line":366,"column":68}},"121":{"start":{"line":370,"column":6},"end":{"line":370,"column":75}},"122":{"start":{"line":374,"column":6},"end":{"line":374,"column":52}},"123":{"start":{"line":375,"column":6},"end":{"line":375,"column":50}},"124":{"start":{"line":377,"column":6},"end":{"line":377,"column":53}},"125":{"start":{"line":378,"column":6},"end":{"line":378,"column":51}},"126":{"start":{"line":379,"column":6},"end":{"line":379,"column":67}},"127":{"start":{"line":383,"column":2},"end":{"line":383,"column":21}},"128":{"start":{"line":400,"column":0},"end":{"line":413,"column":2}},"129":{"start":{"line":403,"column":2},"end":{"line":405,"column":3}},"130":{"start":{"line":404,"column":4},"end":{"line":404,"column":70}},"131":{"start":{"line":408,"column":2},"end":{"line":408,"column":70}},"132":{"start":{"line":411,"column":2},"end":{"line":411,"column":43}},"133":{"start":{"line":426,"column":0},"end":{"line":441,"column":2}},"134":{"start":{"line":428,"column":2},"end":{"line":428,"column":18}},"135":{"start":{"line":432,"column":2},"end":{"line":439,"column":5}},"136":{"start":{"line":433,"column":4},"end":{"line":433,"column":28}},"137":{"start":{"line":433,"column":13},"end":{"line":433,"column":28}},"138":{"start":{"line":436,"column":4},"end":{"line":438,"column":11}},"139":{"start":{"line":437,"column":6},"end":{"line":437,"column":44}},"140":{"start":{"line":458,"column":0},"end":{"line":576,"column":2}},"141":{"start":{"line":460,"column":2},"end":{"line":460,"column":18}},"142":{"start":{"line":461,"column":2},"end":{"line":461,"column":16}},"143":{"start":{"line":464,"column":2},"end":{"line":575,"column":5}},"144":{"start":{"line":466,"column":4},"end":{"line":466,"column":23}},"145":{"start":{"line":467,"column":4},"end":{"line":467,"column":21}},"146":{"start":{"line":468,"column":4},"end":{"line":468,"column":16}},"147":{"start":{"line":472,"column":4},"end":{"line":478,"column":7}},"148":{"start":{"line":474,"column":6},"end":{"line":474,"column":63}},"149":{"start":{"line":474,"column":56},"end":{"line":474,"column":63}},"150":{"start":{"line":475,"column":6},"end":{"line":475,"column":107}},"151":{"start":{"line":475,"column":100},"end":{"line":475,"column":107}},"152":{"start":{"line":476,"column":6},"end":{"line":476,"column":48}},"153":{"start":{"line":481,"column":4},"end":{"line":481,"column":44}},"154":{"start":{"line":481,"column":30},"end":{"line":481,"column":44}},"155":{"start":{"line":484,"column":4},"end":{"line":484,"column":22}},"156":{"start":{"line":485,"column":4},"end":{"line":485,"column":43}},"157":{"start":{"line":487,"column":4},"end":{"line":487,"column":26}},"158":{"start":{"line":490,"column":4},"end":{"line":515,"column":5}},"159":{"start":{"line":491,"column":6},"end":{"line":491,"column":57}},"160":{"start":{"line":492,"column":6},"end":{"line":492,"column":47}},"161":{"start":{"line":493,"column":6},"end":{"line":493,"column":54}},"162":{"start":{"line":496,"column":6},"end":{"line":511,"column":7}},"163":{"start":{"line":497,"column":8},"end":{"line":510,"column":9}},"164":{"start":{"line":498,"column":10},"end":{"line":498,"column":36}},"165":{"start":{"line":502,"column":10},"end":{"line":507,"column":11}},"166":{"start":{"line":503,"column":12},"end":{"line":503,"column":84}},"167":{"start":{"line":504,"column":12},"end":{"line":504,"column":25}},"168":{"start":{"line":505,"column":12},"end":{"line":505,"column":50}},"169":{"start":{"line":506,"column":12},"end":{"line":506,"column":37}},"170":{"start":{"line":509,"column":10},"end":{"line":509,"column":44}},"171":{"start":{"line":514,"column":6},"end":{"line":514,"column":49}},"172":{"start":{"line":518,"column":4},"end":{"line":518,"column":44}},"173":{"start":{"line":521,"column":4},"end":{"line":554,"column":5}},"174":{"start":{"line":522,"column":6},"end":{"line":541,"column":9}},"175":{"start":{"line":524,"column":8},"end":{"line":524,"column":48}},"176":{"start":{"line":525,"column":8},"end":{"line":525,"column":55}},"177":{"start":{"line":528,"column":8},"end":{"line":528,"column":87}},"178":{"start":{"line":528,"column":50},"end":{"line":528,"column":87}},"179":{"start":{"line":529,"column":8},"end":{"line":529,"column":90}},"180":{"start":{"line":529,"column":51},"end":{"line":529,"column":90}},"181":{"start":{"line":533,"column":8},"end":{"line":539,"column":11}},"182":{"start":{"line":546,"column":6},"end":{"line":552,"column":9}},"183":{"start":{"line":557,"column":4},"end":{"line":560,"column":5}},"184":{"start":{"line":558,"column":6},"end":{"line":558,"column":27}},"185":{"start":{"line":559,"column":6},"end":{"line":559,"column":20}},"186":{"start":{"line":562,"column":4},"end":{"line":567,"column":7}},"187":{"start":{"line":570,"column":4},"end":{"line":570,"column":25}},"188":{"start":{"line":572,"column":4},"end":{"line":572,"column":11}},"189":{"start":{"line":574,"column":4},"end":{"line":574,"column":18}},"190":{"start":{"line":589,"column":0},"end":{"line":622,"column":2}},"191":{"start":{"line":591,"column":2},"end":{"line":591,"column":18}},"192":{"start":{"line":592,"column":2},"end":{"line":592,"column":31}},"193":{"start":{"line":593,"column":2},"end":{"line":593,"column":12}},"194":{"start":{"line":595,"column":2},"end":{"line":595,"column":54}},"195":{"start":{"line":595,"column":34},"end":{"line":595,"column":54}},"196":{"start":{"line":599,"column":2},"end":{"line":620,"column":9}},"197":{"start":{"line":600,"column":4},"end":{"line":619,"column":7}},"198":{"start":{"line":601,"column":6},"end":{"line":601,"column":32}},"199":{"start":{"line":601,"column":15},"end":{"line":601,"column":32}},"200":{"start":{"line":605,"column":6},"end":{"line":607,"column":7}},"201":{"start":{"line":606,"column":8},"end":{"line":606,"column":65}},"202":{"start":{"line":610,"column":6},"end":{"line":610,"column":68}},"203":{"start":{"line":611,"column":6},"end":{"line":611,"column":77}},"204":{"start":{"line":614,"column":6},"end":{"line":614,"column":54}},"205":{"start":{"line":615,"column":6},"end":{"line":615,"column":74}},"206":{"start":{"line":617,"column":6},"end":{"line":617,"column":10}},"207":{"start":{"line":618,"column":6},"end":{"line":618,"column":13}},"208":{"start":{"line":636,"column":0},"end":{"line":704,"column":2}},"209":{"start":{"line":637,"column":2},"end":{"line":637,"column":18}},"210":{"start":{"line":643,"column":2},"end":{"line":648,"column":3}},"211":{"start":{"line":644,"column":4},"end":{"line":647,"column":7}},"212":{"start":{"line":645,"column":6},"end":{"line":645,"column":30}},"213":{"start":{"line":645,"column":15},"end":{"line":645,"column":30}},"214":{"start":{"line":646,"column":6},"end":{"line":646,"column":23}},"215":{"start":{"line":652,"column":2},"end":{"line":652,"column":19}},"216":{"start":{"line":655,"column":2},"end":{"line":655,"column":45}},"217":{"start":{"line":658,"column":2},"end":{"line":660,"column":5}},"218":{"start":{"line":659,"column":4},"end":{"line":659,"column":45}},"219":{"start":{"line":662,"column":2},"end":{"line":662,"column":20}},"220":{"start":{"line":663,"column":2},"end":{"line":663,"column":40}},"221":{"start":{"line":666,"column":2},"end":{"line":680,"column":3}},"222":{"start":{"line":667,"column":4},"end":{"line":667,"column":54}},"223":{"start":{"line":670,"column":4},"end":{"line":676,"column":5}},"224":{"start":{"line":671,"column":6},"end":{"line":675,"column":7}},"225":{"start":{"line":672,"column":8},"end":{"line":672,"column":34}},"226":{"start":{"line":674,"column":8},"end":{"line":674,"column":42}},"227":{"start":{"line":678,"column":4},"end":{"line":678,"column":29}},"228":{"start":{"line":679,"column":4},"end":{"line":679,"column":48}},"229":{"start":{"line":682,"column":2},"end":{"line":682,"column":53}},"230":{"start":{"line":685,"column":2},"end":{"line":685,"column":59}},"231":{"start":{"line":686,"column":2},"end":{"line":686,"column":35}},"232":{"start":{"line":688,"column":2},"end":{"line":703,"column":5}},"233":{"start":{"line":689,"column":4},"end":{"line":689,"column":28}},"234":{"start":{"line":689,"column":13},"end":{"line":689,"column":28}},"235":{"start":{"line":692,"column":4},"end":{"line":696,"column":7}},"236":{"start":{"line":693,"column":6},"end":{"line":695,"column":9}},"237":{"start":{"line":694,"column":8},"end":{"line":694,"column":104}},"238":{"start":{"line":694,"column":65},"end":{"line":694,"column":104}},"239":{"start":{"line":699,"column":4},"end":{"line":699,"column":53}},"240":{"start":{"line":700,"column":4},"end":{"line":700,"column":74}},"241":{"start":{"line":702,"column":4},"end":{"line":702,"column":21}},"242":{"start":{"line":714,"column":0},"end":{"line":726,"column":2}},"243":{"start":{"line":715,"column":2},"end":{"line":715,"column":9}},"244":{"start":{"line":717,"column":2},"end":{"line":723,"column":3}},"245":{"start":{"line":718,"column":4},"end":{"line":718,"column":89}},"246":{"start":{"line":719,"column":4},"end":{"line":722,"column":5}},"247":{"start":{"line":720,"column":6},"end":{"line":720,"column":40}},"248":{"start":{"line":721,"column":6},"end":{"line":721,"column":12}},"249":{"start":{"line":725,"column":2},"end":{"line":725,"column":20}}},"branchMap":{"1":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"2":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"3":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":16}},{"start":{"line":78,"column":20},"end":{"line":78,"column":36}}]},"4":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":6}},{"start":{"line":82,"column":6},"end":{"line":82,"column":6}}]},"5":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"6":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"7":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"8":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":8},"end":{"line":187,"column":39}},{"start":{"line":187,"column":43},"end":{"line":187,"column":76}}]},"9":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":6},"end":{"line":211,"column":6}},{"start":{"line":211,"column":6},"end":{"line":211,"column":6}}]},"10":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":8},"end":{"line":219,"column":8}},{"start":{"line":219,"column":8},"end":{"line":219,"column":8}}]},"11":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":6},"end":{"line":224,"column":6}},{"start":{"line":224,"column":6},"end":{"line":224,"column":6}}]},"12":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]},"13":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":6},"end":{"line":261,"column":6}},{"start":{"line":261,"column":6},"end":{"line":261,"column":6}}]},"14":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":4},"end":{"line":266,"column":4}},{"start":{"line":266,"column":4},"end":{"line":266,"column":4}}]},"15":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":2},"end":{"line":288,"column":2}},{"start":{"line":288,"column":2},"end":{"line":288,"column":2}}]},"16":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":6},"end":{"line":288,"column":31}},{"start":{"line":288,"column":35},"end":{"line":288,"column":50}}]},"17":{"line":335,"type":"binary-expr","locations":[{"start":{"line":335,"column":36},"end":{"line":335,"column":63}},{"start":{"line":335,"column":67},"end":{"line":335,"column":97}}]},"18":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":4},"end":{"line":344,"column":4}},{"start":{"line":344,"column":4},"end":{"line":344,"column":4}}]},"19":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":2},"end":{"line":403,"column":2}},{"start":{"line":403,"column":2},"end":{"line":403,"column":2}}]},"20":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":4},"end":{"line":433,"column":4}},{"start":{"line":433,"column":4},"end":{"line":433,"column":4}}]},"21":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":6},"end":{"line":474,"column":6}},{"start":{"line":474,"column":6},"end":{"line":474,"column":6}}]},"22":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":6},"end":{"line":475,"column":6}},{"start":{"line":475,"column":6},"end":{"line":475,"column":6}}]},"23":{"line":475,"type":"binary-expr","locations":[{"start":{"line":475,"column":10},"end":{"line":475,"column":46}},{"start":{"line":475,"column":50},"end":{"line":475,"column":98}}]},"24":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":4},"end":{"line":481,"column":4}},{"start":{"line":481,"column":4},"end":{"line":481,"column":4}}]},"25":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":4},"end":{"line":490,"column":4}},{"start":{"line":490,"column":4},"end":{"line":490,"column":4}}]},"26":{"line":496,"type":"if","locations":[{"start":{"line":496,"column":6},"end":{"line":496,"column":6}},{"start":{"line":496,"column":6},"end":{"line":496,"column":6}}]},"27":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":8},"end":{"line":497,"column":8}},{"start":{"line":497,"column":8},"end":{"line":497,"column":8}}]},"28":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":10},"end":{"line":502,"column":10}},{"start":{"line":502,"column":10},"end":{"line":502,"column":10}}]},"29":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":4},"end":{"line":521,"column":4}},{"start":{"line":521,"column":4},"end":{"line":521,"column":4}}]},"30":{"line":521,"type":"binary-expr","locations":[{"start":{"line":521,"column":8},"end":{"line":521,"column":44}},{"start":{"line":521,"column":48},"end":{"line":521,"column":85}}]},"31":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":8},"end":{"line":528,"column":8}},{"start":{"line":528,"column":8},"end":{"line":528,"column":8}}]},"32":{"line":529,"type":"if","locations":[{"start":{"line":529,"column":8},"end":{"line":529,"column":8}},{"start":{"line":529,"column":8},"end":{"line":529,"column":8}}]},"33":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":4},"end":{"line":557,"column":4}},{"start":{"line":557,"column":4},"end":{"line":557,"column":4}}]},"34":{"line":595,"type":"if","locations":[{"start":{"line":595,"column":2},"end":{"line":595,"column":2}},{"start":{"line":595,"column":2},"end":{"line":595,"column":2}}]},"35":{"line":595,"type":"binary-expr","locations":[{"start":{"line":595,"column":6},"end":{"line":595,"column":11}},{"start":{"line":595,"column":15},"end":{"line":595,"column":32}}]},"36":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":6},"end":{"line":601,"column":6}},{"start":{"line":601,"column":6},"end":{"line":601,"column":6}}]},"37":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":6},"end":{"line":605,"column":6}},{"start":{"line":605,"column":6},"end":{"line":605,"column":6}}]},"38":{"line":605,"type":"binary-expr","locations":[{"start":{"line":605,"column":10},"end":{"line":605,"column":25}},{"start":{"line":605,"column":29},"end":{"line":605,"column":36}}]},"39":{"line":610,"type":"binary-expr","locations":[{"start":{"line":610,"column":35},"end":{"line":610,"column":61}},{"start":{"line":610,"column":65},"end":{"line":610,"column":67}}]},"40":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":2},"end":{"line":643,"column":2}},{"start":{"line":643,"column":2},"end":{"line":643,"column":2}}]},"41":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":6},"end":{"line":645,"column":6}},{"start":{"line":645,"column":6},"end":{"line":645,"column":6}}]},"42":{"line":666,"type":"if","locations":[{"start":{"line":666,"column":2},"end":{"line":666,"column":2}},{"start":{"line":666,"column":2},"end":{"line":666,"column":2}}]},"43":{"line":670,"type":"if","locations":[{"start":{"line":670,"column":4},"end":{"line":670,"column":4}},{"start":{"line":670,"column":4},"end":{"line":670,"column":4}}]},"44":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":6},"end":{"line":671,"column":6}},{"start":{"line":671,"column":6},"end":{"line":671,"column":6}}]},"45":{"line":689,"type":"if","locations":[{"start":{"line":689,"column":4},"end":{"line":689,"column":4}},{"start":{"line":689,"column":4},"end":{"line":689,"column":4}}]},"46":{"line":694,"type":"if","locations":[{"start":{"line":694,"column":8},"end":{"line":694,"column":8}},{"start":{"line":694,"column":8},"end":{"line":694,"column":8}}]},"47":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":4},"end":{"line":719,"column":4}},{"start":{"line":719,"column":4},"end":{"line":719,"column":4}}]},"48":{"line":719,"type":"binary-expr","locations":[{"start":{"line":719,"column":8},"end":{"line":719,"column":42}},{"start":{"line":719,"column":46},"end":{"line":719,"column":61}}]},"49":{"line":720,"type":"binary-expr","locations":[{"start":{"line":720,"column":11},"end":{"line":720,"column":26}},{"start":{"line":720,"column":30},"end":{"line":720,"column":39}}]},"50":{"line":725,"type":"binary-expr","locations":[{"start":{"line":725,"column":9},"end":{"line":725,"column":11}},{"start":{"line":725,"column":15},"end":{"line":725,"column":19}}]}},"code":["","/**"," * Module Dependencies"," */","","var _ = require('lodash');","var async = require('async');","var utils = require('../../utils/helpers');","var normalize = require('../../utils/normalize');","var hasOwnProperty = utils.object.hasOwnProperty;","","/**"," * Builds up a set of operations to perform based on search criteria."," *"," * This allows the ability to do cross-adapter joins as well as fake joins"," * on adapters that haven't implemented the join interface yet."," */","","var Operations = module.exports = function(context, criteria, parent) {","","  // Build up a cache","  this.cache = {};","","  // Set context","  this.context = context;","","  // Set criteria","  this.criteria = criteria;","","  // Set parent","  this.parent = parent;","","  // Hold a default value for pre-combined results (native joins)","  this.preCombined = false;","","  // Seed the Cache","  this._seedCache();","","  // Build Up Operations","  this.operations = this._buildOperations();","","  return this;","};","","","/*"," ***********************************************************************************"," * PUBLIC METHODS"," ***********************************************************************************/","","","/**"," * Run Operations"," *"," * Execute a set of generated operations returning an array of results that can"," * joined in-memory to build out a valid results set."," *"," * @param {Function} cb"," * @api public"," */","","Operations.prototype.run = function run(cb) {","","  var self = this;","","  // Grab the parent operation, it will always be the very first operation","  var parentOp = this.operations.shift();","","  // Run The Parent Operation","  this._runOperation(parentOp.collection, parentOp.method, parentOp.criteria, function(err, results) {","","    if (err) return cb(err);","","    // Set the cache values","    self.cache[parentOp.collection] = results;","","    // If results are empty, or we're already combined, nothing else to so do return","    if (!results || self.preCombined) return cb(null, { combined: true, cache: self.cache });","","    // Run child operations and populate the cache","    self._execChildOpts(results, function(err) {","      if (err) return cb(err);","      cb(null, { combined: self.preCombined, cache: self.cache });","    });","","  });","","};","","","/*"," ***********************************************************************************"," * PRIVATE METHODS"," ***********************************************************************************/","","","/**"," * Seed Cache with empty values."," *"," * For each Waterline Collection set an empty array of values into the cache."," *"," * @api private"," */","","Operations.prototype._seedCache = function _seedCache() {","  var self = this;","","  // Fill the cache with empty values for each collection","  Object.keys(this.context.waterline.schema).forEach(function(key) {","    self.cache[key] = [];","  });","};","","/**"," * Build up the operations needed to perform the query based on criteria."," *"," * @return {Array}"," * @api private"," */","","Operations.prototype._buildOperations = function _buildOperations() {","","  var self = this;","  var operations = [];","","  // Check if joins were used, if not only a single operation is needed on a single connection","  if (!hasOwnProperty(this.criteria, 'joins')) {","","    // Grab the collection","    var collection = this.context.waterline.collections[this.context.identity];","","    // Find the name of the connection to run the query on using the dictionary","    var connectionName = collection.adapterDictionary[this.parent];","    if (!connectionName) connectionName = collection.adapterDictionary.find;","","    operations.push({","      connection: connectionName,","      collection: this.context.identity,","      method: this.parent,","      criteria: this.criteria","    });","","    return operations;","  }","","  // Joins were used in this operation. Lets grab the connections needed for these queries. It may","  // only be a single connection in a simple case or it could be multiple connections in some cases.","  var connections = this._getConnections();","","  // Now that all the connections are created, build up operations needed to accomplish the end","  // goal of getting all the results no matter which connection they are on. To do this,","  // figure out if a connection supports joins and if so pass down a criteria object containing","  // join instructions. If joins are not supported by a connection, build a series of operations","  // to achieve the end result.","  operations = this._stageOperations(connections);","","  return operations;","};","","/**"," * Stage Operation Sets"," *"," * @param {Object} connections"," * @api private"," */","","Operations.prototype._stageOperations = function _stageOperations(connections) {","","  var self = this;","  var operations = [];","","  // Build the parent operation and set it as the first operation in the array","  operations = operations.concat(this._createParentOperation(connections));","","  // Parent Connection Name","  var parentConnection = this.context.adapterDictionary[this.parent];","","  // Parent Operation","  var parentOperation = operations[0];","","  // For each additional connection build operations","  Object.keys(connections).forEach(function(connection) {","","    // Ignore the connection used for the parent operation if a join can be used on it.","    // This means all of the operations for the query can take place on a single connection","    // using a single query.","    if (connection === parentConnection && parentOperation.method === 'join') return;","","    // Operations are needed that will be run after the parent operation has been completed.","    // If there are more than a single join, set the parent join and build up children operations.","    // This occurs in a many-to-many relationship when a join table is needed.","","    // Criteria is omitted until after the parent operation has been run so that an IN query can","    // be formed on child operations.","","    var localOpts = [];","","    connections[connection].joins.forEach(function(join, idx) {","","      var optCollection = self.context.waterline.collections[join.child];","      var optConnectionName = optCollection.adapterDictionary['find'];","","      var operation = {","        connection: optConnectionName,","        collection: join.child,","        method: 'find',","        join: join","      };","","      // If this is the first join, it can't have any parents","      if (idx === 0) {","        localOpts.push(operation);","        return;","      }","","      // Look into the previous operations and see if this is a child of any of them","      var child = false;","      localOpts.forEach(function(localOpt) {","        if (localOpt.join.child != join.parent) return;","        localOpt.child = operation;","        child = true;","      });","","      if (child) return;","      localOpts.push(operation);","    });","","    operations = operations.concat(localOpts);","  });","","  return operations;","};","","/**"," * Create The Parent Operation"," *"," * @param {Object} connections"," * @return {Object}"," * @api private"," */","","Operations.prototype._createParentOperation = function _createParentOperation(connections) {","","  var nativeJoin = this.context.adapter.hasJoin();","  var operation,","      connectionName,","      connection;","","  // If the parent supports native joins, check if all the joins on the connection can be","  // run on the same connection and if so just send the entire criteria down to the connection.","  if (nativeJoin) {","","    connectionName = this.context.adapterDictionary.join;","    connection = connections[connectionName];","","    // Hold any joins that can't be run natively on this connection","    var unsupportedJoins = false;","","    // Pull out any unsupported joins","    connection.joins.forEach(function(join) {","      if (connection.collections.indexOf(join.child) > -1) return;","      unsupportedJoins = true;","    });","","    // If all the joins were supported then go ahead and build an operation.","    if (!unsupportedJoins) {","      operation = [{","        connection: connectionName,","        collection: this.context.identity,","        method: 'join',","        criteria: this.criteria","      }];","","      // Set the preCombined flag","      this.preCombined = true;","","      return operation;","    }","  }","","  // Remove the joins from the criteria object, this will be an in-memory join","  var tmpCriteria = _.cloneDeep(this.criteria);","  delete tmpCriteria.joins;","","  connectionName = this.context.adapterDictionary[this.parent];","","  // If findOne was used, use the same connection `find` is on.","  if (this.parent === 'findOne' && !connectionName) {","    connectionName = this.context.adapterDictionary.find;","  }","","  connection = connections[connectionName];","","  operation = [{","    connection: connectionName,","    collection: this.context.identity,","    method: this.parent,","    criteria: tmpCriteria","  }];","","  return operation;","};","","","/**"," * Get the connections used in this query and the join logic for each piece."," *"," * @return {Object}"," * @api private"," */","","Operations.prototype._getConnections = function _getConnections() {","","  var self = this;","  var connections = {};","","  // Default structure for connection objects","  var defaultConnection = {","    collections: [],","    children: [],","    joins: []","  };","","  // For each join build a connection item to build up an entire collection/connection registry","  // for this query. Using this, queries should be able to be seperated into discrete queries","  // which can be run on connections in parallel.","  this.criteria.joins.forEach(function(join) {","    var connection;","    var parentConnection;","    var childConnection;","","    function getConnection(collName) {","      var collection = self.context.waterline.collections[collName];","      var connectionName = collection.adapterDictionary['find'];","      connections[connectionName] = connections[connectionName] || _.cloneDeep(defaultConnection);","      return connections[connectionName];","    }","","    // If this join is a junctionTable, find the parent operation and add it to that connections","    // children instead of creating a new operation on another connection. This allows cross-connection","    // many-to-many joins to be used where the join relies on the results of the parent operation","    // being run first.","","    if (join.junctionTable) {","","      // Find the previous join","      var parentJoin = _.find(self.criteria.joins, function(otherJoin) {","        return otherJoin.child == join.parent;","      });","","      // Grab the parent join connection","      var parentJoinConnection = getConnection(parentJoin.parent);","","      // Find the connection the parent and child collections belongs to","      parentConnection = getConnection(join.parent);","      childConnection = getConnection(join.child);","","      // Update the registry","      parentConnection.collections.push(join.parent);","      childConnection.collections.push(join.child);","      parentConnection.children.push(join.parent);","","      // Ensure the arrays are made up only of unique values","      parentConnection.collections = _.uniq(parentConnection.collections);","      childConnection.collections = _.uniq(childConnection.collections);","      parentConnection.children = _.uniq(parentConnection.children);","","      // Add the join to the correct joins array. We want it to be on the same","      // connection as the operation before so the timing is correct.","      parentJoinConnection.joins = parentJoinConnection.joins.concat(join);","","    // Build up the connection registry like normal","    } else {","      parentConnection = getConnection(join.parent);","      childConnection = getConnection(join.child);","","      parentConnection.collections.push(join.parent);","      childConnection.collections.push(join.child);","      parentConnection.joins = parentConnection.joins.concat(join);","    }","","  });","  return connections;","};","","","/**"," * Run An Operation"," *"," * Performs an operation and runs a supplied callback."," *"," * @param {Object} collectionName"," * @param {String} method"," * @param {Object} criteria"," * @param {Function} cb"," *"," * @api private"," */","","Operations.prototype._runOperation = function _runOperation(collectionName, method, criteria, cb) {","","  // Ensure the collection exist","  if (!hasOwnProperty(this.context.waterline.collections, collectionName)) {","    return cb(new Error('Invalid Collection specfied in operation.'));","  }","","  // Find the connection object to run the operation","  var collection = this.context.waterline.collections[collectionName];","","  // Run the operation","  collection.adapter[method](criteria, cb);","","};","","/**"," * Execute Child Operations"," *"," * If joins are used and an adapter doesn't support them, there will be child operations that will"," * need to be run. Parse each child operation and run them along with any tree joins and return"," * an array of children results that can be combined with the parent results."," *"," * @param {Array} parentResults"," * @param {Function} cb"," */","","Operations.prototype._execChildOpts = function _execChildOpts(parentResults, cb) {","","  var self = this;","","  // Build up a set of child operations that will need to be run","  // based on the results returned from the parent operation.","  this._buildChildOpts(parentResults, function(err, opts) {","    if (err) return cb(err);","","    // Run the generated operations in parallel","    async.each(opts, function(item, next) {","      self._collectChildResults(item, next);","    }, cb);","  });","","};","","/**"," * Build Child Operations"," *"," * Using the results of a parent operation, build up a set of operations that contain criteria"," * based on what is returned from a parent operation. These can be arrays containing more than"," * one operation for each child, which will happen when \"join tables\" would be used."," *"," * Each set should be able to be run in parallel."," *"," * @param {Array} parentResults"," * @param {Function} cb"," * @return {Array}"," * @api private"," */","","Operations.prototype._buildChildOpts = function _buildChildOpts(parentResults, cb) {","","  var self = this;","  var opts = [];","","  // Build up operations that can be run in parallel using the results of the parent operation","  async.each(this.operations, function(item, next) {","","    var localOpts = [];","    var parents = [];","    var idx = 0;","","    // Go through all the parent records and build up an array of keys to look in. This","    // will be used in an IN query to grab all the records needed for the \"join\".","    parentResults.forEach(function(result) {","","      if (!hasOwnProperty(result, item.join.parentKey)) return;","      if (result[item.join.parentKey] === null || typeof result[item.join.parentKey] === undefined) return;","      parents.push(result[item.join.parentKey]);","","    });","","    // If no parents match the join criteria, don't build up an operation","    if (parents.length === 0) return next();","","    // Build up criteria that will be used inside an IN query","    var criteria = {};","    criteria[item.join.childKey] = parents;","","    var _tmpCriteria = {};","","    // Check if the join contains any criteria","    if (item.join.criteria) {","      var userCriteria = _.cloneDeep(item.join.criteria);","      _tmpCriteria = _.cloneDeep(userCriteria);","      _tmpCriteria = normalize.criteria(_tmpCriteria);","","      // Ensure `where` criteria is properly formatted","      if (hasOwnProperty(userCriteria, 'where')) {","        if (userCriteria.where === undefined) {","          delete userCriteria.where;","        } else {","","          // If an array of primary keys was passed in, normalize the criteria","          if (Array.isArray(userCriteria.where)) {","            var pk = self.context.waterline.collections[item.join.child].primaryKey;","            var obj = {};","            obj[pk] = _.clone(userCriteria.where);","            userCriteria.where = obj;","          }","","          userCriteria = userCriteria.where;","        }","      }","","","      criteria = _.merge(userCriteria, criteria);","    }","","    // Normalize criteria","    criteria = normalize.criteria(criteria);","","    // If criteria contains a skip or limit option, an operation will be needed for each parent.","    if (hasOwnProperty(_tmpCriteria, 'skip') || hasOwnProperty(_tmpCriteria, 'limit')) {","      parents.forEach(function(parent) {","","        var tmpCriteria = _.cloneDeep(criteria);","        tmpCriteria.where[item.join.childKey] = parent;","","        // Mixin the user defined skip and limit","        if (hasOwnProperty(_tmpCriteria, 'skip')) tmpCriteria.skip = _tmpCriteria.skip;","        if (hasOwnProperty(_tmpCriteria, 'limit')) tmpCriteria.limit = _tmpCriteria.limit;","","        // Build a simple operation to run with criteria from the parent results.","        // Give it an ID so that children operations can reference it if needed.","        localOpts.push({","          id: idx,","          collection: item.collection,","          method: item.method,","          criteria: tmpCriteria,","          join: item.join","        });","","      });","    } else {","","      // Build a simple operation to run with criteria from the parent results.","      // Give it an ID so that children operations can reference it if needed.","      localOpts.push({","        id: idx,","        collection: item.collection,","        method: item.method,","        criteria: criteria,","        join: item.join","      });","","    }","","    // If there are child records, add the opt but don't add the criteria","    if (!item.child) {","      opts.push(localOpts);","      return next();","    }","","    localOpts.push({","      collection: item.child.collection,","      method: item.child.method,","      parent: idx,","      join: item.child.join","    });","","    // Add the local opt to the opts array","    opts.push(localOpts);","","    next();","  }, function(err) {","    cb(err, opts);","  });","};","","/**"," * Collect Child Operation Results"," *"," * Run a set of child operations and return the results in a namespaced array"," * that can later be used to do an in-memory join."," *"," * @param {Array} opts"," * @param {Function} cb"," * @api private"," */","","Operations.prototype._collectChildResults = function _collectChildResults(opts, cb) {","","  var self = this;","  var intermediateResults = [];","  var i = 0;","","  if (!opts || opts.length === 0) return cb(null, {});","","  // Run the operations and any child operations in series so that each can access the","  // results of the previous operation.","  async.eachSeries(opts, function(opt, next) {","    self._runChildOperations(intermediateResults, opt, function(err, values) {","      if (err) return next(err);","","      // If there are multiple operations and we are on the first one lets put the results","      // into an intermediate results array","      if (opts.length > 1 && i === 0) {","        intermediateResults = intermediateResults.concat(values);","      }","","      // Add values to the cache key","      self.cache[opt.collection] = self.cache[opt.collection] || [];","      self.cache[opt.collection] = self.cache[opt.collection].concat(values);","","      // Ensure the values are unique","      var pk = self._findCollectionPK(opt.collection);","      self.cache[opt.collection] = _.uniq(self.cache[opt.collection], pk);","","      i++;","      next();","    });","  }, cb);","","};","","/**"," * Run A Child Operation"," *"," * Executes a child operation and appends the results as a namespaced object to the"," * main operation results object."," *"," * @param {Object} optResults"," * @param {Object} opt"," * @param {Function} callback"," * @api private"," */","","Operations.prototype._runChildOperations = function _runChildOperations(intermediateResults, opt, cb) {","  var self = this;","","  // Check if value has a parent, if so a join table was used and we need to build up dictionary","  // values that can be used to join the parent and the children together.","","  // If the operation doesn't have a parent operation run it","  if (!hasOwnProperty(opt, 'parent')) {","    return self._runOperation(opt.collection, opt.method, opt.criteria, function(err, values) {","      if (err) return cb(err);","      cb(null, values);","    });","  }","","  // If the operation has a parent, look into the optResults and build up a criteria","  // object using the results of a previous operation","  var parents = [];","","  // Normalize to array","  var res = _.cloneDeep(intermediateResults);","","  // Build criteria that can be used with an `in` query","  res.forEach(function(result) {","    parents.push(result[opt.join.parentKey]);","  });","","  var criteria = {};","  criteria[opt.join.childKey] = parents;","","  // Check if the join contains any criteria","  if (opt.join.criteria) {","    var userCriteria = _.cloneDeep(opt.join.criteria);","","    // Ensure `where` criteria is properly formatted","    if (hasOwnProperty(userCriteria, 'where')) {","      if (userCriteria.where === undefined) {","        delete userCriteria.where;","      } else {","        userCriteria = userCriteria.where;","      }","    }","","    delete userCriteria.sort;","    criteria = _.extend(criteria, userCriteria);","  }","","  criteria = normalize.criteria({ where: criteria });","","  // Empty the cache for the join table so we can only add values used","  var cacheCopy = _.cloneDeep(self.cache[opt.join.parent]);","  self.cache[opt.join.parent] = [];","","  self._runOperation(opt.collection, opt.method, criteria, function(err, values) {","    if (err) return cb(err);","","    // Build up the new join table result","    values.forEach(function(val) {","      cacheCopy.forEach(function(copy) {","        if (copy[opt.join.parentKey] === val[opt.join.childKey]) self.cache[opt.join.parent].push(copy);","      });","    });","","    // Ensure the values are unique","    var pk = self._findCollectionPK(opt.join.parent);","    self.cache[opt.join.parent] = _.uniq(self.cache[opt.join.parent], pk);","","    cb(null, values);","  });","};","","/**"," * Find A Collection's Primary Key"," *"," * @param {String} collectionName"," * @api private"," * @return {String}"," */","","Operations.prototype._findCollectionPK = function _findCollectionPK(collectionName) {","  var pk;","","  for (var attribute in this.context.waterline.collections[collectionName]._attributes) {","    var attr = this.context.waterline.collections[collectionName]._attributes[attribute];","    if (hasOwnProperty(attr, 'primaryKey') && attr.primaryKey) {","      pk = attr.columnName || attribute;","      break;","    }","  }","","  return pk || null;","};",""],"l":{"6":1,"7":1,"8":1,"9":1,"10":1,"19":1,"22":0,"25":0,"28":0,"31":0,"34":0,"37":0,"40":0,"42":0,"62":1,"64":0,"67":0,"70":0,"72":0,"75":0,"78":0,"81":0,"82":0,"83":0,"105":1,"106":0,"109":0,"110":0,"121":1,"123":0,"124":0,"127":0,"130":0,"133":0,"134":0,"136":0,"143":0,"148":0,"155":0,"157":0,"167":1,"169":0,"170":0,"173":0,"176":0,"179":0,"182":0,"187":0,"196":0,"198":0,"200":0,"201":0,"203":0,"211":0,"212":0,"213":0,"217":0,"218":0,"219":0,"220":0,"221":0,"224":0,"225":0,"228":0,"231":0,"242":1,"244":0,"245":0,"251":0,"253":0,"254":0,"257":0,"260":0,"261":0,"262":0,"266":0,"267":0,"275":0,"277":0,"282":0,"283":0,"285":0,"288":0,"289":0,"292":0,"294":0,"301":0,"312":1,"314":0,"315":0,"318":0,"327":0,"328":0,"329":0,"330":0,"332":1,"333":0,"334":0,"335":0,"336":0,"344":0,"347":0,"348":0,"352":0,"355":0,"356":0,"359":0,"360":0,"361":0,"364":0,"365":0,"366":0,"370":0,"374":0,"375":0,"377":0,"378":0,"379":0,"383":0,"400":1,"403":0,"404":0,"408":0,"411":0,"426":1,"428":0,"432":0,"433":0,"436":0,"437":0,"458":1,"460":0,"461":0,"464":0,"466":0,"467":0,"468":0,"472":0,"474":0,"475":0,"476":0,"481":0,"484":0,"485":0,"487":0,"490":0,"491":0,"492":0,"493":0,"496":0,"497":0,"498":0,"502":0,"503":0,"504":0,"505":0,"506":0,"509":0,"514":0,"518":0,"521":0,"522":0,"524":0,"525":0,"528":0,"529":0,"533":0,"546":0,"557":0,"558":0,"559":0,"562":0,"570":0,"572":0,"574":0,"589":1,"591":0,"592":0,"593":0,"595":0,"599":0,"600":0,"601":0,"605":0,"606":0,"610":0,"611":0,"614":0,"615":0,"617":0,"618":0,"636":1,"637":0,"643":0,"644":0,"645":0,"646":0,"652":0,"655":0,"658":0,"659":0,"662":0,"663":0,"666":0,"667":0,"670":0,"671":0,"672":0,"674":0,"678":0,"679":0,"682":0,"685":0,"686":0,"688":0,"689":0,"692":0,"693":0,"694":0,"699":0,"700":0,"702":0,"714":1,"715":0,"717":0,"718":0,"719":0,"720":0,"721":0,"725":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/integrator/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/integrator/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"integrate","line":35,"loc":{"start":{"line":35,"column":17},"end":{"line":35,"column":77}}},"2":{"name":"eachAssociation","line":64,"loc":{"start":{"line":64,"column":4},"end":{"line":64,"column":50}}},"3":{"name":"(anonymous_3)","line":191,"loc":{"start":{"line":191,"column":35},"end":{"line":191,"column":52}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":47}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"6":{"start":{"line":35,"column":0},"end":{"line":208,"column":2}},"7":{"start":{"line":38,"column":2},"end":{"line":38,"column":22}},"8":{"start":{"line":39,"column":2},"end":{"line":39,"column":60}},"9":{"start":{"line":40,"column":2},"end":{"line":40,"column":70}},"10":{"start":{"line":41,"column":2},"end":{"line":41,"column":74}},"11":{"start":{"line":42,"column":2},"end":{"line":42,"column":81}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":88}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":54}},"14":{"start":{"line":45,"column":2},"end":{"line":45,"column":48}},"15":{"start":{"line":46,"column":2},"end":{"line":46,"column":34}},"16":{"start":{"line":46,"column":15},"end":{"line":46,"column":34}},"17":{"start":{"line":50,"column":2},"end":{"line":50,"column":30}},"18":{"start":{"line":51,"column":2},"end":{"line":51,"column":36}},"19":{"start":{"line":56,"column":2},"end":{"line":56,"column":52}},"20":{"start":{"line":63,"column":2},"end":{"line":201,"column":4}},"21":{"start":{"line":66,"column":6},"end":{"line":66,"column":51}},"22":{"start":{"line":69,"column":6},"end":{"line":198,"column":7}},"23":{"start":{"line":73,"column":8},"end":{"line":73,"column":45}},"24":{"start":{"line":74,"column":8},"end":{"line":74,"column":46}},"25":{"start":{"line":75,"column":8},"end":{"line":75,"column":46}},"26":{"start":{"line":76,"column":8},"end":{"line":76,"column":43}},"27":{"start":{"line":104,"column":8},"end":{"line":126,"column":11}},"28":{"start":{"line":129,"column":13},"end":{"line":198,"column":7}},"29":{"start":{"line":133,"column":8},"end":{"line":133,"column":30}},"30":{"start":{"line":134,"column":8},"end":{"line":134,"column":30}},"31":{"start":{"line":135,"column":8},"end":{"line":135,"column":46}},"32":{"start":{"line":136,"column":8},"end":{"line":136,"column":43}},"33":{"start":{"line":140,"column":8},"end":{"line":147,"column":9}},"34":{"start":{"line":143,"column":10},"end":{"line":143,"column":52}},"35":{"start":{"line":167,"column":8},"end":{"line":183,"column":11}},"36":{"start":{"line":189,"column":8},"end":{"line":197,"column":9}},"37":{"start":{"line":191,"column":10},"end":{"line":195,"column":13}},"38":{"start":{"line":192,"column":12},"end":{"line":192,"column":62}},"39":{"start":{"line":193,"column":12},"end":{"line":193,"column":33}},"40":{"start":{"line":194,"column":12},"end":{"line":194,"column":26}},"41":{"start":{"line":206,"column":2},"end":{"line":206,"column":27}}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":19}},{"start":{"line":39,"column":23},"end":{"line":39,"column":59}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":19}},{"start":{"line":40,"column":23},"end":{"line":40,"column":69}}]},"3":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":19}},{"start":{"line":41,"column":23},"end":{"line":41,"column":73}}]},"4":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":19}},{"start":{"line":42,"column":23},"end":{"line":42,"column":80}}]},"5":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":19}},{"start":{"line":43,"column":23},"end":{"line":43,"column":87}}]},"6":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":19}},{"start":{"line":44,"column":23},"end":{"line":44,"column":53}}]},"7":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":19}},{"start":{"line":45,"column":23},"end":{"line":45,"column":47}}]},"8":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"9":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"10":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":13},"end":{"line":129,"column":13}},{"start":{"line":129,"column":13},"end":{"line":129,"column":13}}]},"11":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":140,"column":8}},{"start":{"line":140,"column":8},"end":{"line":140,"column":8}}]},"12":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":8},"end":{"line":189,"column":8}},{"start":{"line":189,"column":8},"end":{"line":189,"column":8}}]},"13":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":12},"end":{"line":189,"column":47}},{"start":{"line":189,"column":51},"end":{"line":189,"column":91}}]}},"code":["/**"," * Module dependencies"," */","var anchor = require('anchor');","var _ = require('lodash');","var leftOuterJoin = require('./leftOuterJoin');","var innerJoin = require('./innerJoin');","var populate = require('./populate');","","","/**"," * Query Integrator"," *"," * Combines the results from multiple child queries into"," * the final return format using an in-memory join."," * Final step in fulfilling a `.find()` with one or more"," * `populate(alias[n])` modifiers."," *"," *    > Why is this asynchronous?"," *    >"," *    > While this function isn't doing anything strictly"," *    > asynchronous, it still expects a callback to enable"," *    > future use of `process[setImmediate|nextTick]()` as"," *    > an optimization."," *"," * @param  {Object}   cache"," * @param  {Array}    joinInstructions      - see JOIN_INSTRUCTIONS.md"," * @callback  {Function} cb(err, results)"," *           @param {Error}"," *           @param {Array}  [results, complete w/ populations]"," *"," * @throws {Error} on invalid input"," * @asynchronous"," */","module.exports = function integrate(cache, joinInstructions, primaryKey, cb) {","","  // Ensure valid usage","  var invalid = false;","  invalid = invalid || anchor(cache).to({ type: 'object' });","  invalid = invalid || anchor(joinInstructions).to({ type: 'array' });","  invalid = invalid || anchor(joinInstructions[0]).to({ type: 'object' });","  invalid = invalid || anchor(joinInstructions[0].parent).to({ type: 'string' });","  invalid = invalid || anchor(cache[joinInstructions[0].parent]).to({ type: 'object' });","  invalid = invalid || typeof primaryKey !== 'string';","  invalid = invalid || typeof cb !== 'function';","  if (invalid) return cb(invalid);","","","  // Constant: String prepended to child attribute keys for use in namespacing.","  var CHILD_ATTR_PREFIX = '.';","  var GRANDCHILD_ATTR_PREFIX = '..';","","","  // We'll reuse the cached data from the `parent` table modifying it in-place","  // and returning it as our result set. (`results`)","  var results = cache[ joinInstructions[0].parent ];","","  // Group the joinInstructions array by alias, then interate over each one","  // s.t. `instructions` in our lambda function contains a list of join instructions","  // for the particular `populate` on the specified key (i.e. alias).","  //","  // Below, `results` are mutated inline.","  _.each(_.groupBy(joinInstructions, 'alias'),","    function eachAssociation(instructions, alias) {","","      var parentPK, fkToParent, fkToChild, childPK;","","      // N..N Association","      if (instructions.length === 2) {","","        // Name keys explicitly","        // (makes it easier to see what's going on)","        parentPK = instructions[0].parentKey;","        fkToParent = instructions[0].childKey;","        fkToChild = instructions[1].parentKey;","        childPK = instructions[1].childKey;","","        // console.log('\\n\\n------------:: n..m leftOuterJoin ::--------\\n',","        //   leftOuterJoin({","        //     left: cache[instructions[0].parent],","        //     right: cache[instructions[0].child],","        //     leftKey: parentPK,","        //     rightKey: fkToParent","        //   })","        // );","        // console.log('------------:: / ::--------\\n');","","        // console.log('\\n\\n------------:: n..m childRows ::--------\\n',innerJoin({","        //   left: leftOuterJoin({","        //     left: cache[instructions[0].parent],","        //     right: cache[instructions[0].child],","        //     leftKey: parentPK,","        //     rightKey: fkToParent","        //   }),","        //   right: cache[instructions[1].child],","        //   leftKey: CHILD_ATTR_PREFIX+fkToChild,","        //   rightKey: childPK,","        //   childNamespace: GRANDCHILD_ATTR_PREFIX","        // }));","        // console.log('------------:: / ::--------\\n');","","        // Calculate and sanitize join data,","        // then shove it into the parent results under `alias`","        populate({","          parentRows: results,","          alias: alias,","","          childRows: innerJoin({","            left: leftOuterJoin({","              left: cache[instructions[0].parent],","              right: cache[instructions[0].child],","              leftKey: parentPK,","              rightKey: fkToParent","            }),","            right: cache[instructions[1].child],","            leftKey: CHILD_ATTR_PREFIX + fkToChild,","            rightKey: childPK,","            childNamespace: GRANDCHILD_ATTR_PREFIX","          }),","","          parentPK: parentPK,   // e.g. `id` (of message)","          fkToChild: CHILD_ATTR_PREFIX + fkToChild, // e.g. `user_id` (of join table)","          childPK: GRANDCHILD_ATTR_PREFIX + childPK,      // e.g. `id` (of user)","","          childNamespace: GRANDCHILD_ATTR_PREFIX","        });","","      // 1 ..N Association","      } else if (instructions.length === 1) {","","        // Name keys explicitly","        // (makes it easier to see what's going on)","        parentPK = primaryKey;","        fkToParent = parentPK;","        fkToChild = instructions[0].parentKey;","        childPK = instructions[0].childKey;","","        // Determine if this is a \"hasOne\" or a \"belongsToMany\"","        // if the parent's primary key is the same as the fkToChild, it must be belongsToMany","        if (parentPK === fkToChild) {","          // In belongsToMany case, fkToChild needs prefix because it's actually the","          // console.log('belongsToMany');","          fkToChild = CHILD_ATTR_PREFIX + fkToChild;","        // \"hasOne\" case","        } else {","          // console.log('hasOne');","        }","","        // var childRows = innerJoin({","        //   left: cache[instructions[0].parent],","        //   right: cache[instructions[0].child],","        //   leftKey: instructions[0].parentKey,","        //   rightKey: instructions[0].childKey","        // });","","        // console.log('1..N JOIN--------------\\n',instructions,'\\n^^^^^^^^^^^^^^^^^^^^^^');","        // console.log('1..N KEYS--------------\\n',{","        //   parentPK: parentPK,","        //   fkToParent: fkToParent,","        //   fkToChild: fkToChild,","        //   childPK: childPK,","        // },'\\n^^^^^^^^^^^^^^^^^^^^^^');","        // console.log('1..N CHILD ROWS--------\\n',childRows);","","        // Calculate and sanitize join data,","        // then shove it into the parent results under `alias`","        populate({","          parentRows: results,","          alias: alias,","","          childRows: innerJoin({","            left: cache[instructions[0].parent],","            right: cache[instructions[0].child],","            leftKey: instructions[0].parentKey,","            rightKey: instructions[0].childKey","          }),","","          parentPK: fkToParent,  // e.g. `id` (of message)","          fkToChild: fkToChild,  // e.g. `from`","          childPK: childPK,      // e.g. `id` (of user)","","          childNamespace: CHILD_ATTR_PREFIX","        });","","        // If the alias isn't the same as the parent_key AND removeParentKey is set to true","        // in the instructions this means that we are turning a FK into an embedded record and a","        // columnName was used. We need to move the values attached to the alias property to","        // the parent key value. If we don't then when we run the transformer everything would get crazy.","        if (alias !== instructions[0].parentKey && instructions[0].removeParentKey === true) {","","          results = _.map(results, function(result) {","            result[instructions[0].parentKey] = result[alias];","            delete result[alias];","            return result;","          });","","        }","      }","","    }","  );","","","  // And call the callback","  // (the final joined data is in the cache -- also referenced by `results`)","  return cb(null, results);","","};",""],"l":{"4":1,"5":1,"6":1,"7":1,"8":1,"35":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"50":0,"51":0,"56":0,"63":0,"66":0,"69":0,"73":0,"74":0,"75":0,"76":0,"104":0,"129":0,"133":0,"134":0,"135":0,"136":0,"140":0,"143":0,"167":0,"189":0,"191":0,"192":0,"193":0,"194":0,"206":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/integrator/leftOuterJoin.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/integrator/leftOuterJoin.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"leftOuterJoin","line":23,"loc":{"start":{"line":23,"column":17},"end":{"line":23,"column":49}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":30}},"2":{"start":{"line":23,"column":0},"end":{"line":26,"column":2}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":25}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":23}}},"branchMap":{},"code":["/**"," * Module dependencies"," */","var join = require('./_join');","","","/**"," * Left outer join"," *"," * Return a result set with data from child and parent"," * merged on childKey===parentKey, where t.e. at least one"," * entry for each row of parent (unmatched columns in child are null)."," *"," * @option {Array} parent       [rows from the \"lefthand table\"]"," * @option {Array} child        [rows from the \"righthand table\"]"," * @option {String} parentKey   [primary key of the \"lefthand table\"]"," * @option {String} childKey    [foreign key from the \"righthand table\" to the \"lefthand table\"]"," * @return {Array}              [a new array of joined row data]"," *"," * @throws {Error} on invalid input"," * @synchronous"," */","module.exports = function leftOuterJoin(options) {","  options.outer = 'left';","  return join(options);","};",""],"l":{"4":1,"23":1,"24":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/integrator/_join.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/integrator/_join.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"_join","line":29,"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":41}}},"2":{"name":"eachParentRow","line":66,"loc":{"start":{"line":66,"column":43},"end":{"line":66,"column":83}}},"3":{"name":"eachChildRow","line":70,"loc":{"start":{"line":70,"column":45},"end":{"line":70,"column":95}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"4":{"start":{"line":29,"column":0},"end":{"line":105,"column":2}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":22}},"6":{"start":{"line":34,"column":2},"end":{"line":36,"column":5}},"7":{"start":{"line":39,"column":2},"end":{"line":45,"column":5}},"8":{"start":{"line":47,"column":2},"end":{"line":49,"column":5}},"9":{"start":{"line":50,"column":2},"end":{"line":52,"column":5}},"10":{"start":{"line":53,"column":2},"end":{"line":55,"column":5}},"11":{"start":{"line":56,"column":2},"end":{"line":58,"column":5}},"12":{"start":{"line":60,"column":2},"end":{"line":61,"column":57}},"13":{"start":{"line":63,"column":2},"end":{"line":63,"column":29}},"14":{"start":{"line":63,"column":15},"end":{"line":63,"column":29}},"15":{"start":{"line":66,"column":2},"end":{"line":100,"column":9}},"16":{"start":{"line":70,"column":4},"end":{"line":91,"column":14}},"17":{"start":{"line":72,"column":6},"end":{"line":78,"column":9}},"18":{"start":{"line":86,"column":6},"end":{"line":89,"column":7}},"19":{"start":{"line":87,"column":8},"end":{"line":87,"column":26}},"20":{"start":{"line":88,"column":8},"end":{"line":88,"column":20}},"21":{"start":{"line":90,"column":6},"end":{"line":90,"column":30}},"22":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"23":{"start":{"line":96,"column":6},"end":{"line":96,"column":40}},"24":{"start":{"line":99,"column":4},"end":{"line":99,"column":16}},"25":{"start":{"line":103,"column":2},"end":{"line":103,"column":19}}},"branchMap":{"1":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":12},"end":{"line":34,"column":19}},{"start":{"line":34,"column":23},"end":{"line":36,"column":4}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":20},"end":{"line":44,"column":42}},{"start":{"line":44,"column":46},"end":{"line":44,"column":49}}]},"3":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":19}},{"start":{"line":47,"column":23},"end":{"line":49,"column":4}}]},"4":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":19}},{"start":{"line":50,"column":23},"end":{"line":52,"column":4}}]},"5":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":19}},{"start":{"line":53,"column":23},"end":{"line":55,"column":4}}]},"6":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":19}},{"start":{"line":56,"column":23},"end":{"line":58,"column":4}}]},"7":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":19}},{"start":{"line":60,"column":24},"end":{"line":61,"column":55}}]},"8":{"line":60,"type":"cond-expr","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":47}},{"start":{"line":61,"column":50},"end":{"line":61,"column":55}}]},"9":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"10":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":6}},{"start":{"line":86,"column":6},"end":{"line":86,"column":6}}]},"11":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"12":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":19}},{"start":{"line":95,"column":23},"end":{"line":95,"column":47}}]}},"code":["/**"," * Module dependencies"," */","var anchor = require('anchor');","var _ = require('lodash');","var partialJoin = require('./_partialJoin');","","","/**"," * _join"," *"," * @api private"," *"," * Helper method- can perform and inner -OR- outer join."," *"," * @option {String|Boolean} outer    [whether to do an outer join, and if so the direction (\"left\"|\"right\")]"," * @option {Array} parent            [rows from the \"lefthand table\"]"," * @option {Array} child             [rows from the \"righthand table\"]"," * @option {String} parentKey        [primary key of the \"lefthand table\"]"," * @option {String} childKey         [foreign key from the \"righthand table\" to the \"lefthand table\"]"," * @option {String} childNamespace   [string prepended to child attribute keys (default='.')]"," *"," * @return {Array} new joined row data"," *"," * @throws {Error} on invalid input"," *"," * @synchronous"," */","module.exports = function _join(options) {","","","  // Usage","  var invalid = false;","  invalid = invalid || anchor(options).to({","    type: 'object'","  });","","  // Tolerate `right` and `left` usage","  _.defaults(options, {","    parent: options.left,","    child: options.right,","    parentKey: options.leftKey,","    childKey: options.rightKey,","    childNamespace: options.childNamespace || '.'","  });","","  invalid = invalid || anchor(options.parent).to({","    type: 'array'","  });","  invalid = invalid || anchor(options.child).to({","    type: 'array'","  });","  invalid = invalid || anchor(options.parentKey).to({","    type: 'string'","  });","  invalid = invalid || anchor(options.childKey).to({","    type: 'string'","  });","","  invalid = invalid || (options.outer === 'right' ?","    new Error('Right joins not supported yet.') : false);","","  if (invalid) throw invalid;","","","  var resultSet = _.reduce(options.parent, function eachParentRow(memo, parentRow) {","","    // For each childRow whose childKey matches","    // this parentRow's parentKey...","    var foundMatch = _.reduce(options.child, function eachChildRow(hasFoundMatchYet, childRow) {","","      var newRow = partialJoin({","        parentRow: parentRow,","        childRow: childRow,","        parentKey: options.parentKey,","        childKey: options.childKey,","        childNamespace: options.childNamespace","      });","","      // console.log('PARENT ROW: ', parentRow);","      // console.log('CHILD ROW: ', childRow);","      // console.log('JOIN ROW: ', newRow);","","      // Save the new row for the join result if it exists","      // and mark the match as found","      if (newRow) {","        memo.push(newRow);","        return true;","      }","      return hasFoundMatchYet;","    }, false);","","    // If this is a left outer join and we didn't find a match","    // for this parentRow, add it to the result set anyways","    if (!foundMatch && options.outer === 'left') {","      memo.push(_.cloneDeep(parentRow));","    }","","    return memo;","  }, []);","","  // console.log('JOIN RESULT SET::', resultSet);","  return resultSet;","","};",""],"l":{"4":1,"5":1,"6":1,"29":1,"33":0,"34":0,"39":0,"47":0,"50":0,"53":0,"56":0,"60":0,"63":0,"66":0,"70":0,"72":0,"86":0,"87":0,"88":0,"90":0,"95":0,"96":0,"99":0,"103":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/integrator/_partialJoin.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/integrator/_partialJoin.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"partialJoin","line":49,"loc":{"start":{"line":49,"column":17},"end":{"line":49,"column":47}}},"2":{"name":"(anonymous_2)","line":78,"loc":{"start":{"line":78,"column":21},"end":{"line":78,"column":42}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"3":{"start":{"line":49,"column":0},"end":{"line":90,"column":2}},"4":{"start":{"line":52,"column":2},"end":{"line":52,"column":22}},"5":{"start":{"line":53,"column":2},"end":{"line":53,"column":44}},"6":{"start":{"line":54,"column":2},"end":{"line":54,"column":54}},"7":{"start":{"line":55,"column":2},"end":{"line":55,"column":53}},"8":{"start":{"line":56,"column":2},"end":{"line":56,"column":54}},"9":{"start":{"line":57,"column":2},"end":{"line":57,"column":53}},"10":{"start":{"line":58,"column":2},"end":{"line":58,"column":19}},"11":{"start":{"line":60,"column":2},"end":{"line":60,"column":58}},"12":{"start":{"line":63,"column":2},"end":{"line":68,"column":3}},"13":{"start":{"line":67,"column":4},"end":{"line":67,"column":17}},"14":{"start":{"line":71,"column":2},"end":{"line":71,"column":49}},"15":{"start":{"line":77,"column":2},"end":{"line":77,"column":29}},"16":{"start":{"line":78,"column":2},"end":{"line":81,"column":5}},"17":{"start":{"line":79,"column":4},"end":{"line":79,"column":48}},"18":{"start":{"line":80,"column":4},"end":{"line":80,"column":45}},"19":{"start":{"line":85,"column":2},"end":{"line":85,"column":48}},"20":{"start":{"line":89,"column":2},"end":{"line":89,"column":27}}},"branchMap":{"1":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":12},"end":{"line":53,"column":19}},{"start":{"line":53,"column":23},"end":{"line":53,"column":43}}]},"2":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":19}},{"start":{"line":54,"column":23},"end":{"line":54,"column":53}}]},"3":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":19}},{"start":{"line":55,"column":23},"end":{"line":55,"column":52}}]},"4":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":19}},{"start":{"line":56,"column":23},"end":{"line":56,"column":53}}]},"5":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":19}},{"start":{"line":57,"column":23},"end":{"line":57,"column":52}}]},"6":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":27},"end":{"line":60,"column":49}},{"start":{"line":60,"column":53},"end":{"line":60,"column":56}}]},"7":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]}},"code":["/**"," * Module dependencies"," */","var assert = require('assert');","var _ = require('lodash');","","","/**"," * _partialJoin"," *"," * @api private"," *"," * Check whether two rows match on the specified keys,"," * and if they do, merge `parentRow` into a copy of `childRow`"," * and return it (omit `childRow`'s key, since it === `parentRow`'s)."," *"," * Hypothetically, this function could be operated by a stream,"," * but in the case of a left outer join, at least, the final"," * result set cannot be accurately known until both the complete"," * contents of both the `left` and `right` data set have been checked."," *"," * An optimization from polynomial to logarithmic computational"," * complexity could potentially be achieved by taking advantage"," * of the known L[k..l] and R[m..n] values as each new L[i] or R[j]"," * arrives from a stream, but a comparably-sized cache would have to"," * be maintained, so we'd still be stuck with polynomial memory usage."," * i.e. O( |R|*|L| )  This could be resolved by batching-- e.g. grab the"," * first 3000 parent and child rows, join matches together, discard"," * the unneeded data, and repeat."," *"," * Anyways, worth investigating, since this is a hot code path for"," * cross-adapter joins."," *"," *"," * Usage:"," *"," * partialJoin({"," *   parentRow: { id: 5, name: 'Lucy', email: 'lucy@fakemail.org' }"," *   childRow:  { owner_id: 5, name: 'Rover', breed: 'Australian Shepherd' }"," *   parentKey: 'id'"," *   childKey:  'owner_id',"," *   childNamespace:  '.'"," * })"," *"," * @param  {Object} options"," * @return {Object|False}   If false, don't save the join row."," * @synchronous"," */","module.exports = function partialJoin(options) {","","  // Usage","  var invalid = false;","  invalid = invalid || !_.isObject(options);","  invalid = invalid || !_.isString(options.parentKey);","  invalid = invalid || !_.isString(options.childKey);","  invalid = invalid || !_.isObject(options.parentRow);","  invalid = invalid || !_.isObject(options.childRow);","  assert(!invalid);","","  var CHILD_ATTR_PREFIX = (options.childNamespace || '.');","","  // If the rows aren't a match, bail out","  if (","    options.childRow[options.childKey] !==","    options.parentRow[options.parentKey]","    ) {","    return false;","  }","","  // deep clone the childRow, then delete `childKey` in the copy.","  var newJoinRow = _.cloneDeep(options.childRow);","  // console.log('deleting childKEy :: ',options.childKey);","  // var _childKeyValue = newJoinRow[options.childKey];","  // delete newJoinRow[options.childKey];","","  // namespace the remaining attributes in childRow","  var namespacedJoinRow = {};","  _.each(newJoinRow, function(value, key) {","    var namespacedKey = CHILD_ATTR_PREFIX + key;","    namespacedJoinRow[namespacedKey] = value;","  });","","","  // Merge namespaced values from current parentRow into the copy.","  _.merge(namespacedJoinRow, options.parentRow);","","","  // Return the newly joined row.","  return namespacedJoinRow;","};","",""],"l":{"4":1,"5":1,"49":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"63":0,"67":0,"71":0,"77":0,"78":0,"79":0,"80":0,"85":0,"89":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/integrator/innerJoin.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/integrator/innerJoin.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"leftOuterJoin","line":23,"loc":{"start":{"line":23,"column":17},"end":{"line":23,"column":49}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":30}},"2":{"start":{"line":23,"column":0},"end":{"line":26,"column":2}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":24}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":23}}},"branchMap":{},"code":["/**"," * Module dependencies"," */","var join = require('./_join');","","","/**"," * Inner join"," *"," * Return a result set with data from child and parent"," * merged on childKey===parentKey, where t.e. exactly one"," * entry for each match."," *"," * @option {Array} parent    [rows from the \"lefthand table\"]"," * @option {Array} child   [rows from the \"righthand table\"]"," * @option {String} parentKey     [primary key of the \"lefthand table\"]"," * @option {String} childKey     [foreign key from the \"righthand table\" to the \"lefthand table\"]"," * @return {Array}          [a new array of joined row data]"," *"," * @throws {Error} on invalid input"," * @synchronous"," */","module.exports = function leftOuterJoin(options) {","  options.outer = false;","  return join(options);","};",""],"l":{"4":1,"23":1,"24":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/integrator/populate.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/integrator/populate.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"populate","line":25,"loc":{"start":{"line":25,"column":17},"end":{"line":25,"column":44}}},"2":{"name":"_insertJoinedResults","line":38,"loc":{"start":{"line":38,"column":27},"end":{"line":38,"column":68}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":34},"end":{"line":52,"column":59}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":42},"end":{"line":65,"column":62}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":34},"end":{"line":71,"column":54}}},"6":{"name":"(anonymous_6)","line":84,"loc":{"start":{"line":84,"column":28},"end":{"line":84,"column":58}}},"7":{"name":"_cons","line":105,"loc":{"start":{"line":105,"column":0},"end":{"line":105,"column":27}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"2":{"start":{"line":25,"column":0},"end":{"line":96,"column":2}},"3":{"start":{"line":27,"column":2},"end":{"line":27,"column":38}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":28}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":36}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":34}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":32}},"8":{"start":{"line":33,"column":2},"end":{"line":33,"column":36}},"9":{"start":{"line":34,"column":2},"end":{"line":34,"column":28}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":52}},"11":{"start":{"line":38,"column":2},"end":{"line":95,"column":5}},"12":{"start":{"line":41,"column":4},"end":{"line":44,"column":6}},"13":{"start":{"line":48,"column":4},"end":{"line":48,"column":59}},"14":{"start":{"line":51,"column":4},"end":{"line":92,"column":11}},"15":{"start":{"line":56,"column":6},"end":{"line":56,"column":81}},"16":{"start":{"line":56,"column":69},"end":{"line":56,"column":81}},"17":{"start":{"line":60,"column":6},"end":{"line":60,"column":45}},"18":{"start":{"line":61,"column":6},"end":{"line":61,"column":39}},"19":{"start":{"line":65,"column":6},"end":{"line":67,"column":9}},"20":{"start":{"line":66,"column":8},"end":{"line":66,"column":39}},"21":{"start":{"line":71,"column":6},"end":{"line":77,"column":9}},"22":{"start":{"line":72,"column":8},"end":{"line":76,"column":9}},"23":{"start":{"line":73,"column":10},"end":{"line":73,"column":41}},"24":{"start":{"line":75,"column":10},"end":{"line":75,"column":40}},"25":{"start":{"line":79,"column":6},"end":{"line":79,"column":35}},"26":{"start":{"line":82,"column":6},"end":{"line":82,"column":20}},"27":{"start":{"line":83,"column":6},"end":{"line":83,"column":64}},"28":{"start":{"line":84,"column":6},"end":{"line":87,"column":9}},"29":{"start":{"line":85,"column":8},"end":{"line":85,"column":64}},"30":{"start":{"line":86,"column":8},"end":{"line":86,"column":44}},"31":{"start":{"line":90,"column":6},"end":{"line":90,"column":26}},"32":{"start":{"line":91,"column":6},"end":{"line":91,"column":18}},"33":{"start":{"line":94,"column":4},"end":{"line":94,"column":21}},"34":{"start":{"line":105,"column":0},"end":{"line":109,"column":1}},"35":{"start":{"line":106,"column":2},"end":{"line":106,"column":15}},"36":{"start":{"line":107,"column":2},"end":{"line":107,"column":19}},"37":{"start":{"line":108,"column":2},"end":{"line":108,"column":13}}},"branchMap":{"1":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":23},"end":{"line":36,"column":45}},{"start":{"line":36,"column":49},"end":{"line":36,"column":51}}]},"2":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]},"3":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":10},"end":{"line":56,"column":45}},{"start":{"line":56,"column":49},"end":{"line":56,"column":67}}]},"4":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":8}},{"start":{"line":72,"column":8},"end":{"line":72,"column":8}}]}},"code":["/**"," * Module dependencies"," */","var _ = require('lodash');","","","/**"," * populate()"," *"," * Destructive mapping of `parentRows` to include a new key, `alias`,"," * which is an ordered array of child rows."," *"," * @option [{Object}] parentRows    - the parent rows the joined rows will be folded into"," * @option {String} alias           - the alias of the association"," * @option [{Object}] childRows     - the unfolded result set from the joins"," *"," * @option {String} parentPK        - the primary key of the parent table (optional- only needed for M..N associations)"," * @option {String} fkToChild       - the foreign key associating a row with the child table"," * @option {String} childPK         - the primary key of the child table"," *"," * @option [{String}] childNamespace- attributes to keep"," *"," * @return {*Object} reference to `parentRows`"," */","module.exports = function populate(options) {","","  var parentRows = options.parentRows;","  var alias = options.alias;","  var childRows = options.childRows;","","  var parentPK = options.parentPK;","  var childPK = options.childPK;","  var fkToChild = options.fkToChild;","  var fkToParent = parentPK;// At least for all use cases currently, `fkToParent` <=> `parentPK`","","  var childNamespace = options.childNamespace || '';","","  return _.map(parentRows, function _insertJoinedResults(parentRow) {","","    // Gather the subset of child rows associated with the current parent row","    var associatedChildRows = _.where(childRows,","      // { (parentPK): (parentRow[(parentPK)]) }, e.g. { id: 3 }","      _cons(fkToParent, parentRow[parentPK])","    );","","    // Clone the `associatedChildRows` to avoid mutating the original","    // `childRows` in the cache.","    associatedChildRows = _.cloneDeep(associatedChildRows);","","    // Stuff the sanitized associated child rows into the parent row.","    parentRow[alias] =","    _.reduce(associatedChildRows, function(memo, childRow) {","","      // Ignore child rows without an appropriate foreign key","      // to an instance in the REAL child collection.","      if (!childRow[childNamespace + childPK] && !childRow[childPK]) return memo;","","      // Rename childRow's [fkToChild] key to [childPK]","      // (so that it will have the proper primary key attribute for its collection)","      var childPKValue = childRow[fkToChild];","      childRow[childPK] = childPKValue;","","      // Determine if we have any double nested attributes.","      // These would come from m:m joins","      var doubleNested = _.find(childRow, function(name, key) {","        return _.startsWith(key, '..');","      });","","      // Grab all the keys that start with a dot or double dot depending on","      // the status of doubleNested","      childRow = _.pick(childRow, function(name, key) {","        if (doubleNested) {","          return _.startsWith(key, '..');","        } else {","          return _.startsWith(key, '.');","        }","      });","","      var _origChildRow = childRow;","","      // Strip off childNamespace prefix","      childRow = {};","      var PREFIX_REGEXP = new RegExp('^' + childNamespace + '');","      _.each(_origChildRow, function(attrValue, attrName) {","        var unprefixedKey = attrName.replace(PREFIX_REGEXP, '');","        childRow[unprefixedKey] = attrValue;","      });","","      // Build the set of rows to stuff into our parent row.","      memo.push(childRow);","      return memo;","    }, []);","","    return parentRow;","  });","};","","","/**"," * Dumb little helper because I hate naming anonymous objects just to use them once."," *"," * @return {Object} [a tuple]"," * @api private"," */","function _cons(key, value) {","  var obj = {};","  obj[key] = value;","  return obj;","}",""],"l":{"4":1,"25":1,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"36":0,"38":0,"41":0,"48":0,"51":0,"56":0,"60":0,"61":0,"65":0,"66":0,"71":0,"72":0,"73":0,"75":0,"79":0,"82":0,"83":0,"84":0,"85":0,"86":0,"90":0,"91":0,"94":0,"105":1,"106":0,"107":0,"108":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}}},"branchMap":{},"code":["module.exports = require('./lib');"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/index.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"4":{"start":{"line":10,"column":0},"end":{"line":33,"column":5}}},"branchMap":{},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var util = require('util');","var path = require('path');","","","module.exports = _.extend(","","  // Provide all-in-one top-level function","  require('./query'),","","  // but also expose direct access","  // to all filters and projections.","  {","    where: require('./filters/where'),","    limit: require('./filters/limit'),","    skip: require('./filters/skip'),","    sort: require('./sort'),","","    // Projections and aggregations are not-yet-officially supported:","    groupBy: require('./projections/groupBy'),","    select: require('./projections/select')","","    // Joins are currently supported by Waterline core:","    // , populate : require('./projections/populate')","    // , leftJoin : require('./projections/leftJoin')","    // , join     : require('./projections/join')","    // , rightJoin : require('./projections/rightJoin')","","  });",""],"l":{"5":1,"6":1,"7":1,"10":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/node_modules/lodash/dist/lodash.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/node_modules/lodash/dist/lodash.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":1,"89":0,"90":1,"91":0,"92":1,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":0,"136":1,"137":0,"138":0,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":0,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":1,"201":0,"202":1,"203":0,"204":1,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":1,"241":0,"242":0,"243":1,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":1,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":1,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":1,"394":0,"395":1,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":1,"415":3,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":1,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":1,"458":0,"459":1,"460":0,"461":0,"462":1,"463":7,"464":1,"465":0,"466":0,"467":0,"468":1,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":1,"476":0,"477":1,"478":0,"479":1,"480":0,"481":1,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":1,"492":6,"493":0,"494":6,"495":1,"496":1,"497":1,"498":1,"499":1,"500":1,"501":0,"502":1,"503":1,"504":0,"505":1,"506":0,"507":1,"508":1,"509":1,"510":1,"511":1,"512":6,"513":6,"514":1,"515":1,"516":0,"517":0,"518":0,"519":0,"520":0,"521":1,"522":0,"523":1,"524":0,"525":0,"526":1,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":1,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":1,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":1,"557":2,"558":2,"559":0,"560":2,"561":0,"562":2,"563":2,"564":141,"565":0,"566":2,"567":1,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":1,"578":2,"579":2,"580":0,"581":2,"582":0,"583":2,"584":2,"585":2,"586":283,"587":283,"588":0,"589":2,"590":1,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":1,"599":2,"600":2,"601":141,"602":137,"603":2,"604":1,"605":0,"606":1,"607":1,"608":1,"609":5,"610":5,"611":1,"612":1,"613":0,"614":1,"615":0,"616":1,"617":0,"618":1,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":1,"629":0,"630":1,"631":0,"632":1,"633":143,"634":1,"635":7,"636":1,"637":0,"638":1,"639":0,"640":1,"641":0,"642":1,"643":0,"644":0,"645":0,"646":0,"647":1,"648":0,"649":1,"650":0,"651":1,"652":0,"653":1,"654":0,"655":0,"656":0,"657":0,"658":0,"659":1,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":1,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":1,"692":0,"693":0,"694":0,"695":0,"696":0,"697":1,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":1,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":1,"723":0,"724":0,"725":0,"726":0,"727":1,"728":0,"729":0,"730":0,"731":0,"732":1,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":1,"744":0,"745":1,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":1,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":1,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":1,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":1,"792":5,"793":5,"794":5,"795":5,"796":147,"797":0,"798":0,"799":5,"800":1,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":1,"814":0,"815":1,"816":0,"817":1,"818":0,"819":0,"820":0,"821":0,"822":1,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":1,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":1,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":1,"868":1,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":1,"883":0,"884":0,"885":0,"886":0,"887":0,"888":1,"889":0,"890":0,"891":0,"892":1,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":1,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":1,"908":0,"909":0,"910":1,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":1,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":1,"943":0,"944":0,"945":0,"946":1,"947":1,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":1,"955":0,"956":1,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":1,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":1,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":1,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":1,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":1,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":1,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":1,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":1,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":1,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":1,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":1,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":1,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":1,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":1,"1099":0,"1100":1,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":1,"1109":0,"1110":1,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":1,"1118":0,"1119":0,"1120":0,"1121":0,"1122":1,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":1,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":1,"1140":0,"1141":1,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":1,"1148":0,"1149":1,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":1,"1160":0,"1161":0,"1162":1,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":1,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":1,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":1,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":1,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":1,"1255":0,"1256":1,"1257":0,"1258":1,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":1,"1272":0,"1273":1,"1274":0,"1275":0,"1276":1,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":1,"1294":0,"1295":1,"1296":0,"1297":1,"1298":2,"1299":2,"1300":2,"1301":2,"1302":2,"1303":2,"1304":2,"1305":2,"1306":2,"1307":1,"1308":1,"1309":0,"1310":2,"1311":2,"1312":137,"1313":137,"1314":137,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":0,"1323":0,"1324":1,"1325":0,"1326":0,"1327":1,"1328":1,"1329":0,"1330":1,"1331":0,"1332":1,"1333":0,"1334":0,"1335":1,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":1,"1356":0,"1357":0,"1358":0,"1359":1,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1376":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":0,"1383":0,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":0,"1394":1,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":1,"1402":0,"1403":1,"1404":0,"1405":0,"1406":1,"1407":0,"1408":0,"1409":0,"1410":1,"1411":0,"1412":0,"1413":1,"1414":0,"1415":0,"1416":1,"1417":0,"1418":1,"1419":0,"1420":1,"1421":1,"1422":1,"1423":1,"1424":1,"1425":1,"1426":1,"1427":1,"1428":1,"1429":1,"1430":1,"1431":1,"1432":1,"1433":1,"1434":1,"1435":1,"1436":1,"1437":1,"1438":1,"1439":1,"1440":1,"1441":1,"1442":1,"1443":1,"1444":1,"1445":1,"1446":1,"1447":1,"1448":1,"1449":1,"1450":1,"1451":1,"1452":1,"1453":1,"1454":1,"1455":1,"1456":1,"1457":1,"1458":1,"1459":1,"1460":1,"1461":1,"1462":1,"1463":1,"1464":1,"1465":1,"1466":1,"1467":1,"1468":1,"1469":1,"1470":1,"1471":1,"1472":1,"1473":1,"1474":1,"1475":1,"1476":1,"1477":1,"1478":1,"1479":1,"1480":1,"1481":1,"1482":1,"1483":1,"1484":1,"1485":1,"1486":1,"1487":1,"1488":1,"1489":1,"1490":1,"1491":1,"1492":1,"1493":1,"1494":1,"1495":1,"1496":1,"1497":1,"1498":1,"1499":1,"1500":1,"1501":1,"1502":1,"1503":1,"1504":1,"1505":1,"1506":1,"1507":1,"1508":1,"1509":1,"1510":1,"1511":1,"1512":1,"1513":1,"1514":1,"1515":1,"1516":1,"1517":1,"1518":1,"1519":1,"1520":1,"1521":1,"1522":1,"1523":1,"1524":1,"1525":1,"1526":1,"1527":1,"1528":1,"1529":1,"1530":1,"1531":1,"1532":1,"1533":1,"1534":1,"1535":1,"1536":1,"1537":1,"1538":1,"1539":1,"1540":1,"1541":1,"1542":1,"1543":1,"1544":1,"1545":1,"1546":1,"1547":1,"1548":1,"1549":1,"1550":1,"1551":1,"1552":1,"1553":1,"1554":1,"1555":1,"1556":1,"1557":1,"1558":1,"1559":1,"1560":1,"1561":139,"1562":58,"1563":1,"1564":1,"1565":1,"1566":1,"1567":1,"1568":1,"1569":1,"1570":144,"1571":144,"1572":7,"1573":0,"1574":0,"1575":1,"1576":1,"1577":1,"1578":1,"1579":1,"1580":1,"1581":3,"1582":3,"1583":0,"1584":0,"1585":1,"1586":4,"1587":4,"1588":0,"1589":0,"1590":1,"1591":3,"1592":3,"1593":0,"1594":1,"1595":1,"1596":1,"1597":0,"1598":0,"1599":0,"1600":1,"1601":1,"1602":1,"1603":0,"1604":0},"b":{"1":[1,0,1],"2":[1,1,1,1],"3":[1,1,1,1],"4":[1,1,1],"5":[1,1],"6":[1,0],"7":[1,1,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0,0,0,0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,1],"48":[1,1],"49":[1,1],"50":[1,1],"51":[1,1],"52":[1,1],"53":[1,1],"54":[0,0],"55":[0,0,0,0],"56":[1,1],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,1],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0,0],"94":[0,0,0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0,0,0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0,0,0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0,0,0],"144":[0,0,0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[7,6],"215":[0,1],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0,0,0,0],"222":[1,0],"223":[0,0,0,0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,1],"228":[0,6],"229":[0,1],"230":[0,1],"231":[0,1],"232":[1,0],"233":[0,1],"234":[1,0],"235":[1,0],"236":[1,1],"237":[1,1],"238":[1,0],"239":[0,6],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,2],"255":[0,2],"256":[2,0],"257":[2,2],"258":[0,141],"259":[0,0],"260":[0,2],"261":[0,2],"262":[2,0],"263":[2,2],"264":[2,2],"265":[2,0],"266":[0,283],"267":[0,0],"268":[137,4],"269":[0,0],"270":[0,0,0,0,0,0],"271":[0,0,0,0],"272":[0,0,0],"273":[0,0],"274":[0,0],"275":[0,0,0,0,0,0],"276":[0,0],"277":[0,0],"278":[7,6],"279":[0,0],"280":[0,0,0,0,0],"281":[0,1],"282":[0,0],"283":[0,0],"284":[0,0,0],"285":[0,0],"286":[0,0],"287":[0,0,0,0],"288":[0,0,0,0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0],"299":[0,0],"300":[0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0],"305":[0,0],"306":[0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0],"312":[0,0],"313":[0,0],"314":[0,0],"315":[0,0],"316":[0,0],"317":[0,0],"318":[0,0],"319":[0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,0],"328":[0,0],"329":[5,0],"330":[5,0],"331":[5,5],"332":[5,0],"333":[0,147],"334":[0,0],"335":[0,0],"336":[0,0],"337":[0,0],"338":[0,0],"339":[0,0],"340":[0,0],"341":[0,0],"342":[0,0],"343":[0,0],"344":[0,0],"345":[0,0],"346":[0,0],"347":[0,0,0],"348":[0,0],"349":[0,0],"350":[0,0],"351":[0,0],"352":[0,0],"353":[0,0],"354":[0,0],"355":[0,0,0],"356":[0,0],"357":[0,0],"358":[0,0],"359":[0,0],"360":[0,0],"361":[0,0],"362":[0,0],"363":[0,0],"364":[0,0],"365":[0,0],"366":[0,0],"367":[0,0],"368":[0,0],"369":[0,0],"370":[0,0],"371":[0,0],"372":[0,0],"373":[0,0],"374":[0,0],"375":[0,0],"376":[0,0],"377":[0,0],"378":[0,0],"379":[0,0],"380":[0,0],"381":[0,0],"382":[0,0],"383":[0,0],"384":[0,0],"385":[0,0],"386":[0,0],"387":[0,0],"388":[0,0],"389":[0,0],"390":[0,0],"391":[0,0],"392":[0,0],"393":[0,0],"394":[0,0],"395":[0,0],"396":[0,0],"397":[0,0],"398":[0,0],"399":[0,0],"400":[0,0],"401":[0,0],"402":[0,0,0],"403":[0,0],"404":[0,0],"405":[0,0],"406":[0,0],"407":[0,0],"408":[0,0],"409":[0,0],"410":[0,0],"411":[0,0],"412":[0,0],"413":[0,0],"414":[0,0],"415":[0,0],"416":[0,0],"417":[0,0],"418":[0,0],"419":[0,0,0],"420":[0,0],"421":[0,0],"422":[0,0],"423":[0,0],"424":[0,0],"425":[0,0],"426":[0,0],"427":[0,0],"428":[0,0],"429":[0,0],"430":[0,0],"431":[0,0],"432":[0,0],"433":[0,0],"434":[0,0],"435":[0,0],"436":[0,0],"437":[0,0],"438":[0,0],"439":[0,0],"440":[0,0],"441":[0,0],"442":[0,0],"443":[0,0],"444":[0,0],"445":[0,0],"446":[0,0],"447":[0,0],"448":[0,0],"449":[0,0],"450":[0,0],"451":[0,0],"452":[0,0],"453":[0,0],"454":[0,0],"455":[0,0],"456":[0,0],"457":[0,0],"458":[0,0],"459":[0,0],"460":[0,0,0],"461":[0,0],"462":[0,0],"463":[0,0],"464":[0,0],"465":[0,0],"466":[0,0],"467":[0,0],"468":[0,0],"469":[0,0],"470":[0,0],"471":[0,0,0],"472":[0,0],"473":[0,0],"474":[0,0],"475":[0,0],"476":[0,0],"477":[0,0],"478":[0,0],"479":[0,0],"480":[0,0],"481":[0,0],"482":[0,0],"483":[0,0],"484":[0,0],"485":[0,0],"486":[0,0,0],"487":[0,0],"488":[0,0],"489":[0,0],"490":[0,0],"491":[0,0],"492":[0,0],"493":[0,0],"494":[0,0],"495":[0,0],"496":[0,0],"497":[0,0],"498":[0,0,0],"499":[0,0],"500":[0,0],"501":[0,0],"502":[0,0],"503":[0,0],"504":[0,0],"505":[0,0],"506":[0,0],"507":[0,0],"508":[0,0],"509":[0,0],"510":[0,0],"511":[0,0],"512":[0,0,0],"513":[0,0],"514":[0,0],"515":[0,0],"516":[0,0],"517":[0,0],"518":[0,0],"519":[0,0],"520":[0,0],"521":[0,0],"522":[0,0],"523":[0,0],"524":[0,0],"525":[0,0],"526":[0,0],"527":[0,0],"528":[0,0],"529":[0,0,0],"530":[0,0,0],"531":[0,0],"532":[0,0],"533":[2,0],"534":[2,0],"535":[2,0,0],"536":[2,0],"537":[1,1],"538":[0,1],"539":[1,0],"540":[137,0],"541":[0,0],"542":[0,0],"543":[0,0],"544":[0,0],"545":[1,1,0],"546":[1,0],"547":[0,0],"548":[0,0],"549":[0,0],"550":[0,0],"551":[0,0],"552":[0,0],"553":[0,0],"554":[0,0],"555":[0,0],"556":[0,0],"557":[0,0],"558":[0,0],"559":[0,0],"560":[0,0,0],"561":[0,0],"562":[0,0],"563":[0,0],"564":[0,0],"565":[0,0],"566":[0,0],"567":[0,0],"568":[0,0],"569":[0,0],"570":[0,0],"571":[0,0],"572":[0,0],"573":[0,0],"574":[0,0],"575":[0,0],"576":[0,0],"577":[0,0],"578":[0,0],"579":[0,0],"580":[0,0],"581":[58,81],"582":[7,137],"583":[0,0],"584":[0,0,0,0],"585":[0,0],"586":[0,0],"587":[0,1],"588":[1,0,0],"589":[1,0],"590":[1,1],"591":[1,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":3,"43":0,"44":0,"45":0,"46":0,"47":0,"48":7,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":6,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":2,"67":0,"68":0,"69":2,"70":0,"71":2,"72":141,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":143,"83":7,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":5,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":2,"198":137,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":1,"219":139,"220":144,"221":0,"222":3,"223":0,"224":4,"225":0,"226":3,"227":0,"228":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":13}}},"2":{"name":"baseIndexOf","line":170,"loc":{"start":{"line":170,"column":2},"end":{"line":170,"column":48}}},"3":{"name":"cacheIndexOf","line":191,"loc":{"start":{"line":191,"column":2},"end":{"line":191,"column":38}}},"4":{"name":"cachePush","line":215,"loc":{"start":{"line":215,"column":2},"end":{"line":215,"column":28}}},"5":{"name":"charAtCallback","line":244,"loc":{"start":{"line":244,"column":2},"end":{"line":244,"column":33}}},"6":{"name":"compareAscending","line":257,"loc":{"start":{"line":257,"column":2},"end":{"line":257,"column":34}}},"7":{"name":"createCache","line":292,"loc":{"start":{"line":292,"column":2},"end":{"line":292,"column":30}}},"8":{"name":"escapeStringChar","line":325,"loc":{"start":{"line":325,"column":2},"end":{"line":325,"column":35}}},"9":{"name":"getArray","line":335,"loc":{"start":{"line":335,"column":2},"end":{"line":335,"column":22}}},"10":{"name":"getObject","line":345,"loc":{"start":{"line":345,"column":2},"end":{"line":345,"column":23}}},"11":{"name":"releaseArray","line":369,"loc":{"start":{"line":369,"column":2},"end":{"line":369,"column":31}}},"12":{"name":"releaseObject","line":382,"loc":{"start":{"line":382,"column":2},"end":{"line":382,"column":33}}},"13":{"name":"slice","line":406,"loc":{"start":{"line":406,"column":2},"end":{"line":406,"column":36}}},"14":{"name":"runInContext","line":432,"loc":{"start":{"line":432,"column":2},"end":{"line":432,"column":33}}},"15":{"name":"(anonymous_15)","line":488,"loc":{"start":{"line":488,"column":26},"end":{"line":488,"column":37}}},"16":{"name":"lodash","line":587,"loc":{"start":{"line":587,"column":4},"end":{"line":587,"column":27}}},"17":{"name":"lodashWrapper","line":602,"loc":{"start":{"line":602,"column":4},"end":{"line":602,"column":44}}},"18":{"name":"baseBind","line":706,"loc":{"start":{"line":706,"column":4},"end":{"line":706,"column":32}}},"19":{"name":"bound","line":711,"loc":{"start":{"line":711,"column":6},"end":{"line":711,"column":23}}},"20":{"name":"baseClone","line":747,"loc":{"start":{"line":747,"column":4},"end":{"line":747,"column":64}}},"21":{"name":"(anonymous_21)","line":816,"loc":{"start":{"line":816,"column":40},"end":{"line":816,"column":64}}},"22":{"name":"baseCreate","line":835,"loc":{"start":{"line":835,"column":4},"end":{"line":835,"column":47}}},"23":{"name":"(anonymous_23)","line":840,"loc":{"start":{"line":840,"column":20},"end":{"line":840,"column":31}}},"24":{"name":"Object","line":841,"loc":{"start":{"line":841,"column":8},"end":{"line":841,"column":26}}},"25":{"name":"(anonymous_25)","line":842,"loc":{"start":{"line":842,"column":15},"end":{"line":842,"column":35}}},"26":{"name":"baseCreateCallback","line":863,"loc":{"start":{"line":863,"column":4},"end":{"line":863,"column":57}}},"27":{"name":"(anonymous_27)","line":894,"loc":{"start":{"line":894,"column":23},"end":{"line":894,"column":39}}},"28":{"name":"(anonymous_28)","line":897,"loc":{"start":{"line":897,"column":23},"end":{"line":897,"column":38}}},"29":{"name":"(anonymous_29)","line":900,"loc":{"start":{"line":900,"column":23},"end":{"line":900,"column":58}}},"30":{"name":"(anonymous_30)","line":903,"loc":{"start":{"line":903,"column":23},"end":{"line":903,"column":71}}},"31":{"name":"baseCreateWrapper","line":918,"loc":{"start":{"line":918,"column":4},"end":{"line":918,"column":41}}},"32":{"name":"bound","line":932,"loc":{"start":{"line":932,"column":6},"end":{"line":932,"column":23}}},"33":{"name":"baseDifference","line":972,"loc":{"start":{"line":972,"column":4},"end":{"line":972,"column":43}}},"34":{"name":"baseFlatten","line":1011,"loc":{"start":{"line":1011,"column":4},"end":{"line":1011,"column":64}}},"35":{"name":"baseIsEqual","line":1053,"loc":{"start":{"line":1053,"column":4},"end":{"line":1053,"column":66}}},"36":{"name":"(anonymous_36)","line":1186,"loc":{"start":{"line":1186,"column":17},"end":{"line":1186,"column":41}}},"37":{"name":"(anonymous_37)","line":1197,"loc":{"start":{"line":1197,"column":19},"end":{"line":1197,"column":43}}},"38":{"name":"baseMerge","line":1226,"loc":{"start":{"line":1226,"column":4},"end":{"line":1226,"column":65}}},"39":{"name":"(anonymous_39)","line":1227,"loc":{"start":{"line":1227,"column":51},"end":{"line":1227,"column":73}}},"40":{"name":"baseRandom","line":1289,"loc":{"start":{"line":1289,"column":4},"end":{"line":1289,"column":34}}},"41":{"name":"baseUniq","line":1303,"loc":{"start":{"line":1303,"column":4},"end":{"line":1303,"column":49}}},"42":{"name":"createAggregator","line":1350,"loc":{"start":{"line":1350,"column":4},"end":{"line":1350,"column":38}}},"43":{"name":"(anonymous_43)","line":1351,"loc":{"start":{"line":1351,"column":13},"end":{"line":1351,"column":53}}},"44":{"name":"(anonymous_44)","line":1364,"loc":{"start":{"line":1364,"column":29},"end":{"line":1364,"column":62}}},"45":{"name":"createWrapper","line":1394,"loc":{"start":{"line":1394,"column":4},"end":{"line":1394,"column":89}}},"46":{"name":"escapeHtmlChar","line":1459,"loc":{"start":{"line":1459,"column":4},"end":{"line":1459,"column":35}}},"47":{"name":"getIndexOf","line":1471,"loc":{"start":{"line":1471,"column":4},"end":{"line":1471,"column":26}}},"48":{"name":"isNative","line":1483,"loc":{"start":{"line":1483,"column":4},"end":{"line":1483,"column":29}}},"49":{"name":"(anonymous_49)","line":1494,"loc":{"start":{"line":1494,"column":47},"end":{"line":1494,"column":69}}},"50":{"name":"shimIsPlainObject","line":1510,"loc":{"start":{"line":1510,"column":4},"end":{"line":1510,"column":38}}},"51":{"name":"(anonymous_51)","line":1522,"loc":{"start":{"line":1522,"column":19},"end":{"line":1522,"column":40}}},"52":{"name":"unescapeHtmlChar","line":1535,"loc":{"start":{"line":1535,"column":4},"end":{"line":1535,"column":37}}},"53":{"name":"isArguments","line":1557,"loc":{"start":{"line":1557,"column":4},"end":{"line":1557,"column":32}}},"54":{"name":"(anonymous_54)","line":1579,"loc":{"start":{"line":1579,"column":35},"end":{"line":1579,"column":51}}},"55":{"name":"(anonymous_55)","line":1593,"loc":{"start":{"line":1593,"column":19},"end":{"line":1593,"column":36}}},"56":{"name":"(anonymous_56)","line":1618,"loc":{"start":{"line":1618,"column":40},"end":{"line":1618,"column":57}}},"57":{"name":"(anonymous_57)","line":1680,"loc":{"start":{"line":1680,"column":17},"end":{"line":1680,"column":49}}},"58":{"name":"clone","line":1747,"loc":{"start":{"line":1747,"column":4},"end":{"line":1747,"column":53}}},"59":{"name":"cloneDeep","line":1799,"loc":{"start":{"line":1799,"column":4},"end":{"line":1799,"column":49}}},"60":{"name":"create","line":1834,"loc":{"start":{"line":1834,"column":4},"end":{"line":1834,"column":43}}},"61":{"name":"(anonymous_61)","line":1859,"loc":{"start":{"line":1859,"column":19},"end":{"line":1859,"column":51}}},"62":{"name":"findKey","line":1922,"loc":{"start":{"line":1922,"column":4},"end":{"line":1922,"column":48}}},"63":{"name":"(anonymous_63)","line":1925,"loc":{"start":{"line":1925,"column":21},"end":{"line":1925,"column":50}}},"64":{"name":"findLastKey","line":1975,"loc":{"start":{"line":1975,"column":4},"end":{"line":1975,"column":52}}},"65":{"name":"(anonymous_65)","line":1978,"loc":{"start":{"line":1978,"column":26},"end":{"line":1978,"column":55}}},"66":{"name":"(anonymous_66)","line":2018,"loc":{"start":{"line":2018,"column":16},"end":{"line":2018,"column":56}}},"67":{"name":"forInRight","line":2057,"loc":{"start":{"line":2057,"column":4},"end":{"line":2057,"column":51}}},"68":{"name":"(anonymous_68)","line":2060,"loc":{"start":{"line":2060,"column":20},"end":{"line":2060,"column":41}}},"69":{"name":"(anonymous_69)","line":2095,"loc":{"start":{"line":2095,"column":17},"end":{"line":2095,"column":57}}},"70":{"name":"forOwnRight","line":2129,"loc":{"start":{"line":2129,"column":4},"end":{"line":2129,"column":52}}},"71":{"name":"functions","line":2158,"loc":{"start":{"line":2158,"column":4},"end":{"line":2158,"column":31}}},"72":{"name":"(anonymous_72)","line":2160,"loc":{"start":{"line":2160,"column":20},"end":{"line":2160,"column":41}}},"73":{"name":"has","line":2183,"loc":{"start":{"line":2183,"column":4},"end":{"line":2183,"column":30}}},"74":{"name":"invert","line":2200,"loc":{"start":{"line":2200,"column":4},"end":{"line":2200,"column":28}}},"75":{"name":"isBoolean","line":2226,"loc":{"start":{"line":2226,"column":4},"end":{"line":2226,"column":30}}},"76":{"name":"isDate","line":2244,"loc":{"start":{"line":2244,"column":4},"end":{"line":2244,"column":27}}},"77":{"name":"isElement","line":2261,"loc":{"start":{"line":2261,"column":4},"end":{"line":2261,"column":30}}},"78":{"name":"isEmpty","line":2286,"loc":{"start":{"line":2286,"column":4},"end":{"line":2286,"column":28}}},"79":{"name":"(anonymous_79)","line":2298,"loc":{"start":{"line":2298,"column":20},"end":{"line":2298,"column":31}}},"80":{"name":"isEqual","line":2342,"loc":{"start":{"line":2342,"column":4},"end":{"line":2342,"column":46}}},"81":{"name":"isFinite","line":2374,"loc":{"start":{"line":2374,"column":4},"end":{"line":2374,"column":29}}},"82":{"name":"isFunction","line":2391,"loc":{"start":{"line":2391,"column":4},"end":{"line":2391,"column":31}}},"83":{"name":"isObject","line":2415,"loc":{"start":{"line":2415,"column":4},"end":{"line":2415,"column":29}}},"84":{"name":"isNaN","line":2448,"loc":{"start":{"line":2448,"column":4},"end":{"line":2448,"column":26}}},"85":{"name":"isNull","line":2470,"loc":{"start":{"line":2470,"column":4},"end":{"line":2470,"column":27}}},"86":{"name":"isNumber","line":2489,"loc":{"start":{"line":2489,"column":4},"end":{"line":2489,"column":29}}},"87":{"name":"(anonymous_87)","line":2518,"loc":{"start":{"line":2518,"column":62},"end":{"line":2518,"column":78}}},"88":{"name":"isRegExp","line":2543,"loc":{"start":{"line":2543,"column":4},"end":{"line":2543,"column":29}}},"89":{"name":"isString","line":2560,"loc":{"start":{"line":2560,"column":4},"end":{"line":2560,"column":29}}},"90":{"name":"isUndefined","line":2578,"loc":{"start":{"line":2578,"column":4},"end":{"line":2578,"column":32}}},"91":{"name":"mapValues","line":2618,"loc":{"start":{"line":2618,"column":4},"end":{"line":2618,"column":50}}},"92":{"name":"(anonymous_92)","line":2622,"loc":{"start":{"line":2622,"column":21},"end":{"line":2622,"column":50}}},"93":{"name":"merge","line":2679,"loc":{"start":{"line":2679,"column":4},"end":{"line":2679,"column":27}}},"94":{"name":"omit","line":2735,"loc":{"start":{"line":2735,"column":4},"end":{"line":2735,"column":45}}},"95":{"name":"(anonymous_95)","line":2739,"loc":{"start":{"line":2739,"column":22},"end":{"line":2739,"column":43}}},"96":{"name":"(anonymous_96)","line":2753,"loc":{"start":{"line":2753,"column":22},"end":{"line":2753,"column":51}}},"97":{"name":"pairs","line":2776,"loc":{"start":{"line":2776,"column":4},"end":{"line":2776,"column":27}}},"98":{"name":"pick","line":2816,"loc":{"start":{"line":2816,"column":4},"end":{"line":2816,"column":45}}},"99":{"name":"(anonymous_99)","line":2831,"loc":{"start":{"line":2831,"column":22},"end":{"line":2831,"column":51}}},"100":{"name":"transform","line":2871,"loc":{"start":{"line":2871,"column":4},"end":{"line":2871,"column":63}}},"101":{"name":"(anonymous_101)","line":2885,"loc":{"start":{"line":2885,"column":43},"end":{"line":2885,"column":74}}},"102":{"name":"values","line":2905,"loc":{"start":{"line":2905,"column":4},"end":{"line":2905,"column":28}}},"103":{"name":"at","line":2940,"loc":{"start":{"line":2940,"column":4},"end":{"line":2940,"column":28}}},"104":{"name":"contains","line":2980,"loc":{"start":{"line":2980,"column":4},"end":{"line":2980,"column":53}}},"105":{"name":"(anonymous_105)","line":2992,"loc":{"start":{"line":2992,"column":27},"end":{"line":2992,"column":43}}},"106":{"name":"(anonymous_106)","line":3035,"loc":{"start":{"line":3035,"column":35},"end":{"line":3035,"column":64}}},"107":{"name":"every","line":3080,"loc":{"start":{"line":3080,"column":4},"end":{"line":3080,"column":50}}},"108":{"name":"(anonymous_108)","line":3094,"loc":{"start":{"line":3094,"column":27},"end":{"line":3094,"column":62}}},"109":{"name":"filter","line":3141,"loc":{"start":{"line":3141,"column":4},"end":{"line":3141,"column":51}}},"110":{"name":"(anonymous_110)","line":3156,"loc":{"start":{"line":3156,"column":27},"end":{"line":3156,"column":62}}},"111":{"name":"find","line":3208,"loc":{"start":{"line":3208,"column":4},"end":{"line":3208,"column":49}}},"112":{"name":"(anonymous_112)","line":3223,"loc":{"start":{"line":3223,"column":27},"end":{"line":3223,"column":62}}},"113":{"name":"findLast","line":3253,"loc":{"start":{"line":3253,"column":4},"end":{"line":3253,"column":53}}},"114":{"name":"(anonymous_114)","line":3256,"loc":{"start":{"line":3256,"column":31},"end":{"line":3256,"column":66}}},"115":{"name":"forEach","line":3291,"loc":{"start":{"line":3291,"column":4},"end":{"line":3291,"column":52}}},"116":{"name":"forEachRight","line":3325,"loc":{"start":{"line":3325,"column":4},"end":{"line":3325,"column":57}}},"117":{"name":"(anonymous_117)","line":3337,"loc":{"start":{"line":3337,"column":27},"end":{"line":3337,"column":60}}},"118":{"name":"(anonymous_118)","line":3380,"loc":{"start":{"line":3380,"column":35},"end":{"line":3380,"column":64}}},"119":{"name":"(anonymous_119)","line":3423,"loc":{"start":{"line":3423,"column":35},"end":{"line":3423,"column":64}}},"120":{"name":"invoke","line":3449,"loc":{"start":{"line":3449,"column":4},"end":{"line":3449,"column":44}}},"121":{"name":"(anonymous_121)","line":3456,"loc":{"start":{"line":3456,"column":26},"end":{"line":3456,"column":42}}},"122":{"name":"map","line":3501,"loc":{"start":{"line":3501,"column":4},"end":{"line":3501,"column":48}}},"123":{"name":"(anonymous_123)","line":3513,"loc":{"start":{"line":3513,"column":27},"end":{"line":3513,"column":60}}},"124":{"name":"max","line":3560,"loc":{"start":{"line":3560,"column":4},"end":{"line":3560,"column":48}}},"125":{"name":"(anonymous_125)","line":3584,"loc":{"start":{"line":3584,"column":28},"end":{"line":3584,"column":63}}},"126":{"name":"min","line":3635,"loc":{"start":{"line":3635,"column":4},"end":{"line":3635,"column":48}}},"127":{"name":"(anonymous_127)","line":3659,"loc":{"start":{"line":3659,"column":28},"end":{"line":3659,"column":63}}},"128":{"name":"reduce","line":3722,"loc":{"start":{"line":3722,"column":4},"end":{"line":3722,"column":64}}},"129":{"name":"(anonymous_129)","line":3738,"loc":{"start":{"line":3738,"column":27},"end":{"line":3738,"column":62}}},"130":{"name":"reduceRight","line":3766,"loc":{"start":{"line":3766,"column":4},"end":{"line":3766,"column":69}}},"131":{"name":"(anonymous_131)","line":3769,"loc":{"start":{"line":3769,"column":31},"end":{"line":3769,"column":66}}},"132":{"name":"reject","line":3815,"loc":{"start":{"line":3815,"column":4},"end":{"line":3815,"column":51}}},"133":{"name":"(anonymous_133)","line":3817,"loc":{"start":{"line":3817,"column":32},"end":{"line":3817,"column":67}}},"134":{"name":"sample","line":3841,"loc":{"start":{"line":3841,"column":4},"end":{"line":3841,"column":42}}},"135":{"name":"shuffle","line":3867,"loc":{"start":{"line":3867,"column":4},"end":{"line":3867,"column":33}}},"136":{"name":"(anonymous_136)","line":3872,"loc":{"start":{"line":3872,"column":26},"end":{"line":3872,"column":42}}},"137":{"name":"size","line":3900,"loc":{"start":{"line":3900,"column":4},"end":{"line":3900,"column":30}}},"138":{"name":"some","line":3947,"loc":{"start":{"line":3947,"column":4},"end":{"line":3947,"column":49}}},"139":{"name":"(anonymous_139)","line":3961,"loc":{"start":{"line":3961,"column":27},"end":{"line":3961,"column":62}}},"140":{"name":"sortBy","line":4017,"loc":{"start":{"line":4017,"column":4},"end":{"line":4017,"column":51}}},"141":{"name":"(anonymous_141)","line":4026,"loc":{"start":{"line":4026,"column":26},"end":{"line":4026,"column":59}}},"142":{"name":"(anonymous_142)","line":4029,"loc":{"start":{"line":4029,"column":42},"end":{"line":4029,"column":56}}},"143":{"name":"toArray","line":4063,"loc":{"start":{"line":4063,"column":4},"end":{"line":4063,"column":33}}},"144":{"name":"compact","line":4113,"loc":{"start":{"line":4113,"column":4},"end":{"line":4113,"column":28}}},"145":{"name":"difference","line":4142,"loc":{"start":{"line":4142,"column":4},"end":{"line":4142,"column":31}}},"146":{"name":"findIndex","line":4187,"loc":{"start":{"line":4187,"column":4},"end":{"line":4187,"column":49}}},"147":{"name":"findLastIndex","line":4241,"loc":{"start":{"line":4241,"column":4},"end":{"line":4241,"column":53}}},"148":{"name":"first","line":4303,"loc":{"start":{"line":4303,"column":4},"end":{"line":4303,"column":45}}},"149":{"name":"flatten","line":4363,"loc":{"start":{"line":4363,"column":4},"end":{"line":4363,"column":58}}},"150":{"name":"indexOf","line":4400,"loc":{"start":{"line":4400,"column":4},"end":{"line":4400,"column":46}}},"151":{"name":"initial","line":4461,"loc":{"start":{"line":4461,"column":4},"end":{"line":4461,"column":47}}},"152":{"name":"intersection","line":4491,"loc":{"start":{"line":4491,"column":4},"end":{"line":4491,"column":28}}},"153":{"name":"last","line":4591,"loc":{"start":{"line":4591,"column":4},"end":{"line":4591,"column":44}}},"154":{"name":"lastIndexOf","line":4637,"loc":{"start":{"line":4637,"column":4},"end":{"line":4637,"column":50}}},"155":{"name":"pull","line":4667,"loc":{"start":{"line":4667,"column":4},"end":{"line":4667,"column":25}}},"156":{"name":"range","line":4718,"loc":{"start":{"line":4718,"column":4},"end":{"line":4718,"column":37}}},"157":{"name":"remove","line":4771,"loc":{"start":{"line":4771,"column":4},"end":{"line":4771,"column":46}}},"158":{"name":"rest","line":4840,"loc":{"start":{"line":4840,"column":4},"end":{"line":4840,"column":44}}},"159":{"name":"sortedIndex","line":4904,"loc":{"start":{"line":4904,"column":4},"end":{"line":4904,"column":58}}},"160":{"name":"union","line":4935,"loc":{"start":{"line":4935,"column":4},"end":{"line":4935,"column":21}}},"161":{"name":"uniq","line":4983,"loc":{"start":{"line":4983,"column":4},"end":{"line":4983,"column":54}}},"162":{"name":"without","line":5011,"loc":{"start":{"line":5011,"column":4},"end":{"line":5011,"column":28}}},"163":{"name":"xor","line":5032,"loc":{"start":{"line":5032,"column":4},"end":{"line":5032,"column":19}}},"164":{"name":"zip","line":5063,"loc":{"start":{"line":5063,"column":4},"end":{"line":5063,"column":19}}},"165":{"name":"zipObject","line":5093,"loc":{"start":{"line":5093,"column":4},"end":{"line":5093,"column":37}}},"166":{"name":"after","line":5138,"loc":{"start":{"line":5138,"column":4},"end":{"line":5138,"column":28}}},"167":{"name":"(anonymous_167)","line":5142,"loc":{"start":{"line":5142,"column":13},"end":{"line":5142,"column":24}}},"168":{"name":"bind","line":5171,"loc":{"start":{"line":5171,"column":4},"end":{"line":5171,"column":33}}},"169":{"name":"bindAll","line":5201,"loc":{"start":{"line":5201,"column":4},"end":{"line":5201,"column":29}}},"170":{"name":"bindKey","line":5247,"loc":{"start":{"line":5247,"column":4},"end":{"line":5247,"column":34}}},"171":{"name":"compose","line":5283,"loc":{"start":{"line":5283,"column":4},"end":{"line":5283,"column":23}}},"172":{"name":"(anonymous_172)","line":5292,"loc":{"start":{"line":5292,"column":13},"end":{"line":5292,"column":24}}},"173":{"name":"curry","line":5331,"loc":{"start":{"line":5331,"column":4},"end":{"line":5331,"column":32}}},"174":{"name":"debounce","line":5375,"loc":{"start":{"line":5375,"column":4},"end":{"line":5375,"column":43}}},"175":{"name":"(anonymous_175)","line":5399,"loc":{"start":{"line":5399,"column":20},"end":{"line":5399,"column":31}}},"176":{"name":"(anonymous_176)","line":5419,"loc":{"start":{"line":5419,"column":23},"end":{"line":5419,"column":34}}},"177":{"name":"(anonymous_177)","line":5433,"loc":{"start":{"line":5433,"column":13},"end":{"line":5433,"column":24}}},"178":{"name":"defer","line":5491,"loc":{"start":{"line":5491,"column":4},"end":{"line":5491,"column":25}}},"179":{"name":"(anonymous_179)","line":5496,"loc":{"start":{"line":5496,"column":24},"end":{"line":5496,"column":35}}},"180":{"name":"delay","line":5515,"loc":{"start":{"line":5515,"column":4},"end":{"line":5515,"column":31}}},"181":{"name":"(anonymous_181)","line":5520,"loc":{"start":{"line":5520,"column":24},"end":{"line":5520,"column":35}}},"182":{"name":"memoize","line":5560,"loc":{"start":{"line":5560,"column":4},"end":{"line":5560,"column":37}}},"183":{"name":"(anonymous_183)","line":5564,"loc":{"start":{"line":5564,"column":21},"end":{"line":5564,"column":32}}},"184":{"name":"once","line":5593,"loc":{"start":{"line":5593,"column":4},"end":{"line":5593,"column":24}}},"185":{"name":"(anonymous_185)","line":5600,"loc":{"start":{"line":5600,"column":13},"end":{"line":5600,"column":24}}},"186":{"name":"partial","line":5631,"loc":{"start":{"line":5631,"column":4},"end":{"line":5631,"column":27}}},"187":{"name":"partialRight","line":5662,"loc":{"start":{"line":5662,"column":4},"end":{"line":5662,"column":32}}},"188":{"name":"throttle","line":5697,"loc":{"start":{"line":5697,"column":4},"end":{"line":5697,"column":43}}},"189":{"name":"wrap","line":5738,"loc":{"start":{"line":5738,"column":4},"end":{"line":5738,"column":34}}},"190":{"name":"constant","line":5759,"loc":{"start":{"line":5759,"column":4},"end":{"line":5759,"column":29}}},"191":{"name":"(anonymous_191)","line":5760,"loc":{"start":{"line":5760,"column":13},"end":{"line":5760,"column":24}}},"192":{"name":"createCallback","line":5796,"loc":{"start":{"line":5796,"column":4},"end":{"line":5796,"column":53}}},"193":{"name":"(anonymous_193)","line":5813,"loc":{"start":{"line":5813,"column":15},"end":{"line":5813,"column":32}}},"194":{"name":"(anonymous_194)","line":5818,"loc":{"start":{"line":5818,"column":13},"end":{"line":5818,"column":30}}},"195":{"name":"escape","line":5845,"loc":{"start":{"line":5845,"column":4},"end":{"line":5845,"column":28}}},"196":{"name":"identity","line":5863,"loc":{"start":{"line":5863,"column":4},"end":{"line":5863,"column":29}}},"197":{"name":"mixin","line":5895,"loc":{"start":{"line":5895,"column":4},"end":{"line":5895,"column":44}}},"198":{"name":"(anonymous_198)","line":5916,"loc":{"start":{"line":5916,"column":27},"end":{"line":5916,"column":48}}},"199":{"name":"(anonymous_199)","line":5919,"loc":{"start":{"line":5919,"column":39},"end":{"line":5919,"column":50}}},"200":{"name":"noConflict","line":5951,"loc":{"start":{"line":5951,"column":4},"end":{"line":5951,"column":26}}},"201":{"name":"noop","line":5968,"loc":{"start":{"line":5968,"column":4},"end":{"line":5968,"column":20}}},"202":{"name":"(anonymous_202)","line":5985,"loc":{"start":{"line":5985,"column":49},"end":{"line":5985,"column":60}}},"203":{"name":"(anonymous_203)","line":6008,"loc":{"start":{"line":6008,"column":77},"end":{"line":6008,"column":100}}},"204":{"name":"property","line":6037,"loc":{"start":{"line":6037,"column":4},"end":{"line":6037,"column":27}}},"205":{"name":"(anonymous_205)","line":6038,"loc":{"start":{"line":6038,"column":13},"end":{"line":6038,"column":30}}},"206":{"name":"random","line":6070,"loc":{"start":{"line":6070,"column":4},"end":{"line":6070,"column":40}}},"207":{"name":"result","line":6128,"loc":{"start":{"line":6128,"column":4},"end":{"line":6128,"column":33}}},"208":{"name":"template","line":6221,"loc":{"start":{"line":6221,"column":4},"end":{"line":6221,"column":43}}},"209":{"name":"(anonymous_209)","line":6249,"loc":{"start":{"line":6249,"column":33},"end":{"line":6249,"column":120}}},"210":{"name":"times","line":6344,"loc":{"start":{"line":6344,"column":4},"end":{"line":6344,"column":41}}},"211":{"name":"unescape","line":6371,"loc":{"start":{"line":6371,"column":4},"end":{"line":6371,"column":30}}},"212":{"name":"uniqueId","line":6391,"loc":{"start":{"line":6391,"column":4},"end":{"line":6391,"column":30}}},"213":{"name":"chain","line":6422,"loc":{"start":{"line":6422,"column":4},"end":{"line":6422,"column":26}}},"214":{"name":"tap","line":6448,"loc":{"start":{"line":6448,"column":4},"end":{"line":6448,"column":37}}},"215":{"name":"wrapperChain","line":6478,"loc":{"start":{"line":6478,"column":4},"end":{"line":6478,"column":28}}},"216":{"name":"wrapperToString","line":6495,"loc":{"start":{"line":6495,"column":4},"end":{"line":6495,"column":31}}},"217":{"name":"wrapperValueOf","line":6512,"loc":{"start":{"line":6512,"column":4},"end":{"line":6512,"column":30}}},"218":{"name":"(anonymous_218)","line":6668,"loc":{"start":{"line":6668,"column":10},"end":{"line":6668,"column":21}}},"219":{"name":"(anonymous_219)","line":6670,"loc":{"start":{"line":6670,"column":21},"end":{"line":6670,"column":48}}},"220":{"name":"(anonymous_220)","line":6689,"loc":{"start":{"line":6689,"column":19},"end":{"line":6689,"column":46}}},"221":{"name":"(anonymous_221)","line":6692,"loc":{"start":{"line":6692,"column":38},"end":{"line":6692,"column":57}}},"222":{"name":"(anonymous_222)","line":6721,"loc":{"start":{"line":6721,"column":38},"end":{"line":6721,"column":59}}},"223":{"name":"(anonymous_223)","line":6723,"loc":{"start":{"line":6723,"column":37},"end":{"line":6723,"column":48}}},"224":{"name":"(anonymous_224)","line":6734,"loc":{"start":{"line":6734,"column":52},"end":{"line":6734,"column":73}}},"225":{"name":"(anonymous_225)","line":6736,"loc":{"start":{"line":6736,"column":37},"end":{"line":6736,"column":48}}},"226":{"name":"(anonymous_226)","line":6743,"loc":{"start":{"line":6743,"column":43},"end":{"line":6743,"column":64}}},"227":{"name":"(anonymous_227)","line":6745,"loc":{"start":{"line":6745,"column":37},"end":{"line":6745,"column":48}}},"228":{"name":"(anonymous_228)","line":6767,"loc":{"start":{"line":6767,"column":11},"end":{"line":6767,"column":22}}}},"statementMap":{"1":{"start":{"line":10,"column":1},"end":{"line":6786,"column":14}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":16}},"3":{"start":{"line":16,"column":2},"end":{"line":17,"column":22}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":20}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":33}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":26}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":23}},"8":{"start":{"line":32,"column":2},"end":{"line":41,"column":4}},"9":{"start":{"line":44,"column":2},"end":{"line":46,"column":62}},"10":{"start":{"line":52,"column":2},"end":{"line":52,"column":55}},"11":{"start":{"line":55,"column":2},"end":{"line":55,"column":23}},"12":{"start":{"line":58,"column":2},"end":{"line":58,"column":46}},"13":{"start":{"line":61,"column":2},"end":{"line":61,"column":41}},"14":{"start":{"line":64,"column":2},"end":{"line":64,"column":73}},"15":{"start":{"line":67,"column":2},"end":{"line":67,"column":25}},"16":{"start":{"line":70,"column":2},"end":{"line":70,"column":26}},"17":{"start":{"line":73,"column":2},"end":{"line":73,"column":53}},"18":{"start":{"line":76,"column":2},"end":{"line":80,"column":4}},"19":{"start":{"line":83,"column":2},"end":{"line":83,"column":26}},"20":{"start":{"line":86,"column":2},"end":{"line":94,"column":38}},"21":{"start":{"line":97,"column":2},"end":{"line":97,"column":28}},"22":{"start":{"line":98,"column":2},"end":{"line":98,"column":38}},"23":{"start":{"line":99,"column":2},"end":{"line":102,"column":71}},"24":{"start":{"line":105,"column":2},"end":{"line":109,"column":4}},"25":{"start":{"line":112,"column":2},"end":{"line":117,"column":4}},"26":{"start":{"line":120,"column":2},"end":{"line":127,"column":4}},"27":{"start":{"line":130,"column":2},"end":{"line":138,"column":4}},"28":{"start":{"line":141,"column":2},"end":{"line":141,"column":60}},"29":{"start":{"line":144,"column":2},"end":{"line":144,"column":91}},"30":{"start":{"line":147,"column":2},"end":{"line":147,"column":86}},"31":{"start":{"line":150,"column":2},"end":{"line":150,"column":86}},"32":{"start":{"line":153,"column":2},"end":{"line":153,"column":56}},"33":{"start":{"line":154,"column":2},"end":{"line":156,"column":3}},"34":{"start":{"line":155,"column":4},"end":{"line":155,"column":22}},"35":{"start":{"line":170,"column":2},"end":{"line":180,"column":3}},"36":{"start":{"line":171,"column":4},"end":{"line":172,"column":42}},"37":{"start":{"line":174,"column":4},"end":{"line":178,"column":5}},"38":{"start":{"line":175,"column":6},"end":{"line":177,"column":7}},"39":{"start":{"line":176,"column":8},"end":{"line":176,"column":21}},"40":{"start":{"line":179,"column":4},"end":{"line":179,"column":14}},"41":{"start":{"line":191,"column":2},"end":{"line":207,"column":3}},"42":{"start":{"line":192,"column":4},"end":{"line":192,"column":28}},"43":{"start":{"line":193,"column":4},"end":{"line":193,"column":24}},"44":{"start":{"line":195,"column":4},"end":{"line":197,"column":5}},"45":{"start":{"line":196,"column":6},"end":{"line":196,"column":35}},"46":{"start":{"line":198,"column":4},"end":{"line":200,"column":5}},"47":{"start":{"line":199,"column":6},"end":{"line":199,"column":22}},"48":{"start":{"line":201,"column":4},"end":{"line":201,"column":59}},"49":{"start":{"line":202,"column":4},"end":{"line":202,"column":48}},"50":{"start":{"line":204,"column":4},"end":{"line":206,"column":25}},"51":{"start":{"line":215,"column":2},"end":{"line":234,"column":3}},"52":{"start":{"line":216,"column":4},"end":{"line":217,"column":28}},"53":{"start":{"line":219,"column":4},"end":{"line":233,"column":5}},"54":{"start":{"line":220,"column":6},"end":{"line":220,"column":26}},"55":{"start":{"line":222,"column":6},"end":{"line":224,"column":7}},"56":{"start":{"line":223,"column":8},"end":{"line":223,"column":24}},"57":{"start":{"line":225,"column":6},"end":{"line":226,"column":56}},"58":{"start":{"line":228,"column":6},"end":{"line":232,"column":7}},"59":{"start":{"line":229,"column":8},"end":{"line":229,"column":62}},"60":{"start":{"line":231,"column":8},"end":{"line":231,"column":30}},"61":{"start":{"line":244,"column":2},"end":{"line":246,"column":3}},"62":{"start":{"line":245,"column":4},"end":{"line":245,"column":31}},"63":{"start":{"line":257,"column":2},"end":{"line":283,"column":3}},"64":{"start":{"line":258,"column":4},"end":{"line":261,"column":27}},"65":{"start":{"line":263,"column":4},"end":{"line":275,"column":5}},"66":{"start":{"line":264,"column":6},"end":{"line":265,"column":28}},"67":{"start":{"line":267,"column":6},"end":{"line":274,"column":7}},"68":{"start":{"line":268,"column":8},"end":{"line":270,"column":9}},"69":{"start":{"line":269,"column":10},"end":{"line":269,"column":19}},"70":{"start":{"line":271,"column":8},"end":{"line":273,"column":9}},"71":{"start":{"line":272,"column":10},"end":{"line":272,"column":20}},"72":{"start":{"line":282,"column":4},"end":{"line":282,"column":29}},"73":{"start":{"line":292,"column":2},"end":{"line":315,"column":3}},"74":{"start":{"line":293,"column":4},"end":{"line":297,"column":33}},"75":{"start":{"line":299,"column":4},"end":{"line":302,"column":5}},"76":{"start":{"line":301,"column":6},"end":{"line":301,"column":19}},"77":{"start":{"line":303,"column":4},"end":{"line":303,"column":28}},"78":{"start":{"line":304,"column":4},"end":{"line":304,"column":80}},"79":{"start":{"line":306,"column":4},"end":{"line":306,"column":29}},"80":{"start":{"line":307,"column":4},"end":{"line":307,"column":25}},"81":{"start":{"line":308,"column":4},"end":{"line":308,"column":25}},"82":{"start":{"line":309,"column":4},"end":{"line":309,"column":28}},"83":{"start":{"line":311,"column":4},"end":{"line":313,"column":5}},"84":{"start":{"line":312,"column":6},"end":{"line":312,"column":32}},"85":{"start":{"line":314,"column":4},"end":{"line":314,"column":18}},"86":{"start":{"line":325,"column":2},"end":{"line":327,"column":3}},"87":{"start":{"line":326,"column":4},"end":{"line":326,"column":39}},"88":{"start":{"line":335,"column":2},"end":{"line":337,"column":3}},"89":{"start":{"line":336,"column":4},"end":{"line":336,"column":33}},"90":{"start":{"line":345,"column":2},"end":{"line":361,"column":3}},"91":{"start":{"line":346,"column":4},"end":{"line":360,"column":6}},"92":{"start":{"line":369,"column":2},"end":{"line":374,"column":3}},"93":{"start":{"line":370,"column":4},"end":{"line":370,"column":21}},"94":{"start":{"line":371,"column":4},"end":{"line":373,"column":5}},"95":{"start":{"line":372,"column":6},"end":{"line":372,"column":28}},"96":{"start":{"line":382,"column":2},"end":{"line":391,"column":3}},"97":{"start":{"line":383,"column":4},"end":{"line":383,"column":29}},"98":{"start":{"line":384,"column":4},"end":{"line":386,"column":5}},"99":{"start":{"line":385,"column":6},"end":{"line":385,"column":27}},"100":{"start":{"line":387,"column":4},"end":{"line":387,"column":120}},"101":{"start":{"line":388,"column":4},"end":{"line":390,"column":5}},"102":{"start":{"line":389,"column":6},"end":{"line":389,"column":30}},"103":{"start":{"line":406,"column":2},"end":{"line":419,"column":3}},"104":{"start":{"line":407,"column":4},"end":{"line":407,"column":25}},"105":{"start":{"line":408,"column":4},"end":{"line":410,"column":5}},"106":{"start":{"line":409,"column":6},"end":{"line":409,"column":37}},"107":{"start":{"line":411,"column":4},"end":{"line":413,"column":48}},"108":{"start":{"line":415,"column":4},"end":{"line":417,"column":5}},"109":{"start":{"line":416,"column":6},"end":{"line":416,"column":43}},"110":{"start":{"line":418,"column":4},"end":{"line":418,"column":18}},"111":{"start":{"line":432,"column":2},"end":{"line":6751,"column":3}},"112":{"start":{"line":437,"column":4},"end":{"line":437,"column":94}},"113":{"start":{"line":440,"column":4},"end":{"line":449,"column":38}},"114":{"start":{"line":457,"column":4},"end":{"line":457,"column":22}},"115":{"start":{"line":460,"column":4},"end":{"line":460,"column":39}},"116":{"start":{"line":463,"column":4},"end":{"line":463,"column":28}},"117":{"start":{"line":466,"column":4},"end":{"line":466,"column":40}},"118":{"start":{"line":469,"column":4},"end":{"line":473,"column":6}},"119":{"start":{"line":476,"column":4},"end":{"line":485,"column":35}},"120":{"start":{"line":488,"column":4},"end":{"line":496,"column":9}},"121":{"start":{"line":490,"column":6},"end":{"line":494,"column":20}},"122":{"start":{"line":491,"column":8},"end":{"line":493,"column":43}},"123":{"start":{"line":495,"column":6},"end":{"line":495,"column":20}},"124":{"start":{"line":499,"column":4},"end":{"line":507,"column":35}},"125":{"start":{"line":510,"column":4},"end":{"line":510,"column":25}},"126":{"start":{"line":511,"column":4},"end":{"line":511,"column":36}},"127":{"start":{"line":512,"column":4},"end":{"line":512,"column":37}},"128":{"start":{"line":513,"column":4},"end":{"line":513,"column":34}},"129":{"start":{"line":514,"column":4},"end":{"line":514,"column":38}},"130":{"start":{"line":515,"column":4},"end":{"line":515,"column":38}},"131":{"start":{"line":516,"column":4},"end":{"line":516,"column":38}},"132":{"start":{"line":517,"column":4},"end":{"line":517,"column":38}},"133":{"start":{"line":518,"column":4},"end":{"line":518,"column":38}},"134":{"start":{"line":587,"column":4},"end":{"line":592,"column":5}},"135":{"start":{"line":589,"column":6},"end":{"line":591,"column":34}},"136":{"start":{"line":602,"column":4},"end":{"line":605,"column":5}},"137":{"start":{"line":603,"column":6},"end":{"line":603,"column":34}},"138":{"start":{"line":604,"column":6},"end":{"line":604,"column":31}},"139":{"start":{"line":607,"column":4},"end":{"line":607,"column":47}},"140":{"start":{"line":616,"column":4},"end":{"line":616,"column":38}},"141":{"start":{"line":625,"column":4},"end":{"line":625,"column":84}},"142":{"start":{"line":633,"column":4},"end":{"line":633,"column":57}},"143":{"start":{"line":644,"column":4},"end":{"line":694,"column":6}},"144":{"start":{"line":706,"column":4},"end":{"line":733,"column":5}},"145":{"start":{"line":707,"column":6},"end":{"line":709,"column":32}},"146":{"start":{"line":711,"column":6},"end":{"line":730,"column":7}},"147":{"start":{"line":714,"column":8},"end":{"line":720,"column":9}},"148":{"start":{"line":718,"column":10},"end":{"line":718,"column":40}},"149":{"start":{"line":719,"column":10},"end":{"line":719,"column":38}},"150":{"start":{"line":723,"column":8},"end":{"line":728,"column":9}},"151":{"start":{"line":725,"column":10},"end":{"line":726,"column":66}},"152":{"start":{"line":727,"column":10},"end":{"line":727,"column":57}},"153":{"start":{"line":729,"column":8},"end":{"line":729,"column":54}},"154":{"start":{"line":731,"column":6},"end":{"line":731,"column":35}},"155":{"start":{"line":732,"column":6},"end":{"line":732,"column":19}},"156":{"start":{"line":747,"column":4},"end":{"line":825,"column":5}},"157":{"start":{"line":748,"column":6},"end":{"line":753,"column":7}},"158":{"start":{"line":749,"column":8},"end":{"line":749,"column":37}},"159":{"start":{"line":750,"column":8},"end":{"line":752,"column":9}},"160":{"start":{"line":751,"column":10},"end":{"line":751,"column":24}},"161":{"start":{"line":755,"column":6},"end":{"line":755,"column":34}},"162":{"start":{"line":756,"column":6},"end":{"line":778,"column":7}},"163":{"start":{"line":757,"column":8},"end":{"line":757,"column":45}},"164":{"start":{"line":758,"column":8},"end":{"line":760,"column":9}},"165":{"start":{"line":759,"column":10},"end":{"line":759,"column":23}},"166":{"start":{"line":761,"column":8},"end":{"line":761,"column":42}},"167":{"start":{"line":762,"column":8},"end":{"line":775,"column":9}},"168":{"start":{"line":765,"column":12},"end":{"line":765,"column":36}},"169":{"start":{"line":769,"column":12},"end":{"line":769,"column":35}},"170":{"start":{"line":772,"column":12},"end":{"line":772,"column":61}},"171":{"start":{"line":773,"column":12},"end":{"line":773,"column":47}},"172":{"start":{"line":774,"column":12},"end":{"line":774,"column":26}},"173":{"start":{"line":777,"column":8},"end":{"line":777,"column":21}},"174":{"start":{"line":779,"column":6},"end":{"line":779,"column":33}},"175":{"start":{"line":780,"column":6},"end":{"line":796,"column":7}},"176":{"start":{"line":782,"column":8},"end":{"line":782,"column":34}},"177":{"start":{"line":783,"column":8},"end":{"line":783,"column":40}},"178":{"start":{"line":784,"column":8},"end":{"line":784,"column":40}},"179":{"start":{"line":786,"column":8},"end":{"line":786,"column":35}},"180":{"start":{"line":787,"column":8},"end":{"line":791,"column":9}},"181":{"start":{"line":788,"column":10},"end":{"line":790,"column":11}},"182":{"start":{"line":789,"column":12},"end":{"line":789,"column":34}},"183":{"start":{"line":792,"column":8},"end":{"line":792,"column":49}},"184":{"start":{"line":795,"column":8},"end":{"line":795,"column":58}},"185":{"start":{"line":798,"column":6},"end":{"line":805,"column":7}},"186":{"start":{"line":799,"column":8},"end":{"line":801,"column":9}},"187":{"start":{"line":800,"column":10},"end":{"line":800,"column":37}},"188":{"start":{"line":802,"column":8},"end":{"line":804,"column":9}},"189":{"start":{"line":803,"column":10},"end":{"line":803,"column":37}},"190":{"start":{"line":807,"column":6},"end":{"line":809,"column":7}},"191":{"start":{"line":808,"column":8},"end":{"line":808,"column":22}},"192":{"start":{"line":812,"column":6},"end":{"line":812,"column":25}},"193":{"start":{"line":813,"column":6},"end":{"line":813,"column":26}},"194":{"start":{"line":816,"column":6},"end":{"line":818,"column":9}},"195":{"start":{"line":817,"column":8},"end":{"line":817,"column":76}},"196":{"start":{"line":820,"column":6},"end":{"line":823,"column":7}},"197":{"start":{"line":821,"column":8},"end":{"line":821,"column":29}},"198":{"start":{"line":822,"column":8},"end":{"line":822,"column":29}},"199":{"start":{"line":824,"column":6},"end":{"line":824,"column":20}},"200":{"start":{"line":835,"column":4},"end":{"line":837,"column":5}},"201":{"start":{"line":836,"column":6},"end":{"line":836,"column":64}},"202":{"start":{"line":839,"column":4},"end":{"line":851,"column":5}},"203":{"start":{"line":840,"column":6},"end":{"line":850,"column":11}},"204":{"start":{"line":841,"column":8},"end":{"line":841,"column":28}},"205":{"start":{"line":842,"column":8},"end":{"line":849,"column":10}},"206":{"start":{"line":843,"column":10},"end":{"line":847,"column":11}},"207":{"start":{"line":844,"column":12},"end":{"line":844,"column":41}},"208":{"start":{"line":845,"column":12},"end":{"line":845,"column":36}},"209":{"start":{"line":846,"column":12},"end":{"line":846,"column":36}},"210":{"start":{"line":848,"column":10},"end":{"line":848,"column":44}},"211":{"start":{"line":863,"column":4},"end":{"line":908,"column":5}},"212":{"start":{"line":864,"column":6},"end":{"line":866,"column":7}},"213":{"start":{"line":865,"column":8},"end":{"line":865,"column":24}},"214":{"start":{"line":868,"column":6},"end":{"line":870,"column":7}},"215":{"start":{"line":869,"column":8},"end":{"line":869,"column":20}},"216":{"start":{"line":871,"column":6},"end":{"line":871,"column":39}},"217":{"start":{"line":872,"column":6},"end":{"line":888,"column":7}},"218":{"start":{"line":873,"column":8},"end":{"line":875,"column":9}},"219":{"start":{"line":874,"column":10},"end":{"line":874,"column":32}},"220":{"start":{"line":876,"column":8},"end":{"line":876,"column":51}},"221":{"start":{"line":877,"column":8},"end":{"line":887,"column":9}},"222":{"start":{"line":878,"column":10},"end":{"line":878,"column":45}},"223":{"start":{"line":879,"column":10},"end":{"line":881,"column":11}},"224":{"start":{"line":880,"column":12},"end":{"line":880,"column":48}},"225":{"start":{"line":882,"column":10},"end":{"line":886,"column":11}},"226":{"start":{"line":884,"column":12},"end":{"line":884,"column":43}},"227":{"start":{"line":885,"column":12},"end":{"line":885,"column":40}},"228":{"start":{"line":890,"column":6},"end":{"line":892,"column":7}},"229":{"start":{"line":891,"column":8},"end":{"line":891,"column":20}},"230":{"start":{"line":893,"column":6},"end":{"line":906,"column":7}},"231":{"start":{"line":894,"column":16},"end":{"line":896,"column":10}},"232":{"start":{"line":895,"column":10},"end":{"line":895,"column":43}},"233":{"start":{"line":897,"column":16},"end":{"line":899,"column":10}},"234":{"start":{"line":898,"column":10},"end":{"line":898,"column":42}},"235":{"start":{"line":900,"column":16},"end":{"line":902,"column":10}},"236":{"start":{"line":901,"column":10},"end":{"line":901,"column":62}},"237":{"start":{"line":903,"column":16},"end":{"line":905,"column":10}},"238":{"start":{"line":904,"column":10},"end":{"line":904,"column":75}},"239":{"start":{"line":907,"column":6},"end":{"line":907,"column":33}},"240":{"start":{"line":918,"column":4},"end":{"line":961,"column":5}},"241":{"start":{"line":919,"column":6},"end":{"line":924,"column":30}},"242":{"start":{"line":926,"column":6},"end":{"line":930,"column":21}},"243":{"start":{"line":932,"column":6},"end":{"line":958,"column":7}},"244":{"start":{"line":933,"column":8},"end":{"line":933,"column":50}},"245":{"start":{"line":934,"column":8},"end":{"line":937,"column":9}},"246":{"start":{"line":935,"column":10},"end":{"line":935,"column":40}},"247":{"start":{"line":936,"column":10},"end":{"line":936,"column":38}},"248":{"start":{"line":938,"column":8},"end":{"line":947,"column":9}},"249":{"start":{"line":939,"column":10},"end":{"line":939,"column":44}},"250":{"start":{"line":940,"column":10},"end":{"line":942,"column":11}},"251":{"start":{"line":941,"column":12},"end":{"line":941,"column":47}},"252":{"start":{"line":943,"column":10},"end":{"line":946,"column":11}},"253":{"start":{"line":944,"column":12},"end":{"line":944,"column":32}},"254":{"start":{"line":945,"column":12},"end":{"line":945,"column":114}},"255":{"start":{"line":948,"column":8},"end":{"line":948,"column":35}},"256":{"start":{"line":949,"column":8},"end":{"line":951,"column":9}},"257":{"start":{"line":950,"column":10},"end":{"line":950,"column":34}},"258":{"start":{"line":952,"column":8},"end":{"line":956,"column":9}},"259":{"start":{"line":953,"column":10},"end":{"line":953,"column":51}},"260":{"start":{"line":954,"column":10},"end":{"line":954,"column":53}},"261":{"start":{"line":955,"column":10},"end":{"line":955,"column":57}},"262":{"start":{"line":957,"column":8},"end":{"line":957,"column":45}},"263":{"start":{"line":959,"column":6},"end":{"line":959,"column":35}},"264":{"start":{"line":960,"column":6},"end":{"line":960,"column":19}},"265":{"start":{"line":972,"column":4},"end":{"line":998,"column":5}},"266":{"start":{"line":973,"column":6},"end":{"line":977,"column":22}},"267":{"start":{"line":979,"column":6},"end":{"line":987,"column":7}},"268":{"start":{"line":980,"column":8},"end":{"line":980,"column":40}},"269":{"start":{"line":981,"column":8},"end":{"line":986,"column":9}},"270":{"start":{"line":982,"column":10},"end":{"line":982,"column":33}},"271":{"start":{"line":983,"column":10},"end":{"line":983,"column":25}},"272":{"start":{"line":985,"column":10},"end":{"line":985,"column":26}},"273":{"start":{"line":988,"column":6},"end":{"line":993,"column":7}},"274":{"start":{"line":989,"column":8},"end":{"line":989,"column":33}},"275":{"start":{"line":990,"column":8},"end":{"line":992,"column":9}},"276":{"start":{"line":991,"column":10},"end":{"line":991,"column":29}},"277":{"start":{"line":994,"column":6},"end":{"line":996,"column":7}},"278":{"start":{"line":995,"column":8},"end":{"line":995,"column":30}},"279":{"start":{"line":997,"column":6},"end":{"line":997,"column":20}},"280":{"start":{"line":1011,"column":4},"end":{"line":1038,"column":5}},"281":{"start":{"line":1012,"column":6},"end":{"line":1014,"column":22}},"282":{"start":{"line":1016,"column":6},"end":{"line":1036,"column":7}},"283":{"start":{"line":1017,"column":8},"end":{"line":1017,"column":33}},"284":{"start":{"line":1019,"column":8},"end":{"line":1035,"column":9}},"285":{"start":{"line":1022,"column":10},"end":{"line":1024,"column":11}},"286":{"start":{"line":1023,"column":12},"end":{"line":1023,"column":60}},"287":{"start":{"line":1025,"column":10},"end":{"line":1027,"column":39}},"288":{"start":{"line":1029,"column":10},"end":{"line":1029,"column":37}},"289":{"start":{"line":1030,"column":10},"end":{"line":1032,"column":11}},"290":{"start":{"line":1031,"column":12},"end":{"line":1031,"column":49}},"291":{"start":{"line":1033,"column":15},"end":{"line":1035,"column":9}},"292":{"start":{"line":1034,"column":10},"end":{"line":1034,"column":29}},"293":{"start":{"line":1037,"column":6},"end":{"line":1037,"column":20}},"294":{"start":{"line":1053,"column":4},"end":{"line":1213,"column":5}},"295":{"start":{"line":1055,"column":6},"end":{"line":1060,"column":7}},"296":{"start":{"line":1056,"column":8},"end":{"line":1056,"column":36}},"297":{"start":{"line":1057,"column":8},"end":{"line":1059,"column":9}},"298":{"start":{"line":1058,"column":10},"end":{"line":1058,"column":26}},"299":{"start":{"line":1062,"column":6},"end":{"line":1065,"column":7}},"300":{"start":{"line":1064,"column":8},"end":{"line":1064,"column":43}},"301":{"start":{"line":1066,"column":6},"end":{"line":1067,"column":31}},"302":{"start":{"line":1070,"column":6},"end":{"line":1074,"column":7}},"303":{"start":{"line":1073,"column":8},"end":{"line":1073,"column":21}},"304":{"start":{"line":1077,"column":6},"end":{"line":1079,"column":7}},"305":{"start":{"line":1078,"column":8},"end":{"line":1078,"column":23}},"306":{"start":{"line":1081,"column":6},"end":{"line":1082,"column":40}},"307":{"start":{"line":1084,"column":6},"end":{"line":1086,"column":7}},"308":{"start":{"line":1085,"column":8},"end":{"line":1085,"column":32}},"309":{"start":{"line":1087,"column":6},"end":{"line":1089,"column":7}},"310":{"start":{"line":1088,"column":8},"end":{"line":1088,"column":33}},"311":{"start":{"line":1090,"column":6},"end":{"line":1092,"column":7}},"312":{"start":{"line":1091,"column":8},"end":{"line":1091,"column":21}},"313":{"start":{"line":1093,"column":6},"end":{"line":1112,"column":7}},"314":{"start":{"line":1098,"column":10},"end":{"line":1098,"column":26}},"315":{"start":{"line":1102,"column":10},"end":{"line":1105,"column":52}},"316":{"start":{"line":1111,"column":10},"end":{"line":1111,"column":32}},"317":{"start":{"line":1113,"column":6},"end":{"line":1113,"column":42}},"318":{"start":{"line":1114,"column":6},"end":{"line":1137,"column":7}},"319":{"start":{"line":1116,"column":8},"end":{"line":1117,"column":61}},"320":{"start":{"line":1119,"column":8},"end":{"line":1121,"column":9}},"321":{"start":{"line":1120,"column":10},"end":{"line":1120,"column":124}},"322":{"start":{"line":1123,"column":8},"end":{"line":1125,"column":9}},"323":{"start":{"line":1124,"column":10},"end":{"line":1124,"column":23}},"324":{"start":{"line":1127,"column":8},"end":{"line":1128,"column":34}},"325":{"start":{"line":1131,"column":8},"end":{"line":1136,"column":9}},"326":{"start":{"line":1135,"column":10},"end":{"line":1135,"column":23}},"327":{"start":{"line":1141,"column":6},"end":{"line":1141,"column":32}},"328":{"start":{"line":1142,"column":6},"end":{"line":1142,"column":38}},"329":{"start":{"line":1143,"column":6},"end":{"line":1143,"column":38}},"330":{"start":{"line":1145,"column":6},"end":{"line":1145,"column":33}},"331":{"start":{"line":1146,"column":6},"end":{"line":1150,"column":7}},"332":{"start":{"line":1147,"column":8},"end":{"line":1149,"column":9}},"333":{"start":{"line":1148,"column":10},"end":{"line":1148,"column":37}},"334":{"start":{"line":1151,"column":6},"end":{"line":1151,"column":19}},"335":{"start":{"line":1152,"column":6},"end":{"line":1152,"column":20}},"336":{"start":{"line":1155,"column":6},"end":{"line":1155,"column":21}},"337":{"start":{"line":1156,"column":6},"end":{"line":1156,"column":21}},"338":{"start":{"line":1159,"column":6},"end":{"line":1204,"column":7}},"339":{"start":{"line":1161,"column":8},"end":{"line":1161,"column":26}},"340":{"start":{"line":1162,"column":8},"end":{"line":1162,"column":24}},"341":{"start":{"line":1163,"column":8},"end":{"line":1163,"column":32}},"342":{"start":{"line":1165,"column":8},"end":{"line":1181,"column":9}},"343":{"start":{"line":1167,"column":10},"end":{"line":1180,"column":11}},"344":{"start":{"line":1168,"column":12},"end":{"line":1169,"column":32}},"345":{"start":{"line":1171,"column":12},"end":{"line":1179,"column":13}},"346":{"start":{"line":1172,"column":14},"end":{"line":1176,"column":15}},"347":{"start":{"line":1173,"column":16},"end":{"line":1175,"column":17}},"348":{"start":{"line":1174,"column":18},"end":{"line":1174,"column":24}},"349":{"start":{"line":1177,"column":19},"end":{"line":1179,"column":13}},"350":{"start":{"line":1178,"column":14},"end":{"line":1178,"column":20}},"351":{"start":{"line":1186,"column":8},"end":{"line":1193,"column":11}},"352":{"start":{"line":1187,"column":10},"end":{"line":1192,"column":11}},"353":{"start":{"line":1189,"column":12},"end":{"line":1189,"column":19}},"354":{"start":{"line":1191,"column":12},"end":{"line":1191,"column":123}},"355":{"start":{"line":1195,"column":8},"end":{"line":1203,"column":9}},"356":{"start":{"line":1197,"column":10},"end":{"line":1202,"column":13}},"357":{"start":{"line":1198,"column":12},"end":{"line":1201,"column":13}},"358":{"start":{"line":1200,"column":14},"end":{"line":1200,"column":44}},"359":{"start":{"line":1205,"column":6},"end":{"line":1205,"column":19}},"360":{"start":{"line":1206,"column":6},"end":{"line":1206,"column":19}},"361":{"start":{"line":1208,"column":6},"end":{"line":1211,"column":7}},"362":{"start":{"line":1209,"column":8},"end":{"line":1209,"column":29}},"363":{"start":{"line":1210,"column":8},"end":{"line":1210,"column":29}},"364":{"start":{"line":1212,"column":6},"end":{"line":1212,"column":20}},"365":{"start":{"line":1226,"column":4},"end":{"line":1278,"column":5}},"366":{"start":{"line":1227,"column":6},"end":{"line":1277,"column":9}},"367":{"start":{"line":1228,"column":8},"end":{"line":1231,"column":32}},"368":{"start":{"line":1233,"column":8},"end":{"line":1275,"column":9}},"369":{"start":{"line":1235,"column":10},"end":{"line":1235,"column":42}},"370":{"start":{"line":1236,"column":10},"end":{"line":1241,"column":11}},"371":{"start":{"line":1237,"column":12},"end":{"line":1240,"column":13}},"372":{"start":{"line":1238,"column":14},"end":{"line":1238,"column":42}},"373":{"start":{"line":1239,"column":14},"end":{"line":1239,"column":20}},"374":{"start":{"line":1242,"column":10},"end":{"line":1263,"column":11}},"375":{"start":{"line":1243,"column":12},"end":{"line":1243,"column":26}},"376":{"start":{"line":1244,"column":12},"end":{"line":1249,"column":13}},"377":{"start":{"line":1245,"column":14},"end":{"line":1245,"column":47}},"378":{"start":{"line":1246,"column":14},"end":{"line":1248,"column":15}},"379":{"start":{"line":1247,"column":16},"end":{"line":1247,"column":31}},"380":{"start":{"line":1250,"column":12},"end":{"line":1254,"column":13}},"381":{"start":{"line":1251,"column":14},"end":{"line":1253,"column":54}},"382":{"start":{"line":1256,"column":12},"end":{"line":1256,"column":32}},"383":{"start":{"line":1257,"column":12},"end":{"line":1257,"column":31}},"384":{"start":{"line":1260,"column":12},"end":{"line":1262,"column":13}},"385":{"start":{"line":1261,"column":14},"end":{"line":1261,"column":65}},"386":{"start":{"line":1266,"column":10},"end":{"line":1271,"column":11}},"387":{"start":{"line":1267,"column":12},"end":{"line":1267,"column":45}},"388":{"start":{"line":1268,"column":12},"end":{"line":1270,"column":13}},"389":{"start":{"line":1269,"column":14},"end":{"line":1269,"column":30}},"390":{"start":{"line":1272,"column":10},"end":{"line":1274,"column":11}},"391":{"start":{"line":1273,"column":12},"end":{"line":1273,"column":27}},"392":{"start":{"line":1276,"column":8},"end":{"line":1276,"column":28}},"393":{"start":{"line":1289,"column":4},"end":{"line":1291,"column":5}},"394":{"start":{"line":1290,"column":6},"end":{"line":1290,"column":59}},"395":{"start":{"line":1303,"column":4},"end":{"line":1338,"column":5}},"396":{"start":{"line":1304,"column":6},"end":{"line":1307,"column":22}},"397":{"start":{"line":1309,"column":6},"end":{"line":1310,"column":61}},"398":{"start":{"line":1312,"column":6},"end":{"line":1316,"column":7}},"399":{"start":{"line":1313,"column":8},"end":{"line":1313,"column":38}},"400":{"start":{"line":1314,"column":8},"end":{"line":1314,"column":31}},"401":{"start":{"line":1315,"column":8},"end":{"line":1315,"column":21}},"402":{"start":{"line":1317,"column":6},"end":{"line":1330,"column":7}},"403":{"start":{"line":1318,"column":8},"end":{"line":1319,"column":72}},"404":{"start":{"line":1321,"column":8},"end":{"line":1329,"column":9}},"405":{"start":{"line":1325,"column":10},"end":{"line":1327,"column":11}},"406":{"start":{"line":1326,"column":12},"end":{"line":1326,"column":32}},"407":{"start":{"line":1328,"column":10},"end":{"line":1328,"column":29}},"408":{"start":{"line":1331,"column":6},"end":{"line":1336,"column":7}},"409":{"start":{"line":1332,"column":8},"end":{"line":1332,"column":33}},"410":{"start":{"line":1333,"column":8},"end":{"line":1333,"column":28}},"411":{"start":{"line":1334,"column":13},"end":{"line":1336,"column":7}},"412":{"start":{"line":1335,"column":8},"end":{"line":1335,"column":27}},"413":{"start":{"line":1337,"column":6},"end":{"line":1337,"column":20}},"414":{"start":{"line":1350,"column":4},"end":{"line":1370,"column":5}},"415":{"start":{"line":1351,"column":6},"end":{"line":1369,"column":8}},"416":{"start":{"line":1352,"column":8},"end":{"line":1352,"column":24}},"417":{"start":{"line":1353,"column":8},"end":{"line":1353,"column":63}},"418":{"start":{"line":1355,"column":8},"end":{"line":1356,"column":56}},"419":{"start":{"line":1358,"column":8},"end":{"line":1367,"column":9}},"420":{"start":{"line":1359,"column":10},"end":{"line":1362,"column":11}},"421":{"start":{"line":1360,"column":12},"end":{"line":1360,"column":42}},"422":{"start":{"line":1361,"column":12},"end":{"line":1361,"column":82}},"423":{"start":{"line":1364,"column":10},"end":{"line":1366,"column":13}},"424":{"start":{"line":1365,"column":12},"end":{"line":1365,"column":80}},"425":{"start":{"line":1368,"column":8},"end":{"line":1368,"column":22}},"426":{"start":{"line":1394,"column":4},"end":{"line":1450,"column":5}},"427":{"start":{"line":1395,"column":6},"end":{"line":1400,"column":40}},"428":{"start":{"line":1402,"column":6},"end":{"line":1404,"column":7}},"429":{"start":{"line":1403,"column":8},"end":{"line":1403,"column":28}},"430":{"start":{"line":1405,"column":6},"end":{"line":1408,"column":7}},"431":{"start":{"line":1406,"column":8},"end":{"line":1406,"column":23}},"432":{"start":{"line":1407,"column":8},"end":{"line":1407,"column":40}},"433":{"start":{"line":1409,"column":6},"end":{"line":1412,"column":7}},"434":{"start":{"line":1410,"column":8},"end":{"line":1410,"column":23}},"435":{"start":{"line":1411,"column":8},"end":{"line":1411,"column":50}},"436":{"start":{"line":1413,"column":6},"end":{"line":1413,"column":47}},"437":{"start":{"line":1414,"column":6},"end":{"line":1446,"column":7}},"438":{"start":{"line":1416,"column":8},"end":{"line":1416,"column":35}},"439":{"start":{"line":1417,"column":8},"end":{"line":1419,"column":9}},"440":{"start":{"line":1418,"column":10},"end":{"line":1418,"column":43}},"441":{"start":{"line":1420,"column":8},"end":{"line":1422,"column":9}},"442":{"start":{"line":1421,"column":10},"end":{"line":1421,"column":43}},"443":{"start":{"line":1424,"column":8},"end":{"line":1426,"column":9}},"444":{"start":{"line":1425,"column":10},"end":{"line":1425,"column":32}},"445":{"start":{"line":1428,"column":8},"end":{"line":1430,"column":9}},"446":{"start":{"line":1429,"column":10},"end":{"line":1429,"column":23}},"447":{"start":{"line":1432,"column":8},"end":{"line":1434,"column":9}},"448":{"start":{"line":1433,"column":10},"end":{"line":1433,"column":30}},"449":{"start":{"line":1436,"column":8},"end":{"line":1438,"column":9}},"450":{"start":{"line":1437,"column":10},"end":{"line":1437,"column":69}},"451":{"start":{"line":1440,"column":8},"end":{"line":1442,"column":9}},"452":{"start":{"line":1441,"column":10},"end":{"line":1441,"column":77}},"453":{"start":{"line":1444,"column":8},"end":{"line":1444,"column":31}},"454":{"start":{"line":1445,"column":8},"end":{"line":1445,"column":51}},"455":{"start":{"line":1448,"column":6},"end":{"line":1448,"column":84}},"456":{"start":{"line":1449,"column":6},"end":{"line":1449,"column":85}},"457":{"start":{"line":1459,"column":4},"end":{"line":1461,"column":5}},"458":{"start":{"line":1460,"column":6},"end":{"line":1460,"column":32}},"459":{"start":{"line":1471,"column":4},"end":{"line":1474,"column":5}},"460":{"start":{"line":1472,"column":6},"end":{"line":1472,"column":80}},"461":{"start":{"line":1473,"column":6},"end":{"line":1473,"column":20}},"462":{"start":{"line":1483,"column":4},"end":{"line":1485,"column":5}},"463":{"start":{"line":1484,"column":6},"end":{"line":1484,"column":64}},"464":{"start":{"line":1494,"column":4},"end":{"line":1498,"column":6}},"465":{"start":{"line":1495,"column":6},"end":{"line":1495,"column":31}},"466":{"start":{"line":1496,"column":6},"end":{"line":1496,"column":55}},"467":{"start":{"line":1497,"column":6},"end":{"line":1497,"column":30}},"468":{"start":{"line":1510,"column":4},"end":{"line":1526,"column":5}},"469":{"start":{"line":1511,"column":6},"end":{"line":1512,"column":17}},"470":{"start":{"line":1515,"column":6},"end":{"line":1518,"column":7}},"471":{"start":{"line":1517,"column":8},"end":{"line":1517,"column":21}},"472":{"start":{"line":1522,"column":6},"end":{"line":1524,"column":9}},"473":{"start":{"line":1523,"column":8},"end":{"line":1523,"column":21}},"474":{"start":{"line":1525,"column":6},"end":{"line":1525,"column":80}},"475":{"start":{"line":1535,"column":4},"end":{"line":1537,"column":5}},"476":{"start":{"line":1536,"column":6},"end":{"line":1536,"column":34}},"477":{"start":{"line":1557,"column":4},"end":{"line":1560,"column":5}},"478":{"start":{"line":1558,"column":6},"end":{"line":1559,"column":51}},"479":{"start":{"line":1579,"column":4},"end":{"line":1582,"column":6}},"480":{"start":{"line":1580,"column":6},"end":{"line":1581,"column":52}},"481":{"start":{"line":1593,"column":4},"end":{"line":1603,"column":6}},"482":{"start":{"line":1594,"column":6},"end":{"line":1594,"column":48}},"483":{"start":{"line":1595,"column":6},"end":{"line":1595,"column":35}},"484":{"start":{"line":1595,"column":21},"end":{"line":1595,"column":35}},"485":{"start":{"line":1596,"column":6},"end":{"line":1596,"column":55}},"486":{"start":{"line":1596,"column":41},"end":{"line":1596,"column":55}},"487":{"start":{"line":1597,"column":8},"end":{"line":1601,"column":9}},"488":{"start":{"line":1598,"column":10},"end":{"line":1600,"column":11}},"489":{"start":{"line":1599,"column":12},"end":{"line":1599,"column":31}},"490":{"start":{"line":1602,"column":6},"end":{"line":1602,"column":19}},"491":{"start":{"line":1618,"column":4},"end":{"line":1623,"column":6}},"492":{"start":{"line":1619,"column":6},"end":{"line":1621,"column":7}},"493":{"start":{"line":1620,"column":8},"end":{"line":1620,"column":18}},"494":{"start":{"line":1622,"column":6},"end":{"line":1622,"column":32}},"495":{"start":{"line":1633,"column":4},"end":{"line":1639,"column":6}},"496":{"start":{"line":1642,"column":4},"end":{"line":1642,"column":44}},"497":{"start":{"line":1645,"column":4},"end":{"line":1646,"column":78}},"498":{"start":{"line":1680,"column":4},"end":{"line":1705,"column":6}},"499":{"start":{"line":1681,"column":6},"end":{"line":1681,"column":54}},"500":{"start":{"line":1682,"column":6},"end":{"line":1682,"column":35}},"501":{"start":{"line":1682,"column":21},"end":{"line":1682,"column":35}},"502":{"start":{"line":1683,"column":6},"end":{"line":1685,"column":66}},"503":{"start":{"line":1686,"column":6},"end":{"line":1690,"column":7}},"504":{"start":{"line":1687,"column":8},"end":{"line":1687,"column":89}},"505":{"start":{"line":1688,"column":13},"end":{"line":1690,"column":7}},"506":{"start":{"line":1689,"column":8},"end":{"line":1689,"column":38}},"507":{"start":{"line":1691,"column":6},"end":{"line":1703,"column":7}},"508":{"start":{"line":1692,"column":8},"end":{"line":1692,"column":35}},"509":{"start":{"line":1693,"column":8},"end":{"line":1702,"column":9}},"510":{"start":{"line":1694,"column":8},"end":{"line":1696,"column":52}},"511":{"start":{"line":1698,"column":8},"end":{"line":1701,"column":9}},"512":{"start":{"line":1699,"column":10},"end":{"line":1699,"column":37}},"513":{"start":{"line":1700,"column":10},"end":{"line":1700,"column":96}},"514":{"start":{"line":1704,"column":6},"end":{"line":1704,"column":19}},"515":{"start":{"line":1747,"column":4},"end":{"line":1756,"column":5}},"516":{"start":{"line":1750,"column":6},"end":{"line":1754,"column":7}},"517":{"start":{"line":1751,"column":8},"end":{"line":1751,"column":27}},"518":{"start":{"line":1752,"column":8},"end":{"line":1752,"column":26}},"519":{"start":{"line":1753,"column":8},"end":{"line":1753,"column":23}},"520":{"start":{"line":1755,"column":6},"end":{"line":1755,"column":113}},"521":{"start":{"line":1799,"column":4},"end":{"line":1801,"column":5}},"522":{"start":{"line":1800,"column":6},"end":{"line":1800,"column":111}},"523":{"start":{"line":1834,"column":4},"end":{"line":1837,"column":5}},"524":{"start":{"line":1835,"column":6},"end":{"line":1835,"column":41}},"525":{"start":{"line":1836,"column":6},"end":{"line":1836,"column":62}},"526":{"start":{"line":1859,"column":4},"end":{"line":1879,"column":6}},"527":{"start":{"line":1860,"column":6},"end":{"line":1860,"column":54}},"528":{"start":{"line":1861,"column":6},"end":{"line":1861,"column":35}},"529":{"start":{"line":1861,"column":21},"end":{"line":1861,"column":35}},"530":{"start":{"line":1862,"column":6},"end":{"line":1864,"column":66}},"531":{"start":{"line":1865,"column":6},"end":{"line":1877,"column":7}},"532":{"start":{"line":1866,"column":8},"end":{"line":1866,"column":35}},"533":{"start":{"line":1867,"column":8},"end":{"line":1876,"column":9}},"534":{"start":{"line":1868,"column":8},"end":{"line":1870,"column":52}},"535":{"start":{"line":1872,"column":8},"end":{"line":1875,"column":9}},"536":{"start":{"line":1873,"column":10},"end":{"line":1873,"column":37}},"537":{"start":{"line":1874,"column":10},"end":{"line":1874,"column":83}},"538":{"start":{"line":1874,"column":51},"end":{"line":1874,"column":83}},"539":{"start":{"line":1878,"column":6},"end":{"line":1878,"column":19}},"540":{"start":{"line":1922,"column":4},"end":{"line":1932,"column":5}},"541":{"start":{"line":1923,"column":6},"end":{"line":1923,"column":17}},"542":{"start":{"line":1924,"column":6},"end":{"line":1924,"column":61}},"543":{"start":{"line":1925,"column":6},"end":{"line":1930,"column":9}},"544":{"start":{"line":1926,"column":8},"end":{"line":1929,"column":9}},"545":{"start":{"line":1927,"column":10},"end":{"line":1927,"column":23}},"546":{"start":{"line":1928,"column":10},"end":{"line":1928,"column":23}},"547":{"start":{"line":1931,"column":6},"end":{"line":1931,"column":20}},"548":{"start":{"line":1975,"column":4},"end":{"line":1985,"column":5}},"549":{"start":{"line":1976,"column":6},"end":{"line":1976,"column":17}},"550":{"start":{"line":1977,"column":6},"end":{"line":1977,"column":61}},"551":{"start":{"line":1978,"column":6},"end":{"line":1983,"column":9}},"552":{"start":{"line":1979,"column":8},"end":{"line":1982,"column":9}},"553":{"start":{"line":1980,"column":10},"end":{"line":1980,"column":23}},"554":{"start":{"line":1981,"column":10},"end":{"line":1981,"column":23}},"555":{"start":{"line":1984,"column":6},"end":{"line":1984,"column":20}},"556":{"start":{"line":2018,"column":4},"end":{"line":2027,"column":6}},"557":{"start":{"line":2019,"column":6},"end":{"line":2019,"column":58}},"558":{"start":{"line":2020,"column":6},"end":{"line":2020,"column":35}},"559":{"start":{"line":2020,"column":21},"end":{"line":2020,"column":35}},"560":{"start":{"line":2021,"column":6},"end":{"line":2021,"column":55}},"561":{"start":{"line":2021,"column":41},"end":{"line":2021,"column":55}},"562":{"start":{"line":2022,"column":6},"end":{"line":2022,"column":113}},"563":{"start":{"line":2023,"column":8},"end":{"line":2025,"column":9}},"564":{"start":{"line":2024,"column":10},"end":{"line":2024,"column":84}},"565":{"start":{"line":2024,"column":70},"end":{"line":2024,"column":84}},"566":{"start":{"line":2026,"column":6},"end":{"line":2026,"column":19}},"567":{"start":{"line":2057,"column":4},"end":{"line":2072,"column":5}},"568":{"start":{"line":2058,"column":6},"end":{"line":2058,"column":21}},"569":{"start":{"line":2060,"column":6},"end":{"line":2062,"column":9}},"570":{"start":{"line":2061,"column":8},"end":{"line":2061,"column":31}},"571":{"start":{"line":2064,"column":6},"end":{"line":2064,"column":32}},"572":{"start":{"line":2065,"column":6},"end":{"line":2065,"column":58}},"573":{"start":{"line":2066,"column":6},"end":{"line":2070,"column":7}},"574":{"start":{"line":2067,"column":8},"end":{"line":2069,"column":9}},"575":{"start":{"line":2068,"column":10},"end":{"line":2068,"column":16}},"576":{"start":{"line":2071,"column":6},"end":{"line":2071,"column":20}},"577":{"start":{"line":2095,"column":4},"end":{"line":2109,"column":6}},"578":{"start":{"line":2096,"column":6},"end":{"line":2096,"column":58}},"579":{"start":{"line":2097,"column":6},"end":{"line":2097,"column":35}},"580":{"start":{"line":2097,"column":21},"end":{"line":2097,"column":35}},"581":{"start":{"line":2098,"column":6},"end":{"line":2098,"column":55}},"582":{"start":{"line":2098,"column":41},"end":{"line":2098,"column":55}},"583":{"start":{"line":2099,"column":6},"end":{"line":2099,"column":113}},"584":{"start":{"line":2100,"column":8},"end":{"line":2102,"column":52}},"585":{"start":{"line":2104,"column":8},"end":{"line":2107,"column":9}},"586":{"start":{"line":2105,"column":10},"end":{"line":2105,"column":37}},"587":{"start":{"line":2106,"column":10},"end":{"line":2106,"column":84}},"588":{"start":{"line":2106,"column":70},"end":{"line":2106,"column":84}},"589":{"start":{"line":2108,"column":6},"end":{"line":2108,"column":19}},"590":{"start":{"line":2129,"column":4},"end":{"line":2141,"column":5}},"591":{"start":{"line":2130,"column":6},"end":{"line":2131,"column":32}},"592":{"start":{"line":2133,"column":6},"end":{"line":2133,"column":58}},"593":{"start":{"line":2134,"column":6},"end":{"line":2139,"column":7}},"594":{"start":{"line":2135,"column":8},"end":{"line":2135,"column":32}},"595":{"start":{"line":2136,"column":8},"end":{"line":2138,"column":9}},"596":{"start":{"line":2137,"column":10},"end":{"line":2137,"column":16}},"597":{"start":{"line":2140,"column":6},"end":{"line":2140,"column":20}},"598":{"start":{"line":2158,"column":4},"end":{"line":2166,"column":5}},"599":{"start":{"line":2159,"column":6},"end":{"line":2159,"column":22}},"600":{"start":{"line":2160,"column":6},"end":{"line":2164,"column":9}},"601":{"start":{"line":2161,"column":8},"end":{"line":2163,"column":9}},"602":{"start":{"line":2162,"column":10},"end":{"line":2162,"column":27}},"603":{"start":{"line":2165,"column":6},"end":{"line":2165,"column":27}},"604":{"start":{"line":2183,"column":4},"end":{"line":2185,"column":5}},"605":{"start":{"line":2184,"column":6},"end":{"line":2184,"column":63}},"606":{"start":{"line":2200,"column":4},"end":{"line":2211,"column":5}},"607":{"start":{"line":2201,"column":6},"end":{"line":2204,"column":22}},"608":{"start":{"line":2206,"column":6},"end":{"line":2209,"column":7}},"609":{"start":{"line":2207,"column":8},"end":{"line":2207,"column":31}},"610":{"start":{"line":2208,"column":8},"end":{"line":2208,"column":34}},"611":{"start":{"line":2210,"column":6},"end":{"line":2210,"column":20}},"612":{"start":{"line":2226,"column":4},"end":{"line":2229,"column":5}},"613":{"start":{"line":2227,"column":6},"end":{"line":2228,"column":88}},"614":{"start":{"line":2244,"column":4},"end":{"line":2246,"column":5}},"615":{"start":{"line":2245,"column":6},"end":{"line":2245,"column":93}},"616":{"start":{"line":2261,"column":4},"end":{"line":2263,"column":5}},"617":{"start":{"line":2262,"column":6},"end":{"line":2262,"column":52}},"618":{"start":{"line":2286,"column":4},"end":{"line":2302,"column":5}},"619":{"start":{"line":2287,"column":6},"end":{"line":2287,"column":24}},"620":{"start":{"line":2288,"column":6},"end":{"line":2290,"column":7}},"621":{"start":{"line":2289,"column":8},"end":{"line":2289,"column":22}},"622":{"start":{"line":2291,"column":6},"end":{"line":2292,"column":32}},"623":{"start":{"line":2294,"column":6},"end":{"line":2297,"column":7}},"624":{"start":{"line":2296,"column":8},"end":{"line":2296,"column":23}},"625":{"start":{"line":2298,"column":6},"end":{"line":2300,"column":9}},"626":{"start":{"line":2299,"column":8},"end":{"line":2299,"column":32}},"627":{"start":{"line":2301,"column":6},"end":{"line":2301,"column":20}},"628":{"start":{"line":2342,"column":4},"end":{"line":2344,"column":5}},"629":{"start":{"line":2343,"column":6},"end":{"line":2343,"column":106}},"630":{"start":{"line":2374,"column":4},"end":{"line":2376,"column":5}},"631":{"start":{"line":2375,"column":6},"end":{"line":2375,"column":70}},"632":{"start":{"line":2391,"column":4},"end":{"line":2393,"column":5}},"633":{"start":{"line":2392,"column":6},"end":{"line":2392,"column":40}},"634":{"start":{"line":2415,"column":4},"end":{"line":2421,"column":5}},"635":{"start":{"line":2420,"column":6},"end":{"line":2420,"column":52}},"636":{"start":{"line":2448,"column":4},"end":{"line":2452,"column":5}},"637":{"start":{"line":2451,"column":6},"end":{"line":2451,"column":48}},"638":{"start":{"line":2470,"column":4},"end":{"line":2472,"column":5}},"639":{"start":{"line":2471,"column":6},"end":{"line":2471,"column":28}},"640":{"start":{"line":2489,"column":4},"end":{"line":2492,"column":5}},"641":{"start":{"line":2490,"column":6},"end":{"line":2491,"column":90}},"642":{"start":{"line":2518,"column":4},"end":{"line":2528,"column":6}},"643":{"start":{"line":2519,"column":6},"end":{"line":2521,"column":7}},"644":{"start":{"line":2520,"column":8},"end":{"line":2520,"column":21}},"645":{"start":{"line":2522,"column":6},"end":{"line":2523,"column":107}},"646":{"start":{"line":2525,"column":6},"end":{"line":2527,"column":35}},"647":{"start":{"line":2543,"column":4},"end":{"line":2545,"column":5}},"648":{"start":{"line":2544,"column":6},"end":{"line":2544,"column":95}},"649":{"start":{"line":2560,"column":4},"end":{"line":2563,"column":5}},"650":{"start":{"line":2561,"column":6},"end":{"line":2562,"column":90}},"651":{"start":{"line":2578,"column":4},"end":{"line":2580,"column":5}},"652":{"start":{"line":2579,"column":6},"end":{"line":2579,"column":41}},"653":{"start":{"line":2618,"column":4},"end":{"line":2626,"column":5}},"654":{"start":{"line":2619,"column":6},"end":{"line":2619,"column":22}},"655":{"start":{"line":2620,"column":6},"end":{"line":2620,"column":61}},"656":{"start":{"line":2622,"column":6},"end":{"line":2624,"column":9}},"657":{"start":{"line":2623,"column":8},"end":{"line":2623,"column":51}},"658":{"start":{"line":2625,"column":6},"end":{"line":2625,"column":20}},"659":{"start":{"line":2679,"column":4},"end":{"line":2707,"column":5}},"660":{"start":{"line":2680,"column":6},"end":{"line":2681,"column":21}},"661":{"start":{"line":2683,"column":6},"end":{"line":2685,"column":7}},"662":{"start":{"line":2684,"column":8},"end":{"line":2684,"column":22}},"663":{"start":{"line":2688,"column":6},"end":{"line":2690,"column":7}},"664":{"start":{"line":2689,"column":8},"end":{"line":2689,"column":29}},"665":{"start":{"line":2691,"column":6},"end":{"line":2695,"column":7}},"666":{"start":{"line":2692,"column":8},"end":{"line":2692,"column":81}},"667":{"start":{"line":2693,"column":13},"end":{"line":2695,"column":7}},"668":{"start":{"line":2694,"column":8},"end":{"line":2694,"column":34}},"669":{"start":{"line":2696,"column":6},"end":{"line":2699,"column":30}},"670":{"start":{"line":2701,"column":6},"end":{"line":2703,"column":7}},"671":{"start":{"line":2702,"column":8},"end":{"line":2702,"column":68}},"672":{"start":{"line":2704,"column":6},"end":{"line":2704,"column":27}},"673":{"start":{"line":2705,"column":6},"end":{"line":2705,"column":27}},"674":{"start":{"line":2706,"column":6},"end":{"line":2706,"column":20}},"675":{"start":{"line":2735,"column":4},"end":{"line":2760,"column":5}},"676":{"start":{"line":2736,"column":6},"end":{"line":2736,"column":22}},"677":{"start":{"line":2737,"column":6},"end":{"line":2758,"column":7}},"678":{"start":{"line":2738,"column":8},"end":{"line":2738,"column":23}},"679":{"start":{"line":2739,"column":8},"end":{"line":2741,"column":11}},"680":{"start":{"line":2740,"column":10},"end":{"line":2740,"column":26}},"681":{"start":{"line":2742,"column":8},"end":{"line":2742,"column":78}},"682":{"start":{"line":2744,"column":8},"end":{"line":2745,"column":34}},"683":{"start":{"line":2747,"column":8},"end":{"line":2750,"column":9}},"684":{"start":{"line":2748,"column":10},"end":{"line":2748,"column":33}},"685":{"start":{"line":2749,"column":10},"end":{"line":2749,"column":36}},"686":{"start":{"line":2752,"column":8},"end":{"line":2752,"column":63}},"687":{"start":{"line":2753,"column":8},"end":{"line":2757,"column":11}},"688":{"start":{"line":2754,"column":10},"end":{"line":2756,"column":11}},"689":{"start":{"line":2755,"column":12},"end":{"line":2755,"column":32}},"690":{"start":{"line":2759,"column":6},"end":{"line":2759,"column":20}},"691":{"start":{"line":2776,"column":4},"end":{"line":2787,"column":5}},"692":{"start":{"line":2777,"column":6},"end":{"line":2780,"column":33}},"693":{"start":{"line":2782,"column":6},"end":{"line":2785,"column":7}},"694":{"start":{"line":2783,"column":8},"end":{"line":2783,"column":31}},"695":{"start":{"line":2784,"column":8},"end":{"line":2784,"column":43}},"696":{"start":{"line":2786,"column":6},"end":{"line":2786,"column":20}},"697":{"start":{"line":2816,"column":4},"end":{"line":2838,"column":5}},"698":{"start":{"line":2817,"column":6},"end":{"line":2817,"column":22}},"699":{"start":{"line":2818,"column":6},"end":{"line":2836,"column":7}},"700":{"start":{"line":2819,"column":8},"end":{"line":2821,"column":57}},"701":{"start":{"line":2823,"column":8},"end":{"line":2828,"column":9}},"702":{"start":{"line":2824,"column":10},"end":{"line":2824,"column":33}},"703":{"start":{"line":2825,"column":10},"end":{"line":2827,"column":11}},"704":{"start":{"line":2826,"column":12},"end":{"line":2826,"column":38}},"705":{"start":{"line":2830,"column":8},"end":{"line":2830,"column":63}},"706":{"start":{"line":2831,"column":8},"end":{"line":2835,"column":11}},"707":{"start":{"line":2832,"column":10},"end":{"line":2834,"column":11}},"708":{"start":{"line":2833,"column":12},"end":{"line":2833,"column":32}},"709":{"start":{"line":2837,"column":6},"end":{"line":2837,"column":20}},"710":{"start":{"line":2871,"column":4},"end":{"line":2890,"column":5}},"711":{"start":{"line":2872,"column":6},"end":{"line":2872,"column":34}},"712":{"start":{"line":2873,"column":6},"end":{"line":2882,"column":7}},"713":{"start":{"line":2874,"column":8},"end":{"line":2881,"column":9}},"714":{"start":{"line":2875,"column":10},"end":{"line":2875,"column":27}},"715":{"start":{"line":2877,"column":10},"end":{"line":2878,"column":45}},"716":{"start":{"line":2880,"column":10},"end":{"line":2880,"column":42}},"717":{"start":{"line":2883,"column":6},"end":{"line":2888,"column":7}},"718":{"start":{"line":2884,"column":8},"end":{"line":2884,"column":63}},"719":{"start":{"line":2885,"column":8},"end":{"line":2887,"column":11}},"720":{"start":{"line":2886,"column":10},"end":{"line":2886,"column":61}},"721":{"start":{"line":2889,"column":6},"end":{"line":2889,"column":25}},"722":{"start":{"line":2905,"column":4},"end":{"line":2915,"column":5}},"723":{"start":{"line":2906,"column":6},"end":{"line":2909,"column":33}},"724":{"start":{"line":2911,"column":6},"end":{"line":2913,"column":7}},"725":{"start":{"line":2912,"column":8},"end":{"line":2912,"column":45}},"726":{"start":{"line":2914,"column":6},"end":{"line":2914,"column":20}},"727":{"start":{"line":2940,"column":4},"end":{"line":2951,"column":5}},"728":{"start":{"line":2941,"column":6},"end":{"line":2945,"column":33}},"729":{"start":{"line":2947,"column":6},"end":{"line":2949,"column":7}},"730":{"start":{"line":2948,"column":8},"end":{"line":2948,"column":49}},"731":{"start":{"line":2950,"column":6},"end":{"line":2950,"column":20}},"732":{"start":{"line":2980,"column":4},"end":{"line":2999,"column":5}},"733":{"start":{"line":2981,"column":6},"end":{"line":2984,"column":25}},"734":{"start":{"line":2986,"column":6},"end":{"line":2986,"column":86}},"735":{"start":{"line":2987,"column":6},"end":{"line":2997,"column":7}},"736":{"start":{"line":2988,"column":8},"end":{"line":2988,"column":61}},"737":{"start":{"line":2989,"column":13},"end":{"line":2997,"column":7}},"738":{"start":{"line":2990,"column":8},"end":{"line":2990,"column":126}},"739":{"start":{"line":2992,"column":8},"end":{"line":2996,"column":11}},"740":{"start":{"line":2993,"column":10},"end":{"line":2995,"column":11}},"741":{"start":{"line":2994,"column":12},"end":{"line":2994,"column":48}},"742":{"start":{"line":2998,"column":6},"end":{"line":2998,"column":20}},"743":{"start":{"line":3035,"column":4},"end":{"line":3037,"column":7}},"744":{"start":{"line":3036,"column":6},"end":{"line":3036,"column":75}},"745":{"start":{"line":3080,"column":4},"end":{"line":3099,"column":5}},"746":{"start":{"line":3081,"column":6},"end":{"line":3081,"column":24}},"747":{"start":{"line":3082,"column":6},"end":{"line":3082,"column":61}},"748":{"start":{"line":3084,"column":6},"end":{"line":3085,"column":54}},"749":{"start":{"line":3087,"column":6},"end":{"line":3097,"column":7}},"750":{"start":{"line":3088,"column":8},"end":{"line":3092,"column":9}},"751":{"start":{"line":3089,"column":10},"end":{"line":3091,"column":11}},"752":{"start":{"line":3090,"column":12},"end":{"line":3090,"column":18}},"753":{"start":{"line":3094,"column":8},"end":{"line":3096,"column":11}},"754":{"start":{"line":3095,"column":10},"end":{"line":3095,"column":65}},"755":{"start":{"line":3098,"column":6},"end":{"line":3098,"column":20}},"756":{"start":{"line":3141,"column":4},"end":{"line":3163,"column":5}},"757":{"start":{"line":3142,"column":6},"end":{"line":3142,"column":22}},"758":{"start":{"line":3143,"column":6},"end":{"line":3143,"column":61}},"759":{"start":{"line":3145,"column":6},"end":{"line":3146,"column":54}},"760":{"start":{"line":3148,"column":6},"end":{"line":3161,"column":7}},"761":{"start":{"line":3149,"column":8},"end":{"line":3154,"column":9}},"762":{"start":{"line":3150,"column":10},"end":{"line":3150,"column":40}},"763":{"start":{"line":3151,"column":10},"end":{"line":3153,"column":11}},"764":{"start":{"line":3152,"column":12},"end":{"line":3152,"column":31}},"765":{"start":{"line":3156,"column":8},"end":{"line":3160,"column":11}},"766":{"start":{"line":3157,"column":10},"end":{"line":3159,"column":11}},"767":{"start":{"line":3158,"column":12},"end":{"line":3158,"column":31}},"768":{"start":{"line":3162,"column":6},"end":{"line":3162,"column":20}},"769":{"start":{"line":3208,"column":4},"end":{"line":3231,"column":5}},"770":{"start":{"line":3209,"column":6},"end":{"line":3209,"column":61}},"771":{"start":{"line":3211,"column":6},"end":{"line":3212,"column":54}},"772":{"start":{"line":3214,"column":6},"end":{"line":3230,"column":7}},"773":{"start":{"line":3215,"column":8},"end":{"line":3220,"column":9}},"774":{"start":{"line":3216,"column":10},"end":{"line":3216,"column":40}},"775":{"start":{"line":3217,"column":10},"end":{"line":3219,"column":11}},"776":{"start":{"line":3218,"column":12},"end":{"line":3218,"column":25}},"777":{"start":{"line":3222,"column":8},"end":{"line":3222,"column":19}},"778":{"start":{"line":3223,"column":8},"end":{"line":3228,"column":11}},"779":{"start":{"line":3224,"column":10},"end":{"line":3227,"column":11}},"780":{"start":{"line":3225,"column":12},"end":{"line":3225,"column":27}},"781":{"start":{"line":3226,"column":12},"end":{"line":3226,"column":25}},"782":{"start":{"line":3229,"column":8},"end":{"line":3229,"column":22}},"783":{"start":{"line":3253,"column":4},"end":{"line":3263,"column":5}},"784":{"start":{"line":3254,"column":6},"end":{"line":3254,"column":17}},"785":{"start":{"line":3255,"column":6},"end":{"line":3255,"column":61}},"786":{"start":{"line":3256,"column":6},"end":{"line":3261,"column":9}},"787":{"start":{"line":3257,"column":8},"end":{"line":3260,"column":9}},"788":{"start":{"line":3258,"column":10},"end":{"line":3258,"column":25}},"789":{"start":{"line":3259,"column":10},"end":{"line":3259,"column":23}},"790":{"start":{"line":3262,"column":6},"end":{"line":3262,"column":20}},"791":{"start":{"line":3291,"column":4},"end":{"line":3306,"column":5}},"792":{"start":{"line":3292,"column":6},"end":{"line":3293,"column":54}},"793":{"start":{"line":3295,"column":6},"end":{"line":3295,"column":113}},"794":{"start":{"line":3296,"column":6},"end":{"line":3304,"column":7}},"795":{"start":{"line":3297,"column":8},"end":{"line":3301,"column":9}},"796":{"start":{"line":3298,"column":10},"end":{"line":3300,"column":11}},"797":{"start":{"line":3299,"column":12},"end":{"line":3299,"column":18}},"798":{"start":{"line":3303,"column":8},"end":{"line":3303,"column":37}},"799":{"start":{"line":3305,"column":6},"end":{"line":3305,"column":24}},"800":{"start":{"line":3325,"column":4},"end":{"line":3343,"column":5}},"801":{"start":{"line":3326,"column":6},"end":{"line":3326,"column":54}},"802":{"start":{"line":3327,"column":6},"end":{"line":3327,"column":113}},"803":{"start":{"line":3328,"column":6},"end":{"line":3341,"column":7}},"804":{"start":{"line":3329,"column":8},"end":{"line":3333,"column":9}},"805":{"start":{"line":3330,"column":10},"end":{"line":3332,"column":11}},"806":{"start":{"line":3331,"column":12},"end":{"line":3331,"column":18}},"807":{"start":{"line":3335,"column":8},"end":{"line":3335,"column":37}},"808":{"start":{"line":3336,"column":8},"end":{"line":3336,"column":30}},"809":{"start":{"line":3337,"column":8},"end":{"line":3340,"column":11}},"810":{"start":{"line":3338,"column":10},"end":{"line":3338,"column":51}},"811":{"start":{"line":3339,"column":10},"end":{"line":3339,"column":60}},"812":{"start":{"line":3342,"column":6},"end":{"line":3342,"column":24}},"813":{"start":{"line":3380,"column":4},"end":{"line":3382,"column":7}},"814":{"start":{"line":3381,"column":6},"end":{"line":3381,"column":86}},"815":{"start":{"line":3423,"column":4},"end":{"line":3425,"column":7}},"816":{"start":{"line":3424,"column":6},"end":{"line":3424,"column":26}},"817":{"start":{"line":3449,"column":4},"end":{"line":3460,"column":5}},"818":{"start":{"line":3450,"column":6},"end":{"line":3454,"column":65}},"819":{"start":{"line":3456,"column":6},"end":{"line":3458,"column":9}},"820":{"start":{"line":3457,"column":8},"end":{"line":3457,"column":87}},"821":{"start":{"line":3459,"column":6},"end":{"line":3459,"column":20}},"822":{"start":{"line":3501,"column":4},"end":{"line":3518,"column":5}},"823":{"start":{"line":3502,"column":6},"end":{"line":3503,"column":54}},"824":{"start":{"line":3505,"column":6},"end":{"line":3505,"column":61}},"825":{"start":{"line":3506,"column":6},"end":{"line":3516,"column":7}},"826":{"start":{"line":3507,"column":8},"end":{"line":3507,"column":35}},"827":{"start":{"line":3508,"column":8},"end":{"line":3510,"column":9}},"828":{"start":{"line":3509,"column":10},"end":{"line":3509,"column":73}},"829":{"start":{"line":3512,"column":8},"end":{"line":3512,"column":20}},"830":{"start":{"line":3513,"column":8},"end":{"line":3515,"column":11}},"831":{"start":{"line":3514,"column":10},"end":{"line":3514,"column":61}},"832":{"start":{"line":3517,"column":6},"end":{"line":3517,"column":20}},"833":{"start":{"line":3560,"column":4},"end":{"line":3593,"column":5}},"834":{"start":{"line":3561,"column":6},"end":{"line":3562,"column":28}},"835":{"start":{"line":3566,"column":6},"end":{"line":3568,"column":7}},"836":{"start":{"line":3567,"column":8},"end":{"line":3567,"column":24}},"837":{"start":{"line":3569,"column":6},"end":{"line":3591,"column":7}},"838":{"start":{"line":3570,"column":8},"end":{"line":3571,"column":39}},"839":{"start":{"line":3573,"column":8},"end":{"line":3578,"column":9}},"840":{"start":{"line":3574,"column":10},"end":{"line":3574,"column":40}},"841":{"start":{"line":3575,"column":10},"end":{"line":3577,"column":11}},"842":{"start":{"line":3576,"column":12},"end":{"line":3576,"column":27}},"843":{"start":{"line":3580,"column":8},"end":{"line":3582,"column":56}},"844":{"start":{"line":3584,"column":8},"end":{"line":3590,"column":11}},"845":{"start":{"line":3585,"column":10},"end":{"line":3585,"column":59}},"846":{"start":{"line":3586,"column":10},"end":{"line":3589,"column":11}},"847":{"start":{"line":3587,"column":12},"end":{"line":3587,"column":31}},"848":{"start":{"line":3588,"column":12},"end":{"line":3588,"column":27}},"849":{"start":{"line":3592,"column":6},"end":{"line":3592,"column":20}},"850":{"start":{"line":3635,"column":4},"end":{"line":3668,"column":5}},"851":{"start":{"line":3636,"column":6},"end":{"line":3637,"column":28}},"852":{"start":{"line":3641,"column":6},"end":{"line":3643,"column":7}},"853":{"start":{"line":3642,"column":8},"end":{"line":3642,"column":24}},"854":{"start":{"line":3644,"column":6},"end":{"line":3666,"column":7}},"855":{"start":{"line":3645,"column":8},"end":{"line":3646,"column":39}},"856":{"start":{"line":3648,"column":8},"end":{"line":3653,"column":9}},"857":{"start":{"line":3649,"column":10},"end":{"line":3649,"column":40}},"858":{"start":{"line":3650,"column":10},"end":{"line":3652,"column":11}},"859":{"start":{"line":3651,"column":12},"end":{"line":3651,"column":27}},"860":{"start":{"line":3655,"column":8},"end":{"line":3657,"column":56}},"861":{"start":{"line":3659,"column":8},"end":{"line":3665,"column":11}},"862":{"start":{"line":3660,"column":10},"end":{"line":3660,"column":59}},"863":{"start":{"line":3661,"column":10},"end":{"line":3664,"column":11}},"864":{"start":{"line":3662,"column":12},"end":{"line":3662,"column":31}},"865":{"start":{"line":3663,"column":12},"end":{"line":3663,"column":27}},"866":{"start":{"line":3667,"column":6},"end":{"line":3667,"column":20}},"867":{"start":{"line":3690,"column":4},"end":{"line":3690,"column":20}},"868":{"start":{"line":3722,"column":4},"end":{"line":3745,"column":5}},"869":{"start":{"line":3723,"column":6},"end":{"line":3723,"column":42}},"870":{"start":{"line":3723,"column":23},"end":{"line":3723,"column":42}},"871":{"start":{"line":3724,"column":6},"end":{"line":3724,"column":41}},"872":{"start":{"line":3725,"column":6},"end":{"line":3725,"column":61}},"873":{"start":{"line":3727,"column":6},"end":{"line":3728,"column":37}},"874":{"start":{"line":3730,"column":6},"end":{"line":3743,"column":7}},"875":{"start":{"line":3731,"column":8},"end":{"line":3733,"column":9}},"876":{"start":{"line":3732,"column":10},"end":{"line":3732,"column":44}},"877":{"start":{"line":3734,"column":8},"end":{"line":3736,"column":9}},"878":{"start":{"line":3735,"column":10},"end":{"line":3735,"column":84}},"879":{"start":{"line":3738,"column":8},"end":{"line":3742,"column":11}},"880":{"start":{"line":3739,"column":10},"end":{"line":3741,"column":61}},"881":{"start":{"line":3744,"column":6},"end":{"line":3744,"column":25}},"882":{"start":{"line":3766,"column":4},"end":{"line":3775,"column":5}},"883":{"start":{"line":3767,"column":6},"end":{"line":3767,"column":41}},"884":{"start":{"line":3768,"column":6},"end":{"line":3768,"column":61}},"885":{"start":{"line":3769,"column":6},"end":{"line":3773,"column":9}},"886":{"start":{"line":3770,"column":8},"end":{"line":3772,"column":60}},"887":{"start":{"line":3774,"column":6},"end":{"line":3774,"column":25}},"888":{"start":{"line":3815,"column":4},"end":{"line":3820,"column":5}},"889":{"start":{"line":3816,"column":6},"end":{"line":3816,"column":61}},"890":{"start":{"line":3817,"column":6},"end":{"line":3819,"column":9}},"891":{"start":{"line":3818,"column":8},"end":{"line":3818,"column":51}},"892":{"start":{"line":3841,"column":4},"end":{"line":3851,"column":5}},"893":{"start":{"line":3842,"column":6},"end":{"line":3844,"column":7}},"894":{"start":{"line":3843,"column":8},"end":{"line":3843,"column":40}},"895":{"start":{"line":3845,"column":6},"end":{"line":3847,"column":7}},"896":{"start":{"line":3846,"column":8},"end":{"line":3846,"column":89}},"897":{"start":{"line":3848,"column":6},"end":{"line":3848,"column":39}},"898":{"start":{"line":3849,"column":6},"end":{"line":3849,"column":64}},"899":{"start":{"line":3850,"column":6},"end":{"line":3850,"column":20}},"900":{"start":{"line":3867,"column":4},"end":{"line":3878,"column":5}},"901":{"start":{"line":3868,"column":6},"end":{"line":3870,"column":65}},"902":{"start":{"line":3872,"column":6},"end":{"line":3876,"column":9}},"903":{"start":{"line":3873,"column":8},"end":{"line":3873,"column":42}},"904":{"start":{"line":3874,"column":8},"end":{"line":3874,"column":37}},"905":{"start":{"line":3875,"column":8},"end":{"line":3875,"column":29}},"906":{"start":{"line":3877,"column":6},"end":{"line":3877,"column":20}},"907":{"start":{"line":3900,"column":4},"end":{"line":3903,"column":5}},"908":{"start":{"line":3901,"column":6},"end":{"line":3901,"column":54}},"909":{"start":{"line":3902,"column":6},"end":{"line":3902,"column":74}},"910":{"start":{"line":3947,"column":4},"end":{"line":3966,"column":5}},"911":{"start":{"line":3948,"column":6},"end":{"line":3948,"column":17}},"912":{"start":{"line":3949,"column":6},"end":{"line":3949,"column":61}},"913":{"start":{"line":3951,"column":6},"end":{"line":3952,"column":54}},"914":{"start":{"line":3954,"column":6},"end":{"line":3964,"column":7}},"915":{"start":{"line":3955,"column":8},"end":{"line":3959,"column":9}},"916":{"start":{"line":3956,"column":10},"end":{"line":3958,"column":11}},"917":{"start":{"line":3957,"column":12},"end":{"line":3957,"column":18}},"918":{"start":{"line":3961,"column":8},"end":{"line":3963,"column":11}},"919":{"start":{"line":3962,"column":10},"end":{"line":3962,"column":64}},"920":{"start":{"line":3965,"column":6},"end":{"line":3965,"column":22}},"921":{"start":{"line":4017,"column":4},"end":{"line":4048,"column":5}},"922":{"start":{"line":4018,"column":6},"end":{"line":4021,"column":65}},"923":{"start":{"line":4023,"column":6},"end":{"line":4025,"column":7}},"924":{"start":{"line":4024,"column":8},"end":{"line":4024,"column":63}},"925":{"start":{"line":4026,"column":6},"end":{"line":4035,"column":9}},"926":{"start":{"line":4027,"column":8},"end":{"line":4027,"column":51}},"927":{"start":{"line":4028,"column":8},"end":{"line":4032,"column":9}},"928":{"start":{"line":4029,"column":10},"end":{"line":4029,"column":80}},"929":{"start":{"line":4029,"column":58},"end":{"line":4029,"column":76}},"930":{"start":{"line":4031,"column":10},"end":{"line":4031,"column":79}},"931":{"start":{"line":4033,"column":8},"end":{"line":4033,"column":29}},"932":{"start":{"line":4034,"column":8},"end":{"line":4034,"column":29}},"933":{"start":{"line":4037,"column":6},"end":{"line":4037,"column":29}},"934":{"start":{"line":4038,"column":6},"end":{"line":4038,"column":36}},"935":{"start":{"line":4039,"column":6},"end":{"line":4046,"column":7}},"936":{"start":{"line":4040,"column":8},"end":{"line":4040,"column":36}},"937":{"start":{"line":4041,"column":8},"end":{"line":4041,"column":38}},"938":{"start":{"line":4042,"column":8},"end":{"line":4044,"column":9}},"939":{"start":{"line":4043,"column":10},"end":{"line":4043,"column":40}},"940":{"start":{"line":4045,"column":8},"end":{"line":4045,"column":30}},"941":{"start":{"line":4047,"column":6},"end":{"line":4047,"column":20}},"942":{"start":{"line":4063,"column":4},"end":{"line":4068,"column":5}},"943":{"start":{"line":4064,"column":6},"end":{"line":4066,"column":7}},"944":{"start":{"line":4065,"column":8},"end":{"line":4065,"column":33}},"945":{"start":{"line":4067,"column":6},"end":{"line":4067,"column":32}},"946":{"start":{"line":4095,"column":4},"end":{"line":4095,"column":23}},"947":{"start":{"line":4113,"column":4},"end":{"line":4125,"column":5}},"948":{"start":{"line":4114,"column":6},"end":{"line":4116,"column":22}},"949":{"start":{"line":4118,"column":6},"end":{"line":4123,"column":7}},"950":{"start":{"line":4119,"column":8},"end":{"line":4119,"column":33}},"951":{"start":{"line":4120,"column":8},"end":{"line":4122,"column":9}},"952":{"start":{"line":4121,"column":10},"end":{"line":4121,"column":29}},"953":{"start":{"line":4124,"column":6},"end":{"line":4124,"column":20}},"954":{"start":{"line":4142,"column":4},"end":{"line":4144,"column":5}},"955":{"start":{"line":4143,"column":6},"end":{"line":4143,"column":74}},"956":{"start":{"line":4187,"column":4},"end":{"line":4198,"column":5}},"957":{"start":{"line":4188,"column":6},"end":{"line":4189,"column":44}},"958":{"start":{"line":4191,"column":6},"end":{"line":4191,"column":61}},"959":{"start":{"line":4192,"column":6},"end":{"line":4196,"column":7}},"960":{"start":{"line":4193,"column":8},"end":{"line":4195,"column":9}},"961":{"start":{"line":4194,"column":10},"end":{"line":4194,"column":23}},"962":{"start":{"line":4197,"column":6},"end":{"line":4197,"column":16}},"963":{"start":{"line":4241,"column":4},"end":{"line":4250,"column":5}},"964":{"start":{"line":4242,"column":6},"end":{"line":4242,"column":44}},"965":{"start":{"line":4243,"column":6},"end":{"line":4243,"column":61}},"966":{"start":{"line":4244,"column":6},"end":{"line":4248,"column":7}},"967":{"start":{"line":4245,"column":8},"end":{"line":4247,"column":9}},"968":{"start":{"line":4246,"column":10},"end":{"line":4246,"column":24}},"969":{"start":{"line":4249,"column":6},"end":{"line":4249,"column":16}},"970":{"start":{"line":4303,"column":4},"end":{"line":4320,"column":5}},"971":{"start":{"line":4304,"column":6},"end":{"line":4305,"column":44}},"972":{"start":{"line":4307,"column":6},"end":{"line":4318,"column":7}},"973":{"start":{"line":4308,"column":8},"end":{"line":4308,"column":23}},"974":{"start":{"line":4309,"column":8},"end":{"line":4309,"column":63}},"975":{"start":{"line":4310,"column":8},"end":{"line":4312,"column":9}},"976":{"start":{"line":4311,"column":10},"end":{"line":4311,"column":14}},"977":{"start":{"line":4314,"column":8},"end":{"line":4314,"column":21}},"978":{"start":{"line":4315,"column":8},"end":{"line":4317,"column":9}},"979":{"start":{"line":4316,"column":10},"end":{"line":4316,"column":46}},"980":{"start":{"line":4319,"column":6},"end":{"line":4319,"column":65}},"981":{"start":{"line":4363,"column":4},"end":{"line":4374,"column":5}},"982":{"start":{"line":4365,"column":6},"end":{"line":4369,"column":7}},"983":{"start":{"line":4366,"column":8},"end":{"line":4366,"column":27}},"984":{"start":{"line":4367,"column":8},"end":{"line":4367,"column":114}},"985":{"start":{"line":4368,"column":8},"end":{"line":4368,"column":26}},"986":{"start":{"line":4370,"column":6},"end":{"line":4372,"column":7}},"987":{"start":{"line":4371,"column":8},"end":{"line":4371,"column":46}},"988":{"start":{"line":4373,"column":6},"end":{"line":4373,"column":43}},"989":{"start":{"line":4400,"column":4},"end":{"line":4409,"column":5}},"990":{"start":{"line":4401,"column":6},"end":{"line":4407,"column":7}},"991":{"start":{"line":4402,"column":8},"end":{"line":4402,"column":46}},"992":{"start":{"line":4403,"column":8},"end":{"line":4403,"column":88}},"993":{"start":{"line":4404,"column":13},"end":{"line":4407,"column":7}},"994":{"start":{"line":4405,"column":8},"end":{"line":4405,"column":46}},"995":{"start":{"line":4406,"column":8},"end":{"line":4406,"column":51}},"996":{"start":{"line":4408,"column":6},"end":{"line":4408,"column":50}},"997":{"start":{"line":4461,"column":4},"end":{"line":4475,"column":5}},"998":{"start":{"line":4462,"column":6},"end":{"line":4463,"column":44}},"999":{"start":{"line":4465,"column":6},"end":{"line":4473,"column":7}},"1000":{"start":{"line":4466,"column":8},"end":{"line":4466,"column":27}},"1001":{"start":{"line":4467,"column":8},"end":{"line":4467,"column":63}},"1002":{"start":{"line":4468,"column":8},"end":{"line":4470,"column":9}},"1003":{"start":{"line":4469,"column":10},"end":{"line":4469,"column":14}},"1004":{"start":{"line":4472,"column":8},"end":{"line":4472,"column":62}},"1005":{"start":{"line":4474,"column":6},"end":{"line":4474,"column":74}},"1006":{"start":{"line":4491,"column":4},"end":{"line":4539,"column":5}},"1007":{"start":{"line":4492,"column":6},"end":{"line":4498,"column":28}},"1008":{"start":{"line":4500,"column":6},"end":{"line":4507,"column":7}},"1009":{"start":{"line":4501,"column":8},"end":{"line":4501,"column":41}},"1010":{"start":{"line":4502,"column":8},"end":{"line":4506,"column":9}},"1011":{"start":{"line":4503,"column":10},"end":{"line":4503,"column":27}},"1012":{"start":{"line":4504,"column":10},"end":{"line":4505,"column":61}},"1013":{"start":{"line":4508,"column":6},"end":{"line":4511,"column":22}},"1014":{"start":{"line":4513,"column":6},"end":{"line":4529,"column":7}},"1015":{"start":{"line":4514,"column":6},"end":{"line":4529,"column":7}},"1016":{"start":{"line":4515,"column":8},"end":{"line":4515,"column":30}},"1017":{"start":{"line":4516,"column":8},"end":{"line":4516,"column":29}},"1018":{"start":{"line":4518,"column":8},"end":{"line":4528,"column":9}},"1019":{"start":{"line":4519,"column":10},"end":{"line":4519,"column":33}},"1020":{"start":{"line":4520,"column":10},"end":{"line":4520,"column":38}},"1021":{"start":{"line":4521,"column":10},"end":{"line":4526,"column":11}},"1022":{"start":{"line":4522,"column":12},"end":{"line":4522,"column":38}},"1023":{"start":{"line":4523,"column":12},"end":{"line":4525,"column":13}},"1024":{"start":{"line":4524,"column":14},"end":{"line":4524,"column":29}},"1025":{"start":{"line":4527,"column":10},"end":{"line":4527,"column":29}},"1026":{"start":{"line":4530,"column":6},"end":{"line":4535,"column":7}},"1027":{"start":{"line":4531,"column":8},"end":{"line":4531,"column":35}},"1028":{"start":{"line":4532,"column":8},"end":{"line":4534,"column":9}},"1029":{"start":{"line":4533,"column":10},"end":{"line":4533,"column":31}},"1030":{"start":{"line":4536,"column":6},"end":{"line":4536,"column":27}},"1031":{"start":{"line":4537,"column":6},"end":{"line":4537,"column":25}},"1032":{"start":{"line":4538,"column":6},"end":{"line":4538,"column":20}},"1033":{"start":{"line":4591,"column":4},"end":{"line":4608,"column":5}},"1034":{"start":{"line":4592,"column":6},"end":{"line":4593,"column":44}},"1035":{"start":{"line":4595,"column":6},"end":{"line":4606,"column":7}},"1036":{"start":{"line":4596,"column":8},"end":{"line":4596,"column":27}},"1037":{"start":{"line":4597,"column":8},"end":{"line":4597,"column":63}},"1038":{"start":{"line":4598,"column":8},"end":{"line":4600,"column":9}},"1039":{"start":{"line":4599,"column":10},"end":{"line":4599,"column":14}},"1040":{"start":{"line":4602,"column":8},"end":{"line":4602,"column":21}},"1041":{"start":{"line":4603,"column":8},"end":{"line":4605,"column":9}},"1042":{"start":{"line":4604,"column":10},"end":{"line":4604,"column":55}},"1043":{"start":{"line":4607,"column":6},"end":{"line":4607,"column":52}},"1044":{"start":{"line":4637,"column":4},"end":{"line":4648,"column":5}},"1045":{"start":{"line":4638,"column":6},"end":{"line":4638,"column":43}},"1046":{"start":{"line":4639,"column":6},"end":{"line":4641,"column":7}},"1047":{"start":{"line":4640,"column":8},"end":{"line":4640,"column":104}},"1048":{"start":{"line":4642,"column":6},"end":{"line":4646,"column":7}},"1049":{"start":{"line":4643,"column":8},"end":{"line":4645,"column":9}},"1050":{"start":{"line":4644,"column":10},"end":{"line":4644,"column":23}},"1051":{"start":{"line":4647,"column":6},"end":{"line":4647,"column":16}},"1052":{"start":{"line":4667,"column":4},"end":{"line":4684,"column":5}},"1053":{"start":{"line":4668,"column":6},"end":{"line":4671,"column":44}},"1054":{"start":{"line":4673,"column":6},"end":{"line":4682,"column":7}},"1055":{"start":{"line":4674,"column":8},"end":{"line":4675,"column":36}},"1056":{"start":{"line":4676,"column":8},"end":{"line":4681,"column":9}},"1057":{"start":{"line":4677,"column":10},"end":{"line":4680,"column":11}},"1058":{"start":{"line":4678,"column":12},"end":{"line":4678,"column":43}},"1059":{"start":{"line":4679,"column":12},"end":{"line":4679,"column":21}},"1060":{"start":{"line":4683,"column":6},"end":{"line":4683,"column":19}},"1061":{"start":{"line":4718,"column":4},"end":{"line":4737,"column":5}},"1062":{"start":{"line":4719,"column":6},"end":{"line":4719,"column":26}},"1063":{"start":{"line":4720,"column":6},"end":{"line":4720,"column":59}},"1064":{"start":{"line":4722,"column":6},"end":{"line":4725,"column":7}},"1065":{"start":{"line":4723,"column":8},"end":{"line":4723,"column":20}},"1066":{"start":{"line":4724,"column":8},"end":{"line":4724,"column":18}},"1067":{"start":{"line":4728,"column":6},"end":{"line":4730,"column":33}},"1068":{"start":{"line":4732,"column":6},"end":{"line":4735,"column":7}},"1069":{"start":{"line":4733,"column":8},"end":{"line":4733,"column":30}},"1070":{"start":{"line":4734,"column":8},"end":{"line":4734,"column":22}},"1071":{"start":{"line":4736,"column":6},"end":{"line":4736,"column":20}},"1072":{"start":{"line":4771,"column":4},"end":{"line":4786,"column":5}},"1073":{"start":{"line":4772,"column":6},"end":{"line":4774,"column":22}},"1074":{"start":{"line":4776,"column":6},"end":{"line":4776,"column":61}},"1075":{"start":{"line":4777,"column":6},"end":{"line":4784,"column":7}},"1076":{"start":{"line":4778,"column":8},"end":{"line":4778,"column":33}},"1077":{"start":{"line":4779,"column":8},"end":{"line":4783,"column":9}},"1078":{"start":{"line":4780,"column":10},"end":{"line":4780,"column":29}},"1079":{"start":{"line":4781,"column":10},"end":{"line":4781,"column":41}},"1080":{"start":{"line":4782,"column":10},"end":{"line":4782,"column":19}},"1081":{"start":{"line":4785,"column":6},"end":{"line":4785,"column":20}},"1082":{"start":{"line":4840,"column":4},"end":{"line":4854,"column":5}},"1083":{"start":{"line":4841,"column":6},"end":{"line":4852,"column":7}},"1084":{"start":{"line":4842,"column":8},"end":{"line":4844,"column":46}},"1085":{"start":{"line":4846,"column":8},"end":{"line":4846,"column":63}},"1086":{"start":{"line":4847,"column":8},"end":{"line":4849,"column":9}},"1087":{"start":{"line":4848,"column":10},"end":{"line":4848,"column":14}},"1088":{"start":{"line":4851,"column":8},"end":{"line":4851,"column":71}},"1089":{"start":{"line":4853,"column":6},"end":{"line":4853,"column":29}},"1090":{"start":{"line":4904,"column":4},"end":{"line":4919,"column":5}},"1091":{"start":{"line":4905,"column":6},"end":{"line":4906,"column":44}},"1092":{"start":{"line":4909,"column":6},"end":{"line":4909,"column":83}},"1093":{"start":{"line":4910,"column":6},"end":{"line":4910,"column":30}},"1094":{"start":{"line":4912,"column":6},"end":{"line":4917,"column":7}},"1095":{"start":{"line":4913,"column":8},"end":{"line":4913,"column":37}},"1096":{"start":{"line":4914,"column":8},"end":{"line":4916,"column":23}},"1097":{"start":{"line":4918,"column":6},"end":{"line":4918,"column":17}},"1098":{"start":{"line":4935,"column":4},"end":{"line":4937,"column":5}},"1099":{"start":{"line":4936,"column":6},"end":{"line":4936,"column":58}},"1100":{"start":{"line":4983,"column":4},"end":{"line":4994,"column":5}},"1101":{"start":{"line":4985,"column":6},"end":{"line":4989,"column":7}},"1102":{"start":{"line":4986,"column":8},"end":{"line":4986,"column":27}},"1103":{"start":{"line":4987,"column":8},"end":{"line":4987,"column":111}},"1104":{"start":{"line":4988,"column":8},"end":{"line":4988,"column":25}},"1105":{"start":{"line":4990,"column":6},"end":{"line":4992,"column":7}},"1106":{"start":{"line":4991,"column":8},"end":{"line":4991,"column":63}},"1107":{"start":{"line":4993,"column":6},"end":{"line":4993,"column":49}},"1108":{"start":{"line":5011,"column":4},"end":{"line":5013,"column":5}},"1109":{"start":{"line":5012,"column":6},"end":{"line":5012,"column":56}},"1110":{"start":{"line":5032,"column":4},"end":{"line":5045,"column":5}},"1111":{"start":{"line":5033,"column":6},"end":{"line":5034,"column":36}},"1112":{"start":{"line":5036,"column":6},"end":{"line":5043,"column":7}},"1113":{"start":{"line":5037,"column":8},"end":{"line":5037,"column":37}},"1114":{"start":{"line":5038,"column":8},"end":{"line":5042,"column":9}},"1115":{"start":{"line":5039,"column":10},"end":{"line":5041,"column":20}},"1116":{"start":{"line":5044,"column":6},"end":{"line":5044,"column":26}},"1117":{"start":{"line":5063,"column":4},"end":{"line":5073,"column":5}},"1118":{"start":{"line":5064,"column":6},"end":{"line":5067,"column":50}},"1119":{"start":{"line":5069,"column":6},"end":{"line":5071,"column":7}},"1120":{"start":{"line":5070,"column":8},"end":{"line":5070,"column":44}},"1121":{"start":{"line":5072,"column":6},"end":{"line":5072,"column":20}},"1122":{"start":{"line":5093,"column":4},"end":{"line":5110,"column":5}},"1123":{"start":{"line":5094,"column":6},"end":{"line":5096,"column":22}},"1124":{"start":{"line":5098,"column":6},"end":{"line":5100,"column":7}},"1125":{"start":{"line":5099,"column":8},"end":{"line":5099,"column":20}},"1126":{"start":{"line":5101,"column":6},"end":{"line":5108,"column":7}},"1127":{"start":{"line":5102,"column":8},"end":{"line":5102,"column":30}},"1128":{"start":{"line":5103,"column":8},"end":{"line":5107,"column":9}},"1129":{"start":{"line":5104,"column":10},"end":{"line":5104,"column":38}},"1130":{"start":{"line":5105,"column":15},"end":{"line":5107,"column":9}},"1131":{"start":{"line":5106,"column":10},"end":{"line":5106,"column":34}},"1132":{"start":{"line":5109,"column":6},"end":{"line":5109,"column":20}},"1133":{"start":{"line":5138,"column":4},"end":{"line":5147,"column":5}},"1134":{"start":{"line":5139,"column":6},"end":{"line":5141,"column":7}},"1135":{"start":{"line":5140,"column":8},"end":{"line":5140,"column":28}},"1136":{"start":{"line":5142,"column":6},"end":{"line":5146,"column":8}},"1137":{"start":{"line":5143,"column":8},"end":{"line":5145,"column":9}},"1138":{"start":{"line":5144,"column":10},"end":{"line":5144,"column":45}},"1139":{"start":{"line":5171,"column":4},"end":{"line":5175,"column":5}},"1140":{"start":{"line":5172,"column":6},"end":{"line":5174,"column":54}},"1141":{"start":{"line":5201,"column":4},"end":{"line":5211,"column":5}},"1142":{"start":{"line":5202,"column":6},"end":{"line":5204,"column":32}},"1143":{"start":{"line":5206,"column":6},"end":{"line":5209,"column":7}},"1144":{"start":{"line":5207,"column":8},"end":{"line":5207,"column":31}},"1145":{"start":{"line":5208,"column":8},"end":{"line":5208,"column":72}},"1146":{"start":{"line":5210,"column":6},"end":{"line":5210,"column":20}},"1147":{"start":{"line":5247,"column":4},"end":{"line":5251,"column":5}},"1148":{"start":{"line":5248,"column":6},"end":{"line":5250,"column":52}},"1149":{"start":{"line":5283,"column":4},"end":{"line":5301,"column":5}},"1150":{"start":{"line":5284,"column":6},"end":{"line":5285,"column":32}},"1151":{"start":{"line":5287,"column":6},"end":{"line":5291,"column":7}},"1152":{"start":{"line":5288,"column":8},"end":{"line":5290,"column":9}},"1153":{"start":{"line":5289,"column":10},"end":{"line":5289,"column":30}},"1154":{"start":{"line":5292,"column":6},"end":{"line":5300,"column":8}},"1155":{"start":{"line":5293,"column":8},"end":{"line":5294,"column":34}},"1156":{"start":{"line":5296,"column":8},"end":{"line":5298,"column":9}},"1157":{"start":{"line":5297,"column":10},"end":{"line":5297,"column":51}},"1158":{"start":{"line":5299,"column":8},"end":{"line":5299,"column":23}},"1159":{"start":{"line":5331,"column":4},"end":{"line":5334,"column":5}},"1160":{"start":{"line":5332,"column":6},"end":{"line":5332,"column":73}},"1161":{"start":{"line":5333,"column":6},"end":{"line":5333,"column":61}},"1162":{"start":{"line":5375,"column":4},"end":{"line":5474,"column":5}},"1163":{"start":{"line":5376,"column":6},"end":{"line":5385,"column":26}},"1164":{"start":{"line":5387,"column":6},"end":{"line":5389,"column":7}},"1165":{"start":{"line":5388,"column":8},"end":{"line":5388,"column":28}},"1166":{"start":{"line":5390,"column":6},"end":{"line":5390,"column":37}},"1167":{"start":{"line":5391,"column":6},"end":{"line":5398,"column":7}},"1168":{"start":{"line":5392,"column":8},"end":{"line":5392,"column":27}},"1169":{"start":{"line":5393,"column":8},"end":{"line":5393,"column":25}},"1170":{"start":{"line":5394,"column":13},"end":{"line":5398,"column":7}},"1171":{"start":{"line":5395,"column":8},"end":{"line":5395,"column":34}},"1172":{"start":{"line":5396,"column":8},"end":{"line":5396,"column":82}},"1173":{"start":{"line":5397,"column":8},"end":{"line":5397,"column":71}},"1174":{"start":{"line":5399,"column":6},"end":{"line":5417,"column":8}},"1175":{"start":{"line":5400,"column":8},"end":{"line":5400,"column":47}},"1176":{"start":{"line":5401,"column":8},"end":{"line":5416,"column":9}},"1177":{"start":{"line":5402,"column":10},"end":{"line":5404,"column":11}},"1178":{"start":{"line":5403,"column":12},"end":{"line":5403,"column":39}},"1179":{"start":{"line":5405,"column":10},"end":{"line":5405,"column":38}},"1180":{"start":{"line":5406,"column":10},"end":{"line":5406,"column":62}},"1181":{"start":{"line":5407,"column":10},"end":{"line":5413,"column":11}},"1182":{"start":{"line":5408,"column":12},"end":{"line":5408,"column":31}},"1183":{"start":{"line":5409,"column":12},"end":{"line":5409,"column":47}},"1184":{"start":{"line":5410,"column":12},"end":{"line":5412,"column":13}},"1185":{"start":{"line":5411,"column":14},"end":{"line":5411,"column":36}},"1186":{"start":{"line":5415,"column":10},"end":{"line":5415,"column":53}},"1187":{"start":{"line":5419,"column":6},"end":{"line":5431,"column":8}},"1188":{"start":{"line":5420,"column":8},"end":{"line":5422,"column":9}},"1189":{"start":{"line":5421,"column":10},"end":{"line":5421,"column":34}},"1190":{"start":{"line":5423,"column":8},"end":{"line":5423,"column":60}},"1191":{"start":{"line":5424,"column":8},"end":{"line":5430,"column":9}},"1192":{"start":{"line":5425,"column":10},"end":{"line":5425,"column":29}},"1193":{"start":{"line":5426,"column":10},"end":{"line":5426,"column":45}},"1194":{"start":{"line":5427,"column":10},"end":{"line":5429,"column":11}},"1195":{"start":{"line":5428,"column":12},"end":{"line":5428,"column":34}},"1196":{"start":{"line":5433,"column":6},"end":{"line":5473,"column":8}},"1197":{"start":{"line":5434,"column":8},"end":{"line":5434,"column":25}},"1198":{"start":{"line":5435,"column":8},"end":{"line":5435,"column":22}},"1199":{"start":{"line":5436,"column":8},"end":{"line":5436,"column":23}},"1200":{"start":{"line":5437,"column":8},"end":{"line":5437,"column":59}},"1201":{"start":{"line":5439,"column":8},"end":{"line":5458,"column":9}},"1202":{"start":{"line":5440,"column":10},"end":{"line":5440,"column":50}},"1203":{"start":{"line":5442,"column":10},"end":{"line":5444,"column":11}},"1204":{"start":{"line":5443,"column":12},"end":{"line":5443,"column":31}},"1205":{"start":{"line":5445,"column":10},"end":{"line":5446,"column":40}},"1206":{"start":{"line":5448,"column":10},"end":{"line":5457,"column":11}},"1207":{"start":{"line":5449,"column":12},"end":{"line":5451,"column":13}},"1208":{"start":{"line":5450,"column":14},"end":{"line":5450,"column":56}},"1209":{"start":{"line":5452,"column":12},"end":{"line":5452,"column":31}},"1210":{"start":{"line":5453,"column":12},"end":{"line":5453,"column":47}},"1211":{"start":{"line":5455,"column":15},"end":{"line":5457,"column":11}},"1212":{"start":{"line":5456,"column":12},"end":{"line":5456,"column":61}},"1213":{"start":{"line":5459,"column":8},"end":{"line":5464,"column":9}},"1214":{"start":{"line":5460,"column":10},"end":{"line":5460,"column":46}},"1215":{"start":{"line":5462,"column":13},"end":{"line":5464,"column":9}},"1216":{"start":{"line":5463,"column":10},"end":{"line":5463,"column":48}},"1217":{"start":{"line":5465,"column":8},"end":{"line":5468,"column":9}},"1218":{"start":{"line":5466,"column":10},"end":{"line":5466,"column":26}},"1219":{"start":{"line":5467,"column":10},"end":{"line":5467,"column":45}},"1220":{"start":{"line":5469,"column":8},"end":{"line":5471,"column":9}},"1221":{"start":{"line":5470,"column":10},"end":{"line":5470,"column":32}},"1222":{"start":{"line":5472,"column":8},"end":{"line":5472,"column":22}},"1223":{"start":{"line":5491,"column":4},"end":{"line":5497,"column":5}},"1224":{"start":{"line":5492,"column":6},"end":{"line":5494,"column":7}},"1225":{"start":{"line":5493,"column":8},"end":{"line":5493,"column":28}},"1226":{"start":{"line":5495,"column":6},"end":{"line":5495,"column":37}},"1227":{"start":{"line":5496,"column":6},"end":{"line":5496,"column":72}},"1228":{"start":{"line":5496,"column":37},"end":{"line":5496,"column":65}},"1229":{"start":{"line":5515,"column":4},"end":{"line":5521,"column":5}},"1230":{"start":{"line":5516,"column":6},"end":{"line":5518,"column":7}},"1231":{"start":{"line":5517,"column":8},"end":{"line":5517,"column":28}},"1232":{"start":{"line":5519,"column":6},"end":{"line":5519,"column":37}},"1233":{"start":{"line":5520,"column":6},"end":{"line":5520,"column":75}},"1234":{"start":{"line":5520,"column":37},"end":{"line":5520,"column":65}},"1235":{"start":{"line":5560,"column":4},"end":{"line":5574,"column":5}},"1236":{"start":{"line":5561,"column":6},"end":{"line":5563,"column":7}},"1237":{"start":{"line":5562,"column":8},"end":{"line":5562,"column":28}},"1238":{"start":{"line":5564,"column":6},"end":{"line":5571,"column":7}},"1239":{"start":{"line":5565,"column":8},"end":{"line":5566,"column":88}},"1240":{"start":{"line":5568,"column":8},"end":{"line":5570,"column":55}},"1241":{"start":{"line":5572,"column":6},"end":{"line":5572,"column":26}},"1242":{"start":{"line":5573,"column":6},"end":{"line":5573,"column":22}},"1243":{"start":{"line":5593,"column":4},"end":{"line":5611,"column":5}},"1244":{"start":{"line":5594,"column":6},"end":{"line":5595,"column":17}},"1245":{"start":{"line":5597,"column":6},"end":{"line":5599,"column":7}},"1246":{"start":{"line":5598,"column":8},"end":{"line":5598,"column":28}},"1247":{"start":{"line":5600,"column":6},"end":{"line":5610,"column":8}},"1248":{"start":{"line":5601,"column":8},"end":{"line":5603,"column":9}},"1249":{"start":{"line":5602,"column":10},"end":{"line":5602,"column":24}},"1250":{"start":{"line":5604,"column":8},"end":{"line":5604,"column":19}},"1251":{"start":{"line":5605,"column":8},"end":{"line":5605,"column":45}},"1252":{"start":{"line":5608,"column":8},"end":{"line":5608,"column":20}},"1253":{"start":{"line":5609,"column":8},"end":{"line":5609,"column":22}},"1254":{"start":{"line":5631,"column":4},"end":{"line":5633,"column":5}},"1255":{"start":{"line":5632,"column":6},"end":{"line":5632,"column":58}},"1256":{"start":{"line":5662,"column":4},"end":{"line":5664,"column":5}},"1257":{"start":{"line":5663,"column":6},"end":{"line":5663,"column":64}},"1258":{"start":{"line":5697,"column":4},"end":{"line":5715,"column":5}},"1259":{"start":{"line":5698,"column":6},"end":{"line":5699,"column":26}},"1260":{"start":{"line":5701,"column":6},"end":{"line":5703,"column":7}},"1261":{"start":{"line":5702,"column":8},"end":{"line":5702,"column":28}},"1262":{"start":{"line":5704,"column":6},"end":{"line":5709,"column":7}},"1263":{"start":{"line":5705,"column":8},"end":{"line":5705,"column":24}},"1264":{"start":{"line":5706,"column":13},"end":{"line":5709,"column":7}},"1265":{"start":{"line":5707,"column":8},"end":{"line":5707,"column":67}},"1266":{"start":{"line":5708,"column":8},"end":{"line":5708,"column":71}},"1267":{"start":{"line":5710,"column":6},"end":{"line":5710,"column":40}},"1268":{"start":{"line":5711,"column":6},"end":{"line":5711,"column":37}},"1269":{"start":{"line":5712,"column":6},"end":{"line":5712,"column":42}},"1270":{"start":{"line":5714,"column":6},"end":{"line":5714,"column":51}},"1271":{"start":{"line":5738,"column":4},"end":{"line":5740,"column":5}},"1272":{"start":{"line":5739,"column":6},"end":{"line":5739,"column":49}},"1273":{"start":{"line":5759,"column":4},"end":{"line":5763,"column":5}},"1274":{"start":{"line":5760,"column":6},"end":{"line":5762,"column":8}},"1275":{"start":{"line":5761,"column":8},"end":{"line":5761,"column":21}},"1276":{"start":{"line":5796,"column":4},"end":{"line":5829,"column":5}},"1277":{"start":{"line":5797,"column":6},"end":{"line":5797,"column":29}},"1278":{"start":{"line":5798,"column":6},"end":{"line":5800,"column":7}},"1279":{"start":{"line":5799,"column":8},"end":{"line":5799,"column":59}},"1280":{"start":{"line":5802,"column":6},"end":{"line":5804,"column":7}},"1281":{"start":{"line":5803,"column":8},"end":{"line":5803,"column":30}},"1282":{"start":{"line":5805,"column":6},"end":{"line":5807,"column":24}},"1283":{"start":{"line":5810,"column":6},"end":{"line":5817,"column":7}},"1284":{"start":{"line":5813,"column":8},"end":{"line":5816,"column":10}},"1285":{"start":{"line":5814,"column":10},"end":{"line":5814,"column":30}},"1286":{"start":{"line":5815,"column":10},"end":{"line":5815,"column":58}},"1287":{"start":{"line":5818,"column":6},"end":{"line":5828,"column":8}},"1288":{"start":{"line":5819,"column":8},"end":{"line":5820,"column":27}},"1289":{"start":{"line":5822,"column":8},"end":{"line":5826,"column":9}},"1290":{"start":{"line":5823,"column":10},"end":{"line":5825,"column":11}},"1291":{"start":{"line":5824,"column":12},"end":{"line":5824,"column":18}},"1292":{"start":{"line":5827,"column":8},"end":{"line":5827,"column":22}},"1293":{"start":{"line":5845,"column":4},"end":{"line":5847,"column":5}},"1294":{"start":{"line":5846,"column":6},"end":{"line":5846,"column":91}},"1295":{"start":{"line":5863,"column":4},"end":{"line":5865,"column":5}},"1296":{"start":{"line":5864,"column":6},"end":{"line":5864,"column":19}},"1297":{"start":{"line":5895,"column":4},"end":{"line":5937,"column":5}},"1298":{"start":{"line":5896,"column":6},"end":{"line":5897,"column":52}},"1299":{"start":{"line":5899,"column":6},"end":{"line":5907,"column":7}},"1300":{"start":{"line":5900,"column":8},"end":{"line":5902,"column":9}},"1301":{"start":{"line":5901,"column":10},"end":{"line":5901,"column":27}},"1302":{"start":{"line":5903,"column":8},"end":{"line":5903,"column":29}},"1303":{"start":{"line":5904,"column":8},"end":{"line":5904,"column":24}},"1304":{"start":{"line":5905,"column":8},"end":{"line":5905,"column":24}},"1305":{"start":{"line":5906,"column":8},"end":{"line":5906,"column":40}},"1306":{"start":{"line":5908,"column":6},"end":{"line":5912,"column":7}},"1307":{"start":{"line":5909,"column":8},"end":{"line":5909,"column":22}},"1308":{"start":{"line":5910,"column":13},"end":{"line":5912,"column":7}},"1309":{"start":{"line":5911,"column":8},"end":{"line":5911,"column":30}},"1310":{"start":{"line":5913,"column":6},"end":{"line":5914,"column":36}},"1311":{"start":{"line":5916,"column":6},"end":{"line":5936,"column":9}},"1312":{"start":{"line":5917,"column":8},"end":{"line":5917,"column":59}},"1313":{"start":{"line":5918,"column":8},"end":{"line":5935,"column":9}},"1314":{"start":{"line":5919,"column":10},"end":{"line":5934,"column":12}},"1315":{"start":{"line":5920,"column":12},"end":{"line":5922,"column":31}},"1316":{"start":{"line":5924,"column":12},"end":{"line":5924,"column":40}},"1317":{"start":{"line":5925,"column":12},"end":{"line":5925,"column":50}},"1318":{"start":{"line":5926,"column":12},"end":{"line":5932,"column":13}},"1319":{"start":{"line":5927,"column":14},"end":{"line":5929,"column":15}},"1320":{"start":{"line":5928,"column":16},"end":{"line":5928,"column":28}},"1321":{"start":{"line":5930,"column":14},"end":{"line":5930,"column":40}},"1322":{"start":{"line":5931,"column":14},"end":{"line":5931,"column":42}},"1323":{"start":{"line":5933,"column":12},"end":{"line":5933,"column":26}},"1324":{"start":{"line":5951,"column":4},"end":{"line":5954,"column":5}},"1325":{"start":{"line":5952,"column":6},"end":{"line":5952,"column":26}},"1326":{"start":{"line":5953,"column":6},"end":{"line":5953,"column":18}},"1327":{"start":{"line":5968,"column":4},"end":{"line":5970,"column":5}},"1328":{"start":{"line":5985,"column":4},"end":{"line":5987,"column":6}},"1329":{"start":{"line":5986,"column":6},"end":{"line":5986,"column":34}},"1330":{"start":{"line":6008,"column":4},"end":{"line":6011,"column":6}},"1331":{"start":{"line":6010,"column":6},"end":{"line":6010,"column":110}},"1332":{"start":{"line":6037,"column":4},"end":{"line":6041,"column":5}},"1333":{"start":{"line":6038,"column":6},"end":{"line":6040,"column":8}},"1334":{"start":{"line":6039,"column":8},"end":{"line":6039,"column":27}},"1335":{"start":{"line":6070,"column":4},"end":{"line":6099,"column":5}},"1336":{"start":{"line":6071,"column":6},"end":{"line":6072,"column":30}},"1337":{"start":{"line":6074,"column":6},"end":{"line":6083,"column":7}},"1338":{"start":{"line":6075,"column":8},"end":{"line":6082,"column":9}},"1339":{"start":{"line":6076,"column":10},"end":{"line":6076,"column":25}},"1340":{"start":{"line":6077,"column":10},"end":{"line":6077,"column":18}},"1341":{"start":{"line":6079,"column":13},"end":{"line":6082,"column":9}},"1342":{"start":{"line":6080,"column":10},"end":{"line":6080,"column":25}},"1343":{"start":{"line":6081,"column":10},"end":{"line":6081,"column":23}},"1344":{"start":{"line":6084,"column":6},"end":{"line":6086,"column":7}},"1345":{"start":{"line":6085,"column":8},"end":{"line":6085,"column":16}},"1346":{"start":{"line":6087,"column":6},"end":{"line":6087,"column":22}},"1347":{"start":{"line":6088,"column":6},"end":{"line":6093,"column":7}},"1348":{"start":{"line":6089,"column":8},"end":{"line":6089,"column":18}},"1349":{"start":{"line":6090,"column":8},"end":{"line":6090,"column":16}},"1350":{"start":{"line":6092,"column":8},"end":{"line":6092,"column":24}},"1351":{"start":{"line":6094,"column":6},"end":{"line":6097,"column":7}},"1352":{"start":{"line":6095,"column":8},"end":{"line":6095,"column":34}},"1353":{"start":{"line":6096,"column":8},"end":{"line":6096,"column":104}},"1354":{"start":{"line":6098,"column":6},"end":{"line":6098,"column":34}},"1355":{"start":{"line":6128,"column":4},"end":{"line":6133,"column":5}},"1356":{"start":{"line":6129,"column":6},"end":{"line":6132,"column":7}},"1357":{"start":{"line":6130,"column":8},"end":{"line":6130,"column":32}},"1358":{"start":{"line":6131,"column":8},"end":{"line":6131,"column":57}},"1359":{"start":{"line":6221,"column":4},"end":{"line":6319,"column":5}},"1360":{"start":{"line":6226,"column":6},"end":{"line":6226,"column":45}},"1361":{"start":{"line":6227,"column":6},"end":{"line":6227,"column":32}},"1362":{"start":{"line":6230,"column":6},"end":{"line":6230,"column":48}},"1363":{"start":{"line":6232,"column":6},"end":{"line":6234,"column":42}},"1364":{"start":{"line":6236,"column":6},"end":{"line":6239,"column":30}},"1365":{"start":{"line":6242,"column":6},"end":{"line":6247,"column":13}},"1366":{"start":{"line":6249,"column":6},"end":{"line":6271,"column":9}},"1367":{"start":{"line":6250,"column":8},"end":{"line":6250,"column":65}},"1368":{"start":{"line":6253,"column":8},"end":{"line":6253,"column":89}},"1369":{"start":{"line":6256,"column":8},"end":{"line":6258,"column":9}},"1370":{"start":{"line":6257,"column":10},"end":{"line":6257,"column":57}},"1371":{"start":{"line":6259,"column":8},"end":{"line":6262,"column":9}},"1372":{"start":{"line":6260,"column":10},"end":{"line":6260,"column":30}},"1373":{"start":{"line":6261,"column":10},"end":{"line":6261,"column":59}},"1374":{"start":{"line":6263,"column":8},"end":{"line":6265,"column":9}},"1375":{"start":{"line":6264,"column":10},"end":{"line":6264,"column":88}},"1376":{"start":{"line":6266,"column":8},"end":{"line":6266,"column":38}},"1377":{"start":{"line":6270,"column":8},"end":{"line":6270,"column":21}},"1378":{"start":{"line":6273,"column":6},"end":{"line":6273,"column":23}},"1379":{"start":{"line":6277,"column":6},"end":{"line":6278,"column":33}},"1380":{"start":{"line":6280,"column":6},"end":{"line":6283,"column":7}},"1381":{"start":{"line":6281,"column":8},"end":{"line":6281,"column":25}},"1382":{"start":{"line":6282,"column":8},"end":{"line":6282,"column":66}},"1383":{"start":{"line":6285,"column":6},"end":{"line":6287,"column":47}},"1384":{"start":{"line":6290,"column":6},"end":{"line":6299,"column":24}},"1385":{"start":{"line":6303,"column":6},"end":{"line":6303,"column":134}},"1386":{"start":{"line":6305,"column":6},"end":{"line":6310,"column":7}},"1387":{"start":{"line":6306,"column":8},"end":{"line":6306,"column":107}},"1388":{"start":{"line":6308,"column":8},"end":{"line":6308,"column":26}},"1389":{"start":{"line":6309,"column":8},"end":{"line":6309,"column":16}},"1390":{"start":{"line":6311,"column":6},"end":{"line":6313,"column":7}},"1391":{"start":{"line":6312,"column":8},"end":{"line":6312,"column":28}},"1392":{"start":{"line":6317,"column":6},"end":{"line":6317,"column":29}},"1393":{"start":{"line":6318,"column":6},"end":{"line":6318,"column":20}},"1394":{"start":{"line":6344,"column":4},"end":{"line":6354,"column":5}},"1395":{"start":{"line":6345,"column":6},"end":{"line":6345,"column":32}},"1396":{"start":{"line":6346,"column":6},"end":{"line":6347,"column":28}},"1397":{"start":{"line":6349,"column":6},"end":{"line":6349,"column":58}},"1398":{"start":{"line":6350,"column":6},"end":{"line":6352,"column":7}},"1399":{"start":{"line":6351,"column":8},"end":{"line":6351,"column":40}},"1400":{"start":{"line":6353,"column":6},"end":{"line":6353,"column":20}},"1401":{"start":{"line":6371,"column":4},"end":{"line":6373,"column":5}},"1402":{"start":{"line":6372,"column":6},"end":{"line":6372,"column":91}},"1403":{"start":{"line":6391,"column":4},"end":{"line":6394,"column":5}},"1404":{"start":{"line":6392,"column":6},"end":{"line":6392,"column":27}},"1405":{"start":{"line":6393,"column":6},"end":{"line":6393,"column":55}},"1406":{"start":{"line":6422,"column":4},"end":{"line":6426,"column":5}},"1407":{"start":{"line":6423,"column":6},"end":{"line":6423,"column":39}},"1408":{"start":{"line":6424,"column":6},"end":{"line":6424,"column":29}},"1409":{"start":{"line":6425,"column":6},"end":{"line":6425,"column":19}},"1410":{"start":{"line":6448,"column":4},"end":{"line":6451,"column":5}},"1411":{"start":{"line":6449,"column":6},"end":{"line":6449,"column":25}},"1412":{"start":{"line":6450,"column":6},"end":{"line":6450,"column":19}},"1413":{"start":{"line":6478,"column":4},"end":{"line":6481,"column":5}},"1414":{"start":{"line":6479,"column":6},"end":{"line":6479,"column":28}},"1415":{"start":{"line":6480,"column":6},"end":{"line":6480,"column":18}},"1416":{"start":{"line":6495,"column":4},"end":{"line":6497,"column":5}},"1417":{"start":{"line":6496,"column":6},"end":{"line":6496,"column":38}},"1418":{"start":{"line":6512,"column":4},"end":{"line":6514,"column":5}},"1419":{"start":{"line":6513,"column":6},"end":{"line":6513,"column":30}},"1420":{"start":{"line":6519,"column":4},"end":{"line":6519,"column":25}},"1421":{"start":{"line":6520,"column":4},"end":{"line":6520,"column":27}},"1422":{"start":{"line":6521,"column":4},"end":{"line":6521,"column":19}},"1423":{"start":{"line":6522,"column":4},"end":{"line":6522,"column":23}},"1424":{"start":{"line":6523,"column":4},"end":{"line":6523,"column":29}},"1425":{"start":{"line":6524,"column":4},"end":{"line":6524,"column":29}},"1426":{"start":{"line":6525,"column":4},"end":{"line":6525,"column":25}},"1427":{"start":{"line":6526,"column":4},"end":{"line":6526,"column":29}},"1428":{"start":{"line":6527,"column":4},"end":{"line":6527,"column":29}},"1429":{"start":{"line":6528,"column":4},"end":{"line":6528,"column":31}},"1430":{"start":{"line":6529,"column":4},"end":{"line":6529,"column":29}},"1431":{"start":{"line":6530,"column":4},"end":{"line":6530,"column":27}},"1432":{"start":{"line":6531,"column":4},"end":{"line":6531,"column":43}},"1433":{"start":{"line":6532,"column":4},"end":{"line":6532,"column":25}},"1434":{"start":{"line":6533,"column":4},"end":{"line":6533,"column":31}},"1435":{"start":{"line":6534,"column":4},"end":{"line":6534,"column":31}},"1436":{"start":{"line":6535,"column":4},"end":{"line":6535,"column":25}},"1437":{"start":{"line":6536,"column":4},"end":{"line":6536,"column":25}},"1438":{"start":{"line":6537,"column":4},"end":{"line":6537,"column":35}},"1439":{"start":{"line":6538,"column":4},"end":{"line":6538,"column":27}},"1440":{"start":{"line":6539,"column":4},"end":{"line":6539,"column":29}},"1441":{"start":{"line":6540,"column":4},"end":{"line":6540,"column":29}},"1442":{"start":{"line":6541,"column":4},"end":{"line":6541,"column":39}},"1443":{"start":{"line":6542,"column":4},"end":{"line":6542,"column":25}},"1444":{"start":{"line":6543,"column":4},"end":{"line":6543,"column":35}},"1445":{"start":{"line":6544,"column":4},"end":{"line":6544,"column":27}},"1446":{"start":{"line":6545,"column":4},"end":{"line":6545,"column":37}},"1447":{"start":{"line":6546,"column":4},"end":{"line":6546,"column":33}},"1448":{"start":{"line":6547,"column":4},"end":{"line":6547,"column":29}},"1449":{"start":{"line":6548,"column":4},"end":{"line":6548,"column":29}},"1450":{"start":{"line":6549,"column":4},"end":{"line":6549,"column":29}},"1451":{"start":{"line":6550,"column":4},"end":{"line":6550,"column":39}},"1452":{"start":{"line":6551,"column":4},"end":{"line":6551,"column":27}},"1453":{"start":{"line":6552,"column":4},"end":{"line":6552,"column":27}},"1454":{"start":{"line":6553,"column":4},"end":{"line":6553,"column":23}},"1455":{"start":{"line":6554,"column":4},"end":{"line":6554,"column":21}},"1456":{"start":{"line":6555,"column":4},"end":{"line":6555,"column":33}},"1457":{"start":{"line":6556,"column":4},"end":{"line":6556,"column":21}},"1458":{"start":{"line":6557,"column":4},"end":{"line":6557,"column":29}},"1459":{"start":{"line":6558,"column":4},"end":{"line":6558,"column":25}},"1460":{"start":{"line":6559,"column":4},"end":{"line":6559,"column":21}},"1461":{"start":{"line":6560,"column":4},"end":{"line":6560,"column":23}},"1462":{"start":{"line":6561,"column":4},"end":{"line":6561,"column":23}},"1463":{"start":{"line":6562,"column":4},"end":{"line":6562,"column":25}},"1464":{"start":{"line":6563,"column":4},"end":{"line":6563,"column":29}},"1465":{"start":{"line":6564,"column":4},"end":{"line":6564,"column":39}},"1466":{"start":{"line":6565,"column":4},"end":{"line":6565,"column":23}},"1467":{"start":{"line":6566,"column":4},"end":{"line":6566,"column":25}},"1468":{"start":{"line":6567,"column":4},"end":{"line":6567,"column":31}},"1469":{"start":{"line":6568,"column":4},"end":{"line":6568,"column":23}},"1470":{"start":{"line":6569,"column":4},"end":{"line":6569,"column":25}},"1471":{"start":{"line":6570,"column":4},"end":{"line":6570,"column":27}},"1472":{"start":{"line":6571,"column":4},"end":{"line":6571,"column":27}},"1473":{"start":{"line":6572,"column":4},"end":{"line":6572,"column":23}},"1474":{"start":{"line":6573,"column":4},"end":{"line":6573,"column":29}},"1475":{"start":{"line":6574,"column":4},"end":{"line":6574,"column":27}},"1476":{"start":{"line":6575,"column":4},"end":{"line":6575,"column":21}},"1477":{"start":{"line":6576,"column":4},"end":{"line":6576,"column":31}},"1478":{"start":{"line":6577,"column":4},"end":{"line":6577,"column":25}},"1479":{"start":{"line":6578,"column":4},"end":{"line":6578,"column":29}},"1480":{"start":{"line":6579,"column":4},"end":{"line":6579,"column":33}},"1481":{"start":{"line":6580,"column":4},"end":{"line":6580,"column":25}},"1482":{"start":{"line":6581,"column":4},"end":{"line":6581,"column":23}},"1483":{"start":{"line":6582,"column":4},"end":{"line":6582,"column":27}},"1484":{"start":{"line":6583,"column":4},"end":{"line":6583,"column":25}},"1485":{"start":{"line":6584,"column":4},"end":{"line":6584,"column":29}},"1486":{"start":{"line":6585,"column":4},"end":{"line":6585,"column":23}},"1487":{"start":{"line":6586,"column":4},"end":{"line":6586,"column":21}},"1488":{"start":{"line":6587,"column":4},"end":{"line":6587,"column":21}},"1489":{"start":{"line":6588,"column":4},"end":{"line":6588,"column":33}},"1490":{"start":{"line":6591,"column":4},"end":{"line":6591,"column":25}},"1491":{"start":{"line":6592,"column":4},"end":{"line":6592,"column":23}},"1492":{"start":{"line":6593,"column":4},"end":{"line":6593,"column":26}},"1493":{"start":{"line":6594,"column":4},"end":{"line":6594,"column":36}},"1494":{"start":{"line":6595,"column":4},"end":{"line":6595,"column":27}},"1495":{"start":{"line":6596,"column":4},"end":{"line":6596,"column":31}},"1496":{"start":{"line":6597,"column":4},"end":{"line":6597,"column":30}},"1497":{"start":{"line":6598,"column":4},"end":{"line":6598,"column":27}},"1498":{"start":{"line":6599,"column":4},"end":{"line":6599,"column":23}},"1499":{"start":{"line":6600,"column":4},"end":{"line":6600,"column":25}},"1500":{"start":{"line":6601,"column":4},"end":{"line":6601,"column":23}},"1501":{"start":{"line":6604,"column":4},"end":{"line":6604,"column":18}},"1502":{"start":{"line":6609,"column":4},"end":{"line":6609,"column":25}},"1503":{"start":{"line":6610,"column":4},"end":{"line":6610,"column":33}},"1504":{"start":{"line":6611,"column":4},"end":{"line":6611,"column":31}},"1505":{"start":{"line":6612,"column":4},"end":{"line":6612,"column":27}},"1506":{"start":{"line":6613,"column":4},"end":{"line":6613,"column":25}},"1507":{"start":{"line":6614,"column":4},"end":{"line":6614,"column":23}},"1508":{"start":{"line":6615,"column":4},"end":{"line":6615,"column":33}},"1509":{"start":{"line":6616,"column":4},"end":{"line":6616,"column":29}},"1510":{"start":{"line":6617,"column":4},"end":{"line":6617,"column":31}},"1511":{"start":{"line":6618,"column":4},"end":{"line":6618,"column":41}},"1512":{"start":{"line":6619,"column":4},"end":{"line":6619,"column":37}},"1513":{"start":{"line":6620,"column":4},"end":{"line":6620,"column":21}},"1514":{"start":{"line":6621,"column":4},"end":{"line":6621,"column":31}},"1515":{"start":{"line":6622,"column":4},"end":{"line":6622,"column":29}},"1516":{"start":{"line":6623,"column":4},"end":{"line":6623,"column":37}},"1517":{"start":{"line":6624,"column":4},"end":{"line":6624,"column":29}},"1518":{"start":{"line":6625,"column":4},"end":{"line":6625,"column":33}},"1519":{"start":{"line":6626,"column":4},"end":{"line":6626,"column":27}},"1520":{"start":{"line":6627,"column":4},"end":{"line":6627,"column":33}},"1521":{"start":{"line":6628,"column":4},"end":{"line":6628,"column":29}},"1522":{"start":{"line":6629,"column":4},"end":{"line":6629,"column":29}},"1523":{"start":{"line":6630,"column":4},"end":{"line":6630,"column":31}},"1524":{"start":{"line":6631,"column":4},"end":{"line":6631,"column":35}},"1525":{"start":{"line":6632,"column":4},"end":{"line":6632,"column":25}},"1526":{"start":{"line":6633,"column":4},"end":{"line":6633,"column":27}},"1527":{"start":{"line":6634,"column":4},"end":{"line":6634,"column":31}},"1528":{"start":{"line":6635,"column":4},"end":{"line":6635,"column":31}},"1529":{"start":{"line":6636,"column":4},"end":{"line":6636,"column":41}},"1530":{"start":{"line":6637,"column":4},"end":{"line":6637,"column":31}},"1531":{"start":{"line":6638,"column":4},"end":{"line":6638,"column":31}},"1532":{"start":{"line":6639,"column":4},"end":{"line":6639,"column":37}},"1533":{"start":{"line":6640,"column":4},"end":{"line":6640,"column":37}},"1534":{"start":{"line":6641,"column":4},"end":{"line":6641,"column":25}},"1535":{"start":{"line":6642,"column":4},"end":{"line":6642,"column":35}},"1536":{"start":{"line":6643,"column":4},"end":{"line":6643,"column":23}},"1537":{"start":{"line":6644,"column":4},"end":{"line":6644,"column":21}},"1538":{"start":{"line":6645,"column":4},"end":{"line":6645,"column":31}},"1539":{"start":{"line":6646,"column":4},"end":{"line":6646,"column":27}},"1540":{"start":{"line":6647,"column":4},"end":{"line":6647,"column":27}},"1541":{"start":{"line":6648,"column":4},"end":{"line":6648,"column":37}},"1542":{"start":{"line":6649,"column":4},"end":{"line":6649,"column":27}},"1543":{"start":{"line":6650,"column":4},"end":{"line":6650,"column":39}},"1544":{"start":{"line":6651,"column":4},"end":{"line":6651,"column":23}},"1545":{"start":{"line":6652,"column":4},"end":{"line":6652,"column":23}},"1546":{"start":{"line":6653,"column":4},"end":{"line":6653,"column":37}},"1547":{"start":{"line":6654,"column":4},"end":{"line":6654,"column":31}},"1548":{"start":{"line":6655,"column":4},"end":{"line":6655,"column":31}},"1549":{"start":{"line":6656,"column":4},"end":{"line":6656,"column":31}},"1550":{"start":{"line":6659,"column":4},"end":{"line":6659,"column":23}},"1551":{"start":{"line":6660,"column":4},"end":{"line":6660,"column":22}},"1552":{"start":{"line":6661,"column":4},"end":{"line":6661,"column":25}},"1553":{"start":{"line":6662,"column":4},"end":{"line":6662,"column":28}},"1554":{"start":{"line":6663,"column":4},"end":{"line":6663,"column":26}},"1555":{"start":{"line":6664,"column":4},"end":{"line":6664,"column":31}},"1556":{"start":{"line":6665,"column":4},"end":{"line":6665,"column":30}},"1557":{"start":{"line":6666,"column":4},"end":{"line":6666,"column":27}},"1558":{"start":{"line":6668,"column":4},"end":{"line":6676,"column":16}},"1559":{"start":{"line":6669,"column":6},"end":{"line":6669,"column":21}},"1560":{"start":{"line":6670,"column":6},"end":{"line":6674,"column":9}},"1561":{"start":{"line":6671,"column":8},"end":{"line":6673,"column":9}},"1562":{"start":{"line":6672,"column":10},"end":{"line":6672,"column":36}},"1563":{"start":{"line":6675,"column":6},"end":{"line":6675,"column":20}},"1564":{"start":{"line":6681,"column":4},"end":{"line":6681,"column":25}},"1565":{"start":{"line":6682,"column":4},"end":{"line":6682,"column":23}},"1566":{"start":{"line":6683,"column":4},"end":{"line":6683,"column":27}},"1567":{"start":{"line":6686,"column":4},"end":{"line":6686,"column":24}},"1568":{"start":{"line":6687,"column":4},"end":{"line":6687,"column":24}},"1569":{"start":{"line":6689,"column":4},"end":{"line":6701,"column":7}},"1570":{"start":{"line":6690,"column":6},"end":{"line":6690,"column":49}},"1571":{"start":{"line":6691,"column":6},"end":{"line":6700,"column":7}},"1572":{"start":{"line":6692,"column":8},"end":{"line":6699,"column":10}},"1573":{"start":{"line":6693,"column":10},"end":{"line":6694,"column":56}},"1574":{"start":{"line":6696,"column":10},"end":{"line":6698,"column":50}},"1575":{"start":{"line":6712,"column":4},"end":{"line":6712,"column":29}},"1576":{"start":{"line":6715,"column":4},"end":{"line":6715,"column":42}},"1577":{"start":{"line":6716,"column":4},"end":{"line":6716,"column":48}},"1578":{"start":{"line":6717,"column":4},"end":{"line":6717,"column":44}},"1579":{"start":{"line":6718,"column":4},"end":{"line":6718,"column":46}},"1580":{"start":{"line":6721,"column":4},"end":{"line":6731,"column":7}},"1581":{"start":{"line":6722,"column":6},"end":{"line":6722,"column":38}},"1582":{"start":{"line":6723,"column":6},"end":{"line":6730,"column":8}},"1583":{"start":{"line":6724,"column":8},"end":{"line":6725,"column":61}},"1584":{"start":{"line":6727,"column":8},"end":{"line":6729,"column":19}},"1585":{"start":{"line":6734,"column":4},"end":{"line":6740,"column":7}},"1586":{"start":{"line":6735,"column":6},"end":{"line":6735,"column":38}},"1587":{"start":{"line":6736,"column":6},"end":{"line":6739,"column":8}},"1588":{"start":{"line":6737,"column":8},"end":{"line":6737,"column":48}},"1589":{"start":{"line":6738,"column":8},"end":{"line":6738,"column":20}},"1590":{"start":{"line":6743,"column":4},"end":{"line":6748,"column":7}},"1591":{"start":{"line":6744,"column":6},"end":{"line":6744,"column":38}},"1592":{"start":{"line":6745,"column":6},"end":{"line":6747,"column":8}},"1593":{"start":{"line":6746,"column":8},"end":{"line":6746,"column":90}},"1594":{"start":{"line":6750,"column":4},"end":{"line":6750,"column":18}},"1595":{"start":{"line":6756,"column":2},"end":{"line":6756,"column":25}},"1596":{"start":{"line":6759,"column":2},"end":{"line":6785,"column":3}},"1597":{"start":{"line":6763,"column":4},"end":{"line":6763,"column":15}},"1598":{"start":{"line":6767,"column":4},"end":{"line":6769,"column":7}},"1599":{"start":{"line":6768,"column":6},"end":{"line":6768,"column":15}},"1600":{"start":{"line":6772,"column":7},"end":{"line":6785,"column":3}},"1601":{"start":{"line":6774,"column":4},"end":{"line":6780,"column":5}},"1602":{"start":{"line":6775,"column":6},"end":{"line":6775,"column":37}},"1603":{"start":{"line":6779,"column":6},"end":{"line":6779,"column":24}},"1604":{"start":{"line":6784,"column":4},"end":{"line":6784,"column":15}}},"branchMap":{"1":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":14},"end":{"line":141,"column":40}},{"start":{"line":141,"column":44},"end":{"line":141,"column":50}},{"start":{"line":141,"column":55},"end":{"line":141,"column":59}}]},"2":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":20},"end":{"line":144,"column":47}},{"start":{"line":144,"column":51},"end":{"line":144,"column":58}},{"start":{"line":144,"column":62},"end":{"line":144,"column":79}},{"start":{"line":144,"column":83},"end":{"line":144,"column":90}}]},"3":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":19},"end":{"line":147,"column":45}},{"start":{"line":147,"column":49},"end":{"line":147,"column":55}},{"start":{"line":147,"column":59},"end":{"line":147,"column":75}},{"start":{"line":147,"column":79},"end":{"line":147,"column":85}}]},"4":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":22},"end":{"line":150,"column":32}},{"start":{"line":150,"column":36},"end":{"line":150,"column":70}},{"start":{"line":150,"column":74},"end":{"line":150,"column":85}}]},"5":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":19},"end":{"line":153,"column":45}},{"start":{"line":153,"column":49},"end":{"line":153,"column":55}}]},"6":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]},"7":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":6},"end":{"line":154,"column":16}},{"start":{"line":154,"column":21},"end":{"line":154,"column":53}},{"start":{"line":154,"column":57},"end":{"line":154,"column":89}}]},"8":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":17},"end":{"line":171,"column":26}},{"start":{"line":171,"column":30},"end":{"line":171,"column":31}}]},"9":{"line":172,"type":"cond-expr","locations":[{"start":{"line":172,"column":25},"end":{"line":172,"column":37}},{"start":{"line":172,"column":40},"end":{"line":172,"column":41}}]},"10":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":6},"end":{"line":175,"column":6}},{"start":{"line":175,"column":6},"end":{"line":175,"column":6}}]},"11":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"12":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":8},"end":{"line":195,"column":25}},{"start":{"line":195,"column":29},"end":{"line":195,"column":42}}]},"13":{"line":196,"type":"cond-expr","locations":[{"start":{"line":196,"column":28},"end":{"line":196,"column":29}},{"start":{"line":196,"column":32},"end":{"line":196,"column":34}}]},"14":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"15":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":8},"end":{"line":198,"column":24}},{"start":{"line":198,"column":28},"end":{"line":198,"column":44}}]},"16":{"line":201,"type":"cond-expr","locations":[{"start":{"line":201,"column":33},"end":{"line":201,"column":38}},{"start":{"line":201,"column":41},"end":{"line":201,"column":58}}]},"17":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":13},"end":{"line":202,"column":32}},{"start":{"line":202,"column":37},"end":{"line":202,"column":47}}]},"18":{"line":204,"type":"cond-expr","locations":[{"start":{"line":205,"column":9},"end":{"line":205,"column":57}},{"start":{"line":206,"column":9},"end":{"line":206,"column":23}}]},"19":{"line":205,"type":"cond-expr","locations":[{"start":{"line":205,"column":51},"end":{"line":205,"column":52}},{"start":{"line":205,"column":55},"end":{"line":205,"column":57}}]},"20":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":9},"end":{"line":205,"column":14}},{"start":{"line":205,"column":18},"end":{"line":205,"column":48}}]},"21":{"line":206,"type":"cond-expr","locations":[{"start":{"line":206,"column":17},"end":{"line":206,"column":18}},{"start":{"line":206,"column":21},"end":{"line":206,"column":23}}]},"22":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":4},"end":{"line":219,"column":4}},{"start":{"line":219,"column":4},"end":{"line":219,"column":4}}]},"23":{"line":219,"type":"binary-expr","locations":[{"start":{"line":219,"column":8},"end":{"line":219,"column":25}},{"start":{"line":219,"column":29},"end":{"line":219,"column":42}}]},"24":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":6},"end":{"line":222,"column":6}},{"start":{"line":222,"column":6},"end":{"line":222,"column":6}}]},"25":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":10},"end":{"line":222,"column":26}},{"start":{"line":222,"column":30},"end":{"line":222,"column":46}}]},"26":{"line":225,"type":"cond-expr","locations":[{"start":{"line":225,"column":35},"end":{"line":225,"column":40}},{"start":{"line":225,"column":43},"end":{"line":225,"column":60}}]},"27":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":22},"end":{"line":226,"column":33}},{"start":{"line":226,"column":38},"end":{"line":226,"column":54}}]},"28":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":6},"end":{"line":228,"column":6}},{"start":{"line":228,"column":6},"end":{"line":228,"column":6}}]},"29":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":9},"end":{"line":229,"column":23}},{"start":{"line":229,"column":28},"end":{"line":229,"column":47}}]},"30":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":6},"end":{"line":267,"column":6}},{"start":{"line":267,"column":6},"end":{"line":267,"column":6}}]},"31":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":8},"end":{"line":268,"column":8}},{"start":{"line":268,"column":8},"end":{"line":268,"column":8}}]},"32":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":12},"end":{"line":268,"column":25}},{"start":{"line":268,"column":29},"end":{"line":268,"column":56}}]},"33":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":8},"end":{"line":271,"column":8}},{"start":{"line":271,"column":8},"end":{"line":271,"column":8}}]},"34":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":12},"end":{"line":271,"column":25}},{"start":{"line":271,"column":29},"end":{"line":271,"column":56}}]},"35":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"36":{"line":299,"type":"binary-expr","locations":[{"start":{"line":299,"column":8},"end":{"line":299,"column":13}},{"start":{"line":299,"column":17},"end":{"line":299,"column":41}},{"start":{"line":300,"column":8},"end":{"line":300,"column":11}},{"start":{"line":300,"column":15},"end":{"line":300,"column":37}},{"start":{"line":300,"column":41},"end":{"line":300,"column":45}},{"start":{"line":300,"column":49},"end":{"line":300,"column":72}}]},"37":{"line":336,"type":"binary-expr","locations":[{"start":{"line":336,"column":11},"end":{"line":336,"column":26}},{"start":{"line":336,"column":30},"end":{"line":336,"column":32}}]},"38":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":11},"end":{"line":346,"column":27}},{"start":{"line":346,"column":31},"end":{"line":360,"column":5}}]},"39":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":4},"end":{"line":371,"column":4}},{"start":{"line":371,"column":4},"end":{"line":371,"column":4}}]},"40":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":4},"end":{"line":384,"column":4}},{"start":{"line":384,"column":4},"end":{"line":384,"column":4}}]},"41":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":4},"end":{"line":388,"column":4}},{"start":{"line":388,"column":4},"end":{"line":388,"column":4}}]},"42":{"line":407,"type":"binary-expr","locations":[{"start":{"line":407,"column":4},"end":{"line":407,"column":9}},{"start":{"line":407,"column":14},"end":{"line":407,"column":23}}]},"43":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":4},"end":{"line":408,"column":4}},{"start":{"line":408,"column":4},"end":{"line":408,"column":4}}]},"44":{"line":409,"type":"cond-expr","locations":[{"start":{"line":409,"column":20},"end":{"line":409,"column":32}},{"start":{"line":409,"column":35},"end":{"line":409,"column":36}}]},"45":{"line":412,"type":"binary-expr","locations":[{"start":{"line":412,"column":17},"end":{"line":412,"column":28}},{"start":{"line":412,"column":32},"end":{"line":412,"column":33}}]},"46":{"line":413,"type":"cond-expr","locations":[{"start":{"line":413,"column":36},"end":{"line":413,"column":37}},{"start":{"line":413,"column":40},"end":{"line":413,"column":46}}]},"47":{"line":437,"type":"cond-expr","locations":[{"start":{"line":437,"column":24},"end":{"line":437,"column":86}},{"start":{"line":437,"column":89},"end":{"line":437,"column":93}}]},"48":{"line":480,"type":"binary-expr","locations":[{"start":{"line":480,"column":25},"end":{"line":480,"column":73}},{"start":{"line":480,"column":77},"end":{"line":480,"column":91}}]},"49":{"line":492,"type":"binary-expr","locations":[{"start":{"line":492,"column":19},"end":{"line":492,"column":57}},{"start":{"line":492,"column":61},"end":{"line":492,"column":65}}]},"50":{"line":493,"type":"binary-expr","locations":[{"start":{"line":493,"column":21},"end":{"line":493,"column":34}},{"start":{"line":493,"column":38},"end":{"line":493,"column":42}}]},"51":{"line":499,"type":"binary-expr","locations":[{"start":{"line":499,"column":23},"end":{"line":499,"column":61}},{"start":{"line":499,"column":65},"end":{"line":499,"column":77}}]},"52":{"line":500,"type":"binary-expr","locations":[{"start":{"line":500,"column":24},"end":{"line":500,"column":63}},{"start":{"line":500,"column":67},"end":{"line":500,"column":80}}]},"53":{"line":503,"type":"binary-expr","locations":[{"start":{"line":503,"column":21},"end":{"line":503,"column":55}},{"start":{"line":503,"column":59},"end":{"line":503,"column":69}}]},"54":{"line":589,"type":"cond-expr","locations":[{"start":{"line":590,"column":9},"end":{"line":590,"column":14}},{"start":{"line":591,"column":9},"end":{"line":591,"column":33}}]},"55":{"line":589,"type":"binary-expr","locations":[{"start":{"line":589,"column":14},"end":{"line":589,"column":19}},{"start":{"line":589,"column":23},"end":{"line":589,"column":47}},{"start":{"line":589,"column":51},"end":{"line":589,"column":66}},{"start":{"line":589,"column":70},"end":{"line":589,"column":111}}]},"56":{"line":625,"type":"binary-expr","locations":[{"start":{"line":625,"column":25},"end":{"line":625,"column":54}},{"start":{"line":625,"column":58},"end":{"line":625,"column":83}}]},"57":{"line":714,"type":"if","locations":[{"start":{"line":714,"column":8},"end":{"line":714,"column":8}},{"start":{"line":714,"column":8},"end":{"line":714,"column":8}}]},"58":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":8},"end":{"line":723,"column":8}},{"start":{"line":723,"column":8},"end":{"line":723,"column":8}}]},"59":{"line":726,"type":"binary-expr","locations":[{"start":{"line":726,"column":47},"end":{"line":726,"column":51}},{"start":{"line":726,"column":55},"end":{"line":726,"column":64}}]},"60":{"line":727,"type":"cond-expr","locations":[{"start":{"line":727,"column":36},"end":{"line":727,"column":42}},{"start":{"line":727,"column":45},"end":{"line":727,"column":56}}]},"61":{"line":729,"type":"binary-expr","locations":[{"start":{"line":729,"column":35},"end":{"line":729,"column":39}},{"start":{"line":729,"column":43},"end":{"line":729,"column":52}}]},"62":{"line":748,"type":"if","locations":[{"start":{"line":748,"column":6},"end":{"line":748,"column":6}},{"start":{"line":748,"column":6},"end":{"line":748,"column":6}}]},"63":{"line":750,"type":"if","locations":[{"start":{"line":750,"column":8},"end":{"line":750,"column":8}},{"start":{"line":750,"column":8},"end":{"line":750,"column":8}}]},"64":{"line":756,"type":"if","locations":[{"start":{"line":756,"column":6},"end":{"line":756,"column":6}},{"start":{"line":756,"column":6},"end":{"line":756,"column":6}}]},"65":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":8},"end":{"line":758,"column":8}},{"start":{"line":758,"column":8},"end":{"line":758,"column":8}}]},"66":{"line":762,"type":"switch","locations":[{"start":{"line":763,"column":10},"end":{"line":763,"column":25}},{"start":{"line":764,"column":10},"end":{"line":765,"column":36}},{"start":{"line":767,"column":10},"end":{"line":767,"column":27}},{"start":{"line":768,"column":10},"end":{"line":769,"column":35}},{"start":{"line":771,"column":10},"end":{"line":774,"column":26}}]},"67":{"line":780,"type":"if","locations":[{"start":{"line":780,"column":6},"end":{"line":780,"column":6}},{"start":{"line":780,"column":6},"end":{"line":780,"column":6}}]},"68":{"line":783,"type":"binary-expr","locations":[{"start":{"line":783,"column":8},"end":{"line":783,"column":14}},{"start":{"line":783,"column":19},"end":{"line":783,"column":38}}]},"69":{"line":784,"type":"binary-expr","locations":[{"start":{"line":784,"column":8},"end":{"line":784,"column":14}},{"start":{"line":784,"column":19},"end":{"line":784,"column":38}}]},"70":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":10},"end":{"line":788,"column":10}},{"start":{"line":788,"column":10},"end":{"line":788,"column":10}}]},"71":{"line":792,"type":"cond-expr","locations":[{"start":{"line":792,"column":25},"end":{"line":792,"column":43}},{"start":{"line":792,"column":46},"end":{"line":792,"column":48}}]},"72":{"line":795,"type":"cond-expr","locations":[{"start":{"line":795,"column":25},"end":{"line":795,"column":37}},{"start":{"line":795,"column":40},"end":{"line":795,"column":57}}]},"73":{"line":798,"type":"if","locations":[{"start":{"line":798,"column":6},"end":{"line":798,"column":6}},{"start":{"line":798,"column":6},"end":{"line":798,"column":6}}]},"74":{"line":799,"type":"if","locations":[{"start":{"line":799,"column":8},"end":{"line":799,"column":8}},{"start":{"line":799,"column":8},"end":{"line":799,"column":8}}]},"75":{"line":802,"type":"if","locations":[{"start":{"line":802,"column":8},"end":{"line":802,"column":8}},{"start":{"line":802,"column":8},"end":{"line":802,"column":8}}]},"76":{"line":807,"type":"if","locations":[{"start":{"line":807,"column":6},"end":{"line":807,"column":6}},{"start":{"line":807,"column":6},"end":{"line":807,"column":6}}]},"77":{"line":816,"type":"cond-expr","locations":[{"start":{"line":816,"column":15},"end":{"line":816,"column":22}},{"start":{"line":816,"column":25},"end":{"line":816,"column":31}}]},"78":{"line":820,"type":"if","locations":[{"start":{"line":820,"column":6},"end":{"line":820,"column":6}},{"start":{"line":820,"column":6},"end":{"line":820,"column":6}}]},"79":{"line":836,"type":"cond-expr","locations":[{"start":{"line":836,"column":35},"end":{"line":836,"column":58}},{"start":{"line":836,"column":61},"end":{"line":836,"column":63}}]},"80":{"line":839,"type":"if","locations":[{"start":{"line":839,"column":4},"end":{"line":839,"column":4}},{"start":{"line":839,"column":4},"end":{"line":839,"column":4}}]},"81":{"line":843,"type":"if","locations":[{"start":{"line":843,"column":10},"end":{"line":843,"column":10}},{"start":{"line":843,"column":10},"end":{"line":843,"column":10}}]},"82":{"line":848,"type":"binary-expr","locations":[{"start":{"line":848,"column":17},"end":{"line":848,"column":23}},{"start":{"line":848,"column":27},"end":{"line":848,"column":43}}]},"83":{"line":864,"type":"if","locations":[{"start":{"line":864,"column":6},"end":{"line":864,"column":6}},{"start":{"line":864,"column":6},"end":{"line":864,"column":6}}]},"84":{"line":868,"type":"if","locations":[{"start":{"line":868,"column":6},"end":{"line":868,"column":6}},{"start":{"line":868,"column":6},"end":{"line":868,"column":6}}]},"85":{"line":868,"type":"binary-expr","locations":[{"start":{"line":868,"column":10},"end":{"line":868,"column":39}},{"start":{"line":868,"column":43},"end":{"line":868,"column":65}}]},"86":{"line":872,"type":"if","locations":[{"start":{"line":872,"column":6},"end":{"line":872,"column":6}},{"start":{"line":872,"column":6},"end":{"line":872,"column":6}}]},"87":{"line":873,"type":"if","locations":[{"start":{"line":873,"column":8},"end":{"line":873,"column":8}},{"start":{"line":873,"column":8},"end":{"line":873,"column":8}}]},"88":{"line":876,"type":"binary-expr","locations":[{"start":{"line":876,"column":19},"end":{"line":876,"column":27}},{"start":{"line":876,"column":31},"end":{"line":876,"column":50}}]},"89":{"line":877,"type":"if","locations":[{"start":{"line":877,"column":8},"end":{"line":877,"column":8}},{"start":{"line":877,"column":8},"end":{"line":877,"column":8}}]},"90":{"line":879,"type":"if","locations":[{"start":{"line":879,"column":10},"end":{"line":879,"column":10}},{"start":{"line":879,"column":10},"end":{"line":879,"column":10}}]},"91":{"line":882,"type":"if","locations":[{"start":{"line":882,"column":10},"end":{"line":882,"column":10}},{"start":{"line":882,"column":10},"end":{"line":882,"column":10}}]},"92":{"line":890,"type":"if","locations":[{"start":{"line":890,"column":6},"end":{"line":890,"column":6}},{"start":{"line":890,"column":6},"end":{"line":890,"column":6}}]},"93":{"line":890,"type":"binary-expr","locations":[{"start":{"line":890,"column":10},"end":{"line":890,"column":28}},{"start":{"line":890,"column":33},"end":{"line":890,"column":50}},{"start":{"line":890,"column":54},"end":{"line":890,"column":69}}]},"94":{"line":893,"type":"switch","locations":[{"start":{"line":894,"column":8},"end":{"line":896,"column":10}},{"start":{"line":897,"column":8},"end":{"line":899,"column":10}},{"start":{"line":900,"column":8},"end":{"line":902,"column":10}},{"start":{"line":903,"column":8},"end":{"line":905,"column":10}}]},"95":{"line":933,"type":"cond-expr","locations":[{"start":{"line":933,"column":35},"end":{"line":933,"column":42}},{"start":{"line":933,"column":45},"end":{"line":933,"column":49}}]},"96":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":8},"end":{"line":934,"column":8}},{"start":{"line":934,"column":8},"end":{"line":934,"column":8}}]},"97":{"line":938,"type":"if","locations":[{"start":{"line":938,"column":8},"end":{"line":938,"column":8}},{"start":{"line":938,"column":8},"end":{"line":938,"column":8}}]},"98":{"line":938,"type":"binary-expr","locations":[{"start":{"line":938,"column":12},"end":{"line":938,"column":28}},{"start":{"line":938,"column":32},"end":{"line":938,"column":39}}]},"99":{"line":939,"type":"binary-expr","locations":[{"start":{"line":939,"column":10},"end":{"line":939,"column":14}},{"start":{"line":939,"column":19},"end":{"line":939,"column":42}}]},"100":{"line":940,"type":"if","locations":[{"start":{"line":940,"column":10},"end":{"line":940,"column":10}},{"start":{"line":940,"column":10},"end":{"line":940,"column":10}}]},"101":{"line":943,"type":"if","locations":[{"start":{"line":943,"column":10},"end":{"line":943,"column":10}},{"start":{"line":943,"column":10},"end":{"line":943,"column":10}}]},"102":{"line":943,"type":"binary-expr","locations":[{"start":{"line":943,"column":14},"end":{"line":943,"column":21}},{"start":{"line":943,"column":25},"end":{"line":943,"column":44}}]},"103":{"line":945,"type":"cond-expr","locations":[{"start":{"line":945,"column":60},"end":{"line":945,"column":67}},{"start":{"line":945,"column":70},"end":{"line":945,"column":82}}]},"104":{"line":948,"type":"binary-expr","locations":[{"start":{"line":948,"column":8},"end":{"line":948,"column":12}},{"start":{"line":948,"column":17},"end":{"line":948,"column":33}}]},"105":{"line":949,"type":"if","locations":[{"start":{"line":949,"column":8},"end":{"line":949,"column":8}},{"start":{"line":949,"column":8},"end":{"line":949,"column":8}}]},"106":{"line":952,"type":"if","locations":[{"start":{"line":952,"column":8},"end":{"line":952,"column":8}},{"start":{"line":952,"column":8},"end":{"line":952,"column":8}}]},"107":{"line":955,"type":"cond-expr","locations":[{"start":{"line":955,"column":36},"end":{"line":955,"column":42}},{"start":{"line":955,"column":45},"end":{"line":955,"column":56}}]},"108":{"line":975,"type":"cond-expr","locations":[{"start":{"line":975,"column":27},"end":{"line":975,"column":39}},{"start":{"line":975,"column":42},"end":{"line":975,"column":43}}]},"109":{"line":976,"type":"binary-expr","locations":[{"start":{"line":976,"column":20},"end":{"line":976,"column":44}},{"start":{"line":976,"column":48},"end":{"line":976,"column":71}}]},"110":{"line":979,"type":"if","locations":[{"start":{"line":979,"column":6},"end":{"line":979,"column":6}},{"start":{"line":979,"column":6},"end":{"line":979,"column":6}}]},"111":{"line":981,"type":"if","locations":[{"start":{"line":981,"column":8},"end":{"line":981,"column":8}},{"start":{"line":981,"column":8},"end":{"line":981,"column":8}}]},"112":{"line":990,"type":"if","locations":[{"start":{"line":990,"column":8},"end":{"line":990,"column":8}},{"start":{"line":990,"column":8},"end":{"line":990,"column":8}}]},"113":{"line":994,"type":"if","locations":[{"start":{"line":994,"column":6},"end":{"line":994,"column":6}},{"start":{"line":994,"column":6},"end":{"line":994,"column":6}}]},"114":{"line":1012,"type":"binary-expr","locations":[{"start":{"line":1012,"column":19},"end":{"line":1012,"column":28}},{"start":{"line":1012,"column":32},"end":{"line":1012,"column":33}}]},"115":{"line":1013,"type":"cond-expr","locations":[{"start":{"line":1013,"column":27},"end":{"line":1013,"column":39}},{"start":{"line":1013,"column":42},"end":{"line":1013,"column":43}}]},"116":{"line":1019,"type":"if","locations":[{"start":{"line":1019,"column":8},"end":{"line":1019,"column":8}},{"start":{"line":1019,"column":8},"end":{"line":1019,"column":8}}]},"117":{"line":1019,"type":"binary-expr","locations":[{"start":{"line":1019,"column":12},"end":{"line":1019,"column":17}},{"start":{"line":1019,"column":21},"end":{"line":1019,"column":45}},{"start":{"line":1019,"column":49},"end":{"line":1019,"column":80}},{"start":{"line":1020,"column":16},"end":{"line":1020,"column":30}},{"start":{"line":1020,"column":34},"end":{"line":1020,"column":52}}]},"118":{"line":1022,"type":"if","locations":[{"start":{"line":1022,"column":10},"end":{"line":1022,"column":10}},{"start":{"line":1022,"column":10},"end":{"line":1022,"column":10}}]},"119":{"line":1033,"type":"if","locations":[{"start":{"line":1033,"column":15},"end":{"line":1033,"column":15}},{"start":{"line":1033,"column":15},"end":{"line":1033,"column":15}}]},"120":{"line":1055,"type":"if","locations":[{"start":{"line":1055,"column":6},"end":{"line":1055,"column":6}},{"start":{"line":1055,"column":6},"end":{"line":1055,"column":6}}]},"121":{"line":1057,"type":"if","locations":[{"start":{"line":1057,"column":8},"end":{"line":1057,"column":8}},{"start":{"line":1057,"column":8},"end":{"line":1057,"column":8}}]},"122":{"line":1062,"type":"if","locations":[{"start":{"line":1062,"column":6},"end":{"line":1062,"column":6}},{"start":{"line":1062,"column":6},"end":{"line":1062,"column":6}}]},"123":{"line":1064,"type":"binary-expr","locations":[{"start":{"line":1064,"column":15},"end":{"line":1064,"column":22}},{"start":{"line":1064,"column":27},"end":{"line":1064,"column":41}}]},"124":{"line":1070,"type":"if","locations":[{"start":{"line":1070,"column":6},"end":{"line":1070,"column":6}},{"start":{"line":1070,"column":6},"end":{"line":1070,"column":6}}]},"125":{"line":1070,"type":"binary-expr","locations":[{"start":{"line":1070,"column":10},"end":{"line":1070,"column":17}},{"start":{"line":1071,"column":10},"end":{"line":1071,"column":35}},{"start":{"line":1072,"column":10},"end":{"line":1072,"column":40}}]},"126":{"line":1071,"type":"binary-expr","locations":[{"start":{"line":1071,"column":12},"end":{"line":1071,"column":13}},{"start":{"line":1071,"column":17},"end":{"line":1071,"column":34}}]},"127":{"line":1072,"type":"binary-expr","locations":[{"start":{"line":1072,"column":12},"end":{"line":1072,"column":13}},{"start":{"line":1072,"column":17},"end":{"line":1072,"column":39}}]},"128":{"line":1077,"type":"if","locations":[{"start":{"line":1077,"column":6},"end":{"line":1077,"column":6}},{"start":{"line":1077,"column":6},"end":{"line":1077,"column":6}}]},"129":{"line":1077,"type":"binary-expr","locations":[{"start":{"line":1077,"column":10},"end":{"line":1077,"column":19}},{"start":{"line":1077,"column":23},"end":{"line":1077,"column":32}}]},"130":{"line":1084,"type":"if","locations":[{"start":{"line":1084,"column":6},"end":{"line":1084,"column":6}},{"start":{"line":1084,"column":6},"end":{"line":1084,"column":6}}]},"131":{"line":1087,"type":"if","locations":[{"start":{"line":1087,"column":6},"end":{"line":1087,"column":6}},{"start":{"line":1087,"column":6},"end":{"line":1087,"column":6}}]},"132":{"line":1090,"type":"if","locations":[{"start":{"line":1090,"column":6},"end":{"line":1090,"column":6}},{"start":{"line":1090,"column":6},"end":{"line":1090,"column":6}}]},"133":{"line":1093,"type":"switch","locations":[{"start":{"line":1094,"column":8},"end":{"line":1094,"column":23}},{"start":{"line":1095,"column":8},"end":{"line":1098,"column":26}},{"start":{"line":1100,"column":8},"end":{"line":1105,"column":52}},{"start":{"line":1107,"column":8},"end":{"line":1107,"column":25}},{"start":{"line":1108,"column":8},"end":{"line":1111,"column":32}}]},"134":{"line":1102,"type":"cond-expr","locations":[{"start":{"line":1103,"column":14},"end":{"line":1103,"column":21}},{"start":{"line":1105,"column":15},"end":{"line":1105,"column":50}}]},"135":{"line":1105,"type":"cond-expr","locations":[{"start":{"line":1105,"column":25},"end":{"line":1105,"column":39}},{"start":{"line":1105,"column":43},"end":{"line":1105,"column":50}}]},"136":{"line":1114,"type":"if","locations":[{"start":{"line":1114,"column":6},"end":{"line":1114,"column":6}},{"start":{"line":1114,"column":6},"end":{"line":1114,"column":6}}]},"137":{"line":1119,"type":"if","locations":[{"start":{"line":1119,"column":8},"end":{"line":1119,"column":8}},{"start":{"line":1119,"column":8},"end":{"line":1119,"column":8}}]},"138":{"line":1119,"type":"binary-expr","locations":[{"start":{"line":1119,"column":12},"end":{"line":1119,"column":20}},{"start":{"line":1119,"column":24},"end":{"line":1119,"column":32}}]},"139":{"line":1120,"type":"cond-expr","locations":[{"start":{"line":1120,"column":40},"end":{"line":1120,"column":53}},{"start":{"line":1120,"column":56},"end":{"line":1120,"column":57}}]},"140":{"line":1120,"type":"cond-expr","locations":[{"start":{"line":1120,"column":70},"end":{"line":1120,"column":83}},{"start":{"line":1120,"column":86},"end":{"line":1120,"column":87}}]},"141":{"line":1123,"type":"if","locations":[{"start":{"line":1123,"column":8},"end":{"line":1123,"column":8}},{"start":{"line":1123,"column":8},"end":{"line":1123,"column":8}}]},"142":{"line":1131,"type":"if","locations":[{"start":{"line":1131,"column":8},"end":{"line":1131,"column":8}},{"start":{"line":1131,"column":8},"end":{"line":1131,"column":8}}]},"143":{"line":1131,"type":"binary-expr","locations":[{"start":{"line":1131,"column":12},"end":{"line":1131,"column":26}},{"start":{"line":1132,"column":14},"end":{"line":1132,"column":107}},{"start":{"line":1133,"column":15},"end":{"line":1133,"column":33}},{"start":{"line":1133,"column":37},"end":{"line":1133,"column":55}}]},"144":{"line":1132,"type":"binary-expr","locations":[{"start":{"line":1132,"column":16},"end":{"line":1132,"column":33}},{"start":{"line":1132,"column":37},"end":{"line":1132,"column":59}},{"start":{"line":1132,"column":63},"end":{"line":1132,"column":80}},{"start":{"line":1132,"column":84},"end":{"line":1132,"column":106}}]},"145":{"line":1142,"type":"binary-expr","locations":[{"start":{"line":1142,"column":6},"end":{"line":1142,"column":12}},{"start":{"line":1142,"column":17},"end":{"line":1142,"column":36}}]},"146":{"line":1143,"type":"binary-expr","locations":[{"start":{"line":1143,"column":6},"end":{"line":1143,"column":12}},{"start":{"line":1143,"column":17},"end":{"line":1143,"column":36}}]},"147":{"line":1147,"type":"if","locations":[{"start":{"line":1147,"column":8},"end":{"line":1147,"column":8}},{"start":{"line":1147,"column":8},"end":{"line":1147,"column":8}}]},"148":{"line":1159,"type":"if","locations":[{"start":{"line":1159,"column":6},"end":{"line":1159,"column":6}},{"start":{"line":1159,"column":6},"end":{"line":1159,"column":6}}]},"149":{"line":1165,"type":"if","locations":[{"start":{"line":1165,"column":8},"end":{"line":1165,"column":8}},{"start":{"line":1165,"column":8},"end":{"line":1165,"column":8}}]},"150":{"line":1165,"type":"binary-expr","locations":[{"start":{"line":1165,"column":12},"end":{"line":1165,"column":18}},{"start":{"line":1165,"column":22},"end":{"line":1165,"column":29}}]},"151":{"line":1171,"type":"if","locations":[{"start":{"line":1171,"column":12},"end":{"line":1171,"column":12}},{"start":{"line":1171,"column":12},"end":{"line":1171,"column":12}}]},"152":{"line":1173,"type":"if","locations":[{"start":{"line":1173,"column":16},"end":{"line":1173,"column":16}},{"start":{"line":1173,"column":16},"end":{"line":1173,"column":16}}]},"153":{"line":1177,"type":"if","locations":[{"start":{"line":1177,"column":19},"end":{"line":1177,"column":19}},{"start":{"line":1177,"column":19},"end":{"line":1177,"column":19}}]},"154":{"line":1187,"type":"if","locations":[{"start":{"line":1187,"column":10},"end":{"line":1187,"column":10}},{"start":{"line":1187,"column":10},"end":{"line":1187,"column":10}}]},"155":{"line":1191,"type":"binary-expr","locations":[{"start":{"line":1191,"column":29},"end":{"line":1191,"column":56}},{"start":{"line":1191,"column":60},"end":{"line":1191,"column":121}}]},"156":{"line":1195,"type":"if","locations":[{"start":{"line":1195,"column":8},"end":{"line":1195,"column":8}},{"start":{"line":1195,"column":8},"end":{"line":1195,"column":8}}]},"157":{"line":1195,"type":"binary-expr","locations":[{"start":{"line":1195,"column":12},"end":{"line":1195,"column":18}},{"start":{"line":1195,"column":22},"end":{"line":1195,"column":30}}]},"158":{"line":1198,"type":"if","locations":[{"start":{"line":1198,"column":12},"end":{"line":1198,"column":12}},{"start":{"line":1198,"column":12},"end":{"line":1198,"column":12}}]},"159":{"line":1208,"type":"if","locations":[{"start":{"line":1208,"column":6},"end":{"line":1208,"column":6}},{"start":{"line":1208,"column":6},"end":{"line":1208,"column":6}}]},"160":{"line":1227,"type":"cond-expr","locations":[{"start":{"line":1227,"column":25},"end":{"line":1227,"column":32}},{"start":{"line":1227,"column":35},"end":{"line":1227,"column":41}}]},"161":{"line":1233,"type":"if","locations":[{"start":{"line":1233,"column":8},"end":{"line":1233,"column":8}},{"start":{"line":1233,"column":8},"end":{"line":1233,"column":8}}]},"162":{"line":1233,"type":"binary-expr","locations":[{"start":{"line":1233,"column":12},"end":{"line":1233,"column":18}},{"start":{"line":1233,"column":24},"end":{"line":1233,"column":47}},{"start":{"line":1233,"column":52},"end":{"line":1233,"column":73}}]},"163":{"line":1237,"type":"if","locations":[{"start":{"line":1237,"column":12},"end":{"line":1237,"column":12}},{"start":{"line":1237,"column":12},"end":{"line":1237,"column":12}}]},"164":{"line":1242,"type":"if","locations":[{"start":{"line":1242,"column":10},"end":{"line":1242,"column":10}},{"start":{"line":1242,"column":10},"end":{"line":1242,"column":10}}]},"165":{"line":1244,"type":"if","locations":[{"start":{"line":1244,"column":12},"end":{"line":1244,"column":12}},{"start":{"line":1244,"column":12},"end":{"line":1244,"column":12}}]},"166":{"line":1246,"type":"if","locations":[{"start":{"line":1246,"column":14},"end":{"line":1246,"column":14}},{"start":{"line":1246,"column":14},"end":{"line":1246,"column":14}}]},"167":{"line":1250,"type":"if","locations":[{"start":{"line":1250,"column":12},"end":{"line":1250,"column":12}},{"start":{"line":1250,"column":12},"end":{"line":1250,"column":12}}]},"168":{"line":1251,"type":"cond-expr","locations":[{"start":{"line":1252,"column":19},"end":{"line":1252,"column":46}},{"start":{"line":1253,"column":19},"end":{"line":1253,"column":52}}]},"169":{"line":1252,"type":"cond-expr","locations":[{"start":{"line":1252,"column":36},"end":{"line":1252,"column":41}},{"start":{"line":1252,"column":44},"end":{"line":1252,"column":46}}]},"170":{"line":1253,"type":"cond-expr","locations":[{"start":{"line":1253,"column":42},"end":{"line":1253,"column":47}},{"start":{"line":1253,"column":50},"end":{"line":1253,"column":52}}]},"171":{"line":1260,"type":"if","locations":[{"start":{"line":1260,"column":12},"end":{"line":1260,"column":12}},{"start":{"line":1260,"column":12},"end":{"line":1260,"column":12}}]},"172":{"line":1266,"type":"if","locations":[{"start":{"line":1266,"column":10},"end":{"line":1266,"column":10}},{"start":{"line":1266,"column":10},"end":{"line":1266,"column":10}}]},"173":{"line":1268,"type":"if","locations":[{"start":{"line":1268,"column":12},"end":{"line":1268,"column":12}},{"start":{"line":1268,"column":12},"end":{"line":1268,"column":12}}]},"174":{"line":1272,"type":"if","locations":[{"start":{"line":1272,"column":10},"end":{"line":1272,"column":10}},{"start":{"line":1272,"column":10},"end":{"line":1272,"column":10}}]},"175":{"line":1306,"type":"cond-expr","locations":[{"start":{"line":1306,"column":27},"end":{"line":1306,"column":39}},{"start":{"line":1306,"column":42},"end":{"line":1306,"column":43}}]},"176":{"line":1309,"type":"binary-expr","locations":[{"start":{"line":1309,"column":20},"end":{"line":1309,"column":29}},{"start":{"line":1309,"column":33},"end":{"line":1309,"column":57}},{"start":{"line":1309,"column":61},"end":{"line":1309,"column":84}}]},"177":{"line":1310,"type":"cond-expr","locations":[{"start":{"line":1310,"column":41},"end":{"line":1310,"column":51}},{"start":{"line":1310,"column":54},"end":{"line":1310,"column":60}}]},"178":{"line":1310,"type":"binary-expr","locations":[{"start":{"line":1310,"column":18},"end":{"line":1310,"column":26}},{"start":{"line":1310,"column":30},"end":{"line":1310,"column":37}}]},"179":{"line":1312,"type":"if","locations":[{"start":{"line":1312,"column":6},"end":{"line":1312,"column":6}},{"start":{"line":1312,"column":6},"end":{"line":1312,"column":6}}]},"180":{"line":1319,"type":"cond-expr","locations":[{"start":{"line":1319,"column":34},"end":{"line":1319,"column":63}},{"start":{"line":1319,"column":66},"end":{"line":1319,"column":71}}]},"181":{"line":1321,"type":"if","locations":[{"start":{"line":1321,"column":8},"end":{"line":1321,"column":8}},{"start":{"line":1321,"column":8},"end":{"line":1321,"column":8}}]},"182":{"line":1321,"type":"cond-expr","locations":[{"start":{"line":1322,"column":16},"end":{"line":1322,"column":60}},{"start":{"line":1323,"column":16},"end":{"line":1323,"column":43}}]},"183":{"line":1322,"type":"binary-expr","locations":[{"start":{"line":1322,"column":16},"end":{"line":1322,"column":22}},{"start":{"line":1322,"column":26},"end":{"line":1322,"column":60}}]},"184":{"line":1325,"type":"if","locations":[{"start":{"line":1325,"column":10},"end":{"line":1325,"column":10}},{"start":{"line":1325,"column":10},"end":{"line":1325,"column":10}}]},"185":{"line":1325,"type":"binary-expr","locations":[{"start":{"line":1325,"column":14},"end":{"line":1325,"column":22}},{"start":{"line":1325,"column":26},"end":{"line":1325,"column":33}}]},"186":{"line":1331,"type":"if","locations":[{"start":{"line":1331,"column":6},"end":{"line":1331,"column":6}},{"start":{"line":1331,"column":6},"end":{"line":1331,"column":6}}]},"187":{"line":1334,"type":"if","locations":[{"start":{"line":1334,"column":13},"end":{"line":1334,"column":13}},{"start":{"line":1334,"column":13},"end":{"line":1334,"column":13}}]},"188":{"line":1356,"type":"cond-expr","locations":[{"start":{"line":1356,"column":34},"end":{"line":1356,"column":51}},{"start":{"line":1356,"column":54},"end":{"line":1356,"column":55}}]},"189":{"line":1358,"type":"if","locations":[{"start":{"line":1358,"column":8},"end":{"line":1358,"column":8}},{"start":{"line":1358,"column":8},"end":{"line":1358,"column":8}}]},"190":{"line":1402,"type":"if","locations":[{"start":{"line":1402,"column":6},"end":{"line":1402,"column":6}},{"start":{"line":1402,"column":6},"end":{"line":1402,"column":6}}]},"191":{"line":1402,"type":"binary-expr","locations":[{"start":{"line":1402,"column":10},"end":{"line":1402,"column":20}},{"start":{"line":1402,"column":24},"end":{"line":1402,"column":41}}]},"192":{"line":1405,"type":"if","locations":[{"start":{"line":1405,"column":6},"end":{"line":1405,"column":6}},{"start":{"line":1405,"column":6},"end":{"line":1405,"column":6}}]},"193":{"line":1405,"type":"binary-expr","locations":[{"start":{"line":1405,"column":10},"end":{"line":1405,"column":19}},{"start":{"line":1405,"column":23},"end":{"line":1405,"column":42}}]},"194":{"line":1409,"type":"if","locations":[{"start":{"line":1409,"column":6},"end":{"line":1409,"column":6}},{"start":{"line":1409,"column":6},"end":{"line":1409,"column":6}}]},"195":{"line":1409,"type":"binary-expr","locations":[{"start":{"line":1409,"column":10},"end":{"line":1409,"column":24}},{"start":{"line":1409,"column":28},"end":{"line":1409,"column":52}}]},"196":{"line":1413,"type":"binary-expr","locations":[{"start":{"line":1413,"column":21},"end":{"line":1413,"column":25}},{"start":{"line":1413,"column":29},"end":{"line":1413,"column":46}}]},"197":{"line":1414,"type":"if","locations":[{"start":{"line":1414,"column":6},"end":{"line":1414,"column":6}},{"start":{"line":1414,"column":6},"end":{"line":1414,"column":6}}]},"198":{"line":1414,"type":"binary-expr","locations":[{"start":{"line":1414,"column":10},"end":{"line":1414,"column":18}},{"start":{"line":1414,"column":22},"end":{"line":1414,"column":39}}]},"199":{"line":1417,"type":"if","locations":[{"start":{"line":1417,"column":8},"end":{"line":1417,"column":8}},{"start":{"line":1417,"column":8},"end":{"line":1417,"column":8}}]},"200":{"line":1420,"type":"if","locations":[{"start":{"line":1420,"column":8},"end":{"line":1420,"column":8}},{"start":{"line":1420,"column":8},"end":{"line":1420,"column":8}}]},"201":{"line":1424,"type":"if","locations":[{"start":{"line":1424,"column":8},"end":{"line":1424,"column":8}},{"start":{"line":1424,"column":8},"end":{"line":1424,"column":8}}]},"202":{"line":1424,"type":"binary-expr","locations":[{"start":{"line":1424,"column":12},"end":{"line":1424,"column":18}},{"start":{"line":1424,"column":22},"end":{"line":1424,"column":40}}]},"203":{"line":1428,"type":"if","locations":[{"start":{"line":1428,"column":8},"end":{"line":1428,"column":8}},{"start":{"line":1428,"column":8},"end":{"line":1428,"column":8}}]},"204":{"line":1428,"type":"binary-expr","locations":[{"start":{"line":1428,"column":12},"end":{"line":1428,"column":19}},{"start":{"line":1428,"column":23},"end":{"line":1428,"column":38}}]},"205":{"line":1432,"type":"if","locations":[{"start":{"line":1432,"column":8},"end":{"line":1432,"column":8}},{"start":{"line":1432,"column":8},"end":{"line":1432,"column":8}}]},"206":{"line":1432,"type":"binary-expr","locations":[{"start":{"line":1432,"column":12},"end":{"line":1432,"column":19}},{"start":{"line":1432,"column":23},"end":{"line":1432,"column":41}}]},"207":{"line":1436,"type":"if","locations":[{"start":{"line":1436,"column":8},"end":{"line":1436,"column":8}},{"start":{"line":1436,"column":8},"end":{"line":1436,"column":8}}]},"208":{"line":1437,"type":"binary-expr","locations":[{"start":{"line":1437,"column":21},"end":{"line":1437,"column":32}},{"start":{"line":1437,"column":37},"end":{"line":1437,"column":53}}]},"209":{"line":1440,"type":"if","locations":[{"start":{"line":1440,"column":8},"end":{"line":1440,"column":8}},{"start":{"line":1440,"column":8},"end":{"line":1440,"column":8}}]},"210":{"line":1441,"type":"binary-expr","locations":[{"start":{"line":1441,"column":24},"end":{"line":1441,"column":35}},{"start":{"line":1441,"column":40},"end":{"line":1441,"column":56}}]},"211":{"line":1448,"type":"cond-expr","locations":[{"start":{"line":1448,"column":55},"end":{"line":1448,"column":63}},{"start":{"line":1448,"column":66},"end":{"line":1448,"column":83}}]},"212":{"line":1448,"type":"binary-expr","locations":[{"start":{"line":1448,"column":21},"end":{"line":1448,"column":33}},{"start":{"line":1448,"column":37},"end":{"line":1448,"column":51}}]},"213":{"line":1472,"type":"cond-expr","locations":[{"start":{"line":1472,"column":59},"end":{"line":1472,"column":70}},{"start":{"line":1472,"column":73},"end":{"line":1472,"column":79}}]},"214":{"line":1484,"type":"binary-expr","locations":[{"start":{"line":1484,"column":13},"end":{"line":1484,"column":39}},{"start":{"line":1484,"column":43},"end":{"line":1484,"column":63}}]},"215":{"line":1494,"type":"cond-expr","locations":[{"start":{"line":1494,"column":40},"end":{"line":1494,"column":44}},{"start":{"line":1494,"column":47},"end":{"line":1498,"column":5}}]},"216":{"line":1515,"type":"if","locations":[{"start":{"line":1515,"column":6},"end":{"line":1515,"column":6}},{"start":{"line":1515,"column":6},"end":{"line":1515,"column":6}}]},"217":{"line":1515,"type":"binary-expr","locations":[{"start":{"line":1515,"column":10},"end":{"line":1515,"column":57}},{"start":{"line":1516,"column":11},"end":{"line":1516,"column":80}}]},"218":{"line":1515,"type":"binary-expr","locations":[{"start":{"line":1515,"column":12},"end":{"line":1515,"column":17}},{"start":{"line":1515,"column":21},"end":{"line":1515,"column":56}}]},"219":{"line":1516,"type":"binary-expr","locations":[{"start":{"line":1516,"column":37},"end":{"line":1516,"column":53}},{"start":{"line":1516,"column":57},"end":{"line":1516,"column":80}}]},"220":{"line":1525,"type":"binary-expr","locations":[{"start":{"line":1525,"column":13},"end":{"line":1525,"column":41}},{"start":{"line":1525,"column":45},"end":{"line":1525,"column":79}}]},"221":{"line":1558,"type":"binary-expr","locations":[{"start":{"line":1558,"column":13},"end":{"line":1558,"column":18}},{"start":{"line":1558,"column":22},"end":{"line":1558,"column":46}},{"start":{"line":1558,"column":50},"end":{"line":1558,"column":81}},{"start":{"line":1559,"column":8},"end":{"line":1559,"column":41}},{"start":{"line":1559,"column":45},"end":{"line":1559,"column":50}}]},"222":{"line":1579,"type":"binary-expr","locations":[{"start":{"line":1579,"column":18},"end":{"line":1579,"column":31}},{"start":{"line":1579,"column":35},"end":{"line":1582,"column":5}}]},"223":{"line":1580,"type":"binary-expr","locations":[{"start":{"line":1580,"column":13},"end":{"line":1580,"column":18}},{"start":{"line":1580,"column":22},"end":{"line":1580,"column":46}},{"start":{"line":1580,"column":50},"end":{"line":1580,"column":81}},{"start":{"line":1581,"column":8},"end":{"line":1581,"column":42}},{"start":{"line":1581,"column":46},"end":{"line":1581,"column":51}}]},"224":{"line":1595,"type":"if","locations":[{"start":{"line":1595,"column":6},"end":{"line":1595,"column":6}},{"start":{"line":1595,"column":6},"end":{"line":1595,"column":6}}]},"225":{"line":1596,"type":"if","locations":[{"start":{"line":1596,"column":6},"end":{"line":1596,"column":6}},{"start":{"line":1596,"column":6},"end":{"line":1596,"column":6}}]},"226":{"line":1598,"type":"if","locations":[{"start":{"line":1598,"column":10},"end":{"line":1598,"column":10}},{"start":{"line":1598,"column":10},"end":{"line":1598,"column":10}}]},"227":{"line":1618,"type":"cond-expr","locations":[{"start":{"line":1618,"column":29},"end":{"line":1618,"column":37}},{"start":{"line":1618,"column":40},"end":{"line":1623,"column":5}}]},"228":{"line":1619,"type":"if","locations":[{"start":{"line":1619,"column":6},"end":{"line":1619,"column":6}},{"start":{"line":1619,"column":6},"end":{"line":1619,"column":6}}]},"229":{"line":1682,"type":"if","locations":[{"start":{"line":1682,"column":6},"end":{"line":1682,"column":6}},{"start":{"line":1682,"column":6},"end":{"line":1682,"column":6}}]},"230":{"line":1685,"type":"cond-expr","locations":[{"start":{"line":1685,"column":50},"end":{"line":1685,"column":51}},{"start":{"line":1685,"column":54},"end":{"line":1685,"column":65}}]},"231":{"line":1686,"type":"if","locations":[{"start":{"line":1686,"column":6},"end":{"line":1686,"column":6}},{"start":{"line":1686,"column":6},"end":{"line":1686,"column":6}}]},"232":{"line":1686,"type":"binary-expr","locations":[{"start":{"line":1686,"column":10},"end":{"line":1686,"column":24}},{"start":{"line":1686,"column":28},"end":{"line":1686,"column":69}}]},"233":{"line":1688,"type":"if","locations":[{"start":{"line":1688,"column":13},"end":{"line":1688,"column":13}},{"start":{"line":1688,"column":13},"end":{"line":1688,"column":13}}]},"234":{"line":1688,"type":"binary-expr","locations":[{"start":{"line":1688,"column":17},"end":{"line":1688,"column":31}},{"start":{"line":1688,"column":35},"end":{"line":1688,"column":76}}]},"235":{"line":1693,"type":"if","locations":[{"start":{"line":1693,"column":8},"end":{"line":1693,"column":8}},{"start":{"line":1693,"column":8},"end":{"line":1693,"column":8}}]},"236":{"line":1693,"type":"binary-expr","locations":[{"start":{"line":1693,"column":12},"end":{"line":1693,"column":20}},{"start":{"line":1693,"column":24},"end":{"line":1693,"column":52}}]},"237":{"line":1695,"type":"binary-expr","locations":[{"start":{"line":1695,"column":23},"end":{"line":1695,"column":51}},{"start":{"line":1695,"column":55},"end":{"line":1695,"column":69}}]},"238":{"line":1696,"type":"cond-expr","locations":[{"start":{"line":1696,"column":32},"end":{"line":1696,"column":47}},{"start":{"line":1696,"column":50},"end":{"line":1696,"column":51}}]},"239":{"line":1700,"type":"cond-expr","locations":[{"start":{"line":1700,"column":37},"end":{"line":1700,"column":77}},{"start":{"line":1700,"column":80},"end":{"line":1700,"column":95}}]},"240":{"line":1750,"type":"if","locations":[{"start":{"line":1750,"column":6},"end":{"line":1750,"column":6}},{"start":{"line":1750,"column":6},"end":{"line":1750,"column":6}}]},"241":{"line":1750,"type":"binary-expr","locations":[{"start":{"line":1750,"column":10},"end":{"line":1750,"column":36}},{"start":{"line":1750,"column":40},"end":{"line":1750,"column":54}}]},"242":{"line":1755,"type":"binary-expr","locations":[{"start":{"line":1755,"column":38},"end":{"line":1755,"column":67}},{"start":{"line":1755,"column":71},"end":{"line":1755,"column":111}}]},"243":{"line":1800,"type":"binary-expr","locations":[{"start":{"line":1800,"column":36},"end":{"line":1800,"column":65}},{"start":{"line":1800,"column":69},"end":{"line":1800,"column":109}}]},"244":{"line":1836,"type":"cond-expr","locations":[{"start":{"line":1836,"column":26},"end":{"line":1836,"column":52}},{"start":{"line":1836,"column":55},"end":{"line":1836,"column":61}}]},"245":{"line":1861,"type":"if","locations":[{"start":{"line":1861,"column":6},"end":{"line":1861,"column":6}},{"start":{"line":1861,"column":6},"end":{"line":1861,"column":6}}]},"246":{"line":1864,"type":"cond-expr","locations":[{"start":{"line":1864,"column":50},"end":{"line":1864,"column":51}},{"start":{"line":1864,"column":54},"end":{"line":1864,"column":65}}]},"247":{"line":1867,"type":"if","locations":[{"start":{"line":1867,"column":8},"end":{"line":1867,"column":8}},{"start":{"line":1867,"column":8},"end":{"line":1867,"column":8}}]},"248":{"line":1867,"type":"binary-expr","locations":[{"start":{"line":1867,"column":12},"end":{"line":1867,"column":20}},{"start":{"line":1867,"column":24},"end":{"line":1867,"column":52}}]},"249":{"line":1869,"type":"binary-expr","locations":[{"start":{"line":1869,"column":23},"end":{"line":1869,"column":51}},{"start":{"line":1869,"column":55},"end":{"line":1869,"column":69}}]},"250":{"line":1870,"type":"cond-expr","locations":[{"start":{"line":1870,"column":32},"end":{"line":1870,"column":47}},{"start":{"line":1870,"column":50},"end":{"line":1870,"column":51}}]},"251":{"line":1874,"type":"if","locations":[{"start":{"line":1874,"column":10},"end":{"line":1874,"column":10}},{"start":{"line":1874,"column":10},"end":{"line":1874,"column":10}}]},"252":{"line":1926,"type":"if","locations":[{"start":{"line":1926,"column":8},"end":{"line":1926,"column":8}},{"start":{"line":1926,"column":8},"end":{"line":1926,"column":8}}]},"253":{"line":1979,"type":"if","locations":[{"start":{"line":1979,"column":8},"end":{"line":1979,"column":8}},{"start":{"line":1979,"column":8},"end":{"line":1979,"column":8}}]},"254":{"line":2020,"type":"if","locations":[{"start":{"line":2020,"column":6},"end":{"line":2020,"column":6}},{"start":{"line":2020,"column":6},"end":{"line":2020,"column":6}}]},"255":{"line":2021,"type":"if","locations":[{"start":{"line":2021,"column":6},"end":{"line":2021,"column":6}},{"start":{"line":2021,"column":6},"end":{"line":2021,"column":6}}]},"256":{"line":2022,"type":"cond-expr","locations":[{"start":{"line":2022,"column":61},"end":{"line":2022,"column":69}},{"start":{"line":2022,"column":72},"end":{"line":2022,"column":112}}]},"257":{"line":2022,"type":"binary-expr","locations":[{"start":{"line":2022,"column":17},"end":{"line":2022,"column":25}},{"start":{"line":2022,"column":29},"end":{"line":2022,"column":58}}]},"258":{"line":2024,"type":"if","locations":[{"start":{"line":2024,"column":10},"end":{"line":2024,"column":10}},{"start":{"line":2024,"column":10},"end":{"line":2024,"column":10}}]},"259":{"line":2067,"type":"if","locations":[{"start":{"line":2067,"column":8},"end":{"line":2067,"column":8}},{"start":{"line":2067,"column":8},"end":{"line":2067,"column":8}}]},"260":{"line":2097,"type":"if","locations":[{"start":{"line":2097,"column":6},"end":{"line":2097,"column":6}},{"start":{"line":2097,"column":6},"end":{"line":2097,"column":6}}]},"261":{"line":2098,"type":"if","locations":[{"start":{"line":2098,"column":6},"end":{"line":2098,"column":6}},{"start":{"line":2098,"column":6},"end":{"line":2098,"column":6}}]},"262":{"line":2099,"type":"cond-expr","locations":[{"start":{"line":2099,"column":61},"end":{"line":2099,"column":69}},{"start":{"line":2099,"column":72},"end":{"line":2099,"column":112}}]},"263":{"line":2099,"type":"binary-expr","locations":[{"start":{"line":2099,"column":17},"end":{"line":2099,"column":25}},{"start":{"line":2099,"column":29},"end":{"line":2099,"column":58}}]},"264":{"line":2101,"type":"binary-expr","locations":[{"start":{"line":2101,"column":23},"end":{"line":2101,"column":51}},{"start":{"line":2101,"column":55},"end":{"line":2101,"column":69}}]},"265":{"line":2102,"type":"cond-expr","locations":[{"start":{"line":2102,"column":32},"end":{"line":2102,"column":47}},{"start":{"line":2102,"column":50},"end":{"line":2102,"column":51}}]},"266":{"line":2106,"type":"if","locations":[{"start":{"line":2106,"column":10},"end":{"line":2106,"column":10}},{"start":{"line":2106,"column":10},"end":{"line":2106,"column":10}}]},"267":{"line":2136,"type":"if","locations":[{"start":{"line":2136,"column":8},"end":{"line":2136,"column":8}},{"start":{"line":2136,"column":8},"end":{"line":2136,"column":8}}]},"268":{"line":2161,"type":"if","locations":[{"start":{"line":2161,"column":8},"end":{"line":2161,"column":8}},{"start":{"line":2161,"column":8},"end":{"line":2161,"column":8}}]},"269":{"line":2184,"type":"cond-expr","locations":[{"start":{"line":2184,"column":22},"end":{"line":2184,"column":54}},{"start":{"line":2184,"column":57},"end":{"line":2184,"column":62}}]},"270":{"line":2227,"type":"binary-expr","locations":[{"start":{"line":2227,"column":13},"end":{"line":2227,"column":27}},{"start":{"line":2227,"column":31},"end":{"line":2227,"column":46}},{"start":{"line":2228,"column":8},"end":{"line":2228,"column":13}},{"start":{"line":2228,"column":17},"end":{"line":2228,"column":41}},{"start":{"line":2228,"column":45},"end":{"line":2228,"column":78}},{"start":{"line":2228,"column":82},"end":{"line":2228,"column":87}}]},"271":{"line":2245,"type":"binary-expr","locations":[{"start":{"line":2245,"column":13},"end":{"line":2245,"column":18}},{"start":{"line":2245,"column":22},"end":{"line":2245,"column":46}},{"start":{"line":2245,"column":50},"end":{"line":2245,"column":83}},{"start":{"line":2245,"column":87},"end":{"line":2245,"column":92}}]},"272":{"line":2262,"type":"binary-expr","locations":[{"start":{"line":2262,"column":13},"end":{"line":2262,"column":18}},{"start":{"line":2262,"column":22},"end":{"line":2262,"column":42}},{"start":{"line":2262,"column":46},"end":{"line":2262,"column":51}}]},"273":{"line":2288,"type":"if","locations":[{"start":{"line":2288,"column":6},"end":{"line":2288,"column":6}},{"start":{"line":2288,"column":6},"end":{"line":2288,"column":6}}]},"274":{"line":2294,"type":"if","locations":[{"start":{"line":2294,"column":6},"end":{"line":2294,"column":6}},{"start":{"line":2294,"column":6},"end":{"line":2294,"column":6}}]},"275":{"line":2294,"type":"binary-expr","locations":[{"start":{"line":2294,"column":11},"end":{"line":2294,"column":34}},{"start":{"line":2294,"column":38},"end":{"line":2294,"column":62}},{"start":{"line":2294,"column":66},"end":{"line":2294,"column":88}},{"start":{"line":2295,"column":11},"end":{"line":2295,"column":35}},{"start":{"line":2295,"column":39},"end":{"line":2295,"column":64}},{"start":{"line":2295,"column":68},"end":{"line":2295,"column":92}}]},"276":{"line":2343,"type":"binary-expr","locations":[{"start":{"line":2343,"column":31},"end":{"line":2343,"column":60}},{"start":{"line":2343,"column":64},"end":{"line":2343,"column":104}}]},"277":{"line":2375,"type":"binary-expr","locations":[{"start":{"line":2375,"column":13},"end":{"line":2375,"column":34}},{"start":{"line":2375,"column":38},"end":{"line":2375,"column":69}}]},"278":{"line":2420,"type":"binary-expr","locations":[{"start":{"line":2420,"column":16},"end":{"line":2420,"column":21}},{"start":{"line":2420,"column":25},"end":{"line":2420,"column":50}}]},"279":{"line":2451,"type":"binary-expr","locations":[{"start":{"line":2451,"column":13},"end":{"line":2451,"column":28}},{"start":{"line":2451,"column":32},"end":{"line":2451,"column":47}}]},"280":{"line":2490,"type":"binary-expr","locations":[{"start":{"line":2490,"column":13},"end":{"line":2490,"column":37}},{"start":{"line":2491,"column":8},"end":{"line":2491,"column":13}},{"start":{"line":2491,"column":17},"end":{"line":2491,"column":41}},{"start":{"line":2491,"column":45},"end":{"line":2491,"column":80}},{"start":{"line":2491,"column":84},"end":{"line":2491,"column":89}}]},"281":{"line":2518,"type":"cond-expr","locations":[{"start":{"line":2518,"column":42},"end":{"line":2518,"column":59}},{"start":{"line":2518,"column":62},"end":{"line":2528,"column":5}}]},"282":{"line":2519,"type":"if","locations":[{"start":{"line":2519,"column":6},"end":{"line":2519,"column":6}},{"start":{"line":2519,"column":6},"end":{"line":2519,"column":6}}]},"283":{"line":2519,"type":"binary-expr","locations":[{"start":{"line":2519,"column":12},"end":{"line":2519,"column":17}},{"start":{"line":2519,"column":21},"end":{"line":2519,"column":56}}]},"284":{"line":2523,"type":"binary-expr","locations":[{"start":{"line":2523,"column":21},"end":{"line":2523,"column":38}},{"start":{"line":2523,"column":43},"end":{"line":2523,"column":77}},{"start":{"line":2523,"column":82},"end":{"line":2523,"column":106}}]},"285":{"line":2525,"type":"cond-expr","locations":[{"start":{"line":2526,"column":11},"end":{"line":2526,"column":65}},{"start":{"line":2527,"column":10},"end":{"line":2527,"column":34}}]},"286":{"line":2526,"type":"binary-expr","locations":[{"start":{"line":2526,"column":11},"end":{"line":2526,"column":28}},{"start":{"line":2526,"column":32},"end":{"line":2526,"column":65}}]},"287":{"line":2544,"type":"binary-expr","locations":[{"start":{"line":2544,"column":13},"end":{"line":2544,"column":18}},{"start":{"line":2544,"column":22},"end":{"line":2544,"column":46}},{"start":{"line":2544,"column":50},"end":{"line":2544,"column":85}},{"start":{"line":2544,"column":89},"end":{"line":2544,"column":94}}]},"288":{"line":2561,"type":"binary-expr","locations":[{"start":{"line":2561,"column":13},"end":{"line":2561,"column":37}},{"start":{"line":2562,"column":8},"end":{"line":2562,"column":13}},{"start":{"line":2562,"column":17},"end":{"line":2562,"column":41}},{"start":{"line":2562,"column":45},"end":{"line":2562,"column":80}},{"start":{"line":2562,"column":84},"end":{"line":2562,"column":89}}]},"289":{"line":2683,"type":"if","locations":[{"start":{"line":2683,"column":6},"end":{"line":2683,"column":6}},{"start":{"line":2683,"column":6},"end":{"line":2683,"column":6}}]},"290":{"line":2688,"type":"if","locations":[{"start":{"line":2688,"column":6},"end":{"line":2688,"column":6}},{"start":{"line":2688,"column":6},"end":{"line":2688,"column":6}}]},"291":{"line":2691,"type":"if","locations":[{"start":{"line":2691,"column":6},"end":{"line":2691,"column":6}},{"start":{"line":2691,"column":6},"end":{"line":2691,"column":6}}]},"292":{"line":2691,"type":"binary-expr","locations":[{"start":{"line":2691,"column":10},"end":{"line":2691,"column":20}},{"start":{"line":2691,"column":24},"end":{"line":2691,"column":61}}]},"293":{"line":2693,"type":"if","locations":[{"start":{"line":2693,"column":13},"end":{"line":2693,"column":13}},{"start":{"line":2693,"column":13},"end":{"line":2693,"column":13}}]},"294":{"line":2693,"type":"binary-expr","locations":[{"start":{"line":2693,"column":17},"end":{"line":2693,"column":27}},{"start":{"line":2693,"column":31},"end":{"line":2693,"column":68}}]},"295":{"line":2737,"type":"if","locations":[{"start":{"line":2737,"column":6},"end":{"line":2737,"column":6}},{"start":{"line":2737,"column":6},"end":{"line":2737,"column":6}}]},"296":{"line":2754,"type":"if","locations":[{"start":{"line":2754,"column":10},"end":{"line":2754,"column":10}},{"start":{"line":2754,"column":10},"end":{"line":2754,"column":10}}]},"297":{"line":2818,"type":"if","locations":[{"start":{"line":2818,"column":6},"end":{"line":2818,"column":6}},{"start":{"line":2818,"column":6},"end":{"line":2818,"column":6}}]},"298":{"line":2821,"type":"cond-expr","locations":[{"start":{"line":2821,"column":40},"end":{"line":2821,"column":52}},{"start":{"line":2821,"column":55},"end":{"line":2821,"column":56}}]},"299":{"line":2825,"type":"if","locations":[{"start":{"line":2825,"column":10},"end":{"line":2825,"column":10}},{"start":{"line":2825,"column":10},"end":{"line":2825,"column":10}}]},"300":{"line":2832,"type":"if","locations":[{"start":{"line":2832,"column":10},"end":{"line":2832,"column":10}},{"start":{"line":2832,"column":10},"end":{"line":2832,"column":10}}]},"301":{"line":2873,"type":"if","locations":[{"start":{"line":2873,"column":6},"end":{"line":2873,"column":6}},{"start":{"line":2873,"column":6},"end":{"line":2873,"column":6}}]},"302":{"line":2874,"type":"if","locations":[{"start":{"line":2874,"column":8},"end":{"line":2874,"column":8}},{"start":{"line":2874,"column":8},"end":{"line":2874,"column":8}}]},"303":{"line":2877,"type":"binary-expr","locations":[{"start":{"line":2877,"column":21},"end":{"line":2877,"column":27}},{"start":{"line":2877,"column":31},"end":{"line":2877,"column":49}}]},"304":{"line":2878,"type":"binary-expr","locations":[{"start":{"line":2878,"column":22},"end":{"line":2878,"column":26}},{"start":{"line":2878,"column":30},"end":{"line":2878,"column":44}}]},"305":{"line":2883,"type":"if","locations":[{"start":{"line":2883,"column":6},"end":{"line":2883,"column":6}},{"start":{"line":2883,"column":6},"end":{"line":2883,"column":6}}]},"306":{"line":2885,"type":"cond-expr","locations":[{"start":{"line":2885,"column":17},"end":{"line":2885,"column":24}},{"start":{"line":2885,"column":27},"end":{"line":2885,"column":33}}]},"307":{"line":2944,"type":"cond-expr","locations":[{"start":{"line":2944,"column":66},"end":{"line":2944,"column":67}},{"start":{"line":2944,"column":70},"end":{"line":2944,"column":82}}]},"308":{"line":2944,"type":"binary-expr","locations":[{"start":{"line":2944,"column":20},"end":{"line":2944,"column":27}},{"start":{"line":2944,"column":31},"end":{"line":2944,"column":62}}]},"309":{"line":2983,"type":"cond-expr","locations":[{"start":{"line":2983,"column":32},"end":{"line":2983,"column":49}},{"start":{"line":2983,"column":52},"end":{"line":2983,"column":53}}]},"310":{"line":2986,"type":"binary-expr","locations":[{"start":{"line":2986,"column":19},"end":{"line":2986,"column":79}},{"start":{"line":2986,"column":84},"end":{"line":2986,"column":85}}]},"311":{"line":2986,"type":"cond-expr","locations":[{"start":{"line":2986,"column":35},"end":{"line":2986,"column":67}},{"start":{"line":2986,"column":70},"end":{"line":2986,"column":79}}]},"312":{"line":2987,"type":"if","locations":[{"start":{"line":2987,"column":6},"end":{"line":2987,"column":6}},{"start":{"line":2987,"column":6},"end":{"line":2987,"column":6}}]},"313":{"line":2989,"type":"if","locations":[{"start":{"line":2989,"column":13},"end":{"line":2989,"column":13}},{"start":{"line":2989,"column":13},"end":{"line":2989,"column":13}}]},"314":{"line":2990,"type":"cond-expr","locations":[{"start":{"line":2990,"column":41},"end":{"line":2990,"column":78}},{"start":{"line":2990,"column":81},"end":{"line":2990,"column":119}}]},"315":{"line":2993,"type":"if","locations":[{"start":{"line":2993,"column":10},"end":{"line":2993,"column":10}},{"start":{"line":2993,"column":10},"end":{"line":2993,"column":10}}]},"316":{"line":3036,"type":"cond-expr","locations":[{"start":{"line":3036,"column":42},"end":{"line":3036,"column":55}},{"start":{"line":3036,"column":58},"end":{"line":3036,"column":73}}]},"317":{"line":3085,"type":"cond-expr","locations":[{"start":{"line":3085,"column":32},"end":{"line":3085,"column":49}},{"start":{"line":3085,"column":52},"end":{"line":3085,"column":53}}]},"318":{"line":3087,"type":"if","locations":[{"start":{"line":3087,"column":6},"end":{"line":3087,"column":6}},{"start":{"line":3087,"column":6},"end":{"line":3087,"column":6}}]},"319":{"line":3089,"type":"if","locations":[{"start":{"line":3089,"column":10},"end":{"line":3089,"column":10}},{"start":{"line":3089,"column":10},"end":{"line":3089,"column":10}}]},"320":{"line":3146,"type":"cond-expr","locations":[{"start":{"line":3146,"column":32},"end":{"line":3146,"column":49}},{"start":{"line":3146,"column":52},"end":{"line":3146,"column":53}}]},"321":{"line":3148,"type":"if","locations":[{"start":{"line":3148,"column":6},"end":{"line":3148,"column":6}},{"start":{"line":3148,"column":6},"end":{"line":3148,"column":6}}]},"322":{"line":3151,"type":"if","locations":[{"start":{"line":3151,"column":10},"end":{"line":3151,"column":10}},{"start":{"line":3151,"column":10},"end":{"line":3151,"column":10}}]},"323":{"line":3157,"type":"if","locations":[{"start":{"line":3157,"column":10},"end":{"line":3157,"column":10}},{"start":{"line":3157,"column":10},"end":{"line":3157,"column":10}}]},"324":{"line":3212,"type":"cond-expr","locations":[{"start":{"line":3212,"column":32},"end":{"line":3212,"column":49}},{"start":{"line":3212,"column":52},"end":{"line":3212,"column":53}}]},"325":{"line":3214,"type":"if","locations":[{"start":{"line":3214,"column":6},"end":{"line":3214,"column":6}},{"start":{"line":3214,"column":6},"end":{"line":3214,"column":6}}]},"326":{"line":3217,"type":"if","locations":[{"start":{"line":3217,"column":10},"end":{"line":3217,"column":10}},{"start":{"line":3217,"column":10},"end":{"line":3217,"column":10}}]},"327":{"line":3224,"type":"if","locations":[{"start":{"line":3224,"column":10},"end":{"line":3224,"column":10}},{"start":{"line":3224,"column":10},"end":{"line":3224,"column":10}}]},"328":{"line":3257,"type":"if","locations":[{"start":{"line":3257,"column":8},"end":{"line":3257,"column":8}},{"start":{"line":3257,"column":8},"end":{"line":3257,"column":8}}]},"329":{"line":3293,"type":"cond-expr","locations":[{"start":{"line":3293,"column":32},"end":{"line":3293,"column":49}},{"start":{"line":3293,"column":52},"end":{"line":3293,"column":53}}]},"330":{"line":3295,"type":"cond-expr","locations":[{"start":{"line":3295,"column":61},"end":{"line":3295,"column":69}},{"start":{"line":3295,"column":72},"end":{"line":3295,"column":112}}]},"331":{"line":3295,"type":"binary-expr","locations":[{"start":{"line":3295,"column":17},"end":{"line":3295,"column":25}},{"start":{"line":3295,"column":29},"end":{"line":3295,"column":58}}]},"332":{"line":3296,"type":"if","locations":[{"start":{"line":3296,"column":6},"end":{"line":3296,"column":6}},{"start":{"line":3296,"column":6},"end":{"line":3296,"column":6}}]},"333":{"line":3298,"type":"if","locations":[{"start":{"line":3298,"column":10},"end":{"line":3298,"column":10}},{"start":{"line":3298,"column":10},"end":{"line":3298,"column":10}}]},"334":{"line":3326,"type":"cond-expr","locations":[{"start":{"line":3326,"column":32},"end":{"line":3326,"column":49}},{"start":{"line":3326,"column":52},"end":{"line":3326,"column":53}}]},"335":{"line":3327,"type":"cond-expr","locations":[{"start":{"line":3327,"column":61},"end":{"line":3327,"column":69}},{"start":{"line":3327,"column":72},"end":{"line":3327,"column":112}}]},"336":{"line":3327,"type":"binary-expr","locations":[{"start":{"line":3327,"column":17},"end":{"line":3327,"column":25}},{"start":{"line":3327,"column":29},"end":{"line":3327,"column":58}}]},"337":{"line":3328,"type":"if","locations":[{"start":{"line":3328,"column":6},"end":{"line":3328,"column":6}},{"start":{"line":3328,"column":6},"end":{"line":3328,"column":6}}]},"338":{"line":3330,"type":"if","locations":[{"start":{"line":3330,"column":10},"end":{"line":3330,"column":10}},{"start":{"line":3330,"column":10},"end":{"line":3330,"column":10}}]},"339":{"line":3338,"type":"cond-expr","locations":[{"start":{"line":3338,"column":24},"end":{"line":3338,"column":39}},{"start":{"line":3338,"column":42},"end":{"line":3338,"column":50}}]},"340":{"line":3381,"type":"cond-expr","locations":[{"start":{"line":3381,"column":42},"end":{"line":3381,"column":53}},{"start":{"line":3381,"column":56},"end":{"line":3381,"column":72}}]},"341":{"line":3453,"type":"cond-expr","locations":[{"start":{"line":3453,"column":32},"end":{"line":3453,"column":49}},{"start":{"line":3453,"column":52},"end":{"line":3453,"column":53}}]},"342":{"line":3454,"type":"cond-expr","locations":[{"start":{"line":3454,"column":53},"end":{"line":3454,"column":59}},{"start":{"line":3454,"column":62},"end":{"line":3454,"column":63}}]},"343":{"line":3457,"type":"cond-expr","locations":[{"start":{"line":3457,"column":36},"end":{"line":3457,"column":46}},{"start":{"line":3457,"column":49},"end":{"line":3457,"column":66}}]},"344":{"line":3503,"type":"cond-expr","locations":[{"start":{"line":3503,"column":32},"end":{"line":3503,"column":49}},{"start":{"line":3503,"column":52},"end":{"line":3503,"column":53}}]},"345":{"line":3506,"type":"if","locations":[{"start":{"line":3506,"column":6},"end":{"line":3506,"column":6}},{"start":{"line":3506,"column":6},"end":{"line":3506,"column":6}}]},"346":{"line":3566,"type":"if","locations":[{"start":{"line":3566,"column":6},"end":{"line":3566,"column":6}},{"start":{"line":3566,"column":6},"end":{"line":3566,"column":6}}]},"347":{"line":3566,"type":"binary-expr","locations":[{"start":{"line":3566,"column":10},"end":{"line":3566,"column":39}},{"start":{"line":3566,"column":43},"end":{"line":3566,"column":50}},{"start":{"line":3566,"column":54},"end":{"line":3566,"column":86}}]},"348":{"line":3569,"type":"if","locations":[{"start":{"line":3569,"column":6},"end":{"line":3569,"column":6}},{"start":{"line":3569,"column":6},"end":{"line":3569,"column":6}}]},"349":{"line":3569,"type":"binary-expr","locations":[{"start":{"line":3569,"column":10},"end":{"line":3569,"column":26}},{"start":{"line":3569,"column":30},"end":{"line":3569,"column":49}}]},"350":{"line":3575,"type":"if","locations":[{"start":{"line":3575,"column":10},"end":{"line":3575,"column":10}},{"start":{"line":3575,"column":10},"end":{"line":3575,"column":10}}]},"351":{"line":3580,"type":"cond-expr","locations":[{"start":{"line":3581,"column":12},"end":{"line":3581,"column":26}},{"start":{"line":3582,"column":12},"end":{"line":3582,"column":55}}]},"352":{"line":3580,"type":"binary-expr","locations":[{"start":{"line":3580,"column":20},"end":{"line":3580,"column":36}},{"start":{"line":3580,"column":40},"end":{"line":3580,"column":60}}]},"353":{"line":3586,"type":"if","locations":[{"start":{"line":3586,"column":10},"end":{"line":3586,"column":10}},{"start":{"line":3586,"column":10},"end":{"line":3586,"column":10}}]},"354":{"line":3641,"type":"if","locations":[{"start":{"line":3641,"column":6},"end":{"line":3641,"column":6}},{"start":{"line":3641,"column":6},"end":{"line":3641,"column":6}}]},"355":{"line":3641,"type":"binary-expr","locations":[{"start":{"line":3641,"column":10},"end":{"line":3641,"column":39}},{"start":{"line":3641,"column":43},"end":{"line":3641,"column":50}},{"start":{"line":3641,"column":54},"end":{"line":3641,"column":86}}]},"356":{"line":3644,"type":"if","locations":[{"start":{"line":3644,"column":6},"end":{"line":3644,"column":6}},{"start":{"line":3644,"column":6},"end":{"line":3644,"column":6}}]},"357":{"line":3644,"type":"binary-expr","locations":[{"start":{"line":3644,"column":10},"end":{"line":3644,"column":26}},{"start":{"line":3644,"column":30},"end":{"line":3644,"column":49}}]},"358":{"line":3650,"type":"if","locations":[{"start":{"line":3650,"column":10},"end":{"line":3650,"column":10}},{"start":{"line":3650,"column":10},"end":{"line":3650,"column":10}}]},"359":{"line":3655,"type":"cond-expr","locations":[{"start":{"line":3656,"column":12},"end":{"line":3656,"column":26}},{"start":{"line":3657,"column":12},"end":{"line":3657,"column":55}}]},"360":{"line":3655,"type":"binary-expr","locations":[{"start":{"line":3655,"column":20},"end":{"line":3655,"column":36}},{"start":{"line":3655,"column":40},"end":{"line":3655,"column":60}}]},"361":{"line":3661,"type":"if","locations":[{"start":{"line":3661,"column":10},"end":{"line":3661,"column":10}},{"start":{"line":3661,"column":10},"end":{"line":3661,"column":10}}]},"362":{"line":3723,"type":"if","locations":[{"start":{"line":3723,"column":6},"end":{"line":3723,"column":6}},{"start":{"line":3723,"column":6},"end":{"line":3723,"column":6}}]},"363":{"line":3730,"type":"if","locations":[{"start":{"line":3730,"column":6},"end":{"line":3730,"column":6}},{"start":{"line":3730,"column":6},"end":{"line":3730,"column":6}}]},"364":{"line":3731,"type":"if","locations":[{"start":{"line":3731,"column":8},"end":{"line":3731,"column":8}},{"start":{"line":3731,"column":8},"end":{"line":3731,"column":8}}]},"365":{"line":3739,"type":"cond-expr","locations":[{"start":{"line":3740,"column":15},"end":{"line":3740,"column":37}},{"start":{"line":3741,"column":14},"end":{"line":3741,"column":61}}]},"366":{"line":3770,"type":"cond-expr","locations":[{"start":{"line":3771,"column":13},"end":{"line":3771,"column":35}},{"start":{"line":3772,"column":12},"end":{"line":3772,"column":59}}]},"367":{"line":3842,"type":"if","locations":[{"start":{"line":3842,"column":6},"end":{"line":3842,"column":6}},{"start":{"line":3842,"column":6},"end":{"line":3842,"column":6}}]},"368":{"line":3842,"type":"binary-expr","locations":[{"start":{"line":3842,"column":10},"end":{"line":3842,"column":20}},{"start":{"line":3842,"column":24},"end":{"line":3842,"column":60}}]},"369":{"line":3845,"type":"if","locations":[{"start":{"line":3845,"column":6},"end":{"line":3845,"column":6}},{"start":{"line":3845,"column":6},"end":{"line":3845,"column":6}}]},"370":{"line":3845,"type":"binary-expr","locations":[{"start":{"line":3845,"column":10},"end":{"line":3845,"column":19}},{"start":{"line":3845,"column":23},"end":{"line":3845,"column":28}}]},"371":{"line":3846,"type":"cond-expr","locations":[{"start":{"line":3846,"column":28},"end":{"line":3846,"column":76}},{"start":{"line":3846,"column":79},"end":{"line":3846,"column":88}}]},"372":{"line":3869,"type":"cond-expr","locations":[{"start":{"line":3869,"column":32},"end":{"line":3869,"column":49}},{"start":{"line":3869,"column":52},"end":{"line":3869,"column":53}}]},"373":{"line":3870,"type":"cond-expr","locations":[{"start":{"line":3870,"column":53},"end":{"line":3870,"column":59}},{"start":{"line":3870,"column":62},"end":{"line":3870,"column":63}}]},"374":{"line":3901,"type":"cond-expr","locations":[{"start":{"line":3901,"column":32},"end":{"line":3901,"column":49}},{"start":{"line":3901,"column":52},"end":{"line":3901,"column":53}}]},"375":{"line":3902,"type":"cond-expr","locations":[{"start":{"line":3902,"column":41},"end":{"line":3902,"column":47}},{"start":{"line":3902,"column":50},"end":{"line":3902,"column":73}}]},"376":{"line":3952,"type":"cond-expr","locations":[{"start":{"line":3952,"column":32},"end":{"line":3952,"column":49}},{"start":{"line":3952,"column":52},"end":{"line":3952,"column":53}}]},"377":{"line":3954,"type":"if","locations":[{"start":{"line":3954,"column":6},"end":{"line":3954,"column":6}},{"start":{"line":3954,"column":6},"end":{"line":3954,"column":6}}]},"378":{"line":3956,"type":"if","locations":[{"start":{"line":3956,"column":10},"end":{"line":3956,"column":10}},{"start":{"line":3956,"column":10},"end":{"line":3956,"column":10}}]},"379":{"line":4020,"type":"cond-expr","locations":[{"start":{"line":4020,"column":32},"end":{"line":4020,"column":49}},{"start":{"line":4020,"column":52},"end":{"line":4020,"column":53}}]},"380":{"line":4021,"type":"cond-expr","locations":[{"start":{"line":4021,"column":53},"end":{"line":4021,"column":59}},{"start":{"line":4021,"column":62},"end":{"line":4021,"column":63}}]},"381":{"line":4023,"type":"if","locations":[{"start":{"line":4023,"column":6},"end":{"line":4023,"column":6}},{"start":{"line":4023,"column":6},"end":{"line":4023,"column":6}}]},"382":{"line":4028,"type":"if","locations":[{"start":{"line":4028,"column":8},"end":{"line":4028,"column":8}},{"start":{"line":4028,"column":8},"end":{"line":4028,"column":8}}]},"383":{"line":4042,"type":"if","locations":[{"start":{"line":4042,"column":8},"end":{"line":4042,"column":8}},{"start":{"line":4042,"column":8},"end":{"line":4042,"column":8}}]},"384":{"line":4064,"type":"if","locations":[{"start":{"line":4064,"column":6},"end":{"line":4064,"column":6}},{"start":{"line":4064,"column":6},"end":{"line":4064,"column":6}}]},"385":{"line":4064,"type":"binary-expr","locations":[{"start":{"line":4064,"column":10},"end":{"line":4064,"column":20}},{"start":{"line":4064,"column":24},"end":{"line":4064,"column":60}}]},"386":{"line":4115,"type":"cond-expr","locations":[{"start":{"line":4115,"column":27},"end":{"line":4115,"column":39}},{"start":{"line":4115,"column":42},"end":{"line":4115,"column":43}}]},"387":{"line":4120,"type":"if","locations":[{"start":{"line":4120,"column":8},"end":{"line":4120,"column":8}},{"start":{"line":4120,"column":8},"end":{"line":4120,"column":8}}]},"388":{"line":4189,"type":"cond-expr","locations":[{"start":{"line":4189,"column":27},"end":{"line":4189,"column":39}},{"start":{"line":4189,"column":42},"end":{"line":4189,"column":43}}]},"389":{"line":4193,"type":"if","locations":[{"start":{"line":4193,"column":8},"end":{"line":4193,"column":8}},{"start":{"line":4193,"column":8},"end":{"line":4193,"column":8}}]},"390":{"line":4242,"type":"cond-expr","locations":[{"start":{"line":4242,"column":27},"end":{"line":4242,"column":39}},{"start":{"line":4242,"column":42},"end":{"line":4242,"column":43}}]},"391":{"line":4245,"type":"if","locations":[{"start":{"line":4245,"column":8},"end":{"line":4245,"column":8}},{"start":{"line":4245,"column":8},"end":{"line":4245,"column":8}}]},"392":{"line":4305,"type":"cond-expr","locations":[{"start":{"line":4305,"column":27},"end":{"line":4305,"column":39}},{"start":{"line":4305,"column":42},"end":{"line":4305,"column":43}}]},"393":{"line":4307,"type":"if","locations":[{"start":{"line":4307,"column":6},"end":{"line":4307,"column":6}},{"start":{"line":4307,"column":6},"end":{"line":4307,"column":6}}]},"394":{"line":4307,"type":"binary-expr","locations":[{"start":{"line":4307,"column":10},"end":{"line":4307,"column":37}},{"start":{"line":4307,"column":41},"end":{"line":4307,"column":57}}]},"395":{"line":4310,"type":"binary-expr","locations":[{"start":{"line":4310,"column":15},"end":{"line":4310,"column":31}},{"start":{"line":4310,"column":35},"end":{"line":4310,"column":71}}]},"396":{"line":4315,"type":"if","locations":[{"start":{"line":4315,"column":8},"end":{"line":4315,"column":8}},{"start":{"line":4315,"column":8},"end":{"line":4315,"column":8}}]},"397":{"line":4315,"type":"binary-expr","locations":[{"start":{"line":4315,"column":12},"end":{"line":4315,"column":21}},{"start":{"line":4315,"column":25},"end":{"line":4315,"column":32}}]},"398":{"line":4316,"type":"cond-expr","locations":[{"start":{"line":4316,"column":25},"end":{"line":4316,"column":33}},{"start":{"line":4316,"column":36},"end":{"line":4316,"column":45}}]},"399":{"line":4365,"type":"if","locations":[{"start":{"line":4365,"column":6},"end":{"line":4365,"column":6}},{"start":{"line":4365,"column":6},"end":{"line":4365,"column":6}}]},"400":{"line":4365,"type":"binary-expr","locations":[{"start":{"line":4365,"column":10},"end":{"line":4365,"column":39}},{"start":{"line":4365,"column":43},"end":{"line":4365,"column":60}}]},"401":{"line":4367,"type":"cond-expr","locations":[{"start":{"line":4367,"column":97},"end":{"line":4367,"column":101}},{"start":{"line":4367,"column":104},"end":{"line":4367,"column":113}}]},"402":{"line":4367,"type":"binary-expr","locations":[{"start":{"line":4367,"column":20},"end":{"line":4367,"column":50}},{"start":{"line":4367,"column":54},"end":{"line":4367,"column":61}},{"start":{"line":4367,"column":65},"end":{"line":4367,"column":93}}]},"403":{"line":4370,"type":"if","locations":[{"start":{"line":4370,"column":6},"end":{"line":4370,"column":6}},{"start":{"line":4370,"column":6},"end":{"line":4370,"column":6}}]},"404":{"line":4401,"type":"if","locations":[{"start":{"line":4401,"column":6},"end":{"line":4401,"column":6}},{"start":{"line":4401,"column":6},"end":{"line":4401,"column":6}}]},"405":{"line":4402,"type":"cond-expr","locations":[{"start":{"line":4402,"column":29},"end":{"line":4402,"column":41}},{"start":{"line":4402,"column":44},"end":{"line":4402,"column":45}}]},"406":{"line":4403,"type":"cond-expr","locations":[{"start":{"line":4403,"column":37},"end":{"line":4403,"column":69}},{"start":{"line":4403,"column":72},"end":{"line":4403,"column":86}}]},"407":{"line":4403,"type":"binary-expr","locations":[{"start":{"line":4403,"column":72},"end":{"line":4403,"column":81}},{"start":{"line":4403,"column":85},"end":{"line":4403,"column":86}}]},"408":{"line":4404,"type":"if","locations":[{"start":{"line":4404,"column":13},"end":{"line":4404,"column":13}},{"start":{"line":4404,"column":13},"end":{"line":4404,"column":13}}]},"409":{"line":4406,"type":"cond-expr","locations":[{"start":{"line":4406,"column":40},"end":{"line":4406,"column":45}},{"start":{"line":4406,"column":48},"end":{"line":4406,"column":50}}]},"410":{"line":4463,"type":"cond-expr","locations":[{"start":{"line":4463,"column":27},"end":{"line":4463,"column":39}},{"start":{"line":4463,"column":42},"end":{"line":4463,"column":43}}]},"411":{"line":4465,"type":"if","locations":[{"start":{"line":4465,"column":6},"end":{"line":4465,"column":6}},{"start":{"line":4465,"column":6},"end":{"line":4465,"column":6}}]},"412":{"line":4465,"type":"binary-expr","locations":[{"start":{"line":4465,"column":10},"end":{"line":4465,"column":37}},{"start":{"line":4465,"column":41},"end":{"line":4465,"column":57}}]},"413":{"line":4468,"type":"binary-expr","locations":[{"start":{"line":4468,"column":15},"end":{"line":4468,"column":22}},{"start":{"line":4468,"column":26},"end":{"line":4468,"column":62}}]},"414":{"line":4472,"type":"cond-expr","locations":[{"start":{"line":4472,"column":44},"end":{"line":4472,"column":45}},{"start":{"line":4472,"column":48},"end":{"line":4472,"column":61}}]},"415":{"line":4472,"type":"binary-expr","locations":[{"start":{"line":4472,"column":13},"end":{"line":4472,"column":29}},{"start":{"line":4472,"column":33},"end":{"line":4472,"column":40}}]},"416":{"line":4472,"type":"binary-expr","locations":[{"start":{"line":4472,"column":48},"end":{"line":4472,"column":56}},{"start":{"line":4472,"column":60},"end":{"line":4472,"column":61}}]},"417":{"line":4502,"type":"if","locations":[{"start":{"line":4502,"column":8},"end":{"line":4502,"column":8}},{"start":{"line":4502,"column":8},"end":{"line":4502,"column":8}}]},"418":{"line":4502,"type":"binary-expr","locations":[{"start":{"line":4502,"column":12},"end":{"line":4502,"column":26}},{"start":{"line":4502,"column":30},"end":{"line":4502,"column":48}}]},"419":{"line":4504,"type":"binary-expr","locations":[{"start":{"line":4504,"column":22},"end":{"line":4504,"column":34}},{"start":{"line":4504,"column":38},"end":{"line":4504,"column":68}},{"start":{"line":4505,"column":12},"end":{"line":4505,"column":59}}]},"420":{"line":4505,"type":"cond-expr","locations":[{"start":{"line":4505,"column":36},"end":{"line":4505,"column":51}},{"start":{"line":4505,"column":54},"end":{"line":4505,"column":58}}]},"421":{"line":4510,"type":"cond-expr","locations":[{"start":{"line":4510,"column":27},"end":{"line":4510,"column":39}},{"start":{"line":4510,"column":42},"end":{"line":4510,"column":43}}]},"422":{"line":4518,"type":"if","locations":[{"start":{"line":4518,"column":8},"end":{"line":4518,"column":8}},{"start":{"line":4518,"column":8},"end":{"line":4518,"column":8}}]},"423":{"line":4518,"type":"cond-expr","locations":[{"start":{"line":4518,"column":21},"end":{"line":4518,"column":47}},{"start":{"line":4518,"column":50},"end":{"line":4518,"column":70}}]},"424":{"line":4520,"type":"binary-expr","locations":[{"start":{"line":4520,"column":11},"end":{"line":4520,"column":16}},{"start":{"line":4520,"column":20},"end":{"line":4520,"column":24}}]},"425":{"line":4523,"type":"if","locations":[{"start":{"line":4523,"column":12},"end":{"line":4523,"column":12}},{"start":{"line":4523,"column":12},"end":{"line":4523,"column":12}}]},"426":{"line":4523,"type":"cond-expr","locations":[{"start":{"line":4523,"column":25},"end":{"line":4523,"column":51}},{"start":{"line":4523,"column":54},"end":{"line":4523,"column":85}}]},"427":{"line":4532,"type":"if","locations":[{"start":{"line":4532,"column":8},"end":{"line":4532,"column":8}},{"start":{"line":4532,"column":8},"end":{"line":4532,"column":8}}]},"428":{"line":4593,"type":"cond-expr","locations":[{"start":{"line":4593,"column":27},"end":{"line":4593,"column":39}},{"start":{"line":4593,"column":42},"end":{"line":4593,"column":43}}]},"429":{"line":4595,"type":"if","locations":[{"start":{"line":4595,"column":6},"end":{"line":4595,"column":6}},{"start":{"line":4595,"column":6},"end":{"line":4595,"column":6}}]},"430":{"line":4595,"type":"binary-expr","locations":[{"start":{"line":4595,"column":10},"end":{"line":4595,"column":37}},{"start":{"line":4595,"column":41},"end":{"line":4595,"column":57}}]},"431":{"line":4598,"type":"binary-expr","locations":[{"start":{"line":4598,"column":15},"end":{"line":4598,"column":22}},{"start":{"line":4598,"column":26},"end":{"line":4598,"column":62}}]},"432":{"line":4603,"type":"if","locations":[{"start":{"line":4603,"column":8},"end":{"line":4603,"column":8}},{"start":{"line":4603,"column":8},"end":{"line":4603,"column":8}}]},"433":{"line":4603,"type":"binary-expr","locations":[{"start":{"line":4603,"column":12},"end":{"line":4603,"column":21}},{"start":{"line":4603,"column":25},"end":{"line":4603,"column":32}}]},"434":{"line":4604,"type":"cond-expr","locations":[{"start":{"line":4604,"column":25},"end":{"line":4604,"column":42}},{"start":{"line":4604,"column":45},"end":{"line":4604,"column":54}}]},"435":{"line":4638,"type":"cond-expr","locations":[{"start":{"line":4638,"column":26},"end":{"line":4638,"column":38}},{"start":{"line":4638,"column":41},"end":{"line":4638,"column":42}}]},"436":{"line":4639,"type":"if","locations":[{"start":{"line":4639,"column":6},"end":{"line":4639,"column":6}},{"start":{"line":4639,"column":6},"end":{"line":4639,"column":6}}]},"437":{"line":4640,"type":"cond-expr","locations":[{"start":{"line":4640,"column":33},"end":{"line":4640,"column":64}},{"start":{"line":4640,"column":67},"end":{"line":4640,"column":98}}]},"438":{"line":4643,"type":"if","locations":[{"start":{"line":4643,"column":8},"end":{"line":4643,"column":8}},{"start":{"line":4643,"column":8},"end":{"line":4643,"column":8}}]},"439":{"line":4671,"type":"cond-expr","locations":[{"start":{"line":4671,"column":27},"end":{"line":4671,"column":39}},{"start":{"line":4671,"column":42},"end":{"line":4671,"column":43}}]},"440":{"line":4677,"type":"if","locations":[{"start":{"line":4677,"column":10},"end":{"line":4677,"column":10}},{"start":{"line":4677,"column":10},"end":{"line":4677,"column":10}}]},"441":{"line":4719,"type":"binary-expr","locations":[{"start":{"line":4719,"column":14},"end":{"line":4719,"column":20}},{"start":{"line":4719,"column":24},"end":{"line":4719,"column":25}}]},"442":{"line":4720,"type":"cond-expr","locations":[{"start":{"line":4720,"column":39},"end":{"line":4720,"column":43}},{"start":{"line":4720,"column":47},"end":{"line":4720,"column":57}}]},"443":{"line":4720,"type":"binary-expr","locations":[{"start":{"line":4720,"column":47},"end":{"line":4720,"column":52}},{"start":{"line":4720,"column":56},"end":{"line":4720,"column":57}}]},"444":{"line":4722,"type":"if","locations":[{"start":{"line":4722,"column":6},"end":{"line":4722,"column":6}},{"start":{"line":4722,"column":6},"end":{"line":4722,"column":6}}]},"445":{"line":4729,"type":"binary-expr","locations":[{"start":{"line":4729,"column":54},"end":{"line":4729,"column":58}},{"start":{"line":4729,"column":62},"end":{"line":4729,"column":63}}]},"446":{"line":4773,"type":"cond-expr","locations":[{"start":{"line":4773,"column":27},"end":{"line":4773,"column":39}},{"start":{"line":4773,"column":42},"end":{"line":4773,"column":43}}]},"447":{"line":4779,"type":"if","locations":[{"start":{"line":4779,"column":8},"end":{"line":4779,"column":8}},{"start":{"line":4779,"column":8},"end":{"line":4779,"column":8}}]},"448":{"line":4841,"type":"if","locations":[{"start":{"line":4841,"column":6},"end":{"line":4841,"column":6}},{"start":{"line":4841,"column":6},"end":{"line":4841,"column":6}}]},"449":{"line":4841,"type":"binary-expr","locations":[{"start":{"line":4841,"column":10},"end":{"line":4841,"column":37}},{"start":{"line":4841,"column":41},"end":{"line":4841,"column":57}}]},"450":{"line":4844,"type":"cond-expr","locations":[{"start":{"line":4844,"column":29},"end":{"line":4844,"column":41}},{"start":{"line":4844,"column":44},"end":{"line":4844,"column":45}}]},"451":{"line":4847,"type":"binary-expr","locations":[{"start":{"line":4847,"column":15},"end":{"line":4847,"column":31}},{"start":{"line":4847,"column":35},"end":{"line":4847,"column":71}}]},"452":{"line":4851,"type":"cond-expr","locations":[{"start":{"line":4851,"column":44},"end":{"line":4851,"column":45}},{"start":{"line":4851,"column":48},"end":{"line":4851,"column":70}}]},"453":{"line":4851,"type":"binary-expr","locations":[{"start":{"line":4851,"column":13},"end":{"line":4851,"column":29}},{"start":{"line":4851,"column":33},"end":{"line":4851,"column":40}}]},"454":{"line":4906,"type":"cond-expr","locations":[{"start":{"line":4906,"column":25},"end":{"line":4906,"column":37}},{"start":{"line":4906,"column":40},"end":{"line":4906,"column":43}}]},"455":{"line":4909,"type":"cond-expr","locations":[{"start":{"line":4909,"column":28},"end":{"line":4909,"column":71}},{"start":{"line":4909,"column":74},"end":{"line":4909,"column":82}}]},"456":{"line":4914,"type":"cond-expr","locations":[{"start":{"line":4915,"column":12},"end":{"line":4915,"column":25}},{"start":{"line":4916,"column":12},"end":{"line":4916,"column":22}}]},"457":{"line":4985,"type":"if","locations":[{"start":{"line":4985,"column":6},"end":{"line":4985,"column":6}},{"start":{"line":4985,"column":6},"end":{"line":4985,"column":6}}]},"458":{"line":4985,"type":"binary-expr","locations":[{"start":{"line":4985,"column":10},"end":{"line":4985,"column":38}},{"start":{"line":4985,"column":42},"end":{"line":4985,"column":58}}]},"459":{"line":4987,"type":"cond-expr","locations":[{"start":{"line":4987,"column":95},"end":{"line":4987,"column":99}},{"start":{"line":4987,"column":102},"end":{"line":4987,"column":110}}]},"460":{"line":4987,"type":"binary-expr","locations":[{"start":{"line":4987,"column":20},"end":{"line":4987,"column":49}},{"start":{"line":4987,"column":53},"end":{"line":4987,"column":60}},{"start":{"line":4987,"column":64},"end":{"line":4987,"column":91}}]},"461":{"line":4990,"type":"if","locations":[{"start":{"line":4990,"column":6},"end":{"line":4990,"column":6}},{"start":{"line":4990,"column":6},"end":{"line":4990,"column":6}}]},"462":{"line":5038,"type":"if","locations":[{"start":{"line":5038,"column":8},"end":{"line":5038,"column":8}},{"start":{"line":5038,"column":8},"end":{"line":5038,"column":8}}]},"463":{"line":5038,"type":"binary-expr","locations":[{"start":{"line":5038,"column":12},"end":{"line":5038,"column":26}},{"start":{"line":5038,"column":30},"end":{"line":5038,"column":48}}]},"464":{"line":5039,"type":"cond-expr","locations":[{"start":{"line":5040,"column":14},"end":{"line":5040,"column":91}},{"start":{"line":5041,"column":14},"end":{"line":5041,"column":19}}]},"465":{"line":5044,"type":"binary-expr","locations":[{"start":{"line":5044,"column":13},"end":{"line":5044,"column":19}},{"start":{"line":5044,"column":23},"end":{"line":5044,"column":25}}]},"466":{"line":5064,"type":"cond-expr","locations":[{"start":{"line":5064,"column":41},"end":{"line":5064,"column":50}},{"start":{"line":5064,"column":53},"end":{"line":5064,"column":65}}]},"467":{"line":5066,"type":"cond-expr","locations":[{"start":{"line":5066,"column":27},"end":{"line":5066,"column":54}},{"start":{"line":5066,"column":57},"end":{"line":5066,"column":58}}]},"468":{"line":5067,"type":"cond-expr","locations":[{"start":{"line":5067,"column":38},"end":{"line":5067,"column":39}},{"start":{"line":5067,"column":42},"end":{"line":5067,"column":48}}]},"469":{"line":5095,"type":"cond-expr","locations":[{"start":{"line":5095,"column":26},"end":{"line":5095,"column":37}},{"start":{"line":5095,"column":40},"end":{"line":5095,"column":41}}]},"470":{"line":5098,"type":"if","locations":[{"start":{"line":5098,"column":6},"end":{"line":5098,"column":6}},{"start":{"line":5098,"column":6},"end":{"line":5098,"column":6}}]},"471":{"line":5098,"type":"binary-expr","locations":[{"start":{"line":5098,"column":10},"end":{"line":5098,"column":17}},{"start":{"line":5098,"column":21},"end":{"line":5098,"column":27}},{"start":{"line":5098,"column":31},"end":{"line":5098,"column":48}}]},"472":{"line":5103,"type":"if","locations":[{"start":{"line":5103,"column":8},"end":{"line":5103,"column":8}},{"start":{"line":5103,"column":8},"end":{"line":5103,"column":8}}]},"473":{"line":5105,"type":"if","locations":[{"start":{"line":5105,"column":15},"end":{"line":5105,"column":15}},{"start":{"line":5105,"column":15},"end":{"line":5105,"column":15}}]},"474":{"line":5139,"type":"if","locations":[{"start":{"line":5139,"column":6},"end":{"line":5139,"column":6}},{"start":{"line":5139,"column":6},"end":{"line":5139,"column":6}}]},"475":{"line":5143,"type":"if","locations":[{"start":{"line":5143,"column":8},"end":{"line":5143,"column":8}},{"start":{"line":5143,"column":8},"end":{"line":5143,"column":8}}]},"476":{"line":5172,"type":"cond-expr","locations":[{"start":{"line":5173,"column":10},"end":{"line":5173,"column":69}},{"start":{"line":5174,"column":10},"end":{"line":5174,"column":53}}]},"477":{"line":5202,"type":"cond-expr","locations":[{"start":{"line":5202,"column":41},"end":{"line":5202,"column":79}},{"start":{"line":5202,"column":82},"end":{"line":5202,"column":99}}]},"478":{"line":5248,"type":"cond-expr","locations":[{"start":{"line":5249,"column":10},"end":{"line":5249,"column":67}},{"start":{"line":5250,"column":10},"end":{"line":5250,"column":51}}]},"479":{"line":5288,"type":"if","locations":[{"start":{"line":5288,"column":8},"end":{"line":5288,"column":8}},{"start":{"line":5288,"column":8},"end":{"line":5288,"column":8}}]},"480":{"line":5332,"type":"cond-expr","locations":[{"start":{"line":5332,"column":41},"end":{"line":5332,"column":46}},{"start":{"line":5332,"column":50},"end":{"line":5332,"column":71}}]},"481":{"line":5332,"type":"binary-expr","locations":[{"start":{"line":5332,"column":50},"end":{"line":5332,"column":56}},{"start":{"line":5332,"column":60},"end":{"line":5332,"column":71}}]},"482":{"line":5387,"type":"if","locations":[{"start":{"line":5387,"column":6},"end":{"line":5387,"column":6}},{"start":{"line":5387,"column":6},"end":{"line":5387,"column":6}}]},"483":{"line":5390,"type":"binary-expr","locations":[{"start":{"line":5390,"column":13},"end":{"line":5390,"column":31}},{"start":{"line":5390,"column":35},"end":{"line":5390,"column":36}}]},"484":{"line":5391,"type":"if","locations":[{"start":{"line":5391,"column":6},"end":{"line":5391,"column":6}},{"start":{"line":5391,"column":6},"end":{"line":5391,"column":6}}]},"485":{"line":5394,"type":"if","locations":[{"start":{"line":5394,"column":13},"end":{"line":5394,"column":13}},{"start":{"line":5394,"column":13},"end":{"line":5394,"column":13}}]},"486":{"line":5396,"type":"binary-expr","locations":[{"start":{"line":5396,"column":18},"end":{"line":5396,"column":38}},{"start":{"line":5396,"column":43},"end":{"line":5396,"column":75}},{"start":{"line":5396,"column":79},"end":{"line":5396,"column":80}}]},"487":{"line":5397,"type":"cond-expr","locations":[{"start":{"line":5397,"column":43},"end":{"line":5397,"column":59}},{"start":{"line":5397,"column":62},"end":{"line":5397,"column":70}}]},"488":{"line":5401,"type":"if","locations":[{"start":{"line":5401,"column":8},"end":{"line":5401,"column":8}},{"start":{"line":5401,"column":8},"end":{"line":5401,"column":8}}]},"489":{"line":5402,"type":"if","locations":[{"start":{"line":5402,"column":10},"end":{"line":5402,"column":10}},{"start":{"line":5402,"column":10},"end":{"line":5402,"column":10}}]},"490":{"line":5407,"type":"if","locations":[{"start":{"line":5407,"column":10},"end":{"line":5407,"column":10}},{"start":{"line":5407,"column":10},"end":{"line":5407,"column":10}}]},"491":{"line":5410,"type":"if","locations":[{"start":{"line":5410,"column":12},"end":{"line":5410,"column":12}},{"start":{"line":5410,"column":12},"end":{"line":5410,"column":12}}]},"492":{"line":5410,"type":"binary-expr","locations":[{"start":{"line":5410,"column":16},"end":{"line":5410,"column":26}},{"start":{"line":5410,"column":30},"end":{"line":5410,"column":43}}]},"493":{"line":5420,"type":"if","locations":[{"start":{"line":5420,"column":8},"end":{"line":5420,"column":8}},{"start":{"line":5420,"column":8},"end":{"line":5420,"column":8}}]},"494":{"line":5424,"type":"if","locations":[{"start":{"line":5424,"column":8},"end":{"line":5424,"column":8}},{"start":{"line":5424,"column":8},"end":{"line":5424,"column":8}}]},"495":{"line":5424,"type":"binary-expr","locations":[{"start":{"line":5424,"column":12},"end":{"line":5424,"column":20}},{"start":{"line":5424,"column":25},"end":{"line":5424,"column":41}}]},"496":{"line":5427,"type":"if","locations":[{"start":{"line":5427,"column":10},"end":{"line":5427,"column":10}},{"start":{"line":5427,"column":10},"end":{"line":5427,"column":10}}]},"497":{"line":5427,"type":"binary-expr","locations":[{"start":{"line":5427,"column":14},"end":{"line":5427,"column":24}},{"start":{"line":5427,"column":28},"end":{"line":5427,"column":41}}]},"498":{"line":5437,"type":"binary-expr","locations":[{"start":{"line":5437,"column":23},"end":{"line":5437,"column":31}},{"start":{"line":5437,"column":36},"end":{"line":5437,"column":45}},{"start":{"line":5437,"column":49},"end":{"line":5437,"column":57}}]},"499":{"line":5439,"type":"if","locations":[{"start":{"line":5439,"column":8},"end":{"line":5439,"column":8}},{"start":{"line":5439,"column":8},"end":{"line":5439,"column":8}}]},"500":{"line":5440,"type":"binary-expr","locations":[{"start":{"line":5440,"column":28},"end":{"line":5440,"column":35}},{"start":{"line":5440,"column":39},"end":{"line":5440,"column":49}}]},"501":{"line":5442,"type":"if","locations":[{"start":{"line":5442,"column":10},"end":{"line":5442,"column":10}},{"start":{"line":5442,"column":10},"end":{"line":5442,"column":10}}]},"502":{"line":5442,"type":"binary-expr","locations":[{"start":{"line":5442,"column":14},"end":{"line":5442,"column":27}},{"start":{"line":5442,"column":31},"end":{"line":5442,"column":39}}]},"503":{"line":5448,"type":"if","locations":[{"start":{"line":5448,"column":10},"end":{"line":5448,"column":10}},{"start":{"line":5448,"column":10},"end":{"line":5448,"column":10}}]},"504":{"line":5449,"type":"if","locations":[{"start":{"line":5449,"column":12},"end":{"line":5449,"column":12}},{"start":{"line":5449,"column":12},"end":{"line":5449,"column":12}}]},"505":{"line":5455,"type":"if","locations":[{"start":{"line":5455,"column":15},"end":{"line":5455,"column":15}},{"start":{"line":5455,"column":15},"end":{"line":5455,"column":15}}]},"506":{"line":5459,"type":"if","locations":[{"start":{"line":5459,"column":8},"end":{"line":5459,"column":8}},{"start":{"line":5459,"column":8},"end":{"line":5459,"column":8}}]},"507":{"line":5459,"type":"binary-expr","locations":[{"start":{"line":5459,"column":12},"end":{"line":5459,"column":20}},{"start":{"line":5459,"column":24},"end":{"line":5459,"column":33}}]},"508":{"line":5462,"type":"if","locations":[{"start":{"line":5462,"column":13},"end":{"line":5462,"column":13}},{"start":{"line":5462,"column":13},"end":{"line":5462,"column":13}}]},"509":{"line":5462,"type":"binary-expr","locations":[{"start":{"line":5462,"column":17},"end":{"line":5462,"column":27}},{"start":{"line":5462,"column":31},"end":{"line":5462,"column":47}}]},"510":{"line":5465,"type":"if","locations":[{"start":{"line":5465,"column":8},"end":{"line":5465,"column":8}},{"start":{"line":5465,"column":8},"end":{"line":5465,"column":8}}]},"511":{"line":5469,"type":"if","locations":[{"start":{"line":5469,"column":8},"end":{"line":5469,"column":8}},{"start":{"line":5469,"column":8},"end":{"line":5469,"column":8}}]},"512":{"line":5469,"type":"binary-expr","locations":[{"start":{"line":5469,"column":12},"end":{"line":5469,"column":20}},{"start":{"line":5469,"column":24},"end":{"line":5469,"column":34}},{"start":{"line":5469,"column":38},"end":{"line":5469,"column":51}}]},"513":{"line":5492,"type":"if","locations":[{"start":{"line":5492,"column":6},"end":{"line":5492,"column":6}},{"start":{"line":5492,"column":6},"end":{"line":5492,"column":6}}]},"514":{"line":5516,"type":"if","locations":[{"start":{"line":5516,"column":6},"end":{"line":5516,"column":6}},{"start":{"line":5516,"column":6},"end":{"line":5516,"column":6}}]},"515":{"line":5561,"type":"if","locations":[{"start":{"line":5561,"column":6},"end":{"line":5561,"column":6}},{"start":{"line":5561,"column":6},"end":{"line":5561,"column":6}}]},"516":{"line":5566,"type":"cond-expr","locations":[{"start":{"line":5566,"column":29},"end":{"line":5566,"column":60}},{"start":{"line":5566,"column":63},"end":{"line":5566,"column":87}}]},"517":{"line":5568,"type":"cond-expr","locations":[{"start":{"line":5569,"column":12},"end":{"line":5569,"column":22}},{"start":{"line":5570,"column":13},"end":{"line":5570,"column":53}}]},"518":{"line":5597,"type":"if","locations":[{"start":{"line":5597,"column":6},"end":{"line":5597,"column":6}},{"start":{"line":5597,"column":6},"end":{"line":5597,"column":6}}]},"519":{"line":5601,"type":"if","locations":[{"start":{"line":5601,"column":8},"end":{"line":5601,"column":8}},{"start":{"line":5601,"column":8},"end":{"line":5601,"column":8}}]},"520":{"line":5701,"type":"if","locations":[{"start":{"line":5701,"column":6},"end":{"line":5701,"column":6}},{"start":{"line":5701,"column":6},"end":{"line":5701,"column":6}}]},"521":{"line":5704,"type":"if","locations":[{"start":{"line":5704,"column":6},"end":{"line":5704,"column":6}},{"start":{"line":5704,"column":6},"end":{"line":5704,"column":6}}]},"522":{"line":5706,"type":"if","locations":[{"start":{"line":5706,"column":13},"end":{"line":5706,"column":13}},{"start":{"line":5706,"column":13},"end":{"line":5706,"column":13}}]},"523":{"line":5707,"type":"cond-expr","locations":[{"start":{"line":5707,"column":41},"end":{"line":5707,"column":56}},{"start":{"line":5707,"column":59},"end":{"line":5707,"column":66}}]},"524":{"line":5708,"type":"cond-expr","locations":[{"start":{"line":5708,"column":43},"end":{"line":5708,"column":59}},{"start":{"line":5708,"column":62},"end":{"line":5708,"column":70}}]},"525":{"line":5798,"type":"if","locations":[{"start":{"line":5798,"column":6},"end":{"line":5798,"column":6}},{"start":{"line":5798,"column":6},"end":{"line":5798,"column":6}}]},"526":{"line":5798,"type":"binary-expr","locations":[{"start":{"line":5798,"column":10},"end":{"line":5798,"column":22}},{"start":{"line":5798,"column":26},"end":{"line":5798,"column":44}}]},"527":{"line":5802,"type":"if","locations":[{"start":{"line":5802,"column":6},"end":{"line":5802,"column":6}},{"start":{"line":5802,"column":6},"end":{"line":5802,"column":6}}]},"528":{"line":5810,"type":"if","locations":[{"start":{"line":5810,"column":6},"end":{"line":5810,"column":6}},{"start":{"line":5810,"column":6},"end":{"line":5810,"column":6}}]},"529":{"line":5810,"type":"binary-expr","locations":[{"start":{"line":5810,"column":10},"end":{"line":5810,"column":27}},{"start":{"line":5810,"column":31},"end":{"line":5810,"column":38}},{"start":{"line":5810,"column":42},"end":{"line":5810,"column":54}}]},"530":{"line":5815,"type":"binary-expr","locations":[{"start":{"line":5815,"column":17},"end":{"line":5815,"column":24}},{"start":{"line":5815,"column":29},"end":{"line":5815,"column":36}},{"start":{"line":5815,"column":41},"end":{"line":5815,"column":55}}]},"531":{"line":5823,"type":"if","locations":[{"start":{"line":5823,"column":10},"end":{"line":5823,"column":10}},{"start":{"line":5823,"column":10},"end":{"line":5823,"column":10}}]},"532":{"line":5846,"type":"cond-expr","locations":[{"start":{"line":5846,"column":30},"end":{"line":5846,"column":32}},{"start":{"line":5846,"column":35},"end":{"line":5846,"column":90}}]},"533":{"line":5897,"type":"binary-expr","locations":[{"start":{"line":5897,"column":24},"end":{"line":5897,"column":30}},{"start":{"line":5897,"column":34},"end":{"line":5897,"column":51}}]},"534":{"line":5899,"type":"if","locations":[{"start":{"line":5899,"column":6},"end":{"line":5899,"column":6}},{"start":{"line":5899,"column":6},"end":{"line":5899,"column":6}}]},"535":{"line":5899,"type":"binary-expr","locations":[{"start":{"line":5899,"column":10},"end":{"line":5899,"column":17}},{"start":{"line":5899,"column":22},"end":{"line":5899,"column":30}},{"start":{"line":5899,"column":34},"end":{"line":5899,"column":53}}]},"536":{"line":5900,"type":"if","locations":[{"start":{"line":5900,"column":8},"end":{"line":5900,"column":8}},{"start":{"line":5900,"column":8},"end":{"line":5900,"column":8}}]},"537":{"line":5908,"type":"if","locations":[{"start":{"line":5908,"column":6},"end":{"line":5908,"column":6}},{"start":{"line":5908,"column":6},"end":{"line":5908,"column":6}}]},"538":{"line":5910,"type":"if","locations":[{"start":{"line":5910,"column":13},"end":{"line":5910,"column":13}},{"start":{"line":5910,"column":13},"end":{"line":5910,"column":13}}]},"539":{"line":5910,"type":"binary-expr","locations":[{"start":{"line":5910,"column":17},"end":{"line":5910,"column":34}},{"start":{"line":5910,"column":38},"end":{"line":5910,"column":56}}]},"540":{"line":5918,"type":"if","locations":[{"start":{"line":5918,"column":8},"end":{"line":5918,"column":8}},{"start":{"line":5918,"column":8},"end":{"line":5918,"column":8}}]},"541":{"line":5926,"type":"if","locations":[{"start":{"line":5926,"column":12},"end":{"line":5926,"column":12}},{"start":{"line":5926,"column":12},"end":{"line":5926,"column":12}}]},"542":{"line":5926,"type":"binary-expr","locations":[{"start":{"line":5926,"column":16},"end":{"line":5926,"column":21}},{"start":{"line":5926,"column":25},"end":{"line":5926,"column":33}}]},"543":{"line":5927,"type":"if","locations":[{"start":{"line":5927,"column":14},"end":{"line":5927,"column":14}},{"start":{"line":5927,"column":14},"end":{"line":5927,"column":14}}]},"544":{"line":5927,"type":"binary-expr","locations":[{"start":{"line":5927,"column":18},"end":{"line":5927,"column":34}},{"start":{"line":5927,"column":38},"end":{"line":5927,"column":54}}]},"545":{"line":5985,"type":"binary-expr","locations":[{"start":{"line":5985,"column":14},"end":{"line":5985,"column":38}},{"start":{"line":5985,"column":42},"end":{"line":5985,"column":45}},{"start":{"line":5985,"column":49},"end":{"line":5987,"column":5}}]},"546":{"line":6008,"type":"cond-expr","locations":[{"start":{"line":6008,"column":60},"end":{"line":6008,"column":74}},{"start":{"line":6008,"column":77},"end":{"line":6011,"column":5}}]},"547":{"line":6010,"type":"cond-expr","locations":[{"start":{"line":6010,"column":46},"end":{"line":6010,"column":88}},{"start":{"line":6010,"column":91},"end":{"line":6010,"column":96}}]},"548":{"line":6010,"type":"binary-expr","locations":[{"start":{"line":6010,"column":98},"end":{"line":6010,"column":103}},{"start":{"line":6010,"column":107},"end":{"line":6010,"column":108}}]},"549":{"line":6074,"type":"if","locations":[{"start":{"line":6074,"column":6},"end":{"line":6074,"column":6}},{"start":{"line":6074,"column":6},"end":{"line":6074,"column":6}}]},"550":{"line":6075,"type":"if","locations":[{"start":{"line":6075,"column":8},"end":{"line":6075,"column":8}},{"start":{"line":6075,"column":8},"end":{"line":6075,"column":8}}]},"551":{"line":6075,"type":"binary-expr","locations":[{"start":{"line":6075,"column":12},"end":{"line":6075,"column":35}},{"start":{"line":6075,"column":39},"end":{"line":6075,"column":44}}]},"552":{"line":6079,"type":"if","locations":[{"start":{"line":6079,"column":13},"end":{"line":6079,"column":13}},{"start":{"line":6079,"column":13},"end":{"line":6079,"column":13}}]},"553":{"line":6079,"type":"binary-expr","locations":[{"start":{"line":6079,"column":17},"end":{"line":6079,"column":23}},{"start":{"line":6079,"column":27},"end":{"line":6079,"column":50}}]},"554":{"line":6084,"type":"if","locations":[{"start":{"line":6084,"column":6},"end":{"line":6084,"column":6}},{"start":{"line":6084,"column":6},"end":{"line":6084,"column":6}}]},"555":{"line":6084,"type":"binary-expr","locations":[{"start":{"line":6084,"column":10},"end":{"line":6084,"column":15}},{"start":{"line":6084,"column":19},"end":{"line":6084,"column":24}}]},"556":{"line":6087,"type":"binary-expr","locations":[{"start":{"line":6087,"column":12},"end":{"line":6087,"column":16}},{"start":{"line":6087,"column":20},"end":{"line":6087,"column":21}}]},"557":{"line":6088,"type":"if","locations":[{"start":{"line":6088,"column":6},"end":{"line":6088,"column":6}},{"start":{"line":6088,"column":6},"end":{"line":6088,"column":6}}]},"558":{"line":6092,"type":"binary-expr","locations":[{"start":{"line":6092,"column":14},"end":{"line":6092,"column":18}},{"start":{"line":6092,"column":22},"end":{"line":6092,"column":23}}]},"559":{"line":6094,"type":"if","locations":[{"start":{"line":6094,"column":6},"end":{"line":6094,"column":6}},{"start":{"line":6094,"column":6},"end":{"line":6094,"column":6}}]},"560":{"line":6094,"type":"binary-expr","locations":[{"start":{"line":6094,"column":10},"end":{"line":6094,"column":18}},{"start":{"line":6094,"column":22},"end":{"line":6094,"column":29}},{"start":{"line":6094,"column":33},"end":{"line":6094,"column":40}}]},"561":{"line":6129,"type":"if","locations":[{"start":{"line":6129,"column":6},"end":{"line":6129,"column":6}},{"start":{"line":6129,"column":6},"end":{"line":6129,"column":6}}]},"562":{"line":6131,"type":"cond-expr","locations":[{"start":{"line":6131,"column":35},"end":{"line":6131,"column":48}},{"start":{"line":6131,"column":51},"end":{"line":6131,"column":56}}]},"563":{"line":6227,"type":"binary-expr","locations":[{"start":{"line":6227,"column":20},"end":{"line":6227,"column":24}},{"start":{"line":6227,"column":28},"end":{"line":6227,"column":30}}]},"564":{"line":6238,"type":"binary-expr","locations":[{"start":{"line":6238,"column":24},"end":{"line":6238,"column":43}},{"start":{"line":6238,"column":47},"end":{"line":6238,"column":56}}]},"565":{"line":6243,"type":"binary-expr","locations":[{"start":{"line":6243,"column":9},"end":{"line":6243,"column":23}},{"start":{"line":6243,"column":27},"end":{"line":6243,"column":36}}]},"566":{"line":6245,"type":"cond-expr","locations":[{"start":{"line":6245,"column":41},"end":{"line":6245,"column":53}},{"start":{"line":6245,"column":56},"end":{"line":6245,"column":65}}]},"567":{"line":6246,"type":"binary-expr","locations":[{"start":{"line":6246,"column":9},"end":{"line":6246,"column":25}},{"start":{"line":6246,"column":29},"end":{"line":6246,"column":38}}]},"568":{"line":6250,"type":"binary-expr","locations":[{"start":{"line":6250,"column":8},"end":{"line":6250,"column":24}},{"start":{"line":6250,"column":29},"end":{"line":6250,"column":63}}]},"569":{"line":6256,"type":"if","locations":[{"start":{"line":6256,"column":8},"end":{"line":6256,"column":8}},{"start":{"line":6256,"column":8},"end":{"line":6256,"column":8}}]},"570":{"line":6259,"type":"if","locations":[{"start":{"line":6259,"column":8},"end":{"line":6259,"column":8}},{"start":{"line":6259,"column":8},"end":{"line":6259,"column":8}}]},"571":{"line":6263,"type":"if","locations":[{"start":{"line":6263,"column":8},"end":{"line":6263,"column":8}},{"start":{"line":6263,"column":8},"end":{"line":6263,"column":8}}]},"572":{"line":6280,"type":"if","locations":[{"start":{"line":6280,"column":6},"end":{"line":6280,"column":6}},{"start":{"line":6280,"column":6},"end":{"line":6280,"column":6}}]},"573":{"line":6285,"type":"cond-expr","locations":[{"start":{"line":6285,"column":31},"end":{"line":6285,"column":71}},{"start":{"line":6285,"column":74},"end":{"line":6285,"column":80}}]},"574":{"line":6291,"type":"cond-expr","locations":[{"start":{"line":6291,"column":23},"end":{"line":6291,"column":25}},{"start":{"line":6291,"column":28},"end":{"line":6291,"column":71}}]},"575":{"line":6293,"type":"cond-expr","locations":[{"start":{"line":6294,"column":12},"end":{"line":6295,"column":67}},{"start":{"line":6296,"column":12},"end":{"line":6296,"column":17}}]},"576":{"line":6303,"type":"binary-expr","locations":[{"start":{"line":6303,"column":48},"end":{"line":6303,"column":65}},{"start":{"line":6303,"column":69},"end":{"line":6303,"column":123}}]},"577":{"line":6311,"type":"if","locations":[{"start":{"line":6311,"column":6},"end":{"line":6311,"column":6}},{"start":{"line":6311,"column":6},"end":{"line":6311,"column":6}}]},"578":{"line":6345,"type":"cond-expr","locations":[{"start":{"line":6345,"column":26},"end":{"line":6345,"column":27}},{"start":{"line":6345,"column":30},"end":{"line":6345,"column":31}}]},"579":{"line":6372,"type":"cond-expr","locations":[{"start":{"line":6372,"column":30},"end":{"line":6372,"column":32}},{"start":{"line":6372,"column":35},"end":{"line":6372,"column":90}}]},"580":{"line":6393,"type":"cond-expr","locations":[{"start":{"line":6393,"column":37},"end":{"line":6393,"column":39}},{"start":{"line":6393,"column":42},"end":{"line":6393,"column":48}}]},"581":{"line":6671,"type":"if","locations":[{"start":{"line":6671,"column":8},"end":{"line":6671,"column":8}},{"start":{"line":6671,"column":8},"end":{"line":6671,"column":8}}]},"582":{"line":6691,"type":"if","locations":[{"start":{"line":6691,"column":6},"end":{"line":6691,"column":6}},{"start":{"line":6691,"column":6},"end":{"line":6691,"column":6}}]},"583":{"line":6696,"type":"cond-expr","locations":[{"start":{"line":6697,"column":14},"end":{"line":6697,"column":20}},{"start":{"line":6698,"column":14},"end":{"line":6698,"column":49}}]},"584":{"line":6696,"type":"binary-expr","locations":[{"start":{"line":6696,"column":17},"end":{"line":6696,"column":26}},{"start":{"line":6696,"column":31},"end":{"line":6696,"column":40}},{"start":{"line":6696,"column":45},"end":{"line":6696,"column":50}},{"start":{"line":6696,"column":54},"end":{"line":6696,"column":95}}]},"585":{"line":6696,"type":"binary-expr","locations":[{"start":{"line":6696,"column":56},"end":{"line":6696,"column":68}},{"start":{"line":6696,"column":72},"end":{"line":6696,"column":94}}]},"586":{"line":6727,"type":"cond-expr","locations":[{"start":{"line":6728,"column":12},"end":{"line":6728,"column":47}},{"start":{"line":6729,"column":12},"end":{"line":6729,"column":18}}]},"587":{"line":6759,"type":"if","locations":[{"start":{"line":6759,"column":2},"end":{"line":6759,"column":2}},{"start":{"line":6759,"column":2},"end":{"line":6759,"column":2}}]},"588":{"line":6759,"type":"binary-expr","locations":[{"start":{"line":6759,"column":6},"end":{"line":6759,"column":33}},{"start":{"line":6759,"column":37},"end":{"line":6759,"column":66}},{"start":{"line":6759,"column":70},"end":{"line":6759,"column":80}}]},"589":{"line":6772,"type":"if","locations":[{"start":{"line":6772,"column":7},"end":{"line":6772,"column":7}},{"start":{"line":6772,"column":7},"end":{"line":6772,"column":7}}]},"590":{"line":6772,"type":"binary-expr","locations":[{"start":{"line":6772,"column":11},"end":{"line":6772,"column":22}},{"start":{"line":6772,"column":26},"end":{"line":6772,"column":36}}]},"591":{"line":6774,"type":"if","locations":[{"start":{"line":6774,"column":4},"end":{"line":6774,"column":4}},{"start":{"line":6774,"column":4},"end":{"line":6774,"column":4}}]}},"code":["/**"," * @license"," * Lo-Dash 2.4.2 (Custom Build) <https://lodash.com/>"," * Build: `lodash modern -o ./dist/lodash.js`"," * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>"," * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>"," * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors"," * Available under MIT license <https://lodash.com/license>"," */",";(function() {","","  /** Used as a safe reference for `undefined` in pre ES5 environments */","  var undefined;","","  /** Used to pool arrays and objects used internally */","  var arrayPool = [],","      objectPool = [];","","  /** Used to generate unique IDs */","  var idCounter = 0;","","  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */","  var keyPrefix = +new Date + '';","","  /** Used as the size when optimizations are enabled for large arrays */","  var largeArraySize = 75;","","  /** Used as the max size of the `arrayPool` and `objectPool` */","  var maxPoolSize = 40;","","  /** Used to detect and test whitespace */","  var whitespace = (","    // whitespace","    ' \\t\\x0B\\f\\xA0\\ufeff' +","","    // line terminators","    '\\n\\r\\u2028\\u2029' +","","    // unicode category \"Zs\" space separators","    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'","  );","","  /** Used to match empty string literals in compiled template source */","  var reEmptyStringLeading = /\\b__p \\+= '';/g,","      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,","      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;","","  /**","   * Used to match ES6 template delimiters","   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals","   */","  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;","","  /** Used to match regexp flags from their coerced string values */","  var reFlags = /\\w*$/;","","  /** Used to detected named functions */","  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;","","  /** Used to match \"interpolate\" template delimiters */","  var reInterpolate = /<%=([\\s\\S]+?)%>/g;","","  /** Used to match leading whitespace and zeros to be removed */","  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');","","  /** Used to ensure capturing order of template delimiters */","  var reNoMatch = /($^)/;","","  /** Used to detect functions containing a `this` reference */","  var reThis = /\\bthis\\b/;","","  /** Used to match unescaped characters in compiled string literals */","  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;","","  /** Used to assign default `context` object properties */","  var contextProps = [","    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',","    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',","    'parseInt', 'setTimeout'","  ];","","  /** Used to make template sourceURLs easier to identify */","  var templateCounter = 0;","","  /** `Object#toString` result shortcuts */","  var argsClass = '[object Arguments]',","      arrayClass = '[object Array]',","      boolClass = '[object Boolean]',","      dateClass = '[object Date]',","      funcClass = '[object Function]',","      numberClass = '[object Number]',","      objectClass = '[object Object]',","      regexpClass = '[object RegExp]',","      stringClass = '[object String]';","","  /** Used to identify object classifications that `_.clone` supports */","  var cloneableClasses = {};","  cloneableClasses[funcClass] = false;","  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =","  cloneableClasses[boolClass] = cloneableClasses[dateClass] =","  cloneableClasses[numberClass] = cloneableClasses[objectClass] =","  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;","","  /** Used as an internal `_.debounce` options object */","  var debounceOptions = {","    'leading': false,","    'maxWait': 0,","    'trailing': false","  };","","  /** Used as the property descriptor for `__bindData__` */","  var descriptor = {","    'configurable': false,","    'enumerable': false,","    'value': null,","    'writable': false","  };","","  /** Used to determine if values are of the language type Object */","  var objectTypes = {","    'boolean': false,","    'function': true,","    'object': true,","    'number': false,","    'string': false,","    'undefined': false","  };","","  /** Used to escape characters for inclusion in compiled string literals */","  var stringEscapes = {","    '\\\\': '\\\\',","    \"'\": \"'\",","    '\\n': 'n',","    '\\r': 'r',","    '\\t': 't',","    '\\u2028': 'u2028',","    '\\u2029': 'u2029'","  };","","  /** Used as a reference to the global object */","  var root = (objectTypes[typeof window] && window) || this;","","  /** Detect free variable `exports` */","  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;","","  /** Detect free variable `module` */","  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;","","  /** Detect the popular CommonJS extension `module.exports` */","  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;","","  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */","  var freeGlobal = objectTypes[typeof global] && global;","  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {","    root = freeGlobal;","  }","","  /*--------------------------------------------------------------------------*/","","  /**","   * The base implementation of `_.indexOf` without support for binary searches","   * or `fromIndex` constraints.","   *","   * @private","   * @param {Array} array The array to search.","   * @param {*} value The value to search for.","   * @param {number} [fromIndex=0] The index to search from.","   * @returns {number} Returns the index of the matched value or `-1`.","   */","  function baseIndexOf(array, value, fromIndex) {","    var index = (fromIndex || 0) - 1,","        length = array ? array.length : 0;","","    while (++index < length) {","      if (array[index] === value) {","        return index;","      }","    }","    return -1;","  }","","  /**","   * An implementation of `_.contains` for cache objects that mimics the return","   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.","   *","   * @private","   * @param {Object} cache The cache object to inspect.","   * @param {*} value The value to search for.","   * @returns {number} Returns `0` if `value` is found, else `-1`.","   */","  function cacheIndexOf(cache, value) {","    var type = typeof value;","    cache = cache.cache;","","    if (type == 'boolean' || value == null) {","      return cache[value] ? 0 : -1;","    }","    if (type != 'number' && type != 'string') {","      type = 'object';","    }","    var key = type == 'number' ? value : keyPrefix + value;","    cache = (cache = cache[type]) && cache[key];","","    return type == 'object'","      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)","      : (cache ? 0 : -1);","  }","","  /**","   * Adds a given value to the corresponding cache object.","   *","   * @private","   * @param {*} value The value to add to the cache.","   */","  function cachePush(value) {","    var cache = this.cache,","        type = typeof value;","","    if (type == 'boolean' || value == null) {","      cache[value] = true;","    } else {","      if (type != 'number' && type != 'string') {","        type = 'object';","      }","      var key = type == 'number' ? value : keyPrefix + value,","          typeCache = cache[type] || (cache[type] = {});","","      if (type == 'object') {","        (typeCache[key] || (typeCache[key] = [])).push(value);","      } else {","        typeCache[key] = true;","      }","    }","  }","","  /**","   * Used by `_.max` and `_.min` as the default callback when a given","   * collection is a string value.","   *","   * @private","   * @param {string} value The character to inspect.","   * @returns {number} Returns the code unit of given character.","   */","  function charAtCallback(value) {","    return value.charCodeAt(0);","  }","","  /**","   * Used by `sortBy` to compare transformed `collection` elements, stable sorting","   * them in ascending order.","   *","   * @private","   * @param {Object} a The object to compare to `b`.","   * @param {Object} b The object to compare to `a`.","   * @returns {number} Returns the sort order indicator of `1` or `-1`.","   */","  function compareAscending(a, b) {","    var ac = a.criteria,","        bc = b.criteria,","        index = -1,","        length = ac.length;","","    while (++index < length) {","      var value = ac[index],","          other = bc[index];","","      if (value !== other) {","        if (value > other || typeof value == 'undefined') {","          return 1;","        }","        if (value < other || typeof other == 'undefined') {","          return -1;","        }","      }","    }","    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications","    // that causes it, under certain circumstances, to return the same value for","    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247","    //","    // This also ensures a stable sort in V8 and other engines.","    // See http://code.google.com/p/v8/issues/detail?id=90","    return a.index - b.index;","  }","","  /**","   * Creates a cache object to optimize linear searches of large arrays.","   *","   * @private","   * @param {Array} [array=[]] The array to search.","   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.","   */","  function createCache(array) {","    var index = -1,","        length = array.length,","        first = array[0],","        mid = array[(length / 2) | 0],","        last = array[length - 1];","","    if (first && typeof first == 'object' &&","        mid && typeof mid == 'object' && last && typeof last == 'object') {","      return false;","    }","    var cache = getObject();","    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;","","    var result = getObject();","    result.array = array;","    result.cache = cache;","    result.push = cachePush;","","    while (++index < length) {","      result.push(array[index]);","    }","    return result;","  }","","  /**","   * Used by `template` to escape characters for inclusion in compiled","   * string literals.","   *","   * @private","   * @param {string} match The matched character to escape.","   * @returns {string} Returns the escaped character.","   */","  function escapeStringChar(match) {","    return '\\\\' + stringEscapes[match];","  }","","  /**","   * Gets an array from the array pool or creates a new one if the pool is empty.","   *","   * @private","   * @returns {Array} The array from the pool.","   */","  function getArray() {","    return arrayPool.pop() || [];","  }","","  /**","   * Gets an object from the object pool or creates a new one if the pool is empty.","   *","   * @private","   * @returns {Object} The object from the pool.","   */","  function getObject() {","    return objectPool.pop() || {","      'array': null,","      'cache': null,","      'criteria': null,","      'false': false,","      'index': 0,","      'null': false,","      'number': null,","      'object': null,","      'push': null,","      'string': null,","      'true': false,","      'undefined': false,","      'value': null","    };","  }","","  /**","   * Releases the given array back to the array pool.","   *","   * @private","   * @param {Array} [array] The array to release.","   */","  function releaseArray(array) {","    array.length = 0;","    if (arrayPool.length < maxPoolSize) {","      arrayPool.push(array);","    }","  }","","  /**","   * Releases the given object back to the object pool.","   *","   * @private","   * @param {Object} [object] The object to release.","   */","  function releaseObject(object) {","    var cache = object.cache;","    if (cache) {","      releaseObject(cache);","    }","    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;","    if (objectPool.length < maxPoolSize) {","      objectPool.push(object);","    }","  }","","  /**","   * Slices the `collection` from the `start` index up to, but not including,","   * the `end` index.","   *","   * Note: This function is used instead of `Array#slice` to support node lists","   * in IE < 9 and to ensure dense arrays are returned.","   *","   * @private","   * @param {Array|Object|string} collection The collection to slice.","   * @param {number} start The start index.","   * @param {number} end The end index.","   * @returns {Array} Returns the new array.","   */","  function slice(array, start, end) {","    start || (start = 0);","    if (typeof end == 'undefined') {","      end = array ? array.length : 0;","    }","    var index = -1,","        length = end - start || 0,","        result = Array(length < 0 ? 0 : length);","","    while (++index < length) {","      result[index] = array[start + index];","    }","    return result;","  }","","  /*--------------------------------------------------------------------------*/","","  /**","   * Create a new `lodash` function using the given context object.","   *","   * @static","   * @memberOf _","   * @category Utilities","   * @param {Object} [context=root] The context object.","   * @returns {Function} Returns the `lodash` function.","   */","  function runInContext(context) {","    // Avoid issues with some ES3 environments that attempt to use values, named","    // after built-in constructors like `Object`, for the creation of literals.","    // ES5 clears this up by stating that literals must use built-in constructors.","    // See http://es5.github.io/#x11.1.5.","    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;","","    /** Native constructor references */","    var Array = context.Array,","        Boolean = context.Boolean,","        Date = context.Date,","        Function = context.Function,","        Math = context.Math,","        Number = context.Number,","        Object = context.Object,","        RegExp = context.RegExp,","        String = context.String,","        TypeError = context.TypeError;","","    /**","     * Used for `Array` method references.","     *","     * Normally `Array.prototype` would suffice, however, using an array literal","     * avoids issues in Narwhal.","     */","    var arrayRef = [];","","    /** Used for native method references */","    var objectProto = Object.prototype;","","    /** Used to restore the original `_` reference in `noConflict` */","    var oldDash = context._;","","    /** Used to resolve the internal [[Class]] of values */","    var toString = objectProto.toString;","","    /** Used to detect if a method is native */","    var reNative = RegExp('^' +","      String(toString)","        .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')","        .replace(/toString| for [^\\]]+/g, '.*?') + '$'","    );","","    /** Native method shortcuts */","    var ceil = Math.ceil,","        clearTimeout = context.clearTimeout,","        floor = Math.floor,","        fnToString = Function.prototype.toString,","        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,","        hasOwnProperty = objectProto.hasOwnProperty,","        push = arrayRef.push,","        setTimeout = context.setTimeout,","        splice = arrayRef.splice,","        unshift = arrayRef.unshift;","","    /** Used to set meta data on functions */","    var defineProperty = (function() {","      // IE 8 only accepts DOM elements","      try {","        var o = {},","            func = isNative(func = Object.defineProperty) && func,","            result = func(o, o, o) && func;","      } catch(e) { }","      return result;","    }());","","    /* Native method shortcuts for methods with the same name as other `lodash` methods */","    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,","        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,","        nativeIsFinite = context.isFinite,","        nativeIsNaN = context.isNaN,","        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,","        nativeMax = Math.max,","        nativeMin = Math.min,","        nativeParseInt = context.parseInt,","        nativeRandom = Math.random;","","    /** Used to lookup a built-in constructor by [[Class]] */","    var ctorByClass = {};","    ctorByClass[arrayClass] = Array;","    ctorByClass[boolClass] = Boolean;","    ctorByClass[dateClass] = Date;","    ctorByClass[funcClass] = Function;","    ctorByClass[objectClass] = Object;","    ctorByClass[numberClass] = Number;","    ctorByClass[regexpClass] = RegExp;","    ctorByClass[stringClass] = String;","","    /*--------------------------------------------------------------------------*/","","    /**","     * Creates a `lodash` object which wraps the given value to enable intuitive","     * method chaining.","     *","     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:","     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,","     * and `unshift`","     *","     * Chaining is supported in custom builds as long as the `value` method is","     * implicitly or explicitly included in the build.","     *","     * The chainable wrapper functions are:","     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,","     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,","     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,","     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,","     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,","     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,","     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,","     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,","     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,","     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,","     * and `zip`","     *","     * The non-chainable wrapper functions are:","     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,","     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,","     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,","     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,","     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,","     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,","     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,","     * `template`, `unescape`, `uniqueId`, and `value`","     *","     * The wrapper functions `first` and `last` return wrapped values when `n` is","     * provided, otherwise they return unwrapped values.","     *","     * Explicit chaining can be enabled by using the `_.chain` method.","     *","     * @name _","     * @constructor","     * @category Chaining","     * @param {*} value The value to wrap in a `lodash` instance.","     * @returns {Object} Returns a `lodash` instance.","     * @example","     *","     * var wrapped = _([1, 2, 3]);","     *","     * // returns an unwrapped value","     * wrapped.reduce(function(sum, num) {","     *   return sum + num;","     * });","     * // => 6","     *","     * // returns a wrapped value","     * var squares = wrapped.map(function(num) {","     *   return num * num;","     * });","     *","     * _.isArray(squares);","     * // => false","     *","     * _.isArray(squares.value());","     * // => true","     */","    function lodash(value) {","      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor","      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))","       ? value","       : new lodashWrapper(value);","    }","","    /**","     * A fast path for creating `lodash` wrapper objects.","     *","     * @private","     * @param {*} value The value to wrap in a `lodash` instance.","     * @param {boolean} chainAll A flag to enable chaining for all methods","     * @returns {Object} Returns a `lodash` instance.","     */","    function lodashWrapper(value, chainAll) {","      this.__chain__ = !!chainAll;","      this.__wrapped__ = value;","    }","    // ensure `new lodashWrapper` is an instance of `lodash`","    lodashWrapper.prototype = lodash.prototype;","","    /**","     * An object used to flag environments features.","     *","     * @static","     * @memberOf _","     * @type Object","     */","    var support = lodash.support = {};","","    /**","     * Detect if functions can be decompiled by `Function#toString`","     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).","     *","     * @memberOf _.support","     * @type boolean","     */","    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);","","    /**","     * Detect if `Function#name` is supported (all but IE).","     *","     * @memberOf _.support","     * @type boolean","     */","    support.funcNames = typeof Function.name == 'string';","","    /**","     * By default, the template delimiters used by Lo-Dash are similar to those in","     * embedded Ruby (ERB). Change the following template settings to use alternative","     * delimiters.","     *","     * @static","     * @memberOf _","     * @type Object","     */","    lodash.templateSettings = {","","      /**","       * Used to detect `data` property values to be HTML-escaped.","       *","       * @memberOf _.templateSettings","       * @type RegExp","       */","      'escape': /<%-([\\s\\S]+?)%>/g,","","      /**","       * Used to detect code to be evaluated.","       *","       * @memberOf _.templateSettings","       * @type RegExp","       */","      'evaluate': /<%([\\s\\S]+?)%>/g,","","      /**","       * Used to detect `data` property values to inject.","       *","       * @memberOf _.templateSettings","       * @type RegExp","       */","      'interpolate': reInterpolate,","","      /**","       * Used to reference the data object in the template text.","       *","       * @memberOf _.templateSettings","       * @type string","       */","      'variable': '',","","      /**","       * Used to import variables into the compiled template.","       *","       * @memberOf _.templateSettings","       * @type Object","       */","      'imports': {","","        /**","         * A reference to the `lodash` function.","         *","         * @memberOf _.templateSettings.imports","         * @type Function","         */","        '_': lodash","      }","    };","","    /*--------------------------------------------------------------------------*/","","    /**","     * The base implementation of `_.bind` that creates the bound function and","     * sets its meta data.","     *","     * @private","     * @param {Array} bindData The bind data array.","     * @returns {Function} Returns the new bound function.","     */","    function baseBind(bindData) {","      var func = bindData[0],","          partialArgs = bindData[2],","          thisArg = bindData[4];","","      function bound() {","        // `Function#bind` spec","        // http://es5.github.io/#x15.3.4.5","        if (partialArgs) {","          // avoid `arguments` object deoptimizations by using `slice` instead","          // of `Array.prototype.slice.call` and not assigning `arguments` to a","          // variable as a ternary expression","          var args = slice(partialArgs);","          push.apply(args, arguments);","        }","        // mimic the constructor's `return` behavior","        // http://es5.github.io/#x13.2.2","        if (this instanceof bound) {","          // ensure `new bound` is an instance of `func`","          var thisBinding = baseCreate(func.prototype),","              result = func.apply(thisBinding, args || arguments);","          return isObject(result) ? result : thisBinding;","        }","        return func.apply(thisArg, args || arguments);","      }","      setBindData(bound, bindData);","      return bound;","    }","","    /**","     * The base implementation of `_.clone` without argument juggling or support","     * for `thisArg` binding.","     *","     * @private","     * @param {*} value The value to clone.","     * @param {boolean} [isDeep=false] Specify a deep clone.","     * @param {Function} [callback] The function to customize cloning values.","     * @param {Array} [stackA=[]] Tracks traversed source objects.","     * @param {Array} [stackB=[]] Associates clones with source counterparts.","     * @returns {*} Returns the cloned value.","     */","    function baseClone(value, isDeep, callback, stackA, stackB) {","      if (callback) {","        var result = callback(value);","        if (typeof result != 'undefined') {","          return result;","        }","      }","      // inspect [[Class]]","      var isObj = isObject(value);","      if (isObj) {","        var className = toString.call(value);","        if (!cloneableClasses[className]) {","          return value;","        }","        var ctor = ctorByClass[className];","        switch (className) {","          case boolClass:","          case dateClass:","            return new ctor(+value);","","          case numberClass:","          case stringClass:","            return new ctor(value);","","          case regexpClass:","            result = ctor(value.source, reFlags.exec(value));","            result.lastIndex = value.lastIndex;","            return result;","        }","      } else {","        return value;","      }","      var isArr = isArray(value);","      if (isDeep) {","        // check for circular references and return corresponding clone","        var initedStack = !stackA;","        stackA || (stackA = getArray());","        stackB || (stackB = getArray());","","        var length = stackA.length;","        while (length--) {","          if (stackA[length] == value) {","            return stackB[length];","          }","        }","        result = isArr ? ctor(value.length) : {};","      }","      else {","        result = isArr ? slice(value) : assign({}, value);","      }","      // add array properties assigned by `RegExp#exec`","      if (isArr) {","        if (hasOwnProperty.call(value, 'index')) {","          result.index = value.index;","        }","        if (hasOwnProperty.call(value, 'input')) {","          result.input = value.input;","        }","      }","      // exit for shallow clone","      if (!isDeep) {","        return result;","      }","      // add the source value to the stack of traversed objects","      // and associate it with its clone","      stackA.push(value);","      stackB.push(result);","","      // recursively populate clone (susceptible to call stack limits)","      (isArr ? forEach : forOwn)(value, function(objValue, key) {","        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);","      });","","      if (initedStack) {","        releaseArray(stackA);","        releaseArray(stackB);","      }","      return result;","    }","","    /**","     * The base implementation of `_.create` without support for assigning","     * properties to the created object.","     *","     * @private","     * @param {Object} prototype The object to inherit from.","     * @returns {Object} Returns the new object.","     */","    function baseCreate(prototype, properties) {","      return isObject(prototype) ? nativeCreate(prototype) : {};","    }","    // fallback for browsers without `Object.create`","    if (!nativeCreate) {","      baseCreate = (function() {","        function Object() {}","        return function(prototype) {","          if (isObject(prototype)) {","            Object.prototype = prototype;","            var result = new Object;","            Object.prototype = null;","          }","          return result || context.Object();","        };","      }());","    }","","    /**","     * The base implementation of `_.createCallback` without support for creating","     * \"_.pluck\" or \"_.where\" style callbacks.","     *","     * @private","     * @param {*} [func=identity] The value to convert to a callback.","     * @param {*} [thisArg] The `this` binding of the created callback.","     * @param {number} [argCount] The number of arguments the callback accepts.","     * @returns {Function} Returns a callback function.","     */","    function baseCreateCallback(func, thisArg, argCount) {","      if (typeof func != 'function') {","        return identity;","      }","      // exit early for no `thisArg` or already bound by `Function#bind`","      if (typeof thisArg == 'undefined' || !('prototype' in func)) {","        return func;","      }","      var bindData = func.__bindData__;","      if (typeof bindData == 'undefined') {","        if (support.funcNames) {","          bindData = !func.name;","        }","        bindData = bindData || !support.funcDecomp;","        if (!bindData) {","          var source = fnToString.call(func);","          if (!support.funcNames) {","            bindData = !reFuncName.test(source);","          }","          if (!bindData) {","            // checks if `func` references the `this` keyword and stores the result","            bindData = reThis.test(source);","            setBindData(func, bindData);","          }","        }","      }","      // exit early if there are no `this` references or `func` is bound","      if (bindData === false || (bindData !== true && bindData[1] & 1)) {","        return func;","      }","      switch (argCount) {","        case 1: return function(value) {","          return func.call(thisArg, value);","        };","        case 2: return function(a, b) {","          return func.call(thisArg, a, b);","        };","        case 3: return function(value, index, collection) {","          return func.call(thisArg, value, index, collection);","        };","        case 4: return function(accumulator, value, index, collection) {","          return func.call(thisArg, accumulator, value, index, collection);","        };","      }","      return bind(func, thisArg);","    }","","    /**","     * The base implementation of `createWrapper` that creates the wrapper and","     * sets its meta data.","     *","     * @private","     * @param {Array} bindData The bind data array.","     * @returns {Function} Returns the new function.","     */","    function baseCreateWrapper(bindData) {","      var func = bindData[0],","          bitmask = bindData[1],","          partialArgs = bindData[2],","          partialRightArgs = bindData[3],","          thisArg = bindData[4],","          arity = bindData[5];","","      var isBind = bitmask & 1,","          isBindKey = bitmask & 2,","          isCurry = bitmask & 4,","          isCurryBound = bitmask & 8,","          key = func;","","      function bound() {","        var thisBinding = isBind ? thisArg : this;","        if (partialArgs) {","          var args = slice(partialArgs);","          push.apply(args, arguments);","        }","        if (partialRightArgs || isCurry) {","          args || (args = slice(arguments));","          if (partialRightArgs) {","            push.apply(args, partialRightArgs);","          }","          if (isCurry && args.length < arity) {","            bitmask |= 16 & ~32;","            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);","          }","        }","        args || (args = arguments);","        if (isBindKey) {","          func = thisBinding[key];","        }","        if (this instanceof bound) {","          thisBinding = baseCreate(func.prototype);","          var result = func.apply(thisBinding, args);","          return isObject(result) ? result : thisBinding;","        }","        return func.apply(thisBinding, args);","      }","      setBindData(bound, bindData);","      return bound;","    }","","    /**","     * The base implementation of `_.difference` that accepts a single array","     * of values to exclude.","     *","     * @private","     * @param {Array} array The array to process.","     * @param {Array} [values] The array of values to exclude.","     * @returns {Array} Returns a new array of filtered values.","     */","    function baseDifference(array, values) {","      var index = -1,","          indexOf = getIndexOf(),","          length = array ? array.length : 0,","          isLarge = length >= largeArraySize && indexOf === baseIndexOf,","          result = [];","","      if (isLarge) {","        var cache = createCache(values);","        if (cache) {","          indexOf = cacheIndexOf;","          values = cache;","        } else {","          isLarge = false;","        }","      }","      while (++index < length) {","        var value = array[index];","        if (indexOf(values, value) < 0) {","          result.push(value);","        }","      }","      if (isLarge) {","        releaseObject(values);","      }","      return result;","    }","","    /**","     * The base implementation of `_.flatten` without support for callback","     * shorthands or `thisArg` binding.","     *","     * @private","     * @param {Array} array The array to flatten.","     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.","     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.","     * @param {number} [fromIndex=0] The index to start from.","     * @returns {Array} Returns a new flattened array.","     */","    function baseFlatten(array, isShallow, isStrict, fromIndex) {","      var index = (fromIndex || 0) - 1,","          length = array ? array.length : 0,","          result = [];","","      while (++index < length) {","        var value = array[index];","","        if (value && typeof value == 'object' && typeof value.length == 'number'","            && (isArray(value) || isArguments(value))) {","          // recursively flatten arrays (susceptible to call stack limits)","          if (!isShallow) {","            value = baseFlatten(value, isShallow, isStrict);","          }","          var valIndex = -1,","              valLength = value.length,","              resIndex = result.length;","","          result.length += valLength;","          while (++valIndex < valLength) {","            result[resIndex++] = value[valIndex];","          }","        } else if (!isStrict) {","          result.push(value);","        }","      }","      return result;","    }","","    /**","     * The base implementation of `_.isEqual`, without support for `thisArg` binding,","     * that allows partial \"_.where\" style comparisons.","     *","     * @private","     * @param {*} a The value to compare.","     * @param {*} b The other value to compare.","     * @param {Function} [callback] The function to customize comparing values.","     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.","     * @param {Array} [stackA=[]] Tracks traversed `a` objects.","     * @param {Array} [stackB=[]] Tracks traversed `b` objects.","     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.","     */","    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {","      // used to indicate that when comparing objects, `a` has at least the properties of `b`","      if (callback) {","        var result = callback(a, b);","        if (typeof result != 'undefined') {","          return !!result;","        }","      }","      // exit early for identical values","      if (a === b) {","        // treat `+0` vs. `-0` as not equal","        return a !== 0 || (1 / a == 1 / b);","      }","      var type = typeof a,","          otherType = typeof b;","","      // exit early for unlike primitive values","      if (a === a &&","          !(a && objectTypes[type]) &&","          !(b && objectTypes[otherType])) {","        return false;","      }","      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior","      // http://es5.github.io/#x15.3.4.4","      if (a == null || b == null) {","        return a === b;","      }","      // compare [[Class]] names","      var className = toString.call(a),","          otherClass = toString.call(b);","","      if (className == argsClass) {","        className = objectClass;","      }","      if (otherClass == argsClass) {","        otherClass = objectClass;","      }","      if (className != otherClass) {","        return false;","      }","      switch (className) {","        case boolClass:","        case dateClass:","          // coerce dates and booleans to numbers, dates to milliseconds and booleans","          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal","          return +a == +b;","","        case numberClass:","          // treat `NaN` vs. `NaN` as equal","          return (a != +a)","            ? b != +b","            // but treat `+0` vs. `-0` as not equal","            : (a == 0 ? (1 / a == 1 / b) : a == +b);","","        case regexpClass:","        case stringClass:","          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)","          // treat string primitives and their corresponding object instances as equal","          return a == String(b);","      }","      var isArr = className == arrayClass;","      if (!isArr) {","        // unwrap any `lodash` wrapped values","        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),","            bWrapped = hasOwnProperty.call(b, '__wrapped__');","","        if (aWrapped || bWrapped) {","          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);","        }","        // exit for functions and DOM nodes","        if (className != objectClass) {","          return false;","        }","        // in older versions of Opera, `arguments` objects have `Array` constructors","        var ctorA = a.constructor,","            ctorB = b.constructor;","","        // non `Object` object instances with different constructors are not equal","        if (ctorA != ctorB &&","              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&","              ('constructor' in a && 'constructor' in b)","            ) {","          return false;","        }","      }","      // assume cyclic structures are equal","      // the algorithm for detecting cyclic structures is adapted from ES 5.1","      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)","      var initedStack = !stackA;","      stackA || (stackA = getArray());","      stackB || (stackB = getArray());","","      var length = stackA.length;","      while (length--) {","        if (stackA[length] == a) {","          return stackB[length] == b;","        }","      }","      var size = 0;","      result = true;","","      // add `a` and `b` to the stack of traversed objects","      stackA.push(a);","      stackB.push(b);","","      // recursively compare objects and arrays (susceptible to call stack limits)","      if (isArr) {","        // compare lengths to determine if a deep comparison is necessary","        length = a.length;","        size = b.length;","        result = size == length;","","        if (result || isWhere) {","          // deep compare the contents, ignoring non-numeric properties","          while (size--) {","            var index = length,","                value = b[size];","","            if (isWhere) {","              while (index--) {","                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {","                  break;","                }","              }","            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {","              break;","            }","          }","        }","      }","      else {","        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`","        // which, in this case, is more costly","        forIn(b, function(value, key, b) {","          if (hasOwnProperty.call(b, key)) {","            // count the number of properties.","            size++;","            // deep compare each property value.","            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));","          }","        });","","        if (result && !isWhere) {","          // ensure both objects have the same number of properties","          forIn(a, function(value, key, a) {","            if (hasOwnProperty.call(a, key)) {","              // `size` will be `-1` if `a` has more properties than `b`","              return (result = --size > -1);","            }","          });","        }","      }","      stackA.pop();","      stackB.pop();","","      if (initedStack) {","        releaseArray(stackA);","        releaseArray(stackB);","      }","      return result;","    }","","    /**","     * The base implementation of `_.merge` without argument juggling or support","     * for `thisArg` binding.","     *","     * @private","     * @param {Object} object The destination object.","     * @param {Object} source The source object.","     * @param {Function} [callback] The function to customize merging properties.","     * @param {Array} [stackA=[]] Tracks traversed source objects.","     * @param {Array} [stackB=[]] Associates values with source counterparts.","     */","    function baseMerge(object, source, callback, stackA, stackB) {","      (isArray(source) ? forEach : forOwn)(source, function(source, key) {","        var found,","            isArr,","            result = source,","            value = object[key];","","        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {","          // avoid merging previously merged cyclic sources","          var stackLength = stackA.length;","          while (stackLength--) {","            if ((found = stackA[stackLength] == source)) {","              value = stackB[stackLength];","              break;","            }","          }","          if (!found) {","            var isShallow;","            if (callback) {","              result = callback(value, source);","              if ((isShallow = typeof result != 'undefined')) {","                value = result;","              }","            }","            if (!isShallow) {","              value = isArr","                ? (isArray(value) ? value : [])","                : (isPlainObject(value) ? value : {});","            }","            // add `source` and associated `value` to the stack of traversed objects","            stackA.push(source);","            stackB.push(value);","","            // recursively merge objects and arrays (susceptible to call stack limits)","            if (!isShallow) {","              baseMerge(value, source, callback, stackA, stackB);","            }","          }","        }","        else {","          if (callback) {","            result = callback(value, source);","            if (typeof result == 'undefined') {","              result = source;","            }","          }","          if (typeof result != 'undefined') {","            value = result;","          }","        }","        object[key] = value;","      });","    }","","    /**","     * The base implementation of `_.random` without argument juggling or support","     * for returning floating-point numbers.","     *","     * @private","     * @param {number} min The minimum possible value.","     * @param {number} max The maximum possible value.","     * @returns {number} Returns a random number.","     */","    function baseRandom(min, max) {","      return min + floor(nativeRandom() * (max - min + 1));","    }","","    /**","     * The base implementation of `_.uniq` without support for callback shorthands","     * or `thisArg` binding.","     *","     * @private","     * @param {Array} array The array to process.","     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.","     * @param {Function} [callback] The function called per iteration.","     * @returns {Array} Returns a duplicate-value-free array.","     */","    function baseUniq(array, isSorted, callback) {","      var index = -1,","          indexOf = getIndexOf(),","          length = array ? array.length : 0,","          result = [];","","      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,","          seen = (callback || isLarge) ? getArray() : result;","","      if (isLarge) {","        var cache = createCache(seen);","        indexOf = cacheIndexOf;","        seen = cache;","      }","      while (++index < length) {","        var value = array[index],","            computed = callback ? callback(value, index, array) : value;","","        if (isSorted","              ? !index || seen[seen.length - 1] !== computed","              : indexOf(seen, computed) < 0","            ) {","          if (callback || isLarge) {","            seen.push(computed);","          }","          result.push(value);","        }","      }","      if (isLarge) {","        releaseArray(seen.array);","        releaseObject(seen);","      } else if (callback) {","        releaseArray(seen);","      }","      return result;","    }","","    /**","     * Creates a function that aggregates a collection, creating an object composed","     * of keys generated from the results of running each element of the collection","     * through a callback. The given `setter` function sets the keys and values","     * of the composed object.","     *","     * @private","     * @param {Function} setter The setter function.","     * @returns {Function} Returns the new aggregator function.","     */","    function createAggregator(setter) {","      return function(collection, callback, thisArg) {","        var result = {};","        callback = lodash.createCallback(callback, thisArg, 3);","","        var index = -1,","            length = collection ? collection.length : 0;","","        if (typeof length == 'number') {","          while (++index < length) {","            var value = collection[index];","            setter(result, value, callback(value, index, collection), collection);","          }","        } else {","          forOwn(collection, function(value, key, collection) {","            setter(result, value, callback(value, key, collection), collection);","          });","        }","        return result;","      };","    }","","    /**","     * Creates a function that, when called, either curries or invokes `func`","     * with an optional `this` binding and partially applied arguments.","     *","     * @private","     * @param {Function|string} func The function or method name to reference.","     * @param {number} bitmask The bitmask of method flags to compose.","     *  The bitmask may be composed of the following flags:","     *  1 - `_.bind`","     *  2 - `_.bindKey`","     *  4 - `_.curry`","     *  8 - `_.curry` (bound)","     *  16 - `_.partial`","     *  32 - `_.partialRight`","     * @param {Array} [partialArgs] An array of arguments to prepend to those","     *  provided to the new function.","     * @param {Array} [partialRightArgs] An array of arguments to append to those","     *  provided to the new function.","     * @param {*} [thisArg] The `this` binding of `func`.","     * @param {number} [arity] The arity of `func`.","     * @returns {Function} Returns the new function.","     */","    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {","      var isBind = bitmask & 1,","          isBindKey = bitmask & 2,","          isCurry = bitmask & 4,","          isCurryBound = bitmask & 8,","          isPartial = bitmask & 16,","          isPartialRight = bitmask & 32;","","      if (!isBindKey && !isFunction(func)) {","        throw new TypeError;","      }","      if (isPartial && !partialArgs.length) {","        bitmask &= ~16;","        isPartial = partialArgs = false;","      }","      if (isPartialRight && !partialRightArgs.length) {","        bitmask &= ~32;","        isPartialRight = partialRightArgs = false;","      }","      var bindData = func && func.__bindData__;","      if (bindData && bindData !== true) {","        // clone `bindData`","        bindData = slice(bindData);","        if (bindData[2]) {","          bindData[2] = slice(bindData[2]);","        }","        if (bindData[3]) {","          bindData[3] = slice(bindData[3]);","        }","        // set `thisBinding` is not previously bound","        if (isBind && !(bindData[1] & 1)) {","          bindData[4] = thisArg;","        }","        // set if previously bound but not currently (subsequent curried functions)","        if (!isBind && bindData[1] & 1) {","          bitmask |= 8;","        }","        // set curried arity if not yet set","        if (isCurry && !(bindData[1] & 4)) {","          bindData[5] = arity;","        }","        // append partial left arguments","        if (isPartial) {","          push.apply(bindData[2] || (bindData[2] = []), partialArgs);","        }","        // append partial right arguments","        if (isPartialRight) {","          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);","        }","        // merge flags","        bindData[1] |= bitmask;","        return createWrapper.apply(null, bindData);","      }","      // fast path for `_.bind`","      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;","      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);","    }","","    /**","     * Used by `escape` to convert characters to HTML entities.","     *","     * @private","     * @param {string} match The matched character to escape.","     * @returns {string} Returns the escaped character.","     */","    function escapeHtmlChar(match) {","      return htmlEscapes[match];","    }","","    /**","     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is","     * customized, this method returns the custom method, otherwise it returns","     * the `baseIndexOf` function.","     *","     * @private","     * @returns {Function} Returns the \"indexOf\" function.","     */","    function getIndexOf() {","      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;","      return result;","    }","","    /**","     * Checks if `value` is a native function.","     *","     * @private","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.","     */","    function isNative(value) {","      return typeof value == 'function' && reNative.test(value);","    }","","    /**","     * Sets `this` binding data on a given function.","     *","     * @private","     * @param {Function} func The function to set data on.","     * @param {Array} value The data array to set.","     */","    var setBindData = !defineProperty ? noop : function(func, value) {","      descriptor.value = value;","      defineProperty(func, '__bindData__', descriptor);","      descriptor.value = null;","    };","","    /**","     * A fallback implementation of `isPlainObject` which checks if a given value","     * is an object created by the `Object` constructor, assuming objects created","     * by the `Object` constructor have no inherited enumerable properties and that","     * there are no `Object.prototype` extensions.","     *","     * @private","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.","     */","    function shimIsPlainObject(value) {","      var ctor,","          result;","","      // avoid non Object objects, `arguments` objects, and DOM elements","      if (!(value && toString.call(value) == objectClass) ||","          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {","        return false;","      }","      // In most environments an object's own properties are iterated before","      // its inherited properties. If the last iterated property is an object's","      // own property then there are no inherited enumerable properties.","      forIn(value, function(value, key) {","        result = key;","      });","      return typeof result == 'undefined' || hasOwnProperty.call(value, result);","    }","","    /**","     * Used by `unescape` to convert HTML entities to characters.","     *","     * @private","     * @param {string} match The matched character to unescape.","     * @returns {string} Returns the unescaped character.","     */","    function unescapeHtmlChar(match) {","      return htmlUnescapes[match];","    }","","    /*--------------------------------------------------------------------------*/","","    /**","     * Checks if `value` is an `arguments` object.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.","     * @example","     *","     * (function() { return _.isArguments(arguments); })(1, 2, 3);","     * // => true","     *","     * _.isArguments([1, 2, 3]);","     * // => false","     */","    function isArguments(value) {","      return value && typeof value == 'object' && typeof value.length == 'number' &&","        toString.call(value) == argsClass || false;","    }","","    /**","     * Checks if `value` is an array.","     *","     * @static","     * @memberOf _","     * @type Function","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.","     * @example","     *","     * (function() { return _.isArray(arguments); })();","     * // => false","     *","     * _.isArray([1, 2, 3]);","     * // => true","     */","    var isArray = nativeIsArray || function(value) {","      return value && typeof value == 'object' && typeof value.length == 'number' &&","        toString.call(value) == arrayClass || false;","    };","","    /**","     * A fallback implementation of `Object.keys` which produces an array of the","     * given object's own enumerable property names.","     *","     * @private","     * @type Function","     * @param {Object} object The object to inspect.","     * @returns {Array} Returns an array of property names.","     */","    var shimKeys = function(object) {","      var index, iterable = object, result = [];","      if (!iterable) return result;","      if (!(objectTypes[typeof object])) return result;","        for (index in iterable) {","          if (hasOwnProperty.call(iterable, index)) {","            result.push(index);","          }","        }","      return result","    };","","    /**","     * Creates an array composed of the own enumerable property names of an object.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} object The object to inspect.","     * @returns {Array} Returns an array of property names.","     * @example","     *","     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });","     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)","     */","    var keys = !nativeKeys ? shimKeys : function(object) {","      if (!isObject(object)) {","        return [];","      }","      return nativeKeys(object);","    };","","    /**","     * Used to convert characters to HTML entities:","     *","     * Though the `>` character is escaped for symmetry, characters like `>` and `/`","     * don't require escaping in HTML and have no special meaning unless they're part","     * of a tag or an unquoted attribute value.","     * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")","     */","    var htmlEscapes = {","      '&': '&amp;',","      '<': '&lt;',","      '>': '&gt;',","      '\"': '&quot;',","      \"'\": '&#39;'","    };","","    /** Used to convert HTML entities to characters */","    var htmlUnescapes = invert(htmlEscapes);","","    /** Used to match HTML entities and HTML characters */","    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),","        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');","","    /*--------------------------------------------------------------------------*/","","    /**","     * Assigns own enumerable properties of source object(s) to the destination","     * object. Subsequent sources will overwrite property assignments of previous","     * sources. If a callback is provided it will be executed to produce the","     * assigned values. The callback is bound to `thisArg` and invoked with two","     * arguments; (objectValue, sourceValue).","     *","     * @static","     * @memberOf _","     * @type Function","     * @alias extend","     * @category Objects","     * @param {Object} object The destination object.","     * @param {...Object} [source] The source objects.","     * @param {Function} [callback] The function to customize assigning values.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Object} Returns the destination object.","     * @example","     *","     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });","     * // => { 'name': 'fred', 'employer': 'slate' }","     *","     * var defaults = _.partialRight(_.assign, function(a, b) {","     *   return typeof a == 'undefined' ? b : a;","     * });","     *","     * var object = { 'name': 'barney' };","     * defaults(object, { 'name': 'fred', 'employer': 'slate' });","     * // => { 'name': 'barney', 'employer': 'slate' }","     */","    var assign = function(object, source, guard) {","      var index, iterable = object, result = iterable;","      if (!iterable) return result;","      var args = arguments,","          argsIndex = 0,","          argsLength = typeof guard == 'number' ? 2 : args.length;","      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {","        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);","      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {","        callback = args[--argsLength];","      }","      while (++argsIndex < argsLength) {","        iterable = args[argsIndex];","        if (iterable && objectTypes[typeof iterable]) {","        var ownIndex = -1,","            ownProps = objectTypes[typeof iterable] && keys(iterable),","            length = ownProps ? ownProps.length : 0;","","        while (++ownIndex < length) {","          index = ownProps[ownIndex];","          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];","        }","        }","      }","      return result","    };","","    /**","     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also","     * be cloned, otherwise they will be assigned by reference. If a callback","     * is provided it will be executed to produce the cloned values. If the","     * callback returns `undefined` cloning will be handled by the method instead.","     * The callback is bound to `thisArg` and invoked with one argument; (value).","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to clone.","     * @param {boolean} [isDeep=false] Specify a deep clone.","     * @param {Function} [callback] The function to customize cloning values.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {*} Returns the cloned value.","     * @example","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 36 },","     *   { 'name': 'fred',   'age': 40 }","     * ];","     *","     * var shallow = _.clone(characters);","     * shallow[0] === characters[0];","     * // => true","     *","     * var deep = _.clone(characters, true);","     * deep[0] === characters[0];","     * // => false","     *","     * _.mixin({","     *   'clone': _.partialRight(_.clone, function(value) {","     *     return _.isElement(value) ? value.cloneNode(false) : undefined;","     *   })","     * });","     *","     * var clone = _.clone(document.body);","     * clone.childNodes.length;","     * // => 0","     */","    function clone(value, isDeep, callback, thisArg) {","      // allows working with \"Collections\" methods without using their `index`","      // and `collection` arguments for `isDeep` and `callback`","      if (typeof isDeep != 'boolean' && isDeep != null) {","        thisArg = callback;","        callback = isDeep;","        isDeep = false;","      }","      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));","    }","","    /**","     * Creates a deep clone of `value`. If a callback is provided it will be","     * executed to produce the cloned values. If the callback returns `undefined`","     * cloning will be handled by the method instead. The callback is bound to","     * `thisArg` and invoked with one argument; (value).","     *","     * Note: This method is loosely based on the structured clone algorithm. Functions","     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and","     * objects created by constructors other than `Object` are cloned to plain `Object` objects.","     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to deep clone.","     * @param {Function} [callback] The function to customize cloning values.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {*} Returns the deep cloned value.","     * @example","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 36 },","     *   { 'name': 'fred',   'age': 40 }","     * ];","     *","     * var deep = _.cloneDeep(characters);","     * deep[0] === characters[0];","     * // => false","     *","     * var view = {","     *   'label': 'docs',","     *   'node': element","     * };","     *","     * var clone = _.cloneDeep(view, function(value) {","     *   return _.isElement(value) ? value.cloneNode(true) : undefined;","     * });","     *","     * clone.node == view.node;","     * // => false","     */","    function cloneDeep(value, callback, thisArg) {","      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));","    }","","    /**","     * Creates an object that inherits from the given `prototype` object. If a","     * `properties` object is provided its own enumerable properties are assigned","     * to the created object.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} prototype The object to inherit from.","     * @param {Object} [properties] The properties to assign to the object.","     * @returns {Object} Returns the new object.","     * @example","     *","     * function Shape() {","     *   this.x = 0;","     *   this.y = 0;","     * }","     *","     * function Circle() {","     *   Shape.call(this);","     * }","     *","     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });","     *","     * var circle = new Circle;","     * circle instanceof Circle;","     * // => true","     *","     * circle instanceof Shape;","     * // => true","     */","    function create(prototype, properties) {","      var result = baseCreate(prototype);","      return properties ? assign(result, properties) : result;","    }","","    /**","     * Assigns own enumerable properties of source object(s) to the destination","     * object for all destination properties that resolve to `undefined`. Once a","     * property is set, additional defaults of the same property will be ignored.","     *","     * @static","     * @memberOf _","     * @type Function","     * @category Objects","     * @param {Object} object The destination object.","     * @param {...Object} [source] The source objects.","     * @param- {Object} [guard] Allows working with `_.reduce` without using its","     *  `key` and `object` arguments as sources.","     * @returns {Object} Returns the destination object.","     * @example","     *","     * var object = { 'name': 'barney' };","     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });","     * // => { 'name': 'barney', 'employer': 'slate' }","     */","    var defaults = function(object, source, guard) {","      var index, iterable = object, result = iterable;","      if (!iterable) return result;","      var args = arguments,","          argsIndex = 0,","          argsLength = typeof guard == 'number' ? 2 : args.length;","      while (++argsIndex < argsLength) {","        iterable = args[argsIndex];","        if (iterable && objectTypes[typeof iterable]) {","        var ownIndex = -1,","            ownProps = objectTypes[typeof iterable] && keys(iterable),","            length = ownProps ? ownProps.length : 0;","","        while (++ownIndex < length) {","          index = ownProps[ownIndex];","          if (typeof result[index] == 'undefined') result[index] = iterable[index];","        }","        }","      }","      return result","    };","","    /**","     * This method is like `_.findIndex` except that it returns the key of the","     * first element that passes the callback check, instead of the element itself.","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} object The object to search.","     * @param {Function|Object|string} [callback=identity] The function called per","     *  iteration. If a property name or object is provided it will be used to","     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {string|undefined} Returns the key of the found element, else `undefined`.","     * @example","     *","     * var characters = {","     *   'barney': {  'age': 36, 'blocked': false },","     *   'fred': {    'age': 40, 'blocked': true },","     *   'pebbles': { 'age': 1,  'blocked': false }","     * };","     *","     * _.findKey(characters, function(chr) {","     *   return chr.age < 40;","     * });","     * // => 'barney' (property order is not guaranteed across environments)","     *","     * // using \"_.where\" callback shorthand","     * _.findKey(characters, { 'age': 1 });","     * // => 'pebbles'","     *","     * // using \"_.pluck\" callback shorthand","     * _.findKey(characters, 'blocked');","     * // => 'fred'","     */","    function findKey(object, callback, thisArg) {","      var result;","      callback = lodash.createCallback(callback, thisArg, 3);","      forOwn(object, function(value, key, object) {","        if (callback(value, key, object)) {","          result = key;","          return false;","        }","      });","      return result;","    }","","    /**","     * This method is like `_.findKey` except that it iterates over elements","     * of a `collection` in the opposite order.","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} object The object to search.","     * @param {Function|Object|string} [callback=identity] The function called per","     *  iteration. If a property name or object is provided it will be used to","     *  create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {string|undefined} Returns the key of the found element, else `undefined`.","     * @example","     *","     * var characters = {","     *   'barney': {  'age': 36, 'blocked': true },","     *   'fred': {    'age': 40, 'blocked': false },","     *   'pebbles': { 'age': 1,  'blocked': true }","     * };","     *","     * _.findLastKey(characters, function(chr) {","     *   return chr.age < 40;","     * });","     * // => returns `pebbles`, assuming `_.findKey` returns `barney`","     *","     * // using \"_.where\" callback shorthand","     * _.findLastKey(characters, { 'age': 40 });","     * // => 'fred'","     *","     * // using \"_.pluck\" callback shorthand","     * _.findLastKey(characters, 'blocked');","     * // => 'pebbles'","     */","    function findLastKey(object, callback, thisArg) {","      var result;","      callback = lodash.createCallback(callback, thisArg, 3);","      forOwnRight(object, function(value, key, object) {","        if (callback(value, key, object)) {","          result = key;","          return false;","        }","      });","      return result;","    }","","    /**","     * Iterates over own and inherited enumerable properties of an object,","     * executing the callback for each property. The callback is bound to `thisArg`","     * and invoked with three arguments; (value, key, object). Callbacks may exit","     * iteration early by explicitly returning `false`.","     *","     * @static","     * @memberOf _","     * @type Function","     * @category Objects","     * @param {Object} object The object to iterate over.","     * @param {Function} [callback=identity] The function called per iteration.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Object} Returns `object`.","     * @example","     *","     * function Shape() {","     *   this.x = 0;","     *   this.y = 0;","     * }","     *","     * Shape.prototype.move = function(x, y) {","     *   this.x += x;","     *   this.y += y;","     * };","     *","     * _.forIn(new Shape, function(value, key) {","     *   console.log(key);","     * });","     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)","     */","    var forIn = function(collection, callback, thisArg) {","      var index, iterable = collection, result = iterable;","      if (!iterable) return result;","      if (!objectTypes[typeof iterable]) return result;","      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);","        for (index in iterable) {","          if (callback(iterable[index], index, collection) === false) return result;","        }","      return result","    };","","    /**","     * This method is like `_.forIn` except that it iterates over elements","     * of a `collection` in the opposite order.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} object The object to iterate over.","     * @param {Function} [callback=identity] The function called per iteration.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Object} Returns `object`.","     * @example","     *","     * function Shape() {","     *   this.x = 0;","     *   this.y = 0;","     * }","     *","     * Shape.prototype.move = function(x, y) {","     *   this.x += x;","     *   this.y += y;","     * };","     *","     * _.forInRight(new Shape, function(value, key) {","     *   console.log(key);","     * });","     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'","     */","    function forInRight(object, callback, thisArg) {","      var pairs = [];","","      forIn(object, function(value, key) {","        pairs.push(key, value);","      });","","      var length = pairs.length;","      callback = baseCreateCallback(callback, thisArg, 3);","      while (length--) {","        if (callback(pairs[length--], pairs[length], object) === false) {","          break;","        }","      }","      return object;","    }","","    /**","     * Iterates over own enumerable properties of an object, executing the callback","     * for each property. The callback is bound to `thisArg` and invoked with three","     * arguments; (value, key, object). Callbacks may exit iteration early by","     * explicitly returning `false`.","     *","     * @static","     * @memberOf _","     * @type Function","     * @category Objects","     * @param {Object} object The object to iterate over.","     * @param {Function} [callback=identity] The function called per iteration.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Object} Returns `object`.","     * @example","     *","     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {","     *   console.log(key);","     * });","     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)","     */","    var forOwn = function(collection, callback, thisArg) {","      var index, iterable = collection, result = iterable;","      if (!iterable) return result;","      if (!objectTypes[typeof iterable]) return result;","      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);","        var ownIndex = -1,","            ownProps = objectTypes[typeof iterable] && keys(iterable),","            length = ownProps ? ownProps.length : 0;","","        while (++ownIndex < length) {","          index = ownProps[ownIndex];","          if (callback(iterable[index], index, collection) === false) return result;","        }","      return result","    };","","    /**","     * This method is like `_.forOwn` except that it iterates over elements","     * of a `collection` in the opposite order.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} object The object to iterate over.","     * @param {Function} [callback=identity] The function called per iteration.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Object} Returns `object`.","     * @example","     *","     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {","     *   console.log(key);","     * });","     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'","     */","    function forOwnRight(object, callback, thisArg) {","      var props = keys(object),","          length = props.length;","","      callback = baseCreateCallback(callback, thisArg, 3);","      while (length--) {","        var key = props[length];","        if (callback(object[key], key, object) === false) {","          break;","        }","      }","      return object;","    }","","    /**","     * Creates a sorted array of property names of all enumerable properties,","     * own and inherited, of `object` that have function values.","     *","     * @static","     * @memberOf _","     * @alias methods","     * @category Objects","     * @param {Object} object The object to inspect.","     * @returns {Array} Returns an array of property names that have function values.","     * @example","     *","     * _.functions(_);","     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]","     */","    function functions(object) {","      var result = [];","      forIn(object, function(value, key) {","        if (isFunction(value)) {","          result.push(key);","        }","      });","      return result.sort();","    }","","    /**","     * Checks if the specified property name exists as a direct property of `object`,","     * instead of an inherited property.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} object The object to inspect.","     * @param {string} key The name of the property to check.","     * @returns {boolean} Returns `true` if key is a direct property, else `false`.","     * @example","     *","     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');","     * // => true","     */","    function has(object, key) {","      return object ? hasOwnProperty.call(object, key) : false;","    }","","    /**","     * Creates an object composed of the inverted keys and values of the given object.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} object The object to invert.","     * @returns {Object} Returns the created inverted object.","     * @example","     *","     * _.invert({ 'first': 'fred', 'second': 'barney' });","     * // => { 'fred': 'first', 'barney': 'second' }","     */","    function invert(object) {","      var index = -1,","          props = keys(object),","          length = props.length,","          result = {};","","      while (++index < length) {","        var key = props[index];","        result[object[key]] = key;","      }","      return result;","    }","","    /**","     * Checks if `value` is a boolean value.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.","     * @example","     *","     * _.isBoolean(null);","     * // => false","     */","    function isBoolean(value) {","      return value === true || value === false ||","        value && typeof value == 'object' && toString.call(value) == boolClass || false;","    }","","    /**","     * Checks if `value` is a date.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.","     * @example","     *","     * _.isDate(new Date);","     * // => true","     */","    function isDate(value) {","      return value && typeof value == 'object' && toString.call(value) == dateClass || false;","    }","","    /**","     * Checks if `value` is a DOM element.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.","     * @example","     *","     * _.isElement(document.body);","     * // => true","     */","    function isElement(value) {","      return value && value.nodeType === 1 || false;","    }","","    /**","     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a","     * length of `0` and objects with no own enumerable properties are considered","     * \"empty\".","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Array|Object|string} value The value to inspect.","     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.","     * @example","     *","     * _.isEmpty([1, 2, 3]);","     * // => false","     *","     * _.isEmpty({});","     * // => true","     *","     * _.isEmpty('');","     * // => true","     */","    function isEmpty(value) {","      var result = true;","      if (!value) {","        return result;","      }","      var className = toString.call(value),","          length = value.length;","","      if ((className == arrayClass || className == stringClass || className == argsClass ) ||","          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {","        return !length;","      }","      forOwn(value, function() {","        return (result = false);","      });","      return result;","    }","","    /**","     * Performs a deep comparison between two values to determine if they are","     * equivalent to each other. If a callback is provided it will be executed","     * to compare values. If the callback returns `undefined` comparisons will","     * be handled by the method instead. The callback is bound to `thisArg` and","     * invoked with two arguments; (a, b).","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} a The value to compare.","     * @param {*} b The other value to compare.","     * @param {Function} [callback] The function to customize comparing values.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.","     * @example","     *","     * var object = { 'name': 'fred' };","     * var copy = { 'name': 'fred' };","     *","     * object == copy;","     * // => false","     *","     * _.isEqual(object, copy);","     * // => true","     *","     * var words = ['hello', 'goodbye'];","     * var otherWords = ['hi', 'goodbye'];","     *","     * _.isEqual(words, otherWords, function(a, b) {","     *   var reGreet = /^(?:hello|hi)$/i,","     *       aGreet = _.isString(a) && reGreet.test(a),","     *       bGreet = _.isString(b) && reGreet.test(b);","     *","     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;","     * });","     * // => true","     */","    function isEqual(a, b, callback, thisArg) {","      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));","    }","","    /**","     * Checks if `value` is, or can be coerced to, a finite number.","     *","     * Note: This is not the same as native `isFinite` which will return true for","     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.","     * @example","     *","     * _.isFinite(-101);","     * // => true","     *","     * _.isFinite('10');","     * // => true","     *","     * _.isFinite(true);","     * // => false","     *","     * _.isFinite('');","     * // => false","     *","     * _.isFinite(Infinity);","     * // => false","     */","    function isFinite(value) {","      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));","    }","","    /**","     * Checks if `value` is a function.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.","     * @example","     *","     * _.isFunction(_);","     * // => true","     */","    function isFunction(value) {","      return typeof value == 'function';","    }","","    /**","     * Checks if `value` is the language type of Object.","     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.","     * @example","     *","     * _.isObject({});","     * // => true","     *","     * _.isObject([1, 2, 3]);","     * // => true","     *","     * _.isObject(1);","     * // => false","     */","    function isObject(value) {","      // check if the value is the ECMAScript language type of Object","      // http://es5.github.io/#x8","      // and avoid a V8 bug","      // http://code.google.com/p/v8/issues/detail?id=2291","      return !!(value && objectTypes[typeof value]);","    }","","    /**","     * Checks if `value` is `NaN`.","     *","     * Note: This is not the same as native `isNaN` which will return `true` for","     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.","     * @example","     *","     * _.isNaN(NaN);","     * // => true","     *","     * _.isNaN(new Number(NaN));","     * // => true","     *","     * isNaN(undefined);","     * // => true","     *","     * _.isNaN(undefined);","     * // => false","     */","    function isNaN(value) {","      // `NaN` as a primitive is the only value that is not equal to itself","      // (perform the [[Class]] check first to avoid errors with some host objects in IE)","      return isNumber(value) && value != +value;","    }","","    /**","     * Checks if `value` is `null`.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.","     * @example","     *","     * _.isNull(null);","     * // => true","     *","     * _.isNull(undefined);","     * // => false","     */","    function isNull(value) {","      return value === null;","    }","","    /**","     * Checks if `value` is a number.","     *","     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.","     * @example","     *","     * _.isNumber(8.4 * 5);","     * // => true","     */","    function isNumber(value) {","      return typeof value == 'number' ||","        value && typeof value == 'object' && toString.call(value) == numberClass || false;","    }","","    /**","     * Checks if `value` is an object created by the `Object` constructor.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.","     * @example","     *","     * function Shape() {","     *   this.x = 0;","     *   this.y = 0;","     * }","     *","     * _.isPlainObject(new Shape);","     * // => false","     *","     * _.isPlainObject([1, 2, 3]);","     * // => false","     *","     * _.isPlainObject({ 'x': 0, 'y': 0 });","     * // => true","     */","    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {","      if (!(value && toString.call(value) == objectClass)) {","        return false;","      }","      var valueOf = value.valueOf,","          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);","","      return objProto","        ? (value == objProto || getPrototypeOf(value) == objProto)","        : shimIsPlainObject(value);","    };","","    /**","     * Checks if `value` is a regular expression.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.","     * @example","     *","     * _.isRegExp(/fred/);","     * // => true","     */","    function isRegExp(value) {","      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;","    }","","    /**","     * Checks if `value` is a string.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.","     * @example","     *","     * _.isString('fred');","     * // => true","     */","    function isString(value) {","      return typeof value == 'string' ||","        value && typeof value == 'object' && toString.call(value) == stringClass || false;","    }","","    /**","     * Checks if `value` is `undefined`.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {*} value The value to check.","     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.","     * @example","     *","     * _.isUndefined(void 0);","     * // => true","     */","    function isUndefined(value) {","      return typeof value == 'undefined';","    }","","    /**","     * Creates an object with the same keys as `object` and values generated by","     * running each own enumerable property of `object` through the callback.","     * The callback is bound to `thisArg` and invoked with three arguments;","     * (value, key, object).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} object The object to iterate over.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Array} Returns a new object with values of the results of each `callback` execution.","     * @example","     *","     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });","     * // => { 'a': 3, 'b': 6, 'c': 9 }","     *","     * var characters = {","     *   'fred': { 'name': 'fred', 'age': 40 },","     *   'pebbles': { 'name': 'pebbles', 'age': 1 }","     * };","     *","     * // using \"_.pluck\" callback shorthand","     * _.mapValues(characters, 'age');","     * // => { 'fred': 40, 'pebbles': 1 }","     */","    function mapValues(object, callback, thisArg) {","      var result = {};","      callback = lodash.createCallback(callback, thisArg, 3);","","      forOwn(object, function(value, key, object) {","        result[key] = callback(value, key, object);","      });","      return result;","    }","","    /**","     * Recursively merges own enumerable properties of the source object(s), that","     * don't resolve to `undefined` into the destination object. Subsequent sources","     * will overwrite property assignments of previous sources. If a callback is","     * provided it will be executed to produce the merged values of the destination","     * and source properties. If the callback returns `undefined` merging will","     * be handled by the method instead. The callback is bound to `thisArg` and","     * invoked with two arguments; (objectValue, sourceValue).","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} object The destination object.","     * @param {...Object} [source] The source objects.","     * @param {Function} [callback] The function to customize merging properties.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Object} Returns the destination object.","     * @example","     *","     * var names = {","     *   'characters': [","     *     { 'name': 'barney' },","     *     { 'name': 'fred' }","     *   ]","     * };","     *","     * var ages = {","     *   'characters': [","     *     { 'age': 36 },","     *     { 'age': 40 }","     *   ]","     * };","     *","     * _.merge(names, ages);","     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }","     *","     * var food = {","     *   'fruits': ['apple'],","     *   'vegetables': ['beet']","     * };","     *","     * var otherFood = {","     *   'fruits': ['banana'],","     *   'vegetables': ['carrot']","     * };","     *","     * _.merge(food, otherFood, function(a, b) {","     *   return _.isArray(a) ? a.concat(b) : undefined;","     * });","     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }","     */","    function merge(object) {","      var args = arguments,","          length = 2;","","      if (!isObject(object)) {","        return object;","      }","      // allows working with `_.reduce` and `_.reduceRight` without using","      // their `index` and `collection` arguments","      if (typeof args[2] != 'number') {","        length = args.length;","      }","      if (length > 3 && typeof args[length - 2] == 'function') {","        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);","      } else if (length > 2 && typeof args[length - 1] == 'function') {","        callback = args[--length];","      }","      var sources = slice(arguments, 1, length),","          index = -1,","          stackA = getArray(),","          stackB = getArray();","","      while (++index < length) {","        baseMerge(object, sources[index], callback, stackA, stackB);","      }","      releaseArray(stackA);","      releaseArray(stackB);","      return object;","    }","","    /**","     * Creates a shallow clone of `object` excluding the specified properties.","     * Property names may be specified as individual arguments or as arrays of","     * property names. If a callback is provided it will be executed for each","     * property of `object` omitting the properties the callback returns truey","     * for. The callback is bound to `thisArg` and invoked with three arguments;","     * (value, key, object).","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} object The source object.","     * @param {Function|...string|string[]} [callback] The properties to omit or the","     *  function called per iteration.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Object} Returns an object without the omitted properties.","     * @example","     *","     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');","     * // => { 'name': 'fred' }","     *","     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {","     *   return typeof value == 'number';","     * });","     * // => { 'name': 'fred' }","     */","    function omit(object, callback, thisArg) {","      var result = {};","      if (typeof callback != 'function') {","        var props = [];","        forIn(object, function(value, key) {","          props.push(key);","        });","        props = baseDifference(props, baseFlatten(arguments, true, false, 1));","","        var index = -1,","            length = props.length;","","        while (++index < length) {","          var key = props[index];","          result[key] = object[key];","        }","      } else {","        callback = lodash.createCallback(callback, thisArg, 3);","        forIn(object, function(value, key, object) {","          if (!callback(value, key, object)) {","            result[key] = value;","          }","        });","      }","      return result;","    }","","    /**","     * Creates a two dimensional array of an object's key-value pairs,","     * i.e. `[[key1, value1], [key2, value2]]`.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} object The object to inspect.","     * @returns {Array} Returns new array of key-value pairs.","     * @example","     *","     * _.pairs({ 'barney': 36, 'fred': 40 });","     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)","     */","    function pairs(object) {","      var index = -1,","          props = keys(object),","          length = props.length,","          result = Array(length);","","      while (++index < length) {","        var key = props[index];","        result[index] = [key, object[key]];","      }","      return result;","    }","","    /**","     * Creates a shallow clone of `object` composed of the specified properties.","     * Property names may be specified as individual arguments or as arrays of","     * property names. If a callback is provided it will be executed for each","     * property of `object` picking the properties the callback returns truey","     * for. The callback is bound to `thisArg` and invoked with three arguments;","     * (value, key, object).","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} object The source object.","     * @param {Function|...string|string[]} [callback] The function called per","     *  iteration or property names to pick, specified as individual property","     *  names or arrays of property names.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Object} Returns an object composed of the picked properties.","     * @example","     *","     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');","     * // => { 'name': 'fred' }","     *","     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {","     *   return key.charAt(0) != '_';","     * });","     * // => { 'name': 'fred' }","     */","    function pick(object, callback, thisArg) {","      var result = {};","      if (typeof callback != 'function') {","        var index = -1,","            props = baseFlatten(arguments, true, false, 1),","            length = isObject(object) ? props.length : 0;","","        while (++index < length) {","          var key = props[index];","          if (key in object) {","            result[key] = object[key];","          }","        }","      } else {","        callback = lodash.createCallback(callback, thisArg, 3);","        forIn(object, function(value, key, object) {","          if (callback(value, key, object)) {","            result[key] = value;","          }","        });","      }","      return result;","    }","","    /**","     * An alternative to `_.reduce` this method transforms `object` to a new","     * `accumulator` object which is the result of running each of its own","     * enumerable properties through a callback, with each callback execution","     * potentially mutating the `accumulator` object. The callback is bound to","     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).","     * Callbacks may exit iteration early by explicitly returning `false`.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Array|Object} object The object to iterate over.","     * @param {Function} [callback=identity] The function called per iteration.","     * @param {*} [accumulator] The custom accumulator value.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {*} Returns the accumulated value.","     * @example","     *","     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {","     *   num *= num;","     *   if (num % 2) {","     *     return result.push(num) < 3;","     *   }","     * });","     * // => [1, 9, 25]","     *","     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {","     *   result[key] = num * 3;","     * });","     * // => { 'a': 3, 'b': 6, 'c': 9 }","     */","    function transform(object, callback, accumulator, thisArg) {","      var isArr = isArray(object);","      if (accumulator == null) {","        if (isArr) {","          accumulator = [];","        } else {","          var ctor = object && object.constructor,","              proto = ctor && ctor.prototype;","","          accumulator = baseCreate(proto);","        }","      }","      if (callback) {","        callback = lodash.createCallback(callback, thisArg, 4);","        (isArr ? forEach : forOwn)(object, function(value, index, object) {","          return callback(accumulator, value, index, object);","        });","      }","      return accumulator;","    }","","    /**","     * Creates an array composed of the own enumerable property values of `object`.","     *","     * @static","     * @memberOf _","     * @category Objects","     * @param {Object} object The object to inspect.","     * @returns {Array} Returns an array of property values.","     * @example","     *","     * _.values({ 'one': 1, 'two': 2, 'three': 3 });","     * // => [1, 2, 3] (property order is not guaranteed across environments)","     */","    function values(object) {","      var index = -1,","          props = keys(object),","          length = props.length,","          result = Array(length);","","      while (++index < length) {","        result[index] = object[props[index]];","      }","      return result;","    }","","    /*--------------------------------------------------------------------------*/","","    /**","     * Creates an array of elements from the specified indexes, or keys, of the","     * `collection`. Indexes may be specified as individual arguments or as arrays","     * of indexes.","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`","     *   to retrieve, specified as individual indexes or arrays of indexes.","     * @returns {Array} Returns a new array of elements corresponding to the","     *  provided indexes.","     * @example","     *","     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);","     * // => ['a', 'c', 'e']","     *","     * _.at(['fred', 'barney', 'pebbles'], 0, 2);","     * // => ['fred', 'pebbles']","     */","    function at(collection) {","      var args = arguments,","          index = -1,","          props = baseFlatten(args, true, false, 1),","          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,","          result = Array(length);","","      while(++index < length) {","        result[index] = collection[props[index]];","      }","      return result;","    }","","    /**","     * Checks if a given value is present in a collection using strict equality","     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the","     * offset from the end of the collection.","     *","     * @static","     * @memberOf _","     * @alias include","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {*} target The value to check for.","     * @param {number} [fromIndex=0] The index to search from.","     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.","     * @example","     *","     * _.contains([1, 2, 3], 1);","     * // => true","     *","     * _.contains([1, 2, 3], 1, 2);","     * // => false","     *","     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');","     * // => true","     *","     * _.contains('pebbles', 'eb');","     * // => true","     */","    function contains(collection, target, fromIndex) {","      var index = -1,","          indexOf = getIndexOf(),","          length = collection ? collection.length : 0,","          result = false;","","      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;","      if (isArray(collection)) {","        result = indexOf(collection, target, fromIndex) > -1;","      } else if (typeof length == 'number') {","        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;","      } else {","        forOwn(collection, function(value) {","          if (++index >= fromIndex) {","            return !(result = value === target);","          }","        });","      }","      return result;","    }","","    /**","     * Creates an object composed of keys generated from the results of running","     * each element of `collection` through the callback. The corresponding value","     * of each key is the number of times the key was returned by the callback.","     * The callback is bound to `thisArg` and invoked with three arguments;","     * (value, index|key, collection).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Object} Returns the composed aggregate object.","     * @example","     *","     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });","     * // => { '4': 1, '6': 2 }","     *","     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);","     * // => { '4': 1, '6': 2 }","     *","     * _.countBy(['one', 'two', 'three'], 'length');","     * // => { '3': 2, '5': 1 }","     */","    var countBy = createAggregator(function(result, value, key) {","      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);","    });","","    /**","     * Checks if the given callback returns truey value for **all** elements of","     * a collection. The callback is bound to `thisArg` and invoked with three","     * arguments; (value, index|key, collection).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @alias all","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {boolean} Returns `true` if all elements passed the callback check,","     *  else `false`.","     * @example","     *","     * _.every([true, 1, null, 'yes']);","     * // => false","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 36 },","     *   { 'name': 'fred',   'age': 40 }","     * ];","     *","     * // using \"_.pluck\" callback shorthand","     * _.every(characters, 'age');","     * // => true","     *","     * // using \"_.where\" callback shorthand","     * _.every(characters, { 'age': 36 });","     * // => false","     */","    function every(collection, callback, thisArg) {","      var result = true;","      callback = lodash.createCallback(callback, thisArg, 3);","","      var index = -1,","          length = collection ? collection.length : 0;","","      if (typeof length == 'number') {","        while (++index < length) {","          if (!(result = !!callback(collection[index], index, collection))) {","            break;","          }","        }","      } else {","        forOwn(collection, function(value, index, collection) {","          return (result = !!callback(value, index, collection));","        });","      }","      return result;","    }","","    /**","     * Iterates over elements of a collection, returning an array of all elements","     * the callback returns truey for. The callback is bound to `thisArg` and","     * invoked with three arguments; (value, index|key, collection).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @alias select","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Array} Returns a new array of elements that passed the callback check.","     * @example","     *","     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });","     * // => [2, 4, 6]","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 36, 'blocked': false },","     *   { 'name': 'fred',   'age': 40, 'blocked': true }","     * ];","     *","     * // using \"_.pluck\" callback shorthand","     * _.filter(characters, 'blocked');","     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]","     *","     * // using \"_.where\" callback shorthand","     * _.filter(characters, { 'age': 36 });","     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]","     */","    function filter(collection, callback, thisArg) {","      var result = [];","      callback = lodash.createCallback(callback, thisArg, 3);","","      var index = -1,","          length = collection ? collection.length : 0;","","      if (typeof length == 'number') {","        while (++index < length) {","          var value = collection[index];","          if (callback(value, index, collection)) {","            result.push(value);","          }","        }","      } else {","        forOwn(collection, function(value, index, collection) {","          if (callback(value, index, collection)) {","            result.push(value);","          }","        });","      }","      return result;","    }","","    /**","     * Iterates over elements of a collection, returning the first element that","     * the callback returns truey for. The callback is bound to `thisArg` and","     * invoked with three arguments; (value, index|key, collection).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @alias detect, findWhere","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {*} Returns the found element, else `undefined`.","     * @example","     *","     * var characters = [","     *   { 'name': 'barney',  'age': 36, 'blocked': false },","     *   { 'name': 'fred',    'age': 40, 'blocked': true },","     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }","     * ];","     *","     * _.find(characters, function(chr) {","     *   return chr.age < 40;","     * });","     * // => { 'name': 'barney', 'age': 36, 'blocked': false }","     *","     * // using \"_.where\" callback shorthand","     * _.find(characters, { 'age': 1 });","     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }","     *","     * // using \"_.pluck\" callback shorthand","     * _.find(characters, 'blocked');","     * // => { 'name': 'fred', 'age': 40, 'blocked': true }","     */","    function find(collection, callback, thisArg) {","      callback = lodash.createCallback(callback, thisArg, 3);","","      var index = -1,","          length = collection ? collection.length : 0;","","      if (typeof length == 'number') {","        while (++index < length) {","          var value = collection[index];","          if (callback(value, index, collection)) {","            return value;","          }","        }","      } else {","        var result;","        forOwn(collection, function(value, index, collection) {","          if (callback(value, index, collection)) {","            result = value;","            return false;","          }","        });","        return result;","      }","    }","","    /**","     * This method is like `_.find` except that it iterates over elements","     * of a `collection` from right to left.","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {*} Returns the found element, else `undefined`.","     * @example","     *","     * _.findLast([1, 2, 3, 4], function(num) {","     *   return num % 2 == 1;","     * });","     * // => 3","     */","    function findLast(collection, callback, thisArg) {","      var result;","      callback = lodash.createCallback(callback, thisArg, 3);","      forEachRight(collection, function(value, index, collection) {","        if (callback(value, index, collection)) {","          result = value;","          return false;","        }","      });","      return result;","    }","","    /**","     * Iterates over elements of a collection, executing the callback for each","     * element. The callback is bound to `thisArg` and invoked with three arguments;","     * (value, index|key, collection). Callbacks may exit iteration early by","     * explicitly returning `false`.","     *","     * Note: As with other \"Collections\" methods, objects with a `length` property","     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`","     * may be used for object iteration.","     *","     * @static","     * @memberOf _","     * @alias each","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} [callback=identity] The function called per iteration.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Array|Object|string} Returns `collection`.","     * @example","     *","     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');","     * // => logs each number and returns '1,2,3'","     *","     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });","     * // => logs each number and returns the object (property order is not guaranteed across environments)","     */","    function forEach(collection, callback, thisArg) {","      var index = -1,","          length = collection ? collection.length : 0;","","      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);","      if (typeof length == 'number') {","        while (++index < length) {","          if (callback(collection[index], index, collection) === false) {","            break;","          }","        }","      } else {","        forOwn(collection, callback);","      }","      return collection;","    }","","    /**","     * This method is like `_.forEach` except that it iterates over elements","     * of a `collection` from right to left.","     *","     * @static","     * @memberOf _","     * @alias eachRight","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} [callback=identity] The function called per iteration.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Array|Object|string} Returns `collection`.","     * @example","     *","     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');","     * // => logs each number from right to left and returns '3,2,1'","     */","    function forEachRight(collection, callback, thisArg) {","      var length = collection ? collection.length : 0;","      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);","      if (typeof length == 'number') {","        while (length--) {","          if (callback(collection[length], length, collection) === false) {","            break;","          }","        }","      } else {","        var props = keys(collection);","        length = props.length;","        forOwn(collection, function(value, key, collection) {","          key = props ? props[--length] : --length;","          return callback(collection[key], key, collection);","        });","      }","      return collection;","    }","","    /**","     * Creates an object composed of keys generated from the results of running","     * each element of a collection through the callback. The corresponding value","     * of each key is an array of the elements responsible for generating the key.","     * The callback is bound to `thisArg` and invoked with three arguments;","     * (value, index|key, collection).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Object} Returns the composed aggregate object.","     * @example","     *","     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });","     * // => { '4': [4.2], '6': [6.1, 6.4] }","     *","     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);","     * // => { '4': [4.2], '6': [6.1, 6.4] }","     *","     * // using \"_.pluck\" callback shorthand","     * _.groupBy(['one', 'two', 'three'], 'length');","     * // => { '3': ['one', 'two'], '5': ['three'] }","     */","    var groupBy = createAggregator(function(result, value, key) {","      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);","    });","","    /**","     * Creates an object composed of keys generated from the results of running","     * each element of the collection through the given callback. The corresponding","     * value of each key is the last element responsible for generating the key.","     * The callback is bound to `thisArg` and invoked with three arguments;","     * (value, index|key, collection).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Object} Returns the composed aggregate object.","     * @example","     *","     * var keys = [","     *   { 'dir': 'left', 'code': 97 },","     *   { 'dir': 'right', 'code': 100 }","     * ];","     *","     * _.indexBy(keys, 'dir');","     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }","     *","     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });","     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }","     *","     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);","     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }","     */","    var indexBy = createAggregator(function(result, value, key) {","      result[key] = value;","    });","","    /**","     * Invokes the method named by `methodName` on each element in the `collection`","     * returning an array of the results of each invoked method. Additional arguments","     * will be provided to each invoked method. If `methodName` is a function it","     * will be invoked for, and `this` bound to, each element in the `collection`.","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|string} methodName The name of the method to invoke or","     *  the function invoked per iteration.","     * @param {...*} [arg] Arguments to invoke the method with.","     * @returns {Array} Returns a new array of the results of each invoked method.","     * @example","     *","     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');","     * // => [[1, 5, 7], [1, 2, 3]]","     *","     * _.invoke([123, 456], String.prototype.split, '');","     * // => [['1', '2', '3'], ['4', '5', '6']]","     */","    function invoke(collection, methodName) {","      var args = slice(arguments, 2),","          index = -1,","          isFunc = typeof methodName == 'function',","          length = collection ? collection.length : 0,","          result = Array(typeof length == 'number' ? length : 0);","","      forEach(collection, function(value) {","        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);","      });","      return result;","    }","","    /**","     * Creates an array of values by running each element in the collection","     * through the callback. The callback is bound to `thisArg` and invoked with","     * three arguments; (value, index|key, collection).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @alias collect","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Array} Returns a new array of the results of each `callback` execution.","     * @example","     *","     * _.map([1, 2, 3], function(num) { return num * 3; });","     * // => [3, 6, 9]","     *","     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });","     * // => [3, 6, 9] (property order is not guaranteed across environments)","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 36 },","     *   { 'name': 'fred',   'age': 40 }","     * ];","     *","     * // using \"_.pluck\" callback shorthand","     * _.map(characters, 'name');","     * // => ['barney', 'fred']","     */","    function map(collection, callback, thisArg) {","      var index = -1,","          length = collection ? collection.length : 0;","","      callback = lodash.createCallback(callback, thisArg, 3);","      if (typeof length == 'number') {","        var result = Array(length);","        while (++index < length) {","          result[index] = callback(collection[index], index, collection);","        }","      } else {","        result = [];","        forOwn(collection, function(value, key, collection) {","          result[++index] = callback(value, key, collection);","        });","      }","      return result;","    }","","    /**","     * Retrieves the maximum value of a collection. If the collection is empty or","     * falsey `-Infinity` is returned. If a callback is provided it will be executed","     * for each value in the collection to generate the criterion by which the value","     * is ranked. The callback is bound to `thisArg` and invoked with three","     * arguments; (value, index, collection).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {*} Returns the maximum value.","     * @example","     *","     * _.max([4, 2, 8, 6]);","     * // => 8","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 36 },","     *   { 'name': 'fred',   'age': 40 }","     * ];","     *","     * _.max(characters, function(chr) { return chr.age; });","     * // => { 'name': 'fred', 'age': 40 };","     *","     * // using \"_.pluck\" callback shorthand","     * _.max(characters, 'age');","     * // => { 'name': 'fred', 'age': 40 };","     */","    function max(collection, callback, thisArg) {","      var computed = -Infinity,","          result = computed;","","      // allows working with functions like `_.map` without using","      // their `index` argument as a callback","      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {","        callback = null;","      }","      if (callback == null && isArray(collection)) {","        var index = -1,","            length = collection.length;","","        while (++index < length) {","          var value = collection[index];","          if (value > result) {","            result = value;","          }","        }","      } else {","        callback = (callback == null && isString(collection))","          ? charAtCallback","          : lodash.createCallback(callback, thisArg, 3);","","        forEach(collection, function(value, index, collection) {","          var current = callback(value, index, collection);","          if (current > computed) {","            computed = current;","            result = value;","          }","        });","      }","      return result;","    }","","    /**","     * Retrieves the minimum value of a collection. If the collection is empty or","     * falsey `Infinity` is returned. If a callback is provided it will be executed","     * for each value in the collection to generate the criterion by which the value","     * is ranked. The callback is bound to `thisArg` and invoked with three","     * arguments; (value, index, collection).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {*} Returns the minimum value.","     * @example","     *","     * _.min([4, 2, 8, 6]);","     * // => 2","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 36 },","     *   { 'name': 'fred',   'age': 40 }","     * ];","     *","     * _.min(characters, function(chr) { return chr.age; });","     * // => { 'name': 'barney', 'age': 36 };","     *","     * // using \"_.pluck\" callback shorthand","     * _.min(characters, 'age');","     * // => { 'name': 'barney', 'age': 36 };","     */","    function min(collection, callback, thisArg) {","      var computed = Infinity,","          result = computed;","","      // allows working with functions like `_.map` without using","      // their `index` argument as a callback","      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {","        callback = null;","      }","      if (callback == null && isArray(collection)) {","        var index = -1,","            length = collection.length;","","        while (++index < length) {","          var value = collection[index];","          if (value < result) {","            result = value;","          }","        }","      } else {","        callback = (callback == null && isString(collection))","          ? charAtCallback","          : lodash.createCallback(callback, thisArg, 3);","","        forEach(collection, function(value, index, collection) {","          var current = callback(value, index, collection);","          if (current < computed) {","            computed = current;","            result = value;","          }","        });","      }","      return result;","    }","","    /**","     * Retrieves the value of a specified property from all elements in the collection.","     *","     * @static","     * @memberOf _","     * @type Function","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {string} property The name of the property to pluck.","     * @returns {Array} Returns a new array of property values.","     * @example","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 36 },","     *   { 'name': 'fred',   'age': 40 }","     * ];","     *","     * _.pluck(characters, 'name');","     * // => ['barney', 'fred']","     */","    var pluck = map;","","    /**","     * Reduces a collection to a value which is the accumulated result of running","     * each element in the collection through the callback, where each successive","     * callback execution consumes the return value of the previous execution. If","     * `accumulator` is not provided the first element of the collection will be","     * used as the initial `accumulator` value. The callback is bound to `thisArg`","     * and invoked with four arguments; (accumulator, value, index|key, collection).","     *","     * @static","     * @memberOf _","     * @alias foldl, inject","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} [callback=identity] The function called per iteration.","     * @param {*} [accumulator] Initial value of the accumulator.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {*} Returns the accumulated value.","     * @example","     *","     * var sum = _.reduce([1, 2, 3], function(sum, num) {","     *   return sum + num;","     * });","     * // => 6","     *","     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {","     *   result[key] = num * 3;","     *   return result;","     * }, {});","     * // => { 'a': 3, 'b': 6, 'c': 9 }","     */","    function reduce(collection, callback, accumulator, thisArg) {","      if (!collection) return accumulator;","      var noaccum = arguments.length < 3;","      callback = lodash.createCallback(callback, thisArg, 4);","","      var index = -1,","          length = collection.length;","","      if (typeof length == 'number') {","        if (noaccum) {","          accumulator = collection[++index];","        }","        while (++index < length) {","          accumulator = callback(accumulator, collection[index], index, collection);","        }","      } else {","        forOwn(collection, function(value, index, collection) {","          accumulator = noaccum","            ? (noaccum = false, value)","            : callback(accumulator, value, index, collection)","        });","      }","      return accumulator;","    }","","    /**","     * This method is like `_.reduce` except that it iterates over elements","     * of a `collection` from right to left.","     *","     * @static","     * @memberOf _","     * @alias foldr","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function} [callback=identity] The function called per iteration.","     * @param {*} [accumulator] Initial value of the accumulator.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {*} Returns the accumulated value.","     * @example","     *","     * var list = [[0, 1], [2, 3], [4, 5]];","     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);","     * // => [4, 5, 2, 3, 0, 1]","     */","    function reduceRight(collection, callback, accumulator, thisArg) {","      var noaccum = arguments.length < 3;","      callback = lodash.createCallback(callback, thisArg, 4);","      forEachRight(collection, function(value, index, collection) {","        accumulator = noaccum","          ? (noaccum = false, value)","          : callback(accumulator, value, index, collection);","      });","      return accumulator;","    }","","    /**","     * The opposite of `_.filter` this method returns the elements of a","     * collection that the callback does **not** return truey for.","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Array} Returns a new array of elements that failed the callback check.","     * @example","     *","     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });","     * // => [1, 3, 5]","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 36, 'blocked': false },","     *   { 'name': 'fred',   'age': 40, 'blocked': true }","     * ];","     *","     * // using \"_.pluck\" callback shorthand","     * _.reject(characters, 'blocked');","     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]","     *","     * // using \"_.where\" callback shorthand","     * _.reject(characters, { 'age': 36 });","     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]","     */","    function reject(collection, callback, thisArg) {","      callback = lodash.createCallback(callback, thisArg, 3);","      return filter(collection, function(value, index, collection) {","        return !callback(value, index, collection);","      });","    }","","    /**","     * Retrieves a random element or `n` random elements from a collection.","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to sample.","     * @param {number} [n] The number of elements to sample.","     * @param- {Object} [guard] Allows working with functions like `_.map`","     *  without using their `index` arguments as `n`.","     * @returns {Array} Returns the random sample(s) of `collection`.","     * @example","     *","     * _.sample([1, 2, 3, 4]);","     * // => 2","     *","     * _.sample([1, 2, 3, 4], 2);","     * // => [3, 1]","     */","    function sample(collection, n, guard) {","      if (collection && typeof collection.length != 'number') {","        collection = values(collection);","      }","      if (n == null || guard) {","        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;","      }","      var result = shuffle(collection);","      result.length = nativeMin(nativeMax(0, n), result.length);","      return result;","    }","","    /**","     * Creates an array of shuffled values, using a version of the Fisher-Yates","     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to shuffle.","     * @returns {Array} Returns a new shuffled collection.","     * @example","     *","     * _.shuffle([1, 2, 3, 4, 5, 6]);","     * // => [4, 1, 6, 3, 5, 2]","     */","    function shuffle(collection) {","      var index = -1,","          length = collection ? collection.length : 0,","          result = Array(typeof length == 'number' ? length : 0);","","      forEach(collection, function(value) {","        var rand = baseRandom(0, ++index);","        result[index] = result[rand];","        result[rand] = value;","      });","      return result;","    }","","    /**","     * Gets the size of the `collection` by returning `collection.length` for arrays","     * and array-like objects or the number of own enumerable properties for objects.","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to inspect.","     * @returns {number} Returns `collection.length` or number of own enumerable properties.","     * @example","     *","     * _.size([1, 2]);","     * // => 2","     *","     * _.size({ 'one': 1, 'two': 2, 'three': 3 });","     * // => 3","     *","     * _.size('pebbles');","     * // => 7","     */","    function size(collection) {","      var length = collection ? collection.length : 0;","      return typeof length == 'number' ? length : keys(collection).length;","    }","","    /**","     * Checks if the callback returns a truey value for **any** element of a","     * collection. The function returns as soon as it finds a passing value and","     * does not iterate over the entire collection. The callback is bound to","     * `thisArg` and invoked with three arguments; (value, index|key, collection).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @alias any","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {boolean} Returns `true` if any element passed the callback check,","     *  else `false`.","     * @example","     *","     * _.some([null, 0, 'yes', false], Boolean);","     * // => true","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 36, 'blocked': false },","     *   { 'name': 'fred',   'age': 40, 'blocked': true }","     * ];","     *","     * // using \"_.pluck\" callback shorthand","     * _.some(characters, 'blocked');","     * // => true","     *","     * // using \"_.where\" callback shorthand","     * _.some(characters, { 'age': 1 });","     * // => false","     */","    function some(collection, callback, thisArg) {","      var result;","      callback = lodash.createCallback(callback, thisArg, 3);","","      var index = -1,","          length = collection ? collection.length : 0;","","      if (typeof length == 'number') {","        while (++index < length) {","          if ((result = callback(collection[index], index, collection))) {","            break;","          }","        }","      } else {","        forOwn(collection, function(value, index, collection) {","          return !(result = callback(value, index, collection));","        });","      }","      return !!result;","    }","","    /**","     * Creates an array of elements, sorted in ascending order by the results of","     * running each element in a collection through the callback. This method","     * performs a stable sort, that is, it will preserve the original sort order","     * of equal elements. The callback is bound to `thisArg` and invoked with","     * three arguments; (value, index|key, collection).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an array of property names is provided for `callback` the collection","     * will be sorted by each property value.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Array|Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Array} Returns a new array of sorted elements.","     * @example","     *","     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });","     * // => [3, 1, 2]","     *","     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);","     * // => [3, 1, 2]","     *","     * var characters = [","     *   { 'name': 'barney',  'age': 36 },","     *   { 'name': 'fred',    'age': 40 },","     *   { 'name': 'barney',  'age': 26 },","     *   { 'name': 'fred',    'age': 30 }","     * ];","     *","     * // using \"_.pluck\" callback shorthand","     * _.map(_.sortBy(characters, 'age'), _.values);","     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]","     *","     * // sorting by multiple properties","     * _.map(_.sortBy(characters, ['name', 'age']), _.values);","     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]","     */","    function sortBy(collection, callback, thisArg) {","      var index = -1,","          isArr = isArray(callback),","          length = collection ? collection.length : 0,","          result = Array(typeof length == 'number' ? length : 0);","","      if (!isArr) {","        callback = lodash.createCallback(callback, thisArg, 3);","      }","      forEach(collection, function(value, key, collection) {","        var object = result[++index] = getObject();","        if (isArr) {","          object.criteria = map(callback, function(key) { return value[key]; });","        } else {","          (object.criteria = getArray())[0] = callback(value, key, collection);","        }","        object.index = index;","        object.value = value;","      });","","      length = result.length;","      result.sort(compareAscending);","      while (length--) {","        var object = result[length];","        result[length] = object.value;","        if (!isArr) {","          releaseArray(object.criteria);","        }","        releaseObject(object);","      }","      return result;","    }","","    /**","     * Converts the `collection` to an array.","     *","     * @static","     * @memberOf _","     * @category Collections","     * @param {Array|Object|string} collection The collection to convert.","     * @returns {Array} Returns the new converted array.","     * @example","     *","     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);","     * // => [2, 3, 4]","     */","    function toArray(collection) {","      if (collection && typeof collection.length == 'number') {","        return slice(collection);","      }","      return values(collection);","    }","","    /**","     * Performs a deep comparison of each element in a `collection` to the given","     * `properties` object, returning an array of all elements that have equivalent","     * property values.","     *","     * @static","     * @memberOf _","     * @type Function","     * @category Collections","     * @param {Array|Object|string} collection The collection to iterate over.","     * @param {Object} props The object of property values to filter by.","     * @returns {Array} Returns a new array of elements that have the given properties.","     * @example","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },","     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }","     * ];","     *","     * _.where(characters, { 'age': 36 });","     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]","     *","     * _.where(characters, { 'pets': ['dino'] });","     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]","     */","    var where = filter;","","    /*--------------------------------------------------------------------------*/","","    /**","     * Creates an array with all falsey values removed. The values `false`, `null`,","     * `0`, `\"\"`, `undefined`, and `NaN` are all falsey.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {Array} array The array to compact.","     * @returns {Array} Returns a new array of filtered values.","     * @example","     *","     * _.compact([0, 1, false, 2, '', 3]);","     * // => [1, 2, 3]","     */","    function compact(array) {","      var index = -1,","          length = array ? array.length : 0,","          result = [];","","      while (++index < length) {","        var value = array[index];","        if (value) {","          result.push(value);","        }","      }","      return result;","    }","","    /**","     * Creates an array excluding all values of the provided arrays using strict","     * equality for comparisons, i.e. `===`.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {Array} array The array to process.","     * @param {...Array} [values] The arrays of values to exclude.","     * @returns {Array} Returns a new array of filtered values.","     * @example","     *","     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);","     * // => [1, 3, 4]","     */","    function difference(array) {","      return baseDifference(array, baseFlatten(arguments, true, true, 1));","    }","","    /**","     * This method is like `_.find` except that it returns the index of the first","     * element that passes the callback check, instead of the element itself.","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {Array} array The array to search.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {number} Returns the index of the found element, else `-1`.","     * @example","     *","     * var characters = [","     *   { 'name': 'barney',  'age': 36, 'blocked': false },","     *   { 'name': 'fred',    'age': 40, 'blocked': true },","     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }","     * ];","     *","     * _.findIndex(characters, function(chr) {","     *   return chr.age < 20;","     * });","     * // => 2","     *","     * // using \"_.where\" callback shorthand","     * _.findIndex(characters, { 'age': 36 });","     * // => 0","     *","     * // using \"_.pluck\" callback shorthand","     * _.findIndex(characters, 'blocked');","     * // => 1","     */","    function findIndex(array, callback, thisArg) {","      var index = -1,","          length = array ? array.length : 0;","","      callback = lodash.createCallback(callback, thisArg, 3);","      while (++index < length) {","        if (callback(array[index], index, array)) {","          return index;","        }","      }","      return -1;","    }","","    /**","     * This method is like `_.findIndex` except that it iterates over elements","     * of a `collection` from right to left.","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {Array} array The array to search.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {number} Returns the index of the found element, else `-1`.","     * @example","     *","     * var characters = [","     *   { 'name': 'barney',  'age': 36, 'blocked': true },","     *   { 'name': 'fred',    'age': 40, 'blocked': false },","     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }","     * ];","     *","     * _.findLastIndex(characters, function(chr) {","     *   return chr.age > 30;","     * });","     * // => 1","     *","     * // using \"_.where\" callback shorthand","     * _.findLastIndex(characters, { 'age': 36 });","     * // => 0","     *","     * // using \"_.pluck\" callback shorthand","     * _.findLastIndex(characters, 'blocked');","     * // => 2","     */","    function findLastIndex(array, callback, thisArg) {","      var length = array ? array.length : 0;","      callback = lodash.createCallback(callback, thisArg, 3);","      while (length--) {","        if (callback(array[length], length, array)) {","          return length;","        }","      }","      return -1;","    }","","    /**","     * Gets the first element or first `n` elements of an array. If a callback","     * is provided elements at the beginning of the array are returned as long","     * as the callback returns truey. The callback is bound to `thisArg` and","     * invoked with three arguments; (value, index, array).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @alias head, take","     * @category Arrays","     * @param {Array} array The array to query.","     * @param {Function|Object|number|string} [callback] The function called","     *  per element or the number of elements to return. If a property name or","     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"","     *  style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {*} Returns the first element(s) of `array`.","     * @example","     *","     * _.first([1, 2, 3]);","     * // => 1","     *","     * _.first([1, 2, 3], 2);","     * // => [1, 2]","     *","     * _.first([1, 2, 3], function(num) {","     *   return num < 3;","     * });","     * // => [1, 2]","     *","     * var characters = [","     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },","     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },","     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }","     * ];","     *","     * // using \"_.pluck\" callback shorthand","     * _.first(characters, 'blocked');","     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]","     *","     * // using \"_.where\" callback shorthand","     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');","     * // => ['barney', 'fred']","     */","    function first(array, callback, thisArg) {","      var n = 0,","          length = array ? array.length : 0;","","      if (typeof callback != 'number' && callback != null) {","        var index = -1;","        callback = lodash.createCallback(callback, thisArg, 3);","        while (++index < length && callback(array[index], index, array)) {","          n++;","        }","      } else {","        n = callback;","        if (n == null || thisArg) {","          return array ? array[0] : undefined;","        }","      }","      return slice(array, 0, nativeMin(nativeMax(0, n), length));","    }","","    /**","     * Flattens a nested array (the nesting can be to any depth). If `isShallow`","     * is truey, the array will only be flattened a single level. If a callback","     * is provided each element of the array is passed through the callback before","     * flattening. The callback is bound to `thisArg` and invoked with three","     * arguments; (value, index, array).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {Array} array The array to flatten.","     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Array} Returns a new flattened array.","     * @example","     *","     * _.flatten([1, [2], [3, [[4]]]]);","     * // => [1, 2, 3, 4];","     *","     * _.flatten([1, [2], [3, [[4]]]], true);","     * // => [1, 2, 3, [[4]]];","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },","     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }","     * ];","     *","     * // using \"_.pluck\" callback shorthand","     * _.flatten(characters, 'pets');","     * // => ['hoppy', 'baby puss', 'dino']","     */","    function flatten(array, isShallow, callback, thisArg) {","      // juggle arguments","      if (typeof isShallow != 'boolean' && isShallow != null) {","        thisArg = callback;","        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;","        isShallow = false;","      }","      if (callback != null) {","        array = map(array, callback, thisArg);","      }","      return baseFlatten(array, isShallow);","    }","","    /**","     * Gets the index at which the first occurrence of `value` is found using","     * strict equality for comparisons, i.e. `===`. If the array is already sorted","     * providing `true` for `fromIndex` will run a faster binary search.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {Array} array The array to search.","     * @param {*} value The value to search for.","     * @param {boolean|number} [fromIndex=0] The index to search from or `true`","     *  to perform a binary search on a sorted array.","     * @returns {number} Returns the index of the matched value or `-1`.","     * @example","     *","     * _.indexOf([1, 2, 3, 1, 2, 3], 2);","     * // => 1","     *","     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);","     * // => 4","     *","     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);","     * // => 2","     */","    function indexOf(array, value, fromIndex) {","      if (typeof fromIndex == 'number') {","        var length = array ? array.length : 0;","        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);","      } else if (fromIndex) {","        var index = sortedIndex(array, value);","        return array[index] === value ? index : -1;","      }","      return baseIndexOf(array, value, fromIndex);","    }","","    /**","     * Gets all but the last element or last `n` elements of an array. If a","     * callback is provided elements at the end of the array are excluded from","     * the result as long as the callback returns truey. The callback is bound","     * to `thisArg` and invoked with three arguments; (value, index, array).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {Array} array The array to query.","     * @param {Function|Object|number|string} [callback=1] The function called","     *  per element or the number of elements to exclude. If a property name or","     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"","     *  style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Array} Returns a slice of `array`.","     * @example","     *","     * _.initial([1, 2, 3]);","     * // => [1, 2]","     *","     * _.initial([1, 2, 3], 2);","     * // => [1]","     *","     * _.initial([1, 2, 3], function(num) {","     *   return num > 1;","     * });","     * // => [1]","     *","     * var characters = [","     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },","     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },","     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }","     * ];","     *","     * // using \"_.pluck\" callback shorthand","     * _.initial(characters, 'blocked');","     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]","     *","     * // using \"_.where\" callback shorthand","     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');","     * // => ['barney', 'fred']","     */","    function initial(array, callback, thisArg) {","      var n = 0,","          length = array ? array.length : 0;","","      if (typeof callback != 'number' && callback != null) {","        var index = length;","        callback = lodash.createCallback(callback, thisArg, 3);","        while (index-- && callback(array[index], index, array)) {","          n++;","        }","      } else {","        n = (callback == null || thisArg) ? 1 : callback || n;","      }","      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));","    }","","    /**","     * Creates an array of unique values present in all provided arrays using","     * strict equality for comparisons, i.e. `===`.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {...Array} [array] The arrays to inspect.","     * @returns {Array} Returns an array of shared values.","     * @example","     *","     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);","     * // => [1, 2]","     */","    function intersection() {","      var args = [],","          argsIndex = -1,","          argsLength = arguments.length,","          caches = getArray(),","          indexOf = getIndexOf(),","          trustIndexOf = indexOf === baseIndexOf,","          seen = getArray();","","      while (++argsIndex < argsLength) {","        var value = arguments[argsIndex];","        if (isArray(value) || isArguments(value)) {","          args.push(value);","          caches.push(trustIndexOf && value.length >= largeArraySize &&","            createCache(argsIndex ? args[argsIndex] : seen));","        }","      }","      var array = args[0],","          index = -1,","          length = array ? array.length : 0,","          result = [];","","      outer:","      while (++index < length) {","        var cache = caches[0];","        value = array[index];","","        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {","          argsIndex = argsLength;","          (cache || seen).push(value);","          while (--argsIndex) {","            cache = caches[argsIndex];","            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {","              continue outer;","            }","          }","          result.push(value);","        }","      }","      while (argsLength--) {","        cache = caches[argsLength];","        if (cache) {","          releaseObject(cache);","        }","      }","      releaseArray(caches);","      releaseArray(seen);","      return result;","    }","","    /**","     * Gets the last element or last `n` elements of an array. If a callback is","     * provided elements at the end of the array are returned as long as the","     * callback returns truey. The callback is bound to `thisArg` and invoked","     * with three arguments; (value, index, array).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {Array} array The array to query.","     * @param {Function|Object|number|string} [callback] The function called","     *  per element or the number of elements to return. If a property name or","     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"","     *  style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {*} Returns the last element(s) of `array`.","     * @example","     *","     * _.last([1, 2, 3]);","     * // => 3","     *","     * _.last([1, 2, 3], 2);","     * // => [2, 3]","     *","     * _.last([1, 2, 3], function(num) {","     *   return num > 1;","     * });","     * // => [2, 3]","     *","     * var characters = [","     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },","     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },","     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }","     * ];","     *","     * // using \"_.pluck\" callback shorthand","     * _.pluck(_.last(characters, 'blocked'), 'name');","     * // => ['fred', 'pebbles']","     *","     * // using \"_.where\" callback shorthand","     * _.last(characters, { 'employer': 'na' });","     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]","     */","    function last(array, callback, thisArg) {","      var n = 0,","          length = array ? array.length : 0;","","      if (typeof callback != 'number' && callback != null) {","        var index = length;","        callback = lodash.createCallback(callback, thisArg, 3);","        while (index-- && callback(array[index], index, array)) {","          n++;","        }","      } else {","        n = callback;","        if (n == null || thisArg) {","          return array ? array[length - 1] : undefined;","        }","      }","      return slice(array, nativeMax(0, length - n));","    }","","    /**","     * Gets the index at which the last occurrence of `value` is found using strict","     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used","     * as the offset from the end of the collection.","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {Array} array The array to search.","     * @param {*} value The value to search for.","     * @param {number} [fromIndex=array.length-1] The index to search from.","     * @returns {number} Returns the index of the matched value or `-1`.","     * @example","     *","     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);","     * // => 4","     *","     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);","     * // => 1","     */","    function lastIndexOf(array, value, fromIndex) {","      var index = array ? array.length : 0;","      if (typeof fromIndex == 'number') {","        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;","      }","      while (index--) {","        if (array[index] === value) {","          return index;","        }","      }","      return -1;","    }","","    /**","     * Removes all provided values from the given array using strict equality for","     * comparisons, i.e. `===`.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {Array} array The array to modify.","     * @param {...*} [value] The values to remove.","     * @returns {Array} Returns `array`.","     * @example","     *","     * var array = [1, 2, 3, 1, 2, 3];","     * _.pull(array, 2, 3);","     * console.log(array);","     * // => [1, 1]","     */","    function pull(array) {","      var args = arguments,","          argsIndex = 0,","          argsLength = args.length,","          length = array ? array.length : 0;","","      while (++argsIndex < argsLength) {","        var index = -1,","            value = args[argsIndex];","        while (++index < length) {","          if (array[index] === value) {","            splice.call(array, index--, 1);","            length--;","          }","        }","      }","      return array;","    }","","    /**","     * Creates an array of numbers (positive and/or negative) progressing from","     * `start` up to but not including `end`. If `start` is less than `stop` a","     * zero-length range is created unless a negative `step` is specified.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {number} [start=0] The start of the range.","     * @param {number} end The end of the range.","     * @param {number} [step=1] The value to increment or decrement by.","     * @returns {Array} Returns a new range array.","     * @example","     *","     * _.range(4);","     * // => [0, 1, 2, 3]","     *","     * _.range(1, 5);","     * // => [1, 2, 3, 4]","     *","     * _.range(0, 20, 5);","     * // => [0, 5, 10, 15]","     *","     * _.range(0, -4, -1);","     * // => [0, -1, -2, -3]","     *","     * _.range(1, 4, 0);","     * // => [1, 1, 1]","     *","     * _.range(0);","     * // => []","     */","    function range(start, end, step) {","      start = +start || 0;","      step = typeof step == 'number' ? step : (+step || 1);","","      if (end == null) {","        end = start;","        start = 0;","      }","      // use `Array(length)` so engines like Chakra and V8 avoid slower modes","      // http://youtu.be/XAqIpGU8ZZk#t=17m25s","      var index = -1,","          length = nativeMax(0, ceil((end - start) / (step || 1))),","          result = Array(length);","","      while (++index < length) {","        result[index] = start;","        start += step;","      }","      return result;","    }","","    /**","     * Removes all elements from an array that the callback returns truey for","     * and returns an array of removed elements. The callback is bound to `thisArg`","     * and invoked with three arguments; (value, index, array).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {Array} array The array to modify.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Array} Returns a new array of removed elements.","     * @example","     *","     * var array = [1, 2, 3, 4, 5, 6];","     * var evens = _.remove(array, function(num) { return num % 2 == 0; });","     *","     * console.log(array);","     * // => [1, 3, 5]","     *","     * console.log(evens);","     * // => [2, 4, 6]","     */","    function remove(array, callback, thisArg) {","      var index = -1,","          length = array ? array.length : 0,","          result = [];","","      callback = lodash.createCallback(callback, thisArg, 3);","      while (++index < length) {","        var value = array[index];","        if (callback(value, index, array)) {","          result.push(value);","          splice.call(array, index--, 1);","          length--;","        }","      }","      return result;","    }","","    /**","     * The opposite of `_.initial` this method gets all but the first element or","     * first `n` elements of an array. If a callback function is provided elements","     * at the beginning of the array are excluded from the result as long as the","     * callback returns truey. The callback is bound to `thisArg` and invoked","     * with three arguments; (value, index, array).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @alias drop, tail","     * @category Arrays","     * @param {Array} array The array to query.","     * @param {Function|Object|number|string} [callback=1] The function called","     *  per element or the number of elements to exclude. If a property name or","     *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"","     *  style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Array} Returns a slice of `array`.","     * @example","     *","     * _.rest([1, 2, 3]);","     * // => [2, 3]","     *","     * _.rest([1, 2, 3], 2);","     * // => [3]","     *","     * _.rest([1, 2, 3], function(num) {","     *   return num < 3;","     * });","     * // => [3]","     *","     * var characters = [","     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },","     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },","     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }","     * ];","     *","     * // using \"_.pluck\" callback shorthand","     * _.pluck(_.rest(characters, 'blocked'), 'name');","     * // => ['fred', 'pebbles']","     *","     * // using \"_.where\" callback shorthand","     * _.rest(characters, { 'employer': 'slate' });","     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]","     */","    function rest(array, callback, thisArg) {","      if (typeof callback != 'number' && callback != null) {","        var n = 0,","            index = -1,","            length = array ? array.length : 0;","","        callback = lodash.createCallback(callback, thisArg, 3);","        while (++index < length && callback(array[index], index, array)) {","          n++;","        }","      } else {","        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);","      }","      return slice(array, n);","    }","","    /**","     * Uses a binary search to determine the smallest index at which a value","     * should be inserted into a given sorted array in order to maintain the sort","     * order of the array. If a callback is provided it will be executed for","     * `value` and each element of `array` to compute their sort ranking. The","     * callback is bound to `thisArg` and invoked with one argument; (value).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {Array} array The array to inspect.","     * @param {*} value The value to evaluate.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {number} Returns the index at which `value` should be inserted","     *  into `array`.","     * @example","     *","     * _.sortedIndex([20, 30, 50], 40);","     * // => 2","     *","     * // using \"_.pluck\" callback shorthand","     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');","     * // => 2","     *","     * var dict = {","     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }","     * };","     *","     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {","     *   return dict.wordToNumber[word];","     * });","     * // => 2","     *","     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {","     *   return this.wordToNumber[word];","     * }, dict);","     * // => 2","     */","    function sortedIndex(array, value, callback, thisArg) {","      var low = 0,","          high = array ? array.length : low;","","      // explicitly reference `identity` for better inlining in Firefox","      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;","      value = callback(value);","","      while (low < high) {","        var mid = (low + high) >>> 1;","        (callback(array[mid]) < value)","          ? low = mid + 1","          : high = mid;","      }","      return low;","    }","","    /**","     * Creates an array of unique values, in order, of the provided arrays using","     * strict equality for comparisons, i.e. `===`.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {...Array} [array] The arrays to inspect.","     * @returns {Array} Returns an array of combined values.","     * @example","     *","     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);","     * // => [1, 2, 3, 5, 4]","     */","    function union() {","      return baseUniq(baseFlatten(arguments, true, true));","    }","","    /**","     * Creates a duplicate-value-free version of an array using strict equality","     * for comparisons, i.e. `===`. If the array is sorted, providing","     * `true` for `isSorted` will use a faster algorithm. If a callback is provided","     * each element of `array` is passed through the callback before uniqueness","     * is computed. The callback is bound to `thisArg` and invoked with three","     * arguments; (value, index, array).","     *","     * If a property name is provided for `callback` the created \"_.pluck\" style","     * callback will return the property value of the given element.","     *","     * If an object is provided for `callback` the created \"_.where\" style callback","     * will return `true` for elements that have the properties of the given object,","     * else `false`.","     *","     * @static","     * @memberOf _","     * @alias unique","     * @category Arrays","     * @param {Array} array The array to process.","     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.","     * @param {Function|Object|string} [callback=identity] The function called","     *  per iteration. If a property name or object is provided it will be used","     *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Array} Returns a duplicate-value-free array.","     * @example","     *","     * _.uniq([1, 2, 1, 3, 1]);","     * // => [1, 2, 3]","     *","     * _.uniq([1, 1, 2, 2, 3], true);","     * // => [1, 2, 3]","     *","     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });","     * // => ['A', 'b', 'C']","     *","     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);","     * // => [1, 2.5, 3]","     *","     * // using \"_.pluck\" callback shorthand","     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');","     * // => [{ 'x': 1 }, { 'x': 2 }]","     */","    function uniq(array, isSorted, callback, thisArg) {","      // juggle arguments","      if (typeof isSorted != 'boolean' && isSorted != null) {","        thisArg = callback;","        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;","        isSorted = false;","      }","      if (callback != null) {","        callback = lodash.createCallback(callback, thisArg, 3);","      }","      return baseUniq(array, isSorted, callback);","    }","","    /**","     * Creates an array excluding all provided values using strict equality for","     * comparisons, i.e. `===`.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {Array} array The array to filter.","     * @param {...*} [value] The values to exclude.","     * @returns {Array} Returns a new array of filtered values.","     * @example","     *","     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);","     * // => [2, 3, 4]","     */","    function without(array) {","      return baseDifference(array, slice(arguments, 1));","    }","","    /**","     * Creates an array that is the symmetric difference of the provided arrays.","     * See http://en.wikipedia.org/wiki/Symmetric_difference.","     *","     * @static","     * @memberOf _","     * @category Arrays","     * @param {...Array} [array] The arrays to inspect.","     * @returns {Array} Returns an array of values.","     * @example","     *","     * _.xor([1, 2, 3], [5, 2, 1, 4]);","     * // => [3, 5, 4]","     *","     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);","     * // => [1, 4, 5]","     */","    function xor() {","      var index = -1,","          length = arguments.length;","","      while (++index < length) {","        var array = arguments[index];","        if (isArray(array) || isArguments(array)) {","          var result = result","            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))","            : array;","        }","      }","      return result || [];","    }","","    /**","     * Creates an array of grouped elements, the first of which contains the first","     * elements of the given arrays, the second of which contains the second","     * elements of the given arrays, and so on.","     *","     * @static","     * @memberOf _","     * @alias unzip","     * @category Arrays","     * @param {...Array} [array] Arrays to process.","     * @returns {Array} Returns a new array of grouped elements.","     * @example","     *","     * _.zip(['fred', 'barney'], [30, 40], [true, false]);","     * // => [['fred', 30, true], ['barney', 40, false]]","     */","    function zip() {","      var array = arguments.length > 1 ? arguments : arguments[0],","          index = -1,","          length = array ? max(pluck(array, 'length')) : 0,","          result = Array(length < 0 ? 0 : length);","","      while (++index < length) {","        result[index] = pluck(array, index);","      }","      return result;","    }","","    /**","     * Creates an object composed from arrays of `keys` and `values`. Provide","     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`","     * or two arrays, one of `keys` and one of corresponding `values`.","     *","     * @static","     * @memberOf _","     * @alias object","     * @category Arrays","     * @param {Array} keys The array of keys.","     * @param {Array} [values=[]] The array of values.","     * @returns {Object} Returns an object composed of the given keys and","     *  corresponding values.","     * @example","     *","     * _.zipObject(['fred', 'barney'], [30, 40]);","     * // => { 'fred': 30, 'barney': 40 }","     */","    function zipObject(keys, values) {","      var index = -1,","          length = keys ? keys.length : 0,","          result = {};","","      if (!values && length && !isArray(keys[0])) {","        values = [];","      }","      while (++index < length) {","        var key = keys[index];","        if (values) {","          result[key] = values[index];","        } else if (key) {","          result[key[0]] = key[1];","        }","      }","      return result;","    }","","    /*--------------------------------------------------------------------------*/","","    /**","     * Creates a function that executes `func`, with  the `this` binding and","     * arguments of the created function, only after being called `n` times.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {number} n The number of times the function must be called before","     *  `func` is executed.","     * @param {Function} func The function to restrict.","     * @returns {Function} Returns the new restricted function.","     * @example","     *","     * var saves = ['profile', 'settings'];","     *","     * var done = _.after(saves.length, function() {","     *   console.log('Done saving!');","     * });","     *","     * _.forEach(saves, function(type) {","     *   asyncSave({ 'type': type, 'complete': done });","     * });","     * // => logs 'Done saving!', after all saves have completed","     */","    function after(n, func) {","      if (!isFunction(func)) {","        throw new TypeError;","      }","      return function() {","        if (--n < 1) {","          return func.apply(this, arguments);","        }","      };","    }","","    /**","     * Creates a function that, when called, invokes `func` with the `this`","     * binding of `thisArg` and prepends any additional `bind` arguments to those","     * provided to the bound function.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {Function} func The function to bind.","     * @param {*} [thisArg] The `this` binding of `func`.","     * @param {...*} [arg] Arguments to be partially applied.","     * @returns {Function} Returns the new bound function.","     * @example","     *","     * var func = function(greeting) {","     *   return greeting + ' ' + this.name;","     * };","     *","     * func = _.bind(func, { 'name': 'fred' }, 'hi');","     * func();","     * // => 'hi fred'","     */","    function bind(func, thisArg) {","      return arguments.length > 2","        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)","        : createWrapper(func, 1, null, null, thisArg);","    }","","    /**","     * Binds methods of an object to the object itself, overwriting the existing","     * method. Method names may be specified as individual arguments or as arrays","     * of method names. If no method names are provided all the function properties","     * of `object` will be bound.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {Object} object The object to bind and assign the bound methods to.","     * @param {...string} [methodName] The object method names to","     *  bind, specified as individual method names or arrays of method names.","     * @returns {Object} Returns `object`.","     * @example","     *","     * var view = {","     *   'label': 'docs',","     *   'onClick': function() { console.log('clicked ' + this.label); }","     * };","     *","     * _.bindAll(view);","     * jQuery('#docs').on('click', view.onClick);","     * // => logs 'clicked docs', when the button is clicked","     */","    function bindAll(object) {","      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),","          index = -1,","          length = funcs.length;","","      while (++index < length) {","        var key = funcs[index];","        object[key] = createWrapper(object[key], 1, null, null, object);","      }","      return object;","    }","","    /**","     * Creates a function that, when called, invokes the method at `object[key]`","     * and prepends any additional `bindKey` arguments to those provided to the bound","     * function. This method differs from `_.bind` by allowing bound functions to","     * reference methods that will be redefined or don't yet exist.","     * See http://michaux.ca/articles/lazy-function-definition-pattern.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {Object} object The object the method belongs to.","     * @param {string} key The key of the method.","     * @param {...*} [arg] Arguments to be partially applied.","     * @returns {Function} Returns the new bound function.","     * @example","     *","     * var object = {","     *   'name': 'fred',","     *   'greet': function(greeting) {","     *     return greeting + ' ' + this.name;","     *   }","     * };","     *","     * var func = _.bindKey(object, 'greet', 'hi');","     * func();","     * // => 'hi fred'","     *","     * object.greet = function(greeting) {","     *   return greeting + 'ya ' + this.name + '!';","     * };","     *","     * func();","     * // => 'hiya fred!'","     */","    function bindKey(object, key) {","      return arguments.length > 2","        ? createWrapper(key, 19, slice(arguments, 2), null, object)","        : createWrapper(key, 3, null, null, object);","    }","","    /**","     * Creates a function that is the composition of the provided functions,","     * where each function consumes the return value of the function that follows.","     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.","     * Each function is executed with the `this` binding of the composed function.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {...Function} [func] Functions to compose.","     * @returns {Function} Returns the new composed function.","     * @example","     *","     * var realNameMap = {","     *   'pebbles': 'penelope'","     * };","     *","     * var format = function(name) {","     *   name = realNameMap[name.toLowerCase()] || name;","     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();","     * };","     *","     * var greet = function(formatted) {","     *   return 'Hiya ' + formatted + '!';","     * };","     *","     * var welcome = _.compose(greet, format);","     * welcome('pebbles');","     * // => 'Hiya Penelope!'","     */","    function compose() {","      var funcs = arguments,","          length = funcs.length;","","      while (length--) {","        if (!isFunction(funcs[length])) {","          throw new TypeError;","        }","      }","      return function() {","        var args = arguments,","            length = funcs.length;","","        while (length--) {","          args = [funcs[length].apply(this, args)];","        }","        return args[0];","      };","    }","","    /**","     * Creates a function which accepts one or more arguments of `func` that when","     * invoked either executes `func` returning its result, if all `func` arguments","     * have been provided, or returns a function that accepts one or more of the","     * remaining `func` arguments, and so on. The arity of `func` can be specified","     * if `func.length` is not sufficient.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {Function} func The function to curry.","     * @param {number} [arity=func.length] The arity of `func`.","     * @returns {Function} Returns the new curried function.","     * @example","     *","     * var curried = _.curry(function(a, b, c) {","     *   console.log(a + b + c);","     * });","     *","     * curried(1)(2)(3);","     * // => 6","     *","     * curried(1, 2)(3);","     * // => 6","     *","     * curried(1, 2, 3);","     * // => 6","     */","    function curry(func, arity) {","      arity = typeof arity == 'number' ? arity : (+arity || func.length);","      return createWrapper(func, 4, null, null, null, arity);","    }","","    /**","     * Creates a function that will delay the execution of `func` until after","     * `wait` milliseconds have elapsed since the last time it was invoked.","     * Provide an options object to indicate that `func` should be invoked on","     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls","     * to the debounced function will return the result of the last `func` call.","     *","     * Note: If `leading` and `trailing` options are `true` `func` will be called","     * on the trailing edge of the timeout only if the the debounced function is","     * invoked more than once during the `wait` timeout.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {Function} func The function to debounce.","     * @param {number} wait The number of milliseconds to delay.","     * @param {Object} [options] The options object.","     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.","     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.","     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.","     * @returns {Function} Returns the new debounced function.","     * @example","     *","     * // avoid costly calculations while the window size is in flux","     * var lazyLayout = _.debounce(calculateLayout, 150);","     * jQuery(window).on('resize', lazyLayout);","     *","     * // execute `sendMail` when the click event is fired, debouncing subsequent calls","     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {","     *   'leading': true,","     *   'trailing': false","     * });","     *","     * // ensure `batchLog` is executed once after 1 second of debounced calls","     * var source = new EventSource('/stream');","     * source.addEventListener('message', _.debounce(batchLog, 250, {","     *   'maxWait': 1000","     * }, false);","     */","    function debounce(func, wait, options) {","      var args,","          maxTimeoutId,","          result,","          stamp,","          thisArg,","          timeoutId,","          trailingCall,","          lastCalled = 0,","          maxWait = false,","          trailing = true;","","      if (!isFunction(func)) {","        throw new TypeError;","      }","      wait = nativeMax(0, wait) || 0;","      if (options === true) {","        var leading = true;","        trailing = false;","      } else if (isObject(options)) {","        leading = options.leading;","        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);","        trailing = 'trailing' in options ? options.trailing : trailing;","      }","      var delayed = function() {","        var remaining = wait - (now() - stamp);","        if (remaining <= 0) {","          if (maxTimeoutId) {","            clearTimeout(maxTimeoutId);","          }","          var isCalled = trailingCall;","          maxTimeoutId = timeoutId = trailingCall = undefined;","          if (isCalled) {","            lastCalled = now();","            result = func.apply(thisArg, args);","            if (!timeoutId && !maxTimeoutId) {","              args = thisArg = null;","            }","          }","        } else {","          timeoutId = setTimeout(delayed, remaining);","        }","      };","","      var maxDelayed = function() {","        if (timeoutId) {","          clearTimeout(timeoutId);","        }","        maxTimeoutId = timeoutId = trailingCall = undefined;","        if (trailing || (maxWait !== wait)) {","          lastCalled = now();","          result = func.apply(thisArg, args);","          if (!timeoutId && !maxTimeoutId) {","            args = thisArg = null;","          }","        }","      };","","      return function() {","        args = arguments;","        stamp = now();","        thisArg = this;","        trailingCall = trailing && (timeoutId || !leading);","","        if (maxWait === false) {","          var leadingCall = leading && !timeoutId;","        } else {","          if (!maxTimeoutId && !leading) {","            lastCalled = stamp;","          }","          var remaining = maxWait - (stamp - lastCalled),","              isCalled = remaining <= 0;","","          if (isCalled) {","            if (maxTimeoutId) {","              maxTimeoutId = clearTimeout(maxTimeoutId);","            }","            lastCalled = stamp;","            result = func.apply(thisArg, args);","          }","          else if (!maxTimeoutId) {","            maxTimeoutId = setTimeout(maxDelayed, remaining);","          }","        }","        if (isCalled && timeoutId) {","          timeoutId = clearTimeout(timeoutId);","        }","        else if (!timeoutId && wait !== maxWait) {","          timeoutId = setTimeout(delayed, wait);","        }","        if (leadingCall) {","          isCalled = true;","          result = func.apply(thisArg, args);","        }","        if (isCalled && !timeoutId && !maxTimeoutId) {","          args = thisArg = null;","        }","        return result;","      };","    }","","    /**","     * Defers executing the `func` function until the current call stack has cleared.","     * Additional arguments will be provided to `func` when it is invoked.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {Function} func The function to defer.","     * @param {...*} [arg] Arguments to invoke the function with.","     * @returns {number} Returns the timer id.","     * @example","     *","     * _.defer(function(text) { console.log(text); }, 'deferred');","     * // logs 'deferred' after one or more milliseconds","     */","    function defer(func) {","      if (!isFunction(func)) {","        throw new TypeError;","      }","      var args = slice(arguments, 1);","      return setTimeout(function() { func.apply(undefined, args); }, 1);","    }","","    /**","     * Executes the `func` function after `wait` milliseconds. Additional arguments","     * will be provided to `func` when it is invoked.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {Function} func The function to delay.","     * @param {number} wait The number of milliseconds to delay execution.","     * @param {...*} [arg] Arguments to invoke the function with.","     * @returns {number} Returns the timer id.","     * @example","     *","     * _.delay(function(text) { console.log(text); }, 1000, 'later');","     * // => logs 'later' after one second","     */","    function delay(func, wait) {","      if (!isFunction(func)) {","        throw new TypeError;","      }","      var args = slice(arguments, 2);","      return setTimeout(function() { func.apply(undefined, args); }, wait);","    }","","    /**","     * Creates a function that memoizes the result of `func`. If `resolver` is","     * provided it will be used to determine the cache key for storing the result","     * based on the arguments provided to the memoized function. By default, the","     * first argument provided to the memoized function is used as the cache key.","     * The `func` is executed with the `this` binding of the memoized function.","     * The result cache is exposed as the `cache` property on the memoized function.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {Function} func The function to have its output memoized.","     * @param {Function} [resolver] A function used to resolve the cache key.","     * @returns {Function} Returns the new memoizing function.","     * @example","     *","     * var fibonacci = _.memoize(function(n) {","     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);","     * });","     *","     * fibonacci(9)","     * // => 34","     *","     * var data = {","     *   'fred': { 'name': 'fred', 'age': 40 },","     *   'pebbles': { 'name': 'pebbles', 'age': 1 }","     * };","     *","     * // modifying the result cache","     * var get = _.memoize(function(name) { return data[name]; }, _.identity);","     * get('pebbles');","     * // => { 'name': 'pebbles', 'age': 1 }","     *","     * get.cache.pebbles.name = 'penelope';","     * get('pebbles');","     * // => { 'name': 'penelope', 'age': 1 }","     */","    function memoize(func, resolver) {","      if (!isFunction(func)) {","        throw new TypeError;","      }","      var memoized = function() {","        var cache = memoized.cache,","            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];","","        return hasOwnProperty.call(cache, key)","          ? cache[key]","          : (cache[key] = func.apply(this, arguments));","      }","      memoized.cache = {};","      return memoized;","    }","","    /**","     * Creates a function that is restricted to execute `func` once. Repeat calls to","     * the function will return the value of the first call. The `func` is executed","     * with the `this` binding of the created function.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {Function} func The function to restrict.","     * @returns {Function} Returns the new restricted function.","     * @example","     *","     * var initialize = _.once(createApplication);","     * initialize();","     * initialize();","     * // `initialize` executes `createApplication` once","     */","    function once(func) {","      var ran,","          result;","","      if (!isFunction(func)) {","        throw new TypeError;","      }","      return function() {","        if (ran) {","          return result;","        }","        ran = true;","        result = func.apply(this, arguments);","","        // clear the `func` variable so the function may be garbage collected","        func = null;","        return result;","      };","    }","","    /**","     * Creates a function that, when called, invokes `func` with any additional","     * `partial` arguments prepended to those provided to the new function. This","     * method is similar to `_.bind` except it does **not** alter the `this` binding.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {Function} func The function to partially apply arguments to.","     * @param {...*} [arg] Arguments to be partially applied.","     * @returns {Function} Returns the new partially applied function.","     * @example","     *","     * var greet = function(greeting, name) { return greeting + ' ' + name; };","     * var hi = _.partial(greet, 'hi');","     * hi('fred');","     * // => 'hi fred'","     */","    function partial(func) {","      return createWrapper(func, 16, slice(arguments, 1));","    }","","    /**","     * This method is like `_.partial` except that `partial` arguments are","     * appended to those provided to the new function.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {Function} func The function to partially apply arguments to.","     * @param {...*} [arg] Arguments to be partially applied.","     * @returns {Function} Returns the new partially applied function.","     * @example","     *","     * var defaultsDeep = _.partialRight(_.merge, _.defaults);","     *","     * var options = {","     *   'variable': 'data',","     *   'imports': { 'jq': $ }","     * };","     *","     * defaultsDeep(options, _.templateSettings);","     *","     * options.variable","     * // => 'data'","     *","     * options.imports","     * // => { '_': _, 'jq': $ }","     */","    function partialRight(func) {","      return createWrapper(func, 32, null, slice(arguments, 1));","    }","","    /**","     * Creates a function that, when executed, will only call the `func` function","     * at most once per every `wait` milliseconds. Provide an options object to","     * indicate that `func` should be invoked on the leading and/or trailing edge","     * of the `wait` timeout. Subsequent calls to the throttled function will","     * return the result of the last `func` call.","     *","     * Note: If `leading` and `trailing` options are `true` `func` will be called","     * on the trailing edge of the timeout only if the the throttled function is","     * invoked more than once during the `wait` timeout.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {Function} func The function to throttle.","     * @param {number} wait The number of milliseconds to throttle executions to.","     * @param {Object} [options] The options object.","     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.","     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.","     * @returns {Function} Returns the new throttled function.","     * @example","     *","     * // avoid excessively updating the position while scrolling","     * var throttled = _.throttle(updatePosition, 100);","     * jQuery(window).on('scroll', throttled);","     *","     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes","     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {","     *   'trailing': false","     * }));","     */","    function throttle(func, wait, options) {","      var leading = true,","          trailing = true;","","      if (!isFunction(func)) {","        throw new TypeError;","      }","      if (options === false) {","        leading = false;","      } else if (isObject(options)) {","        leading = 'leading' in options ? options.leading : leading;","        trailing = 'trailing' in options ? options.trailing : trailing;","      }","      debounceOptions.leading = leading;","      debounceOptions.maxWait = wait;","      debounceOptions.trailing = trailing;","","      return debounce(func, wait, debounceOptions);","    }","","    /**","     * Creates a function that provides `value` to the wrapper function as its","     * first argument. Additional arguments provided to the function are appended","     * to those provided to the wrapper function. The wrapper is executed with","     * the `this` binding of the created function.","     *","     * @static","     * @memberOf _","     * @category Functions","     * @param {*} value The value to wrap.","     * @param {Function} wrapper The wrapper function.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var p = _.wrap(_.escape, function(func, text) {","     *   return '<p>' + func(text) + '</p>';","     * });","     *","     * p('Fred, Wilma, & Pebbles');","     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'","     */","    function wrap(value, wrapper) {","      return createWrapper(wrapper, 16, [value]);","    }","","    /*--------------------------------------------------------------------------*/","","    /**","     * Creates a function that returns `value`.","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @param {*} value The value to return from the new function.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var object = { 'name': 'fred' };","     * var getter = _.constant(object);","     * getter() === object;","     * // => true","     */","    function constant(value) {","      return function() {","        return value;","      };","    }","","    /**","     * Produces a callback bound to an optional `thisArg`. If `func` is a property","     * name the created callback will return the property value for a given element.","     * If `func` is an object the created callback will return `true` for elements","     * that contain the equivalent object properties, otherwise it will return `false`.","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @param {*} [func=identity] The value to convert to a callback.","     * @param {*} [thisArg] The `this` binding of the created callback.","     * @param {number} [argCount] The number of arguments the callback accepts.","     * @returns {Function} Returns a callback function.","     * @example","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 36 },","     *   { 'name': 'fred',   'age': 40 }","     * ];","     *","     * // wrap to create custom callback shorthands","     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {","     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);","     *   return !match ? func(callback, thisArg) : function(object) {","     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];","     *   };","     * });","     *","     * _.filter(characters, 'age__gt38');","     * // => [{ 'name': 'fred', 'age': 40 }]","     */","    function createCallback(func, thisArg, argCount) {","      var type = typeof func;","      if (func == null || type == 'function') {","        return baseCreateCallback(func, thisArg, argCount);","      }","      // handle \"_.pluck\" style callback shorthands","      if (type != 'object') {","        return property(func);","      }","      var props = keys(func),","          key = props[0],","          a = func[key];","","      // handle \"_.where\" style callback shorthands","      if (props.length == 1 && a === a && !isObject(a)) {","        // fast path the common case of providing an object with a single","        // property containing a primitive value","        return function(object) {","          var b = object[key];","          return a === b && (a !== 0 || (1 / a == 1 / b));","        };","      }","      return function(object) {","        var length = props.length,","            result = false;","","        while (length--) {","          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {","            break;","          }","        }","        return result;","      };","    }","","    /**","     * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their","     * corresponding HTML entities.","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @param {string} string The string to escape.","     * @returns {string} Returns the escaped string.","     * @example","     *","     * _.escape('Fred, Wilma, & Pebbles');","     * // => 'Fred, Wilma, &amp; Pebbles'","     */","    function escape(string) {","      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);","    }","","    /**","     * This method returns the first argument provided to it.","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @param {*} value Any value.","     * @returns {*} Returns `value`.","     * @example","     *","     * var object = { 'name': 'fred' };","     * _.identity(object) === object;","     * // => true","     */","    function identity(value) {","      return value;","    }","","    /**","     * Adds function properties of a source object to the destination object.","     * If `object` is a function methods will be added to its prototype as well.","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @param {Function|Object} [object=lodash] object The destination object.","     * @param {Object} source The object of functions to add.","     * @param {Object} [options] The options object.","     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.","     * @example","     *","     * function capitalize(string) {","     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();","     * }","     *","     * _.mixin({ 'capitalize': capitalize });","     * _.capitalize('fred');","     * // => 'Fred'","     *","     * _('fred').capitalize().value();","     * // => 'Fred'","     *","     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });","     * _('fred').capitalize();","     * // => 'Fred'","     */","    function mixin(object, source, options) {","      var chain = true,","          methodNames = source && functions(source);","","      if (!source || (!options && !methodNames.length)) {","        if (options == null) {","          options = source;","        }","        ctor = lodashWrapper;","        source = object;","        object = lodash;","        methodNames = functions(source);","      }","      if (options === false) {","        chain = false;","      } else if (isObject(options) && 'chain' in options) {","        chain = options.chain;","      }","      var ctor = object,","          isFunc = isFunction(ctor);","","      forEach(methodNames, function(methodName) {","        var func = object[methodName] = source[methodName];","        if (isFunc) {","          ctor.prototype[methodName] = function() {","            var chainAll = this.__chain__,","                value = this.__wrapped__,","                args = [value];","","            push.apply(args, arguments);","            var result = func.apply(object, args);","            if (chain || chainAll) {","              if (value === result && isObject(result)) {","                return this;","              }","              result = new ctor(result);","              result.__chain__ = chainAll;","            }","            return result;","          };","        }","      });","    }","","    /**","     * Reverts the '_' variable to its previous value and returns a reference to","     * the `lodash` function.","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @returns {Function} Returns the `lodash` function.","     * @example","     *","     * var lodash = _.noConflict();","     */","    function noConflict() {","      context._ = oldDash;","      return this;","    }","","    /**","     * A no-operation function.","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @example","     *","     * var object = { 'name': 'fred' };","     * _.noop(object) === undefined;","     * // => true","     */","    function noop() {","      // no operation performed","    }","","    /**","     * Gets the number of milliseconds that have elapsed since the Unix epoch","     * (1 January 1970 00:00:00 UTC).","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @example","     *","     * var stamp = _.now();","     * _.defer(function() { console.log(_.now() - stamp); });","     * // => logs the number of milliseconds it took for the deferred function to be called","     */","    var now = isNative(now = Date.now) && now || function() {","      return new Date().getTime();","    };","","    /**","     * Converts the given value into an integer of the specified radix.","     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the","     * `value` is a hexadecimal, in which case a `radix` of `16` is used.","     *","     * Note: This method avoids differences in native ES3 and ES5 `parseInt`","     * implementations. See http://es5.github.io/#E.","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @param {string} value The value to parse.","     * @param {number} [radix] The radix used to interpret the value to parse.","     * @returns {number} Returns the new integer value.","     * @example","     *","     * _.parseInt('08');","     * // => 8","     */","    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {","      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`","      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);","    };","","    /**","     * Creates a \"_.pluck\" style function, which returns the `key` value of a","     * given object.","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @param {string} key The name of the property to retrieve.","     * @returns {Function} Returns the new function.","     * @example","     *","     * var characters = [","     *   { 'name': 'fred',   'age': 40 },","     *   { 'name': 'barney', 'age': 36 }","     * ];","     *","     * var getName = _.property('name');","     *","     * _.map(characters, getName);","     * // => ['barney', 'fred']","     *","     * _.sortBy(characters, getName);","     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]","     */","    function property(key) {","      return function(object) {","        return object[key];","      };","    }","","    /**","     * Produces a random number between `min` and `max` (inclusive). If only one","     * argument is provided a number between `0` and the given number will be","     * returned. If `floating` is truey or either `min` or `max` are floats a","     * floating-point number will be returned instead of an integer.","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @param {number} [min=0] The minimum possible value.","     * @param {number} [max=1] The maximum possible value.","     * @param {boolean} [floating=false] Specify returning a floating-point number.","     * @returns {number} Returns a random number.","     * @example","     *","     * _.random(0, 5);","     * // => an integer between 0 and 5","     *","     * _.random(5);","     * // => also an integer between 0 and 5","     *","     * _.random(5, true);","     * // => a floating-point number between 0 and 5","     *","     * _.random(1.2, 5.2);","     * // => a floating-point number between 1.2 and 5.2","     */","    function random(min, max, floating) {","      var noMin = min == null,","          noMax = max == null;","","      if (floating == null) {","        if (typeof min == 'boolean' && noMax) {","          floating = min;","          min = 1;","        }","        else if (!noMax && typeof max == 'boolean') {","          floating = max;","          noMax = true;","        }","      }","      if (noMin && noMax) {","        max = 1;","      }","      min = +min || 0;","      if (noMax) {","        max = min;","        min = 0;","      } else {","        max = +max || 0;","      }","      if (floating || min % 1 || max % 1) {","        var rand = nativeRandom();","        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);","      }","      return baseRandom(min, max);","    }","","    /**","     * Resolves the value of property `key` on `object`. If `key` is a function","     * it will be invoked with the `this` binding of `object` and its result returned,","     * else the property value is returned. If `object` is falsey then `undefined`","     * is returned.","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @param {Object} object The object to inspect.","     * @param {string} key The name of the property to resolve.","     * @returns {*} Returns the resolved value.","     * @example","     *","     * var object = {","     *   'cheese': 'crumpets',","     *   'stuff': function() {","     *     return 'nonsense';","     *   }","     * };","     *","     * _.result(object, 'cheese');","     * // => 'crumpets'","     *","     * _.result(object, 'stuff');","     * // => 'nonsense'","     */","    function result(object, key) {","      if (object) {","        var value = object[key];","        return isFunction(value) ? object[key]() : value;","      }","    }","","    /**","     * A micro-templating method that handles arbitrary delimiters, preserves","     * whitespace, and correctly escapes quotes within interpolated code.","     *","     * Note: In the development build, `_.template` utilizes sourceURLs for easier","     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl","     *","     * For more information on precompiling templates see:","     * https://lodash.com/custom-builds","     *","     * For more information on Chrome extension sandboxes see:","     * http://developer.chrome.com/stable/extensions/sandboxingEval.html","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @param {string} text The template text.","     * @param {Object} data The data object used to populate the text.","     * @param {Object} [options] The options object.","     * @param {RegExp} [options.escape] The \"escape\" delimiter.","     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.","     * @param {Object} [options.imports] An object to import into the template as local variables.","     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.","     * @param {string} [sourceURL] The sourceURL of the template's compiled source.","     * @param {string} [variable] The data object variable name.","     * @returns {Function|string} Returns a compiled function when no `data` object","     *  is given, else it returns the interpolated text.","     * @example","     *","     * // using the \"interpolate\" delimiter to create a compiled template","     * var compiled = _.template('hello <%= name %>');","     * compiled({ 'name': 'fred' });","     * // => 'hello fred'","     *","     * // using the \"escape\" delimiter to escape HTML in data property values","     * _.template('<b><%- value %></b>', { 'value': '<script>' });","     * // => '<b>&lt;script&gt;</b>'","     *","     * // using the \"evaluate\" delimiter to generate HTML","     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';","     * _.template(list, { 'people': ['fred', 'barney'] });","     * // => '<li>fred</li><li>barney</li>'","     *","     * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter","     * _.template('hello ${ name }', { 'name': 'pebbles' });","     * // => 'hello pebbles'","     *","     * // using the internal `print` function in \"evaluate\" delimiters","     * _.template('<% print(\"hello \" + name); %>!', { 'name': 'barney' });","     * // => 'hello barney!'","     *","     * // using a custom template delimiters","     * _.templateSettings = {","     *   'interpolate': /{{([\\s\\S]+?)}}/g","     * };","     *","     * _.template('hello {{ name }}!', { 'name': 'mustache' });","     * // => 'hello mustache!'","     *","     * // using the `imports` option to import jQuery","     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';","     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });","     * // => '<li>fred</li><li>barney</li>'","     *","     * // using the `sourceURL` option to specify a custom sourceURL for the template","     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });","     * compiled(data);","     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector","     *","     * // using the `variable` option to ensure a with-statement isn't used in the compiled template","     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });","     * compiled.source;","     * // => function(data) {","     *   var __t, __p = '', __e = _.escape;","     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';","     *   return __p;","     * }","     *","     * // using the `source` property to inline compiled templates for meaningful","     * // line numbers in error messages and a stack trace","     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\","     *   var JST = {\\","     *     \"main\": ' + _.template(mainText).source + '\\","     *   };\\","     * ');","     */","    function template(text, data, options) {","      // based on John Resig's `tmpl` implementation","      // http://ejohn.org/blog/javascript-micro-templating/","      // and Laura Doktorova's doT.js","      // https://github.com/olado/doT","      var settings = lodash.templateSettings;","      text = String(text || '');","","      // avoid missing dependencies when `iteratorTemplate` is not defined","      options = defaults({}, options, settings);","","      var imports = defaults({}, options.imports, settings.imports),","          importsKeys = keys(imports),","          importsValues = values(imports);","","      var isEvaluating,","          index = 0,","          interpolate = options.interpolate || reNoMatch,","          source = \"__p += '\";","","      // compile the regexp to match each delimiter","      var reDelimiters = RegExp(","        (options.escape || reNoMatch).source + '|' +","        interpolate.source + '|' +","        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +","        (options.evaluate || reNoMatch).source + '|$'","      , 'g');","","      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {","        interpolateValue || (interpolateValue = esTemplateValue);","","        // escape characters that cannot be included in string literals","        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);","","        // replace delimiters with snippets","        if (escapeValue) {","          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";","        }","        if (evaluateValue) {","          isEvaluating = true;","          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";","        }","        if (interpolateValue) {","          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";","        }","        index = offset + match.length;","","        // the JS engine embedded in Adobe products requires returning the `match`","        // string in order to produce the correct `offset` value","        return match;","      });","","      source += \"';\\n\";","","      // if `variable` is not specified, wrap a with-statement around the generated","      // code to add the data object to the top of the scope chain","      var variable = options.variable,","          hasVariable = variable;","","      if (!hasVariable) {","        variable = 'obj';","        source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';","      }","      // cleanup code by stripping empty strings","      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)","        .replace(reEmptyStringMiddle, '$1')","        .replace(reEmptyStringTrailing, '$1;');","","      // frame code as the function body","      source = 'function(' + variable + ') {\\n' +","        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +","        \"var __t, __p = '', __e = _.escape\" +","        (isEvaluating","          ? ', __j = Array.prototype.join;\\n' +","            \"function print() { __p += __j.call(arguments, '') }\\n\"","          : ';\\n'","        ) +","        source +","        'return __p\\n}';","","      // Use a sourceURL for easier debugging.","      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl","      var sourceURL = '\\n/*\\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';","","      try {","        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);","      } catch(e) {","        e.source = source;","        throw e;","      }","      if (data) {","        return result(data);","      }","      // provide the compiled function's source by its `toString` method, in","      // supported environments, or the `source` property as a convenience for","      // inlining compiled templates during the build process","      result.source = source;","      return result;","    }","","    /**","     * Executes the callback `n` times, returning an array of the results","     * of each callback execution. The callback is bound to `thisArg` and invoked","     * with one argument; (index).","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @param {number} n The number of times to execute the callback.","     * @param {Function} callback The function called per iteration.","     * @param {*} [thisArg] The `this` binding of `callback`.","     * @returns {Array} Returns an array of the results of each `callback` execution.","     * @example","     *","     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));","     * // => [3, 6, 4]","     *","     * _.times(3, function(n) { mage.castSpell(n); });","     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively","     *","     * _.times(3, function(n) { this.cast(n); }, mage);","     * // => also calls `mage.castSpell(n)` three times","     */","    function times(n, callback, thisArg) {","      n = (n = +n) > -1 ? n : 0;","      var index = -1,","          result = Array(n);","","      callback = baseCreateCallback(callback, thisArg, 1);","      while (++index < n) {","        result[index] = callback(index);","      }","      return result;","    }","","    /**","     * The inverse of `_.escape` this method converts the HTML entities","     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their","     * corresponding characters.","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @param {string} string The string to unescape.","     * @returns {string} Returns the unescaped string.","     * @example","     *","     * _.unescape('Fred, Barney &amp; Pebbles');","     * // => 'Fred, Barney & Pebbles'","     */","    function unescape(string) {","      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);","    }","","    /**","     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.","     *","     * @static","     * @memberOf _","     * @category Utilities","     * @param {string} [prefix] The value to prefix the ID with.","     * @returns {string} Returns the unique ID.","     * @example","     *","     * _.uniqueId('contact_');","     * // => 'contact_104'","     *","     * _.uniqueId();","     * // => '105'","     */","    function uniqueId(prefix) {","      var id = ++idCounter;","      return String(prefix == null ? '' : prefix) + id;","    }","","    /*--------------------------------------------------------------------------*/","","    /**","     * Creates a `lodash` object that wraps the given value with explicit","     * method chaining enabled.","     *","     * @static","     * @memberOf _","     * @category Chaining","     * @param {*} value The value to wrap.","     * @returns {Object} Returns the wrapper object.","     * @example","     *","     * var characters = [","     *   { 'name': 'barney',  'age': 36 },","     *   { 'name': 'fred',    'age': 40 },","     *   { 'name': 'pebbles', 'age': 1 }","     * ];","     *","     * var youngest = _.chain(characters)","     *     .sortBy('age')","     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })","     *     .first()","     *     .value();","     * // => 'pebbles is 1'","     */","    function chain(value) {","      value = new lodashWrapper(value);","      value.__chain__ = true;","      return value;","    }","","    /**","     * Invokes `interceptor` with the `value` as the first argument and then","     * returns `value`. The purpose of this method is to \"tap into\" a method","     * chain in order to perform operations on intermediate results within","     * the chain.","     *","     * @static","     * @memberOf _","     * @category Chaining","     * @param {*} value The value to provide to `interceptor`.","     * @param {Function} interceptor The function to invoke.","     * @returns {*} Returns `value`.","     * @example","     *","     * _([1, 2, 3, 4])","     *  .tap(function(array) { array.pop(); })","     *  .reverse()","     *  .value();","     * // => [3, 2, 1]","     */","    function tap(value, interceptor) {","      interceptor(value);","      return value;","    }","","    /**","     * Enables explicit method chaining on the wrapper object.","     *","     * @name chain","     * @memberOf _","     * @category Chaining","     * @returns {*} Returns the wrapper object.","     * @example","     *","     * var characters = [","     *   { 'name': 'barney', 'age': 36 },","     *   { 'name': 'fred',   'age': 40 }","     * ];","     *","     * // without explicit chaining","     * _(characters).first();","     * // => { 'name': 'barney', 'age': 36 }","     *","     * // with explicit chaining","     * _(characters).chain()","     *   .first()","     *   .pick('age')","     *   .value();","     * // => { 'age': 36 }","     */","    function wrapperChain() {","      this.__chain__ = true;","      return this;","    }","","    /**","     * Produces the `toString` result of the wrapped value.","     *","     * @name toString","     * @memberOf _","     * @category Chaining","     * @returns {string} Returns the string result.","     * @example","     *","     * _([1, 2, 3]).toString();","     * // => '1,2,3'","     */","    function wrapperToString() {","      return String(this.__wrapped__);","    }","","    /**","     * Extracts the wrapped value.","     *","     * @name valueOf","     * @memberOf _","     * @alias value","     * @category Chaining","     * @returns {*} Returns the wrapped value.","     * @example","     *","     * _([1, 2, 3]).valueOf();","     * // => [1, 2, 3]","     */","    function wrapperValueOf() {","      return this.__wrapped__;","    }","","    /*--------------------------------------------------------------------------*/","","    // add functions that return wrapped values when chaining","    lodash.after = after;","    lodash.assign = assign;","    lodash.at = at;","    lodash.bind = bind;","    lodash.bindAll = bindAll;","    lodash.bindKey = bindKey;","    lodash.chain = chain;","    lodash.compact = compact;","    lodash.compose = compose;","    lodash.constant = constant;","    lodash.countBy = countBy;","    lodash.create = create;","    lodash.createCallback = createCallback;","    lodash.curry = curry;","    lodash.debounce = debounce;","    lodash.defaults = defaults;","    lodash.defer = defer;","    lodash.delay = delay;","    lodash.difference = difference;","    lodash.filter = filter;","    lodash.flatten = flatten;","    lodash.forEach = forEach;","    lodash.forEachRight = forEachRight;","    lodash.forIn = forIn;","    lodash.forInRight = forInRight;","    lodash.forOwn = forOwn;","    lodash.forOwnRight = forOwnRight;","    lodash.functions = functions;","    lodash.groupBy = groupBy;","    lodash.indexBy = indexBy;","    lodash.initial = initial;","    lodash.intersection = intersection;","    lodash.invert = invert;","    lodash.invoke = invoke;","    lodash.keys = keys;","    lodash.map = map;","    lodash.mapValues = mapValues;","    lodash.max = max;","    lodash.memoize = memoize;","    lodash.merge = merge;","    lodash.min = min;","    lodash.omit = omit;","    lodash.once = once;","    lodash.pairs = pairs;","    lodash.partial = partial;","    lodash.partialRight = partialRight;","    lodash.pick = pick;","    lodash.pluck = pluck;","    lodash.property = property;","    lodash.pull = pull;","    lodash.range = range;","    lodash.reject = reject;","    lodash.remove = remove;","    lodash.rest = rest;","    lodash.shuffle = shuffle;","    lodash.sortBy = sortBy;","    lodash.tap = tap;","    lodash.throttle = throttle;","    lodash.times = times;","    lodash.toArray = toArray;","    lodash.transform = transform;","    lodash.union = union;","    lodash.uniq = uniq;","    lodash.values = values;","    lodash.where = where;","    lodash.without = without;","    lodash.wrap = wrap;","    lodash.xor = xor;","    lodash.zip = zip;","    lodash.zipObject = zipObject;","","    // add aliases","    lodash.collect = map;","    lodash.drop = rest;","    lodash.each = forEach;","    lodash.eachRight = forEachRight;","    lodash.extend = assign;","    lodash.methods = functions;","    lodash.object = zipObject;","    lodash.select = filter;","    lodash.tail = rest;","    lodash.unique = uniq;","    lodash.unzip = zip;","","    // add functions to `lodash.prototype`","    mixin(lodash);","","    /*--------------------------------------------------------------------------*/","","    // add functions that return unwrapped values when chaining","    lodash.clone = clone;","    lodash.cloneDeep = cloneDeep;","    lodash.contains = contains;","    lodash.escape = escape;","    lodash.every = every;","    lodash.find = find;","    lodash.findIndex = findIndex;","    lodash.findKey = findKey;","    lodash.findLast = findLast;","    lodash.findLastIndex = findLastIndex;","    lodash.findLastKey = findLastKey;","    lodash.has = has;","    lodash.identity = identity;","    lodash.indexOf = indexOf;","    lodash.isArguments = isArguments;","    lodash.isArray = isArray;","    lodash.isBoolean = isBoolean;","    lodash.isDate = isDate;","    lodash.isElement = isElement;","    lodash.isEmpty = isEmpty;","    lodash.isEqual = isEqual;","    lodash.isFinite = isFinite;","    lodash.isFunction = isFunction;","    lodash.isNaN = isNaN;","    lodash.isNull = isNull;","    lodash.isNumber = isNumber;","    lodash.isObject = isObject;","    lodash.isPlainObject = isPlainObject;","    lodash.isRegExp = isRegExp;","    lodash.isString = isString;","    lodash.isUndefined = isUndefined;","    lodash.lastIndexOf = lastIndexOf;","    lodash.mixin = mixin;","    lodash.noConflict = noConflict;","    lodash.noop = noop;","    lodash.now = now;","    lodash.parseInt = parseInt;","    lodash.random = random;","    lodash.reduce = reduce;","    lodash.reduceRight = reduceRight;","    lodash.result = result;","    lodash.runInContext = runInContext;","    lodash.size = size;","    lodash.some = some;","    lodash.sortedIndex = sortedIndex;","    lodash.template = template;","    lodash.unescape = unescape;","    lodash.uniqueId = uniqueId;","","    // add aliases","    lodash.all = every;","    lodash.any = some;","    lodash.detect = find;","    lodash.findWhere = find;","    lodash.foldl = reduce;","    lodash.foldr = reduceRight;","    lodash.include = contains;","    lodash.inject = reduce;","","    mixin(function() {","      var source = {}","      forOwn(lodash, function(func, methodName) {","        if (!lodash.prototype[methodName]) {","          source[methodName] = func;","        }","      });","      return source;","    }(), false);","","    /*--------------------------------------------------------------------------*/","","    // add functions capable of returning wrapped and unwrapped values when chaining","    lodash.first = first;","    lodash.last = last;","    lodash.sample = sample;","","    // add aliases","    lodash.take = first;","    lodash.head = first;","","    forOwn(lodash, function(func, methodName) {","      var callbackable = methodName !== 'sample';","      if (!lodash.prototype[methodName]) {","        lodash.prototype[methodName]= function(n, guard) {","          var chainAll = this.__chain__,","              result = func(this.__wrapped__, n, guard);","","          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))","            ? result","            : new lodashWrapper(result, chainAll);","        };","      }","    });","","    /*--------------------------------------------------------------------------*/","","    /**","     * The semantic version number.","     *","     * @static","     * @memberOf _","     * @type string","     */","    lodash.VERSION = '2.4.2';","","    // add \"Chaining\" functions to the wrapper","    lodash.prototype.chain = wrapperChain;","    lodash.prototype.toString = wrapperToString;","    lodash.prototype.value = wrapperValueOf;","    lodash.prototype.valueOf = wrapperValueOf;","","    // add `Array` functions that return unwrapped values","    forEach(['join', 'pop', 'shift'], function(methodName) {","      var func = arrayRef[methodName];","      lodash.prototype[methodName] = function() {","        var chainAll = this.__chain__,","            result = func.apply(this.__wrapped__, arguments);","","        return chainAll","          ? new lodashWrapper(result, chainAll)","          : result;","      };","    });","","    // add `Array` functions that return the existing wrapped value","    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {","      var func = arrayRef[methodName];","      lodash.prototype[methodName] = function() {","        func.apply(this.__wrapped__, arguments);","        return this;","      };","    });","","    // add `Array` functions that return new wrapped values","    forEach(['concat', 'slice', 'splice'], function(methodName) {","      var func = arrayRef[methodName];","      lodash.prototype[methodName] = function() {","        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);","      };","    });","","    return lodash;","  }","","  /*--------------------------------------------------------------------------*/","","  // expose Lo-Dash","  var _ = runInContext();","","  // some AMD build optimizers like r.js check for condition patterns like the following:","  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {","    // Expose Lo-Dash to the global object even when an AMD loader is present in","    // case Lo-Dash is loaded with a RequireJS shim config.","    // See http://requirejs.org/docs/api.html#config-shim","    root._ = _;","","    // define as an anonymous module so, through path mapping, it can be","    // referenced as the \"underscore\" module","    define(function() {","      return _;","    });","  }","  // check for `exports` after `define` in case a build optimizer adds an `exports` object","  else if (freeExports && freeModule) {","    // in Node.js or RingoJS","    if (moduleExports) {","      (freeModule.exports = _)._ = _;","    }","    // in Narwhal or Rhino -require","    else {","      freeExports._ = _;","    }","  }","  else {","    // in a browser or Rhino","    root._ = _;","  }","}.call(this));",""],"l":{"10":1,"13":1,"16":1,"20":1,"23":1,"26":1,"29":1,"32":1,"44":1,"52":1,"55":1,"58":1,"61":1,"64":1,"67":1,"70":1,"73":1,"76":1,"83":1,"86":1,"97":1,"98":1,"99":1,"105":1,"112":1,"120":1,"130":1,"141":1,"144":1,"147":1,"150":1,"153":1,"154":1,"155":1,"170":1,"171":0,"174":0,"175":0,"176":0,"179":0,"191":1,"192":0,"193":0,"195":0,"196":0,"198":0,"199":0,"201":0,"202":0,"204":0,"215":1,"216":0,"219":0,"220":0,"222":0,"223":0,"225":0,"228":0,"229":0,"231":0,"244":1,"245":0,"257":1,"258":0,"263":0,"264":0,"267":0,"268":0,"269":0,"271":0,"272":0,"282":0,"292":1,"293":0,"299":0,"301":0,"303":0,"304":0,"306":0,"307":0,"308":0,"309":0,"311":0,"312":0,"314":0,"325":1,"326":0,"335":1,"336":0,"345":1,"346":0,"369":1,"370":0,"371":0,"372":0,"382":1,"383":0,"384":0,"385":0,"387":0,"388":0,"389":0,"406":1,"407":0,"408":0,"409":0,"411":0,"415":0,"416":0,"418":0,"432":1,"437":1,"440":1,"457":1,"460":1,"463":1,"466":1,"469":1,"476":1,"488":1,"490":1,"491":1,"495":1,"499":1,"510":1,"511":1,"512":1,"513":1,"514":1,"515":1,"516":1,"517":1,"518":1,"587":1,"589":0,"602":1,"603":0,"604":0,"607":1,"616":1,"625":1,"633":1,"644":1,"706":1,"707":0,"711":1,"714":0,"718":0,"719":0,"723":0,"725":0,"727":0,"729":0,"731":0,"732":0,"747":1,"748":0,"749":0,"750":0,"751":0,"755":0,"756":0,"757":0,"758":0,"759":0,"761":0,"762":0,"765":0,"769":0,"772":0,"773":0,"774":0,"777":0,"779":0,"780":0,"782":0,"783":0,"784":0,"786":0,"787":0,"788":0,"789":0,"792":0,"795":0,"798":0,"799":0,"800":0,"802":0,"803":0,"807":0,"808":0,"812":0,"813":0,"816":0,"817":0,"820":0,"821":0,"822":0,"824":0,"835":1,"836":0,"839":1,"840":0,"841":1,"842":0,"843":0,"844":0,"845":0,"846":0,"848":0,"863":1,"864":0,"865":0,"868":0,"869":0,"871":0,"872":0,"873":0,"874":0,"876":0,"877":0,"878":0,"879":0,"880":0,"882":0,"884":0,"885":0,"890":0,"891":0,"893":0,"894":0,"895":0,"897":0,"898":0,"900":0,"901":0,"903":0,"904":0,"907":0,"918":1,"919":0,"926":0,"932":1,"933":0,"934":0,"935":0,"936":0,"938":0,"939":0,"940":0,"941":0,"943":0,"944":0,"945":0,"948":0,"949":0,"950":0,"952":0,"953":0,"954":0,"955":0,"957":0,"959":0,"960":0,"972":1,"973":0,"979":0,"980":0,"981":0,"982":0,"983":0,"985":0,"988":0,"989":0,"990":0,"991":0,"994":0,"995":0,"997":0,"1011":1,"1012":0,"1016":0,"1017":0,"1019":0,"1022":0,"1023":0,"1025":0,"1029":0,"1030":0,"1031":0,"1033":0,"1034":0,"1037":0,"1053":1,"1055":0,"1056":0,"1057":0,"1058":0,"1062":0,"1064":0,"1066":0,"1070":0,"1073":0,"1077":0,"1078":0,"1081":0,"1084":0,"1085":0,"1087":0,"1088":0,"1090":0,"1091":0,"1093":0,"1098":0,"1102":0,"1111":0,"1113":0,"1114":0,"1116":0,"1119":0,"1120":0,"1123":0,"1124":0,"1127":0,"1131":0,"1135":0,"1141":0,"1142":0,"1143":0,"1145":0,"1146":0,"1147":0,"1148":0,"1151":0,"1152":0,"1155":0,"1156":0,"1159":0,"1161":0,"1162":0,"1163":0,"1165":0,"1167":0,"1168":0,"1171":0,"1172":0,"1173":0,"1174":0,"1177":0,"1178":0,"1186":0,"1187":0,"1189":0,"1191":0,"1195":0,"1197":0,"1198":0,"1200":0,"1205":0,"1206":0,"1208":0,"1209":0,"1210":0,"1212":0,"1226":1,"1227":0,"1228":0,"1233":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1250":0,"1251":0,"1256":0,"1257":0,"1260":0,"1261":0,"1266":0,"1267":0,"1268":0,"1269":0,"1272":0,"1273":0,"1276":0,"1289":1,"1290":0,"1303":1,"1304":0,"1309":0,"1312":0,"1313":0,"1314":0,"1315":0,"1317":0,"1318":0,"1321":0,"1325":0,"1326":0,"1328":0,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1337":0,"1350":1,"1351":3,"1352":0,"1353":0,"1355":0,"1358":0,"1359":0,"1360":0,"1361":0,"1364":0,"1365":0,"1368":0,"1394":1,"1395":0,"1402":0,"1403":0,"1405":0,"1406":0,"1407":0,"1409":0,"1410":0,"1411":0,"1413":0,"1414":0,"1416":0,"1417":0,"1418":0,"1420":0,"1421":0,"1424":0,"1425":0,"1428":0,"1429":0,"1432":0,"1433":0,"1436":0,"1437":0,"1440":0,"1441":0,"1444":0,"1445":0,"1448":0,"1449":0,"1459":1,"1460":0,"1471":1,"1472":0,"1473":0,"1483":1,"1484":7,"1494":1,"1495":0,"1496":0,"1497":0,"1510":1,"1511":0,"1515":0,"1517":0,"1522":0,"1523":0,"1525":0,"1535":1,"1536":0,"1557":1,"1558":0,"1579":1,"1580":0,"1593":1,"1594":0,"1595":0,"1596":0,"1597":0,"1598":0,"1599":0,"1602":0,"1618":1,"1619":6,"1620":0,"1622":6,"1633":1,"1642":1,"1645":1,"1680":1,"1681":1,"1682":1,"1683":1,"1686":1,"1687":0,"1688":1,"1689":0,"1691":1,"1692":1,"1693":1,"1694":1,"1698":1,"1699":6,"1700":6,"1704":1,"1747":1,"1750":0,"1751":0,"1752":0,"1753":0,"1755":0,"1799":1,"1800":0,"1834":1,"1835":0,"1836":0,"1859":1,"1860":0,"1861":0,"1862":0,"1865":0,"1866":0,"1867":0,"1868":0,"1872":0,"1873":0,"1874":0,"1878":0,"1922":1,"1923":0,"1924":0,"1925":0,"1926":0,"1927":0,"1928":0,"1931":0,"1975":1,"1976":0,"1977":0,"1978":0,"1979":0,"1980":0,"1981":0,"1984":0,"2018":1,"2019":2,"2020":2,"2021":2,"2022":2,"2023":2,"2024":141,"2026":2,"2057":1,"2058":0,"2060":0,"2061":0,"2064":0,"2065":0,"2066":0,"2067":0,"2068":0,"2071":0,"2095":1,"2096":2,"2097":2,"2098":2,"2099":2,"2100":2,"2104":2,"2105":283,"2106":283,"2108":2,"2129":1,"2130":0,"2133":0,"2134":0,"2135":0,"2136":0,"2137":0,"2140":0,"2158":1,"2159":2,"2160":2,"2161":141,"2162":137,"2165":2,"2183":1,"2184":0,"2200":1,"2201":1,"2206":1,"2207":5,"2208":5,"2210":1,"2226":1,"2227":0,"2244":1,"2245":0,"2261":1,"2262":0,"2286":1,"2287":0,"2288":0,"2289":0,"2291":0,"2294":0,"2296":0,"2298":0,"2299":0,"2301":0,"2342":1,"2343":0,"2374":1,"2375":0,"2391":1,"2392":143,"2415":1,"2420":7,"2448":1,"2451":0,"2470":1,"2471":0,"2489":1,"2490":0,"2518":1,"2519":0,"2520":0,"2522":0,"2525":0,"2543":1,"2544":0,"2560":1,"2561":0,"2578":1,"2579":0,"2618":1,"2619":0,"2620":0,"2622":0,"2623":0,"2625":0,"2679":1,"2680":0,"2683":0,"2684":0,"2688":0,"2689":0,"2691":0,"2692":0,"2693":0,"2694":0,"2696":0,"2701":0,"2702":0,"2704":0,"2705":0,"2706":0,"2735":1,"2736":0,"2737":0,"2738":0,"2739":0,"2740":0,"2742":0,"2744":0,"2747":0,"2748":0,"2749":0,"2752":0,"2753":0,"2754":0,"2755":0,"2759":0,"2776":1,"2777":0,"2782":0,"2783":0,"2784":0,"2786":0,"2816":1,"2817":0,"2818":0,"2819":0,"2823":0,"2824":0,"2825":0,"2826":0,"2830":0,"2831":0,"2832":0,"2833":0,"2837":0,"2871":1,"2872":0,"2873":0,"2874":0,"2875":0,"2877":0,"2880":0,"2883":0,"2884":0,"2885":0,"2886":0,"2889":0,"2905":1,"2906":0,"2911":0,"2912":0,"2914":0,"2940":1,"2941":0,"2947":0,"2948":0,"2950":0,"2980":1,"2981":0,"2986":0,"2987":0,"2988":0,"2989":0,"2990":0,"2992":0,"2993":0,"2994":0,"2998":0,"3035":1,"3036":0,"3080":1,"3081":0,"3082":0,"3084":0,"3087":0,"3088":0,"3089":0,"3090":0,"3094":0,"3095":0,"3098":0,"3141":1,"3142":0,"3143":0,"3145":0,"3148":0,"3149":0,"3150":0,"3151":0,"3152":0,"3156":0,"3157":0,"3158":0,"3162":0,"3208":1,"3209":0,"3211":0,"3214":0,"3215":0,"3216":0,"3217":0,"3218":0,"3222":0,"3223":0,"3224":0,"3225":0,"3226":0,"3229":0,"3253":1,"3254":0,"3255":0,"3256":0,"3257":0,"3258":0,"3259":0,"3262":0,"3291":1,"3292":5,"3295":5,"3296":5,"3297":5,"3298":147,"3299":0,"3303":0,"3305":5,"3325":1,"3326":0,"3327":0,"3328":0,"3329":0,"3330":0,"3331":0,"3335":0,"3336":0,"3337":0,"3338":0,"3339":0,"3342":0,"3380":1,"3381":0,"3423":1,"3424":0,"3449":1,"3450":0,"3456":0,"3457":0,"3459":0,"3501":1,"3502":0,"3505":0,"3506":0,"3507":0,"3508":0,"3509":0,"3512":0,"3513":0,"3514":0,"3517":0,"3560":1,"3561":0,"3566":0,"3567":0,"3569":0,"3570":0,"3573":0,"3574":0,"3575":0,"3576":0,"3580":0,"3584":0,"3585":0,"3586":0,"3587":0,"3588":0,"3592":0,"3635":1,"3636":0,"3641":0,"3642":0,"3644":0,"3645":0,"3648":0,"3649":0,"3650":0,"3651":0,"3655":0,"3659":0,"3660":0,"3661":0,"3662":0,"3663":0,"3667":0,"3690":1,"3722":1,"3723":0,"3724":0,"3725":0,"3727":0,"3730":0,"3731":0,"3732":0,"3734":0,"3735":0,"3738":0,"3739":0,"3744":0,"3766":1,"3767":0,"3768":0,"3769":0,"3770":0,"3774":0,"3815":1,"3816":0,"3817":0,"3818":0,"3841":1,"3842":0,"3843":0,"3845":0,"3846":0,"3848":0,"3849":0,"3850":0,"3867":1,"3868":0,"3872":0,"3873":0,"3874":0,"3875":0,"3877":0,"3900":1,"3901":0,"3902":0,"3947":1,"3948":0,"3949":0,"3951":0,"3954":0,"3955":0,"3956":0,"3957":0,"3961":0,"3962":0,"3965":0,"4017":1,"4018":0,"4023":0,"4024":0,"4026":0,"4027":0,"4028":0,"4029":0,"4031":0,"4033":0,"4034":0,"4037":0,"4038":0,"4039":0,"4040":0,"4041":0,"4042":0,"4043":0,"4045":0,"4047":0,"4063":1,"4064":0,"4065":0,"4067":0,"4095":1,"4113":1,"4114":0,"4118":0,"4119":0,"4120":0,"4121":0,"4124":0,"4142":1,"4143":0,"4187":1,"4188":0,"4191":0,"4192":0,"4193":0,"4194":0,"4197":0,"4241":1,"4242":0,"4243":0,"4244":0,"4245":0,"4246":0,"4249":0,"4303":1,"4304":0,"4307":0,"4308":0,"4309":0,"4310":0,"4311":0,"4314":0,"4315":0,"4316":0,"4319":0,"4363":1,"4365":0,"4366":0,"4367":0,"4368":0,"4370":0,"4371":0,"4373":0,"4400":1,"4401":0,"4402":0,"4403":0,"4404":0,"4405":0,"4406":0,"4408":0,"4461":1,"4462":0,"4465":0,"4466":0,"4467":0,"4468":0,"4469":0,"4472":0,"4474":0,"4491":1,"4492":0,"4500":0,"4501":0,"4502":0,"4503":0,"4504":0,"4508":0,"4513":0,"4514":0,"4515":0,"4516":0,"4518":0,"4519":0,"4520":0,"4521":0,"4522":0,"4523":0,"4524":0,"4527":0,"4530":0,"4531":0,"4532":0,"4533":0,"4536":0,"4537":0,"4538":0,"4591":1,"4592":0,"4595":0,"4596":0,"4597":0,"4598":0,"4599":0,"4602":0,"4603":0,"4604":0,"4607":0,"4637":1,"4638":0,"4639":0,"4640":0,"4642":0,"4643":0,"4644":0,"4647":0,"4667":1,"4668":0,"4673":0,"4674":0,"4676":0,"4677":0,"4678":0,"4679":0,"4683":0,"4718":1,"4719":0,"4720":0,"4722":0,"4723":0,"4724":0,"4728":0,"4732":0,"4733":0,"4734":0,"4736":0,"4771":1,"4772":0,"4776":0,"4777":0,"4778":0,"4779":0,"4780":0,"4781":0,"4782":0,"4785":0,"4840":1,"4841":0,"4842":0,"4846":0,"4847":0,"4848":0,"4851":0,"4853":0,"4904":1,"4905":0,"4909":0,"4910":0,"4912":0,"4913":0,"4914":0,"4918":0,"4935":1,"4936":0,"4983":1,"4985":0,"4986":0,"4987":0,"4988":0,"4990":0,"4991":0,"4993":0,"5011":1,"5012":0,"5032":1,"5033":0,"5036":0,"5037":0,"5038":0,"5039":0,"5044":0,"5063":1,"5064":0,"5069":0,"5070":0,"5072":0,"5093":1,"5094":0,"5098":0,"5099":0,"5101":0,"5102":0,"5103":0,"5104":0,"5105":0,"5106":0,"5109":0,"5138":1,"5139":0,"5140":0,"5142":0,"5143":0,"5144":0,"5171":1,"5172":0,"5201":1,"5202":0,"5206":0,"5207":0,"5208":0,"5210":0,"5247":1,"5248":0,"5283":1,"5284":0,"5287":0,"5288":0,"5289":0,"5292":0,"5293":0,"5296":0,"5297":0,"5299":0,"5331":1,"5332":0,"5333":0,"5375":1,"5376":0,"5387":0,"5388":0,"5390":0,"5391":0,"5392":0,"5393":0,"5394":0,"5395":0,"5396":0,"5397":0,"5399":0,"5400":0,"5401":0,"5402":0,"5403":0,"5405":0,"5406":0,"5407":0,"5408":0,"5409":0,"5410":0,"5411":0,"5415":0,"5419":0,"5420":0,"5421":0,"5423":0,"5424":0,"5425":0,"5426":0,"5427":0,"5428":0,"5433":0,"5434":0,"5435":0,"5436":0,"5437":0,"5439":0,"5440":0,"5442":0,"5443":0,"5445":0,"5448":0,"5449":0,"5450":0,"5452":0,"5453":0,"5455":0,"5456":0,"5459":0,"5460":0,"5462":0,"5463":0,"5465":0,"5466":0,"5467":0,"5469":0,"5470":0,"5472":0,"5491":1,"5492":0,"5493":0,"5495":0,"5496":0,"5515":1,"5516":0,"5517":0,"5519":0,"5520":0,"5560":1,"5561":0,"5562":0,"5564":0,"5565":0,"5568":0,"5572":0,"5573":0,"5593":1,"5594":0,"5597":0,"5598":0,"5600":0,"5601":0,"5602":0,"5604":0,"5605":0,"5608":0,"5609":0,"5631":1,"5632":0,"5662":1,"5663":0,"5697":1,"5698":0,"5701":0,"5702":0,"5704":0,"5705":0,"5706":0,"5707":0,"5708":0,"5710":0,"5711":0,"5712":0,"5714":0,"5738":1,"5739":0,"5759":1,"5760":0,"5761":0,"5796":1,"5797":0,"5798":0,"5799":0,"5802":0,"5803":0,"5805":0,"5810":0,"5813":0,"5814":0,"5815":0,"5818":0,"5819":0,"5822":0,"5823":0,"5824":0,"5827":0,"5845":1,"5846":0,"5863":1,"5864":0,"5895":1,"5896":2,"5899":2,"5900":2,"5901":2,"5903":2,"5904":2,"5905":2,"5906":2,"5908":2,"5909":1,"5910":1,"5911":0,"5913":2,"5916":2,"5917":137,"5918":137,"5919":137,"5920":0,"5924":0,"5925":0,"5926":0,"5927":0,"5928":0,"5930":0,"5931":0,"5933":0,"5951":1,"5952":0,"5953":0,"5968":1,"5985":1,"5986":0,"6008":1,"6010":0,"6037":1,"6038":0,"6039":0,"6070":1,"6071":0,"6074":0,"6075":0,"6076":0,"6077":0,"6079":0,"6080":0,"6081":0,"6084":0,"6085":0,"6087":0,"6088":0,"6089":0,"6090":0,"6092":0,"6094":0,"6095":0,"6096":0,"6098":0,"6128":1,"6129":0,"6130":0,"6131":0,"6221":1,"6226":0,"6227":0,"6230":0,"6232":0,"6236":0,"6242":0,"6249":0,"6250":0,"6253":0,"6256":0,"6257":0,"6259":0,"6260":0,"6261":0,"6263":0,"6264":0,"6266":0,"6270":0,"6273":0,"6277":0,"6280":0,"6281":0,"6282":0,"6285":0,"6290":0,"6303":0,"6305":0,"6306":0,"6308":0,"6309":0,"6311":0,"6312":0,"6317":0,"6318":0,"6344":1,"6345":0,"6346":0,"6349":0,"6350":0,"6351":0,"6353":0,"6371":1,"6372":0,"6391":1,"6392":0,"6393":0,"6422":1,"6423":0,"6424":0,"6425":0,"6448":1,"6449":0,"6450":0,"6478":1,"6479":0,"6480":0,"6495":1,"6496":0,"6512":1,"6513":0,"6519":1,"6520":1,"6521":1,"6522":1,"6523":1,"6524":1,"6525":1,"6526":1,"6527":1,"6528":1,"6529":1,"6530":1,"6531":1,"6532":1,"6533":1,"6534":1,"6535":1,"6536":1,"6537":1,"6538":1,"6539":1,"6540":1,"6541":1,"6542":1,"6543":1,"6544":1,"6545":1,"6546":1,"6547":1,"6548":1,"6549":1,"6550":1,"6551":1,"6552":1,"6553":1,"6554":1,"6555":1,"6556":1,"6557":1,"6558":1,"6559":1,"6560":1,"6561":1,"6562":1,"6563":1,"6564":1,"6565":1,"6566":1,"6567":1,"6568":1,"6569":1,"6570":1,"6571":1,"6572":1,"6573":1,"6574":1,"6575":1,"6576":1,"6577":1,"6578":1,"6579":1,"6580":1,"6581":1,"6582":1,"6583":1,"6584":1,"6585":1,"6586":1,"6587":1,"6588":1,"6591":1,"6592":1,"6593":1,"6594":1,"6595":1,"6596":1,"6597":1,"6598":1,"6599":1,"6600":1,"6601":1,"6604":1,"6609":1,"6610":1,"6611":1,"6612":1,"6613":1,"6614":1,"6615":1,"6616":1,"6617":1,"6618":1,"6619":1,"6620":1,"6621":1,"6622":1,"6623":1,"6624":1,"6625":1,"6626":1,"6627":1,"6628":1,"6629":1,"6630":1,"6631":1,"6632":1,"6633":1,"6634":1,"6635":1,"6636":1,"6637":1,"6638":1,"6639":1,"6640":1,"6641":1,"6642":1,"6643":1,"6644":1,"6645":1,"6646":1,"6647":1,"6648":1,"6649":1,"6650":1,"6651":1,"6652":1,"6653":1,"6654":1,"6655":1,"6656":1,"6659":1,"6660":1,"6661":1,"6662":1,"6663":1,"6664":1,"6665":1,"6666":1,"6668":1,"6669":1,"6670":1,"6671":139,"6672":58,"6675":1,"6681":1,"6682":1,"6683":1,"6686":1,"6687":1,"6689":1,"6690":144,"6691":144,"6692":7,"6693":0,"6696":0,"6712":1,"6715":1,"6716":1,"6717":1,"6718":1,"6721":1,"6722":3,"6723":3,"6724":0,"6727":0,"6734":1,"6735":4,"6736":4,"6737":0,"6738":0,"6743":1,"6744":3,"6745":3,"6746":0,"6750":1,"6756":1,"6759":1,"6763":0,"6767":0,"6768":0,"6772":1,"6774":1,"6775":1,"6779":0,"6784":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/query.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/query.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"query","line":26,"loc":{"start":{"line":26,"column":17},"end":{"line":26,"column":88}}},"2":{"name":"(anonymous_2)","line":55,"loc":{"start":{"line":55,"column":17},"end":{"line":55,"column":36}}},"3":{"name":"(anonymous_3)","line":78,"loc":{"start":{"line":78,"column":17},"end":{"line":78,"column":33}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":46}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":48}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"9":{"start":{"line":26,"column":0},"end":{"line":86,"column":2}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":42}},"11":{"start":{"line":33,"column":2},"end":{"line":33,"column":41}},"12":{"start":{"line":37,"column":2},"end":{"line":49,"column":3}},"13":{"start":{"line":38,"column":4},"end":{"line":38,"column":26}},"14":{"start":{"line":39,"column":4},"end":{"line":39,"column":28}},"15":{"start":{"line":45,"column":4},"end":{"line":45,"column":30}},"16":{"start":{"line":46,"column":4},"end":{"line":46,"column":24}},"17":{"start":{"line":47,"column":4},"end":{"line":47,"column":28}},"18":{"start":{"line":48,"column":4},"end":{"line":48,"column":30}},"19":{"start":{"line":52,"column":2},"end":{"line":52,"column":31}},"20":{"start":{"line":55,"column":2},"end":{"line":57,"column":5}},"21":{"start":{"line":56,"column":4},"end":{"line":56,"column":34}},"22":{"start":{"line":60,"column":2},"end":{"line":60,"column":28}},"23":{"start":{"line":63,"column":2},"end":{"line":63,"column":42}},"24":{"start":{"line":64,"column":2},"end":{"line":64,"column":40}},"25":{"start":{"line":65,"column":2},"end":{"line":65,"column":40}},"26":{"start":{"line":66,"column":2},"end":{"line":66,"column":42}},"27":{"start":{"line":67,"column":2},"end":{"line":67,"column":44}},"28":{"start":{"line":74,"column":2},"end":{"line":74,"column":60}},"29":{"start":{"line":78,"column":2},"end":{"line":80,"column":5}},"30":{"start":{"line":79,"column":4},"end":{"line":79,"column":37}},"31":{"start":{"line":82,"column":2},"end":{"line":85,"column":4}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"2":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":29}},{"start":{"line":37,"column":33},"end":{"line":37,"column":46}}]},"3":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":13},"end":{"line":60,"column":21}},{"start":{"line":60,"column":25},"end":{"line":60,"column":27}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var util = require('util');","var _where = require('./filters/where');","var _limit = require('./filters/limit');","var _skip = require('./filters/skip');","var _select = require('./projections/select');","var _groupBy = require('./projections/groupBy');","var _sort = require('./sort');","","","","/**"," * Filter/aggregate/partition/map the tuples known as `classifier`"," * in `data` using `criteria` (a Waterline criteria object)"," * "," * @param  { Object[] }           data"," * @param  { Object }             criteria         [the Waterline criteria object- complete w/ `where`, `limit`, `sort, `skip`, and `joins`]"," * "," * @return { Integer | Object | Object[] }"," */","","module.exports = function query ( /* classifier|tuples, data|criteria [, criteria] */ ) {","  ","  // Embed an `INDEX_IN_ORIG_DATA` for each tuple to remember its original index","  // within `data`.  At the end, we'll lookup the `INDEX_IN_ORIG_DATA` for each tuple","  // and expose it as part of our results.","  var INDEX_IN_ORIG_DATA = '.(ørigindex)';","","  var tuples, classifier, data, criteria;","","  // If no classifier is provided, and data was specified as an array","  // instead of an object, infer tuples from the array","  if (_.isArray(arguments[0]) && !arguments[2]) {","    tuples = arguments[0];","    criteria = arguments[1];","  }","  // If all three arguments were supplied:","  // get tuples of type `classifier` (i.e. SELECT * FROM __________)","  // and clone 'em.","  else {","    classifier = arguments[0];","    data = arguments[1];","    criteria = arguments[2];","    tuples = data[classifier];","  }","","  // Clone tuples to avoid dirtying things up","  tuples = _.cloneDeep(tuples);","","  // Embed `INDEX_IN_ORIG_DATA` in each tuple","  _.each(tuples, function(tuple, i) {","    tuple[INDEX_IN_ORIG_DATA] = i;","  });","","  // Ensure criteria object exists","  criteria = criteria || {};","","  // Query and return result set using criteria","  tuples = _where(tuples, criteria.where);","  tuples = _sort(tuples, criteria.sort);","  tuples = _skip(tuples, criteria.skip);","  tuples = _limit(tuples, criteria.limit);","  tuples = _select(tuples, criteria.select);","  ","  // TODO:","  // tuples = _groupBy(tuples, criteria.groupBy);","","  // Grab the INDEX_IN_ORIG_DATA from each matched tuple","  // this is typically used to update the tuples in the external source data.","  var originalIndices = _.pluck(tuples, INDEX_IN_ORIG_DATA);","","  // Remove INDEX_IN_ORIG_DATA from each tuple--","  // it is no longer needed.","  _.each(tuples, function(tuple) {","    delete tuple[INDEX_IN_ORIG_DATA];","  });","","  return {","    results: tuples,","    indices: originalIndices","  };","};","",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"26":1,"31":0,"33":0,"37":0,"38":0,"39":0,"45":0,"46":0,"47":0,"48":0,"52":0,"55":0,"56":0,"60":0,"63":0,"64":0,"65":0,"66":0,"67":0,"74":0,"78":0,"79":0,"82":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/filters/where.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/filters/where.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":1,"138":0,"139":1,"140":0,"141":1,"142":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":1,"164":0,"165":1,"166":1,"167":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0,0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":40}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":24},"end":{"line":19,"column":40}}},"3":{"name":"matchSet","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":46}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":25},"end":{"line":44,"column":50}}},"5":{"name":"matchOr","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":35}}},"6":{"name":"(anonymous_6)","line":52,"loc":{"start":{"line":52,"column":20},"end":{"line":52,"column":39}}},"7":{"name":"matchAnd","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":36}}},"8":{"name":"(anonymous_8)","line":62,"loc":{"start":{"line":62,"column":20},"end":{"line":62,"column":39}}},"9":{"name":"matchLike","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":36}}},"10":{"name":"matchNot","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":35}}},"11":{"name":"matchItem","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":53}}},"12":{"name":"(anonymous_12)","line":94,"loc":{"start":{"line":94,"column":26},"end":{"line":94,"column":40}}},"13":{"name":"(anonymous_13)","line":134,"loc":{"start":{"line":134,"column":28},"end":{"line":134,"column":42}}},"14":{"name":"(anonymous_14)","line":154,"loc":{"start":{"line":154,"column":8},"end":{"line":154,"column":23}}},"15":{"name":"(anonymous_15)","line":160,"loc":{"start":{"line":160,"column":8},"end":{"line":160,"column":23}}},"16":{"name":"(anonymous_16)","line":164,"loc":{"start":{"line":164,"column":8},"end":{"line":164,"column":23}}},"17":{"name":"(anonymous_17)","line":168,"loc":{"start":{"line":168,"column":8},"end":{"line":168,"column":23}}},"18":{"name":"(anonymous_18)","line":172,"loc":{"start":{"line":172,"column":8},"end":{"line":172,"column":23}}},"19":{"name":"(anonymous_19)","line":176,"loc":{"start":{"line":176,"column":8},"end":{"line":176,"column":23}}},"20":{"name":"normalizeComparison","line":183,"loc":{"start":{"line":183,"column":0},"end":{"line":183,"column":34}}},"21":{"name":"validSubAttrCriteria","line":219,"loc":{"start":{"line":219,"column":0},"end":{"line":219,"column":33}}},"22":{"name":"(anonymous_22)","line":228,"loc":{"start":{"line":228,"column":26},"end":{"line":228,"column":41}}},"23":{"name":"isNumbery","line":236,"loc":{"start":{"line":236,"column":0},"end":{"line":236,"column":27}}},"24":{"name":"matchLiteral","line":242,"loc":{"start":{"line":242,"column":0},"end":{"line":242,"column":54}}},"25":{"name":"checkStartsWith","line":266,"loc":{"start":{"line":266,"column":0},"end":{"line":266,"column":46}}},"26":{"name":"checkEndsWith","line":270,"loc":{"start":{"line":270,"column":0},"end":{"line":270,"column":44}}},"27":{"name":"checkContains","line":273,"loc":{"start":{"line":273,"column":0},"end":{"line":273,"column":44}}},"28":{"name":"checkLike","line":276,"loc":{"start":{"line":276,"column":0},"end":{"line":276,"column":40}}},"29":{"name":"sqlLikeMatch","line":281,"loc":{"start":{"line":281,"column":0},"end":{"line":281,"column":42}}},"30":{"name":"escapeRegExp","line":324,"loc":{"start":{"line":324,"column":0},"end":{"line":324,"column":27}}},"31":{"name":"hasOwnProperty","line":340,"loc":{"start":{"line":340,"column":0},"end":{"line":340,"column":35}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":51}},"3":{"start":{"line":17,"column":0},"end":{"line":22,"column":2}},"4":{"start":{"line":18,"column":2},"end":{"line":18,"column":26}},"5":{"start":{"line":18,"column":14},"end":{"line":18,"column":26}},"6":{"start":{"line":19,"column":2},"end":{"line":21,"column":5}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":34}},"8":{"start":{"line":38,"column":0},"end":{"line":47,"column":1}},"9":{"start":{"line":41,"column":2},"end":{"line":41,"column":55}},"10":{"start":{"line":41,"column":43},"end":{"line":41,"column":55}},"11":{"start":{"line":44,"column":2},"end":{"line":46,"column":5}},"12":{"start":{"line":45,"column":4},"end":{"line":45,"column":55}},"13":{"start":{"line":50,"column":0},"end":{"line":58,"column":1}},"14":{"start":{"line":51,"column":2},"end":{"line":51,"column":20}},"15":{"start":{"line":52,"column":2},"end":{"line":54,"column":5}},"16":{"start":{"line":53,"column":4},"end":{"line":53,"column":54}},"17":{"start":{"line":53,"column":34},"end":{"line":53,"column":54}},"18":{"start":{"line":56,"column":2},"end":{"line":56,"column":51}},"19":{"start":{"line":57,"column":2},"end":{"line":57,"column":17}},"20":{"start":{"line":60,"column":0},"end":{"line":66,"column":1}},"21":{"start":{"line":61,"column":2},"end":{"line":61,"column":21}},"22":{"start":{"line":62,"column":2},"end":{"line":64,"column":5}},"23":{"start":{"line":63,"column":4},"end":{"line":63,"column":51}},"24":{"start":{"line":63,"column":35},"end":{"line":63,"column":51}},"25":{"start":{"line":65,"column":2},"end":{"line":65,"column":17}},"26":{"start":{"line":68,"column":0},"end":{"line":74,"column":1}},"27":{"start":{"line":69,"column":2},"end":{"line":72,"column":3}},"28":{"start":{"line":71,"column":4},"end":{"line":71,"column":60}},"29":{"start":{"line":71,"column":47},"end":{"line":71,"column":60}},"30":{"start":{"line":73,"column":2},"end":{"line":73,"column":14}},"31":{"start":{"line":76,"column":0},"end":{"line":78,"column":1}},"32":{"start":{"line":77,"column":2},"end":{"line":77,"column":36}},"33":{"start":{"line":80,"column":0},"end":{"line":148,"column":1}},"34":{"start":{"line":83,"column":2},"end":{"line":146,"column":62}},"35":{"start":{"line":85,"column":4},"end":{"line":121,"column":51}},"36":{"start":{"line":86,"column":6},"end":{"line":86,"column":67}},"37":{"start":{"line":88,"column":9},"end":{"line":121,"column":51}},"38":{"start":{"line":91,"column":6},"end":{"line":101,"column":7}},"39":{"start":{"line":93,"column":8},"end":{"line":93,"column":26}},"40":{"start":{"line":94,"column":8},"end":{"line":98,"column":11}},"41":{"start":{"line":95,"column":10},"end":{"line":97,"column":11}},"42":{"start":{"line":96,"column":12},"end":{"line":96,"column":25}},"43":{"start":{"line":100,"column":8},"end":{"line":100,"column":36}},"44":{"start":{"line":103,"column":6},"end":{"line":103,"column":67}},"45":{"start":{"line":105,"column":9},"end":{"line":121,"column":51}},"46":{"start":{"line":106,"column":6},"end":{"line":106,"column":67}},"47":{"start":{"line":108,"column":9},"end":{"line":121,"column":51}},"48":{"start":{"line":109,"column":6},"end":{"line":109,"column":68}},"49":{"start":{"line":111,"column":9},"end":{"line":121,"column":51}},"50":{"start":{"line":112,"column":6},"end":{"line":112,"column":67}},"51":{"start":{"line":114,"column":9},"end":{"line":121,"column":51}},"52":{"start":{"line":115,"column":6},"end":{"line":115,"column":68}},"53":{"start":{"line":117,"column":9},"end":{"line":121,"column":51}},"54":{"start":{"line":117,"column":35},"end":{"line":117,"column":99}},"55":{"start":{"line":118,"column":9},"end":{"line":121,"column":51}},"56":{"start":{"line":118,"column":33},"end":{"line":118,"column":95}},"57":{"start":{"line":119,"column":9},"end":{"line":121,"column":51}},"58":{"start":{"line":119,"column":33},"end":{"line":119,"column":95}},"59":{"start":{"line":120,"column":9},"end":{"line":121,"column":51}},"60":{"start":{"line":120,"column":29},"end":{"line":120,"column":87}},"61":{"start":{"line":121,"column":9},"end":{"line":121,"column":51}},"62":{"start":{"line":123,"column":7},"end":{"line":146,"column":62}},"63":{"start":{"line":124,"column":4},"end":{"line":124,"column":37}},"64":{"start":{"line":125,"column":9},"end":{"line":146,"column":62}},"65":{"start":{"line":126,"column":4},"end":{"line":126,"column":38}},"66":{"start":{"line":127,"column":9},"end":{"line":146,"column":62}},"67":{"start":{"line":128,"column":4},"end":{"line":128,"column":38}},"68":{"start":{"line":129,"column":9},"end":{"line":146,"column":62}},"69":{"start":{"line":130,"column":4},"end":{"line":130,"column":39}},"70":{"start":{"line":133,"column":7},"end":{"line":146,"column":62}},"71":{"start":{"line":134,"column":4},"end":{"line":136,"column":7}},"72":{"start":{"line":135,"column":6},"end":{"line":135,"column":43}},"73":{"start":{"line":140,"column":7},"end":{"line":146,"column":62}},"74":{"start":{"line":142,"column":4},"end":{"line":142,"column":43}},"75":{"start":{"line":146,"column":7},"end":{"line":146,"column":62}},"76":{"start":{"line":151,"column":0},"end":{"line":180,"column":2}},"77":{"start":{"line":155,"column":4},"end":{"line":155,"column":37}},"78":{"start":{"line":156,"column":4},"end":{"line":156,"column":24}},"79":{"start":{"line":161,"column":4},"end":{"line":161,"column":37}},"80":{"start":{"line":162,"column":4},"end":{"line":162,"column":24}},"81":{"start":{"line":165,"column":4},"end":{"line":165,"column":37}},"82":{"start":{"line":166,"column":4},"end":{"line":166,"column":23}},"83":{"start":{"line":169,"column":4},"end":{"line":169,"column":37}},"84":{"start":{"line":170,"column":4},"end":{"line":170,"column":24}},"85":{"start":{"line":173,"column":4},"end":{"line":173,"column":37}},"86":{"start":{"line":174,"column":4},"end":{"line":174,"column":23}},"87":{"start":{"line":177,"column":4},"end":{"line":177,"column":37}},"88":{"start":{"line":178,"column":4},"end":{"line":178,"column":24}},"89":{"start":{"line":183,"column":0},"end":{"line":216,"column":1}},"90":{"start":{"line":185,"column":2},"end":{"line":185,"column":44}},"91":{"start":{"line":185,"column":37},"end":{"line":185,"column":44}},"92":{"start":{"line":186,"column":2},"end":{"line":186,"column":44}},"93":{"start":{"line":186,"column":37},"end":{"line":186,"column":44}},"94":{"start":{"line":188,"column":2},"end":{"line":191,"column":3}},"95":{"start":{"line":189,"column":4},"end":{"line":189,"column":24}},"96":{"start":{"line":190,"column":4},"end":{"line":190,"column":24}},"97":{"start":{"line":194,"column":2},"end":{"line":196,"column":3}},"98":{"start":{"line":195,"column":4},"end":{"line":195,"column":38}},"99":{"start":{"line":198,"column":2},"end":{"line":198,"column":43}},"100":{"start":{"line":198,"column":21},"end":{"line":198,"column":41}},"101":{"start":{"line":199,"column":2},"end":{"line":199,"column":43}},"102":{"start":{"line":199,"column":21},"end":{"line":199,"column":41}},"103":{"start":{"line":203,"column":2},"end":{"line":205,"column":3}},"104":{"start":{"line":204,"column":4},"end":{"line":204,"column":66}},"105":{"start":{"line":206,"column":2},"end":{"line":208,"column":3}},"106":{"start":{"line":207,"column":4},"end":{"line":207,"column":66}},"107":{"start":{"line":211,"column":2},"end":{"line":213,"column":3}},"108":{"start":{"line":212,"column":4},"end":{"line":212,"column":60}},"109":{"start":{"line":215,"column":2},"end":{"line":215,"column":15}},"110":{"start":{"line":219,"column":0},"end":{"line":233,"column":1}},"111":{"start":{"line":221,"column":2},"end":{"line":221,"column":34}},"112":{"start":{"line":221,"column":21},"end":{"line":221,"column":34}},"113":{"start":{"line":223,"column":2},"end":{"line":223,"column":20}},"114":{"start":{"line":224,"column":2},"end":{"line":226,"column":77}},"115":{"start":{"line":228,"column":2},"end":{"line":230,"column":5}},"116":{"start":{"line":229,"column":4},"end":{"line":229,"column":45}},"117":{"start":{"line":229,"column":32},"end":{"line":229,"column":45}},"118":{"start":{"line":232,"column":2},"end":{"line":232,"column":15}},"119":{"start":{"line":236,"column":0},"end":{"line":239,"column":1}},"120":{"start":{"line":237,"column":2},"end":{"line":237,"column":35}},"121":{"start":{"line":237,"column":22},"end":{"line":237,"column":35}},"122":{"start":{"line":238,"column":2},"end":{"line":238,"column":33}},"123":{"start":{"line":242,"column":0},"end":{"line":263,"column":1}},"124":{"start":{"line":244,"column":2},"end":{"line":244,"column":36}},"125":{"start":{"line":247,"column":2},"end":{"line":250,"column":3}},"126":{"start":{"line":248,"column":4},"end":{"line":248,"column":27}},"127":{"start":{"line":249,"column":4},"end":{"line":249,"column":15}},"128":{"start":{"line":253,"column":2},"end":{"line":253,"column":46}},"129":{"start":{"line":253,"column":33},"end":{"line":253,"column":46}},"130":{"start":{"line":254,"column":2},"end":{"line":254,"column":44}},"131":{"start":{"line":254,"column":31},"end":{"line":254,"column":44}},"132":{"start":{"line":257,"column":2},"end":{"line":259,"column":3}},"133":{"start":{"line":258,"column":4},"end":{"line":258,"column":17}},"134":{"start":{"line":262,"column":2},"end":{"line":262,"column":14}},"135":{"start":{"line":266,"column":0},"end":{"line":269,"column":1}},"136":{"start":{"line":268,"column":2},"end":{"line":268,"column":48}},"137":{"start":{"line":270,"column":0},"end":{"line":272,"column":1}},"138":{"start":{"line":271,"column":2},"end":{"line":271,"column":48}},"139":{"start":{"line":273,"column":0},"end":{"line":275,"column":1}},"140":{"start":{"line":274,"column":2},"end":{"line":274,"column":54}},"141":{"start":{"line":276,"column":0},"end":{"line":279,"column":1}},"142":{"start":{"line":278,"column":2},"end":{"line":278,"column":42}},"143":{"start":{"line":281,"column":0},"end":{"line":322,"column":1}},"144":{"start":{"line":283,"column":2},"end":{"line":306,"column":3}},"145":{"start":{"line":285,"column":9},"end":{"line":306,"column":3}},"146":{"start":{"line":287,"column":4},"end":{"line":287,"column":51}},"147":{"start":{"line":290,"column":4},"end":{"line":290,"column":44}},"148":{"start":{"line":293,"column":4},"end":{"line":293,"column":68}},"149":{"start":{"line":297,"column":4},"end":{"line":297,"column":24}},"150":{"start":{"line":299,"column":4},"end":{"line":299,"column":65}},"151":{"start":{"line":303,"column":4},"end":{"line":303,"column":34}},"152":{"start":{"line":304,"column":4},"end":{"line":304,"column":31}},"153":{"start":{"line":305,"column":4},"end":{"line":305,"column":99}},"154":{"start":{"line":309,"column":2},"end":{"line":315,"column":3}},"155":{"start":{"line":309,"column":24},"end":{"line":309,"column":43}},"156":{"start":{"line":310,"column":7},"end":{"line":315,"column":3}},"157":{"start":{"line":310,"column":30},"end":{"line":310,"column":63}},"158":{"start":{"line":311,"column":7},"end":{"line":315,"column":3}},"159":{"start":{"line":314,"column":4},"end":{"line":314,"column":17}},"160":{"start":{"line":318,"column":2},"end":{"line":320,"column":3}},"161":{"start":{"line":319,"column":4},"end":{"line":319,"column":17}},"162":{"start":{"line":321,"column":2},"end":{"line":321,"column":14}},"163":{"start":{"line":324,"column":0},"end":{"line":326,"column":1}},"164":{"start":{"line":325,"column":2},"end":{"line":325,"column":68}},"165":{"start":{"line":339,"column":0},"end":{"line":339,"column":42}},"166":{"start":{"line":340,"column":0},"end":{"line":342,"column":1}},"167":{"start":{"line":341,"column":2},"end":{"line":341,"column":29}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"3":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":5},"end":{"line":41,"column":14}},{"start":{"line":41,"column":18},"end":{"line":41,"column":41}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"5":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":38},"end":{"line":56,"column":42}},{"start":{"line":56,"column":45},"end":{"line":56,"column":50}}]},"6":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"7":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"8":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"9":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"10":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":24}},{"start":{"line":85,"column":28},"end":{"line":85,"column":39}},{"start":{"line":85,"column":43},"end":{"line":85,"column":58}}]},"11":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":9},"end":{"line":88,"column":9}},{"start":{"line":88,"column":9},"end":{"line":88,"column":9}}]},"12":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":13},"end":{"line":88,"column":26}},{"start":{"line":88,"column":30},"end":{"line":88,"column":41}}]},"13":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":6},"end":{"line":91,"column":6}},{"start":{"line":91,"column":6},"end":{"line":91,"column":6}}]},"14":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":10},"end":{"line":95,"column":10}},{"start":{"line":95,"column":10},"end":{"line":95,"column":10}}]},"15":{"line":100,"type":"cond-expr","locations":[{"start":{"line":100,"column":23},"end":{"line":100,"column":28}},{"start":{"line":100,"column":31},"end":{"line":100,"column":35}}]},"16":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":9},"end":{"line":105,"column":9}},{"start":{"line":105,"column":9},"end":{"line":105,"column":9}}]},"17":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":13},"end":{"line":105,"column":34}},{"start":{"line":105,"column":38},"end":{"line":105,"column":49}}]},"18":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":9},"end":{"line":108,"column":9}},{"start":{"line":108,"column":9},"end":{"line":108,"column":9}}]},"19":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":13},"end":{"line":108,"column":41}},{"start":{"line":108,"column":45},"end":{"line":108,"column":57}}]},"20":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":9},"end":{"line":111,"column":9}},{"start":{"line":111,"column":9},"end":{"line":111,"column":9}}]},"21":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":13},"end":{"line":111,"column":31}},{"start":{"line":111,"column":35},"end":{"line":111,"column":46}}]},"22":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":9},"end":{"line":114,"column":9}},{"start":{"line":114,"column":9},"end":{"line":114,"column":9}}]},"23":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":13},"end":{"line":114,"column":38}},{"start":{"line":114,"column":42},"end":{"line":114,"column":54}}]},"24":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":9},"end":{"line":117,"column":9}},{"start":{"line":117,"column":9},"end":{"line":117,"column":9}}]},"25":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":9},"end":{"line":118,"column":9}},{"start":{"line":118,"column":9},"end":{"line":118,"column":9}}]},"26":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":9},"end":{"line":119,"column":9}},{"start":{"line":119,"column":9},"end":{"line":119,"column":9}}]},"27":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":9},"end":{"line":120,"column":9}},{"start":{"line":120,"column":9},"end":{"line":120,"column":9}}]},"28":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":7},"end":{"line":123,"column":7}},{"start":{"line":123,"column":7},"end":{"line":123,"column":7}}]},"29":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":9},"end":{"line":125,"column":9}},{"start":{"line":125,"column":9},"end":{"line":125,"column":9}}]},"30":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":9},"end":{"line":127,"column":9}},{"start":{"line":127,"column":9},"end":{"line":127,"column":9}}]},"31":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":9},"end":{"line":129,"column":9}},{"start":{"line":129,"column":9},"end":{"line":129,"column":9}}]},"32":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":7},"end":{"line":133,"column":7}},{"start":{"line":133,"column":7},"end":{"line":133,"column":7}}]},"33":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":7},"end":{"line":140,"column":7}},{"start":{"line":140,"column":7},"end":{"line":140,"column":7}}]},"34":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":11},"end":{"line":140,"column":32}},{"start":{"line":140,"column":36},"end":{"line":140,"column":67}}]},"35":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"36":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":5},"end":{"line":185,"column":21}},{"start":{"line":185,"column":25},"end":{"line":185,"column":35}}]},"37":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":2},"end":{"line":186,"column":2}},{"start":{"line":186,"column":2},"end":{"line":186,"column":2}}]},"38":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":5},"end":{"line":186,"column":21}},{"start":{"line":186,"column":25},"end":{"line":186,"column":35}}]},"39":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":2},"end":{"line":188,"column":2}},{"start":{"line":188,"column":2},"end":{"line":188,"column":2}}]},"40":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":6},"end":{"line":188,"column":19}},{"start":{"line":188,"column":23},"end":{"line":188,"column":36}}]},"41":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":194,"column":2}},{"start":{"line":194,"column":2},"end":{"line":194,"column":2}}]},"42":{"line":194,"type":"binary-expr","locations":[{"start":{"line":194,"column":5},"end":{"line":194,"column":16}},{"start":{"line":194,"column":20},"end":{"line":194,"column":31}}]},"43":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"44":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":2},"end":{"line":199,"column":2}},{"start":{"line":199,"column":2},"end":{"line":199,"column":2}}]},"45":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"46":{"line":204,"type":"cond-expr","locations":[{"start":{"line":204,"column":44},"end":{"line":204,"column":56}},{"start":{"line":204,"column":59},"end":{"line":204,"column":65}}]},"47":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"48":{"line":207,"type":"cond-expr","locations":[{"start":{"line":207,"column":44},"end":{"line":207,"column":56}},{"start":{"line":207,"column":59},"end":{"line":207,"column":65}}]},"49":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":2},"end":{"line":211,"column":2}},{"start":{"line":211,"column":2},"end":{"line":211,"column":2}}]},"50":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":6},"end":{"line":211,"column":19}},{"start":{"line":211,"column":23},"end":{"line":211,"column":36}},{"start":{"line":211,"column":40},"end":{"line":211,"column":59}},{"start":{"line":211,"column":63},"end":{"line":211,"column":82}}]},"51":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":221,"column":2}},{"start":{"line":221,"column":2},"end":{"line":221,"column":2}}]},"52":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":4},"end":{"line":229,"column":4}},{"start":{"line":229,"column":4},"end":{"line":229,"column":4}}]},"53":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":2},"end":{"line":237,"column":2}},{"start":{"line":237,"column":2},"end":{"line":237,"column":2}}]},"54":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":2},"end":{"line":247,"column":2}},{"start":{"line":247,"column":2},"end":{"line":247,"column":2}}]},"55":{"line":247,"type":"binary-expr","locations":[{"start":{"line":247,"column":5},"end":{"line":247,"column":25}},{"start":{"line":247,"column":29},"end":{"line":247,"column":43}}]},"56":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"57":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":2}},{"start":{"line":254,"column":2},"end":{"line":254,"column":2}}]},"58":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"59":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":2},"end":{"line":283,"column":2}},{"start":{"line":283,"column":2},"end":{"line":283,"column":2}}]},"60":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":9},"end":{"line":285,"column":9}},{"start":{"line":285,"column":9},"end":{"line":285,"column":9}}]},"61":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":2},"end":{"line":309,"column":2}},{"start":{"line":309,"column":2},"end":{"line":309,"column":2}}]},"62":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":7},"end":{"line":310,"column":7}},{"start":{"line":310,"column":7},"end":{"line":310,"column":7}}]},"63":{"line":310,"type":"cond-expr","locations":[{"start":{"line":310,"column":46},"end":{"line":310,"column":52}},{"start":{"line":310,"column":55},"end":{"line":310,"column":62}}]},"64":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":7},"end":{"line":311,"column":7}},{"start":{"line":311,"column":7},"end":{"line":311,"column":7}}]},"65":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":2},"end":{"line":318,"column":2}},{"start":{"line":318,"column":2},"end":{"line":318,"column":2}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var X_ISO_DATE = require('../X_ISO_DATE.constant');","","","","/**"," * Apply a(nother) `where` filter to `data`"," *"," * @param  { Object[] }  data"," * @param  { Object }    where"," * @return { Object[] }"," */","module.exports = function (data, where) {","  if( !data ) return data;","  return _.filter(data, function(tuple) {","    return matchSet(tuple, where);","  });","};","","","","","","","//////////////////////////","///","/// private methods   ||","///                   \\/","///","//////////////////////////","","","// Match a model against each criterion in a criteria query","function matchSet(model, criteria, parentKey) {","","  // Null or {} WHERE query always matches everything","  if(!criteria || _.isEqual(criteria, {})) return true;","","  // By default, treat entries as AND","  return _.all(criteria, function(criterion, key) {","    return matchItem(model, key, criterion, parentKey);","  });","}","","","function matchOr(model, disjuncts) {","  var outcomes = [];","  _.each(disjuncts, function(criteria) {","    if(matchSet(model, criteria)) outcomes.push(true);","  });","","  var outcome = outcomes.length > 0 ? true : false;","  return outcome;","}","","function matchAnd(model, conjuncts) {","  var outcome = true;","  _.each(conjuncts, function(criteria) {","    if(!matchSet(model, criteria)) outcome = false;","  });","  return outcome;","}","","function matchLike(model, criteria) {","  for(var key in criteria) {","    // Return false if no match is found","    if (!checkLike(model[key], criteria[key])) return false;","  }","  return true;","}","","function matchNot(model, criteria) {","  return !matchSet(model, criteria);","}","","function matchItem(model, key, criterion, parentKey) {","","  // Handle special attr query","  if (parentKey) {","","    if (key === 'equals' || key === '=' || key === 'equal') {","      return matchLiteral(model,parentKey,criterion, compare['=']);","    }","    else if (key === 'not' || key === '!') {","","      // Check for Not In","      if(Array.isArray(criterion)) {","","        var match = false;","        criterion.forEach(function(val) {","          if(compare['='](model[parentKey], val)) {","            match = true;","          }","        });","","        return match ? false : true;","      }","","      return matchLiteral(model,parentKey,criterion, compare['!']);","    }","    else if (key === 'greaterThan' || key === '>') {","      return matchLiteral(model,parentKey,criterion, compare['>']);","    }","    else if (key === 'greaterThanOrEqual' || key === '>=')  {","      return matchLiteral(model,parentKey,criterion, compare['>=']);","    }","    else if (key === 'lessThan' || key === '<')  {","      return matchLiteral(model,parentKey,criterion, compare['<']);","    }","    else if (key === 'lessThanOrEqual' || key === '<=')  {","      return matchLiteral(model,parentKey,criterion, compare['<=']);","    }","    else if (key === 'startsWith') return matchLiteral(model,parentKey,criterion, checkStartsWith);","    else if (key === 'endsWith') return matchLiteral(model,parentKey,criterion, checkEndsWith);","    else if (key === 'contains') return matchLiteral(model,parentKey,criterion, checkContains);","    else if (key === 'like') return matchLiteral(model,parentKey,criterion, checkLike);","    else throw new Error ('Invalid query syntax!');","  }","  else if(key.toLowerCase() === 'or') {","    return matchOr(model, criterion);","  } else if(key.toLowerCase() === 'not') {","    return matchNot(model, criterion);","  } else if(key.toLowerCase() === 'and') {","    return matchAnd(model, criterion);","  } else if(key.toLowerCase() === 'like') {","    return matchLike(model, criterion);","  }","  // IN query","  else if(_.isArray(criterion)) {","    return _.any(criterion, function(val) {","      return compare['='](model[key], val);","    });","  }","","  // Special attr query","  else if (_.isObject(criterion) && validSubAttrCriteria(criterion)) {","    // Attribute is being checked in a specific way","    return matchSet(model, criterion, key);","  }","","  // Otherwise, try a literal match","  else return matchLiteral(model,key,criterion, compare['=']);","","}","","// Comparison fns","var compare = {","","  // Equalish","  '=' : function (a,b) {","    var x = normalizeComparison(a,b);","    return x[0] == x[1];","  },","","  // Not equalish","  '!' : function (a,b) {","    var x = normalizeComparison(a,b);","    return x[0] != x[1];","  },","  '>' : function (a,b) {","    var x = normalizeComparison(a,b);","    return x[0] > x[1];","  },","  '>=': function (a,b) {","    var x = normalizeComparison(a,b);","    return x[0] >= x[1];","  },","  '<' : function (a,b) {","    var x = normalizeComparison(a,b);","    return x[0] < x[1];","  },","  '<=': function (a,b) {","    var x = normalizeComparison(a,b);","    return x[0] <= x[1];","  }","};","","// Prepare two values for comparison","function normalizeComparison(a,b) {","","  if(_.isUndefined(a) || a === null) a = '';","  if(_.isUndefined(b) || b === null) b = '';","","  if (_.isString(a) && _.isString(b)) {","    a = a.toLowerCase();","    b = b.toLowerCase();","  }","","  // If Comparing dates, keep them as dates","  if(_.isDate(a) && _.isDate(b)) {","    return [a.getTime(), b.getTime()];","  }","  // Otherwise convert them to ISO strings","  if (_.isDate(a)) { a = a.toISOString(); }","  if (_.isDate(b)) { b = b.toISOString(); }","","","  // Stringify for comparisons- except for numbers, null, and undefined","  if (!_.isNumber(a)) {","    a = typeof a.toString !== 'undefined' ? a.toString() : '' + a;","  }","  if (!_.isNumber(b)) {","    b = typeof b.toString !== 'undefined' ? b.toString() : '' + b;","  }","","  // If comparing date-like things, treat them like dates","  if (_.isString(a) && _.isString(b) && a.match(X_ISO_DATE) && b.match(X_ISO_DATE)) {","    return ([new Date(a).getTime(), new Date(b).getTime()]);","  }","","  return [a,b];","}","","// Return whether this criteria is valid as an object inside of an attribute","function validSubAttrCriteria(c) {","","  if(!_.isObject(c)) return false;","","  var valid = false;","  var validAttributes = [","    'equals', 'not', 'greaterThan', 'lessThan', 'greaterThanOrEqual', 'lessThanOrEqual',","    '<', '<=', '!', '>', '>=', 'startsWith', 'endsWith', 'contains', 'like'];","","  _.each(validAttributes, function(attr) {","    if(hasOwnProperty(c, attr)) valid = true;","  });","","  return valid;","}","","// Returns whether this value can be successfully parsed as a finite number","function isNumbery (value) {","  if(_.isDate(value)) return false;","  return Math.pow(+value, 2) > 0;","}","","// matchFn => the function that will be run to check for a match between the two literals","function matchLiteral(model, key, criterion, matchFn) {","","  var val = _.cloneDeep(model[key]);","","  // If the criterion are both parsable finite numbers, cast them","  if(isNumbery(criterion) && isNumbery(val)) {","    criterion = +criterion;","    val = +val;","  }","","  // ensure the key attr exists in model","  if(!model.hasOwnProperty(key)) return false;","  if(_.isUndefined(criterion)) return false;","","  // ensure the key attr matches model attr in model","  if((!matchFn(val,criterion))) {","    return false;","  }","","  // Otherwise this is a match","  return true;","}","","","function checkStartsWith (value, matchString) {","  // console.log('CheCKING startsWith ', value, 'against matchString:', matchString, 'result:',sqlLikeMatch(value, matchString));","  return sqlLikeMatch(value, matchString + '%');","}","function checkEndsWith (value, matchString) {","  return sqlLikeMatch(value, '%' + matchString);","}","function checkContains (value, matchString) {","  return sqlLikeMatch(value, '%' + matchString + '%');","}","function checkLike (value, matchString) {","  // console.log('CheCKING  ', value, 'against matchString:', matchString, 'result:',sqlLikeMatch(value, matchString));","  return sqlLikeMatch(value, matchString);","}","","function sqlLikeMatch (value,matchString) {","","  if(_.isRegExp(matchString)) {","    // awesome","  } else if(_.isString(matchString)) {","    // Handle escaped percent (%) signs","    matchString = matchString.replace(/%%%/g, '%');","","    // Escape regex","    matchString = escapeRegExp(matchString);","","    // Replace SQL % match notation with something the ECMA regex parser can handle","    matchString = matchString.replace(/([^%]*)%([^%]*)/g, '$1.*$2');","","    // Case insensitive by default","    // TODO: make this overridable","    var modifiers = 'i';","","    matchString = new RegExp('^' + matchString + '$', modifiers);","  }","  // Unexpected match string!","  else {","    console.error('matchString:');","    console.error(matchString);","    throw new Error('Unexpected match string: ' + matchString + ' Please use a regexp or string.');","  }","","  // Deal with non-strings","  if(_.isNumber(value)) value = '' + value;","  else if(_.isBoolean(value)) value = value ? 'true' : 'false';","  else if(!_.isString(value)) {","    // Ignore objects, arrays, null, and undefined data for now","    // (and maybe forever)","    return false;","  }","","  // Check that criterion attribute and is at least similar to the model's value for that attr","  if(!value.match(matchString)) {","    return false;","  }","  return true;","}","","function escapeRegExp(str) {","  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');","}","","","","/**"," * Safer helper for hasOwnProperty checks"," *"," * @param {Object} obj"," * @param {String} prop"," * @return {Boolean}"," * @api public"," */","","var hop = Object.prototype.hasOwnProperty;","function hasOwnProperty(obj, prop) {","  return hop.call(obj, prop);","}",""],"l":{"5":1,"6":1,"17":1,"18":0,"19":0,"20":0,"38":1,"41":0,"44":0,"45":0,"50":1,"51":0,"52":0,"53":0,"56":0,"57":0,"60":1,"61":0,"62":0,"63":0,"65":0,"68":1,"69":0,"71":0,"73":0,"76":1,"77":0,"80":1,"83":0,"85":0,"86":0,"88":0,"91":0,"93":0,"94":0,"95":0,"96":0,"100":0,"103":0,"105":0,"106":0,"108":0,"109":0,"111":0,"112":0,"114":0,"115":0,"117":0,"118":0,"119":0,"120":0,"121":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"133":0,"134":0,"135":0,"140":0,"142":0,"146":0,"151":1,"155":0,"156":0,"161":0,"162":0,"165":0,"166":0,"169":0,"170":0,"173":0,"174":0,"177":0,"178":0,"183":1,"185":0,"186":0,"188":0,"189":0,"190":0,"194":0,"195":0,"198":0,"199":0,"203":0,"204":0,"206":0,"207":0,"211":0,"212":0,"215":0,"219":1,"221":0,"223":0,"224":0,"228":0,"229":0,"232":0,"236":1,"237":0,"238":0,"242":1,"244":0,"247":0,"248":0,"249":0,"253":0,"254":0,"257":0,"258":0,"262":0,"266":1,"268":0,"270":1,"271":0,"273":1,"274":0,"276":1,"278":0,"281":1,"283":0,"285":0,"287":0,"290":0,"293":0,"297":0,"299":0,"303":0,"304":0,"305":0,"309":0,"310":0,"311":0,"314":0,"318":0,"319":0,"321":0,"324":1,"325":0,"339":1,"340":1,"341":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/X_ISO_DATE.constant.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/X_ISO_DATE.constant.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":226}}},"branchMap":{},"code":["// See http://stackoverflow.com/a/3143231/486547","module.exports = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/;",""],"l":{"2":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/filters/limit.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/filters/limit.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":40}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":6,"column":27}},"2":{"start":{"line":16,"column":0},"end":{"line":19,"column":2}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":63}},"4":{"start":{"line":17,"column":51},"end":{"line":17,"column":63}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":30}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":25}},{"start":{"line":17,"column":29},"end":{"line":17,"column":34}},{"start":{"line":17,"column":38},"end":{"line":17,"column":49}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash')","  , util = require('util');","","","/**"," * Apply a `limit` modifier to `data` using `limit`."," *"," * @param  { Object[] }  data"," * @param  { Integer }    limit"," * @return { Object[] }"," */","module.exports = function (data, limit) {","  if( limit === undefined || !data || limit === 0) return data;","  return _.first(data, limit);","};",""],"l":{"5":1,"16":1,"17":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/filters/skip.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/filters/skip.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":44}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":6,"column":27}},"2":{"start":{"line":16,"column":0},"end":{"line":22,"column":2}},"3":{"start":{"line":18,"column":2},"end":{"line":18,"column":38}},"4":{"start":{"line":18,"column":26},"end":{"line":18,"column":38}},"5":{"start":{"line":21,"column":2},"end":{"line":21,"column":33}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":5},"end":{"line":18,"column":15}},{"start":{"line":18,"column":19},"end":{"line":18,"column":24}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash')","  , util = require('util');","","","/**"," * Apply a `skip` modifier to `data` using `numToSkip`."," * "," * @param  { Object[] }  data"," * @param  { Integer }   numToSkip"," * @return { Object[] }"," */","module.exports = function (data, numToSkip) {","","  if(!numToSkip || !data) return data;","  ","  // Ignore the first `numToSkip` tuples","  return _.rest(data, numToSkip);","};",""],"l":{"5":1,"16":1,"18":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/projections/select.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/projections/select.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"select","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":33}}},"2":{"name":"arrayToObj","line":28,"loc":{"start":{"line":28,"column":30},"end":{"line":28,"column":66}}},"3":{"name":"_areExplicitlyFalse","line":38,"loc":{"start":{"line":38,"column":47},"end":{"line":38,"column":81}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":23},"end":{"line":43,"column":40}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":28},"end":{"line":47,"column":54}}},"6":{"name":"(anonymous_6)","line":70,"loc":{"start":{"line":70,"column":19},"end":{"line":70,"column":50}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":16,"column":0},"end":{"line":84,"column":1}},"4":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"5":{"start":{"line":20,"column":4},"end":{"line":20,"column":27}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":48}},"7":{"start":{"line":24,"column":34},"end":{"line":24,"column":48}},"8":{"start":{"line":27,"column":2},"end":{"line":32,"column":3}},"9":{"start":{"line":28,"column":4},"end":{"line":31,"column":11}},"10":{"start":{"line":29,"column":6},"end":{"line":29,"column":28}},"11":{"start":{"line":30,"column":6},"end":{"line":30,"column":18}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":31}},"13":{"start":{"line":38,"column":2},"end":{"line":38,"column":113}},"14":{"start":{"line":38,"column":83},"end":{"line":38,"column":102}},"15":{"start":{"line":39,"column":2},"end":{"line":39,"column":21}},"16":{"start":{"line":43,"column":2},"end":{"line":83,"column":5}},"17":{"start":{"line":46,"column":4},"end":{"line":53,"column":5}},"18":{"start":{"line":47,"column":6},"end":{"line":49,"column":9}},"19":{"start":{"line":48,"column":8},"end":{"line":48,"column":60}},"20":{"start":{"line":52,"column":6},"end":{"line":52,"column":49}},"21":{"start":{"line":70,"column":4},"end":{"line":80,"column":7}},"22":{"start":{"line":72,"column":6},"end":{"line":79,"column":7}},"23":{"start":{"line":73,"column":8},"end":{"line":78,"column":9}},"24":{"start":{"line":74,"column":10},"end":{"line":74,"column":63}},"25":{"start":{"line":76,"column":13},"end":{"line":78,"column":9}},"26":{"start":{"line":77,"column":10},"end":{"line":77,"column":68}},"27":{"start":{"line":82,"column":4},"end":{"line":82,"column":17}},"28":{"start":{"line":86,"column":0},"end":{"line":86,"column":24}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"5":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":6},"end":{"line":72,"column":6}},{"start":{"line":72,"column":6},"end":{"line":72,"column":6}}]},"6":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":8}},{"start":{"line":73,"column":8},"end":{"line":73,"column":8}}]},"7":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":13},"end":{"line":76,"column":13}},{"start":{"line":76,"column":13},"end":{"line":76,"column":13}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var util = require('util');","","","/**"," * Project `tuples` on `fields`."," * "," * @param  { Object[] }  tuples    [i.e. filteredData]"," * @param  { String[]/Object{} }  fields    [i.e. schema]"," * @return { Object[] }"," */","function select (tuples, fields) {","","  // Expand splat shortcut syntax","  if (fields === '*') {","    fields = { '*': true };","  }","","  // If `fields` are not an Object or Array, don't modify the output.","  if (typeof fields !== 'object') return tuples;","","  // If `fields` are specified as an Array, convert them to an Object.","  if (_.isArray(fields)) {","    fields = _.reduce(fields, function arrayToObj(memo, attrName) {","      memo[attrName] = true;","      return memo;","    }, {});","  }","","  // If the '*' key is specified, the projection algorithm is flipped:","  // only keys which are explicitly set to `false` will be excluded--","  // all other keys will be left alone (this lasts until the recursive step.)","  var hasSplat = !!fields['*'];","  var fieldsToExplicitlyOmit = _(fields).where(function _areExplicitlyFalse (v,k){ return v === false; }).keys();","  delete fields['*'];","","","  // Finally, select fields from tuples.","  return _.map(tuples, function (tuple) {","","    // Select the requested attributes of the tuple","    if (hasSplat) {","      tuple = _.omit(tuple, function (value, attrName){","        return _.contains(fieldsToExplicitlyOmit, attrName);","      });","    }","    else {","      tuple = _.pick(tuple, Object.keys(fields));","    }","","","    // || NOTE THAT THIS APPROACH WILL CHANGE IN AN UPCOMING RELEASE","    // \\/ TO MATCH THE CONVENTIONS ESTABLISHED IN WL2.","","    // Take recursive step if necessary to support nested","    // SELECT clauses (NOT nested modifiers- more like nested","    // WHEREs)","    // ","    // e.g.:","    // like this:","    //   -> { select: { pet: { collarSize: true } } }","    //   ","    // not this:","    //   -> { select: { pet: { select: { collarSize: true } } } }","    //","    _.each(fields, function (subselect, attrName) {","","      if (typeof subselect === 'object') {","        if (_.isArray(tuple[attrName])) {","          tuple[attrName] = select(tuple[attrName], subselect);","        }","        else if (_.isObject(tuple[attrName])) {","          tuple[attrName] = select([tuple[attrName]], subselect)[0];","        }","      }","    });","","    return tuple;","  });","}","","module.exports = select;",""],"l":{"5":1,"6":1,"16":1,"19":0,"20":0,"24":0,"27":0,"28":0,"29":0,"30":0,"37":0,"38":0,"39":0,"43":0,"46":0,"47":0,"48":0,"52":0,"70":0,"72":0,"73":0,"74":0,"76":0,"77":0,"82":0,"86":1}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/projections/groupBy.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/projections/groupBy.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":59}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":6,"column":27}},"2":{"start":{"line":17,"column":0},"end":{"line":19,"column":2}},"3":{"start":{"line":18,"column":2},"end":{"line":18,"column":22}}},"branchMap":{},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash')","  , util = require('util');","","","/**"," * Partition the tuples in `filteredData` into buckets via `groupByAttribute`."," * Works with aggregations to allow for powerful reporting queries."," * "," * @param  { Object[] }  filteredData"," * @param  { String }    groupByAttribute"," * @return { Object[] }"," */","module.exports = function (filteredData, groupByAttribute) {","  return filteredData;","};",""],"l":{"5":1,"17":1,"18":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/sort.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline-criteria/lib/sort.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":50}}},"2":{"name":"rankSpecialCase","line":23,"loc":{"start":{"line":23,"column":15},"end":{"line":23,"column":59}}},"3":{"name":"sortData","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":42}}},"4":{"name":"comparator","line":67,"loc":{"start":{"line":67,"column":19},"end":{"line":67,"column":45}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":32},"end":{"line":68,"column":77}}},"6":{"name":"coerceIntoBestGuessType","line":119,"loc":{"start":{"line":119,"column":0},"end":{"line":119,"column":37}}},"7":{"name":"guessType","line":129,"loc":{"start":{"line":129,"column":0},"end":{"line":129,"column":23}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"4":{"start":{"line":19,"column":0},"end":{"line":33,"column":2}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":40}},"6":{"start":{"line":20,"column":28},"end":{"line":20,"column":40}},"7":{"start":{"line":23,"column":2},"end":{"line":30,"column":4}},"8":{"start":{"line":26,"column":4},"end":{"line":29,"column":21}},"9":{"start":{"line":27,"column":6},"end":{"line":27,"column":19}},"10":{"start":{"line":29,"column":9},"end":{"line":29,"column":21}},"11":{"start":{"line":32,"column":2},"end":{"line":32,"column":55}},"12":{"start":{"line":60,"column":0},"end":{"line":106,"column":1}},"13":{"start":{"line":63,"column":2},"end":{"line":63,"column":23}},"14":{"start":{"line":64,"column":2},"end":{"line":64,"column":21}},"15":{"start":{"line":65,"column":2},"end":{"line":65,"column":16}},"16":{"start":{"line":67,"column":2},"end":{"line":105,"column":5}},"17":{"start":{"line":68,"column":4},"end":{"line":104,"column":10}},"18":{"start":{"line":71,"column":6},"end":{"line":71,"column":18}},"19":{"start":{"line":74,"column":6},"end":{"line":74,"column":33}},"20":{"start":{"line":75,"column":6},"end":{"line":75,"column":33}},"21":{"start":{"line":76,"column":6},"end":{"line":88,"column":7}},"22":{"start":{"line":76,"column":22},"end":{"line":76,"column":38}},"23":{"start":{"line":77,"column":11},"end":{"line":88,"column":7}},"24":{"start":{"line":77,"column":26},"end":{"line":77,"column":46}},"25":{"start":{"line":78,"column":11},"end":{"line":88,"column":7}},"26":{"start":{"line":78,"column":26},"end":{"line":78,"column":49}},"27":{"start":{"line":83,"column":8},"end":{"line":83,"column":25}},"28":{"start":{"line":84,"column":8},"end":{"line":84,"column":25}},"29":{"start":{"line":85,"column":8},"end":{"line":87,"column":29}},"30":{"start":{"line":85,"column":23},"end":{"line":85,"column":43}},"31":{"start":{"line":86,"column":13},"end":{"line":87,"column":29}},"32":{"start":{"line":86,"column":28},"end":{"line":86,"column":51}},"33":{"start":{"line":87,"column":13},"end":{"line":87,"column":29}},"34":{"start":{"line":92,"column":6},"end":{"line":102,"column":28}},"35":{"start":{"line":93,"column":8},"end":{"line":93,"column":43}},"36":{"start":{"line":97,"column":11},"end":{"line":102,"column":28}},"37":{"start":{"line":98,"column":8},"end":{"line":98,"column":42}},"38":{"start":{"line":102,"column":11},"end":{"line":102,"column":28}},"39":{"start":{"line":119,"column":0},"end":{"line":126,"column":1}},"40":{"start":{"line":120,"column":2},"end":{"line":125,"column":3}},"41":{"start":{"line":121,"column":23},"end":{"line":121,"column":54}},"42":{"start":{"line":122,"column":22},"end":{"line":122,"column":32}},"43":{"start":{"line":123,"column":20},"end":{"line":123,"column":39}},"44":{"start":{"line":124,"column":13},"end":{"line":124,"column":22}},"45":{"start":{"line":129,"column":0},"end":{"line":152,"column":1}},"46":{"start":{"line":131,"column":2},"end":{"line":151,"column":23}},"47":{"start":{"line":132,"column":4},"end":{"line":132,"column":20}},"48":{"start":{"line":136,"column":7},"end":{"line":151,"column":23}},"49":{"start":{"line":137,"column":4},"end":{"line":137,"column":24}},"50":{"start":{"line":141,"column":7},"end":{"line":151,"column":23}},"51":{"start":{"line":142,"column":4},"end":{"line":142,"column":23}},"52":{"start":{"line":146,"column":7},"end":{"line":151,"column":23}},"53":{"start":{"line":147,"column":4},"end":{"line":147,"column":21}},"54":{"start":{"line":151,"column":7},"end":{"line":151,"column":23}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":17}},{"start":{"line":20,"column":21},"end":{"line":20,"column":26}}]},"3":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":9},"end":{"line":23,"column":13}},{"start":{"line":23,"column":15},"end":{"line":30,"column":3}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"5":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":9},"end":{"line":26,"column":46}},{"start":{"line":26,"column":50},"end":{"line":26,"column":75}}]},"6":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":6}},{"start":{"line":76,"column":6},"end":{"line":76,"column":6}}]},"7":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":10},"end":{"line":76,"column":13}},{"start":{"line":76,"column":17},"end":{"line":76,"column":20}}]},"8":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":11},"end":{"line":77,"column":11}},{"start":{"line":77,"column":11},"end":{"line":77,"column":11}}]},"9":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":15},"end":{"line":77,"column":18}},{"start":{"line":77,"column":22},"end":{"line":77,"column":24}}]},"10":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":11},"end":{"line":78,"column":11}},{"start":{"line":78,"column":11},"end":{"line":78,"column":11}}]},"11":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":15},"end":{"line":78,"column":17}},{"start":{"line":78,"column":21},"end":{"line":78,"column":24}}]},"12":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"13":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":13},"end":{"line":86,"column":13}},{"start":{"line":86,"column":13},"end":{"line":86,"column":13}}]},"14":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":6},"end":{"line":92,"column":6}},{"start":{"line":92,"column":6},"end":{"line":92,"column":6}}]},"15":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":15},"end":{"line":93,"column":24}},{"start":{"line":93,"column":28},"end":{"line":93,"column":42}}]},"16":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":11},"end":{"line":97,"column":11}},{"start":{"line":97,"column":11},"end":{"line":97,"column":11}}]},"17":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":15},"end":{"line":98,"column":24}},{"start":{"line":98,"column":28},"end":{"line":98,"column":41}}]},"18":{"line":120,"type":"switch","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":54}},{"start":{"line":122,"column":4},"end":{"line":122,"column":32}},{"start":{"line":123,"column":4},"end":{"line":123,"column":39}},{"start":{"line":124,"column":4},"end":{"line":124,"column":22}}]},"19":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":43},"end":{"line":121,"column":47}},{"start":{"line":121,"column":48},"end":{"line":121,"column":53}}]},"20":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":2},"end":{"line":131,"column":2}},{"start":{"line":131,"column":2},"end":{"line":131,"column":2}}]},"21":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":7},"end":{"line":136,"column":7}},{"start":{"line":136,"column":7},"end":{"line":136,"column":7}}]},"22":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":11},"end":{"line":136,"column":23}},{"start":{"line":136,"column":27},"end":{"line":136,"column":40}}]},"23":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":7},"end":{"line":141,"column":7}},{"start":{"line":141,"column":7},"end":{"line":141,"column":7}}]},"24":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":7},"end":{"line":146,"column":7}},{"start":{"line":146,"column":7},"end":{"line":146,"column":7}}]}},"code":["/**"," * Module dependencies"," */","","var _ = require('lodash');","var util = require('util');","var X_ISO_DATE = require('./X_ISO_DATE.constant');","","","","/**"," * Sort the tuples in `data` using `comparator`."," *"," * @param  { Object[] }  data"," * @param  { Object }    comparator"," * @param  { Function }    when"," * @return { Object[] }"," */","module.exports = function(data, comparator, when) {","  if (!comparator || !data) return data;","","  // Equivalent to a SQL \"WHEN\"","  when = when||function rankSpecialCase (record, attrName) {","","    // null ranks lower than anything else","    if ( typeof record[attrName]==='undefined' || record[attrName] === null ) {","      return false;","    }","    else return true;","  };","","  return sortData(_.cloneDeep(data), comparator, when);","};","","","","//////////////////////////","///","/// private methods   ||","///                   \\/","///                   ","//////////////////////////","","","","","","","/**"," * Sort `data` (tuples) using `sortVector` (comparator obj)"," *"," * Based on method described here:"," * http://stackoverflow.com/a/4760279/909625"," *"," * @param  { Object[] } data         [tuples]"," * @param  { Object }   sortVector [mongo-style comparator object]"," * @return { Object[] }"," */","","function sortData(data, sortVector, when) {","","  // Constants","  var GREATER_THAN = 1;","  var LESS_THAN = -1;","  var EQUAL = 0;","  ","  return data.sort(function comparator(a, b) {","    return _(sortVector).reduce(function (flagSoFar, sortDirection, attrName){","","","      var outcome;","","      // Handle special cases (defined by WHEN):","      var $a = when(a, attrName);","      var $b = when(b, attrName);","      if (!$a && !$b) outcome = EQUAL;","      else if (!$a && $b) outcome = LESS_THAN;","      else if ($a && !$b) outcome = GREATER_THAN;","","      // General case:","      else {","        // Coerce types","        $a = a[attrName];","        $b = b[attrName];","        if ( $a < $b ) outcome = LESS_THAN;","        else if ( $a > $b ) outcome = GREATER_THAN;","        else outcome = EQUAL;","      }","","      // Less-Than case (-1)","      // (leaves flagSoFar untouched if it has been set, otherwise sets it)","      if ( outcome === LESS_THAN ) {","        return flagSoFar || -sortDirection;","      }","      // Greater-Than case (1)","      // (leaves flagSoFar untouched if it has been set, otherwise sets it)","      else if ( outcome === GREATER_THAN ) {","        return flagSoFar || sortDirection;","      }","      // Equals case (0)","      // (always leaves flagSoFar untouched)","      else return flagSoFar;","","    }, 0);","  });","}","","","","","","","/**"," * Coerce a value to its probable intended type for sorting."," * "," * @param  {???} x"," * @return {???}"," */","function coerceIntoBestGuessType (x) {","  switch ( guessType(x) ) {","    case 'booleanish': return (x==='true')?true:false;","    case 'numberish': return +x;","    case 'dateish': return new Date(x);","    default: return x;","  }","}","","","function guessType (x) {","","  if (!_.isString(x)) {","    return typeof x;","  }","","  // Probably meant to be a boolean","  else if (x === 'true' || x === 'false') {","    return 'booleanish';","  }","","  // Probably meant to be a number","  else if (+x === x) {","    return 'numberish';","  }","","  // Probably meant to be a date","  else if (x.match(X_ISO_DATE)) {","    return 'dateish';","  }","","  // Just another string","  else return typeof x;","}",""],"l":{"5":1,"6":1,"7":1,"19":1,"20":0,"23":0,"26":0,"27":0,"29":0,"32":0,"60":1,"63":0,"64":0,"65":0,"67":0,"68":0,"71":0,"74":0,"75":0,"76":0,"77":0,"78":0,"83":0,"84":0,"85":0,"86":0,"87":0,"92":0,"93":0,"97":0,"98":0,"102":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"129":1,"131":0,"132":0,"136":0,"137":0,"141":0,"142":0,"146":0,"147":0,"151":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/finders/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/finders/helpers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":15},"end":{"line":15,"column":47}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":44}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":14},"end":{"line":36,"column":46}}},"4":{"name":"applyStartsWith","line":39,"loc":{"start":{"line":39,"column":69},"end":{"line":39,"column":104}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":12},"end":{"line":49,"column":44}}},"6":{"name":"applyEndsWith","line":52,"loc":{"start":{"line":52,"column":69},"end":{"line":52,"column":102}}},"7":{"name":"(anonymous_7)","line":62,"loc":{"start":{"line":62,"column":12},"end":{"line":62,"column":44}}},"8":{"name":"applyContains","line":65,"loc":{"start":{"line":65,"column":69},"end":{"line":65,"column":102}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":51}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"4":{"start":{"line":11,"column":0},"end":{"line":74,"column":2}},"5":{"start":{"line":16,"column":4},"end":{"line":16,"column":96}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":69}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":79}},"8":{"start":{"line":20,"column":19},"end":{"line":20,"column":79}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":40}},"10":{"start":{"line":26,"column":4},"end":{"line":26,"column":93}},"11":{"start":{"line":29,"column":4},"end":{"line":29,"column":69}},"12":{"start":{"line":30,"column":4},"end":{"line":30,"column":79}},"13":{"start":{"line":30,"column":19},"end":{"line":30,"column":79}},"14":{"start":{"line":32,"column":4},"end":{"line":32,"column":37}},"15":{"start":{"line":37,"column":4},"end":{"line":37,"column":95}},"16":{"start":{"line":39,"column":4},"end":{"line":41,"column":7}},"17":{"start":{"line":40,"column":6},"end":{"line":40,"column":28}},"18":{"start":{"line":43,"column":4},"end":{"line":43,"column":79}},"19":{"start":{"line":43,"column":19},"end":{"line":43,"column":79}},"20":{"start":{"line":45,"column":4},"end":{"line":45,"column":37}},"21":{"start":{"line":50,"column":4},"end":{"line":50,"column":95}},"22":{"start":{"line":52,"column":4},"end":{"line":54,"column":7}},"23":{"start":{"line":53,"column":6},"end":{"line":53,"column":28}},"24":{"start":{"line":56,"column":4},"end":{"line":56,"column":79}},"25":{"start":{"line":56,"column":19},"end":{"line":56,"column":79}},"26":{"start":{"line":58,"column":4},"end":{"line":58,"column":37}},"27":{"start":{"line":63,"column":4},"end":{"line":63,"column":95}},"28":{"start":{"line":65,"column":4},"end":{"line":67,"column":7}},"29":{"start":{"line":66,"column":6},"end":{"line":66,"column":34}},"30":{"start":{"line":69,"column":4},"end":{"line":69,"column":79}},"31":{"start":{"line":69,"column":19},"end":{"line":69,"column":79}},"32":{"start":{"line":71,"column":4},"end":{"line":71,"column":37}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]}},"code":["/**"," * Finder Helper Queries"," *"," * (these call other collection-level methods)"," */","","var usageError = require('../../utils/usageError');","var utils = require('../../utils/helpers');","var normalize = require('../../utils/normalize');","","module.exports = {","","  // Return models where ALL of the specified attributes match queryString","","  findOneLike: function(criteria, options, cb) {","    var usage = utils.capitalize(this.identity) + '.findOneLike([criteria],[options],callback)';","","    // Normalize criteria","    criteria = normalize.likeCriteria(criteria, this._schema.schema);","    if (!criteria) return usageError('Criteria must be an object!', usage, cb);","","    this.findOne(criteria, options, cb);","  },","","  findLike: function(criteria, options, cb) {","    var usage = utils.capitalize(this.identity) + '.findLike([criteria],[options],callback)';","","    // Normalize criteria","    criteria = normalize.likeCriteria(criteria, this._schema.schema);","    if (!criteria) return usageError('Criteria must be an object!', usage, cb);","","    this.find(criteria, options, cb);","  },","","  // Return models where >= 1 of the specified attributes start with queryString","  startsWith: function(criteria, options, cb) {","    var usage = utils.capitalize(this.identity) + '.startsWith([criteria],[options],callback)';","","    criteria = normalize.likeCriteria(criteria, this._schema.schema, function applyStartsWith(criteria) {","      return criteria + '%';","    });","","    if (!criteria) return usageError('Criteria must be an object!', usage, cb);","","    this.find(criteria, options, cb);","  },","","  // Return models where >= 1 of the specified attributes end with queryString","  endsWith: function(criteria, options, cb) {","    var usage = utils.capitalize(this.identity) + '.startsWith([criteria],[options],callback)';","","    criteria = normalize.likeCriteria(criteria, this._schema.schema, function applyEndsWith(criteria) {","      return '%' + criteria;","    });","","    if (!criteria) return usageError('Criteria must be an object!', usage, cb);","","    this.find(criteria, options, cb);","  },","","  // Return models where >= 1 of the specified attributes contain queryString","  contains: function(criteria, options, cb) {","    var usage = utils.capitalize(this.identity) + '.startsWith([criteria],[options],callback)';","","    criteria = normalize.likeCriteria(criteria, this._schema.schema, function applyContains(criteria) {","      return '%' + criteria + '%';","    });","","    if (!criteria) return usageError('Criteria must be an object!', usage, cb);","","    this.find(criteria, options, cb);","  }","","};",""],"l":{"7":1,"8":1,"9":1,"11":1,"16":0,"19":0,"20":0,"22":0,"26":0,"29":0,"30":0,"32":0,"37":0,"39":0,"40":0,"43":0,"45":0,"50":0,"52":0,"53":0,"56":0,"58":0,"63":0,"65":0,"66":0,"69":0,"71":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/finders/dynamicFinders.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/finders/dynamicFinders.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0,0,0,0,0,0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":29},"end":{"line":22,"column":40}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":40},"end":{"line":26,"column":59}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":33},"end":{"line":43,"column":50}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":32},"end":{"line":46,"column":49}}},"5":{"name":"(anonymous_5)","line":65,"loc":{"start":{"line":65,"column":31},"end":{"line":65,"column":74}}},"6":{"name":"dynamicMethod","line":76,"loc":{"start":{"line":76,"column":27},"end":{"line":76,"column":70}}},"7":{"name":"(anonymous_7)","line":180,"loc":{"start":{"line":180,"column":36},"end":{"line":180,"column":55}}},"8":{"name":"dynamicAssociationMethod","line":202,"loc":{"start":{"line":202,"column":47},"end":{"line":202,"column":92}}},"9":{"name":"dynamicAssociationMethod","line":216,"loc":{"start":{"line":216,"column":44},"end":{"line":216,"column":89}}},"10":{"name":"buildJoin","line":235,"loc":{"start":{"line":235,"column":0},"end":{"line":235,"column":21}}},"11":{"name":"(anonymous_11)","line":243,"loc":{"start":{"line":243,"column":40},"end":{"line":243,"column":54}}},"12":{"name":"associationQueryCriteria","line":275,"loc":{"start":{"line":275,"column":0},"end":{"line":275,"column":60}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":51}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":49}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":49}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":33}},"7":{"start":{"line":22,"column":0},"end":{"line":51,"column":2}},"8":{"start":{"line":23,"column":2},"end":{"line":23,"column":18}},"9":{"start":{"line":26,"column":2},"end":{"line":50,"column":5}},"10":{"start":{"line":29,"column":4},"end":{"line":34,"column":5}},"11":{"start":{"line":30,"column":6},"end":{"line":32,"column":7}},"12":{"start":{"line":31,"column":8},"end":{"line":31,"column":50}},"13":{"start":{"line":33,"column":6},"end":{"line":33,"column":13}},"14":{"start":{"line":36,"column":4},"end":{"line":37,"column":63}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":70}},"16":{"start":{"line":42,"column":4},"end":{"line":49,"column":5}},"17":{"start":{"line":43,"column":6},"end":{"line":45,"column":9}},"18":{"start":{"line":44,"column":8},"end":{"line":44,"column":53}},"19":{"start":{"line":46,"column":6},"end":{"line":48,"column":9}},"20":{"start":{"line":47,"column":8},"end":{"line":47,"column":59}},"21":{"start":{"line":65,"column":0},"end":{"line":168,"column":2}},"22":{"start":{"line":66,"column":2},"end":{"line":66,"column":18}},"23":{"start":{"line":67,"column":2},"end":{"line":67,"column":15}},"24":{"start":{"line":70,"column":2},"end":{"line":70,"column":80}},"25":{"start":{"line":73,"column":2},"end":{"line":73,"column":65}},"26":{"start":{"line":76,"column":2},"end":{"line":167,"column":4}},"27":{"start":{"line":78,"column":4},"end":{"line":81,"column":5}},"28":{"start":{"line":79,"column":6},"end":{"line":79,"column":19}},"29":{"start":{"line":80,"column":6},"end":{"line":80,"column":21}},"30":{"start":{"line":83,"column":4},"end":{"line":83,"column":28}},"31":{"start":{"line":85,"column":4},"end":{"line":85,"column":108}},"32":{"start":{"line":87,"column":4},"end":{"line":87,"column":90}},"33":{"start":{"line":87,"column":38},"end":{"line":87,"column":90}},"34":{"start":{"line":88,"column":4},"end":{"line":88,"column":123}},"35":{"start":{"line":88,"column":23},"end":{"line":88,"column":123}},"36":{"start":{"line":91,"column":4},"end":{"line":91,"column":23}},"37":{"start":{"line":92,"column":4},"end":{"line":92,"column":36}},"38":{"start":{"line":94,"column":4},"end":{"line":166,"column":5}},"39":{"start":{"line":104,"column":8},"end":{"line":104,"column":41}},"40":{"start":{"line":107,"column":8},"end":{"line":111,"column":11}},"41":{"start":{"line":113,"column":8},"end":{"line":113,"column":42}},"42":{"start":{"line":123,"column":8},"end":{"line":123,"column":38}},"43":{"start":{"line":126,"column":8},"end":{"line":130,"column":11}},"44":{"start":{"line":132,"column":8},"end":{"line":132,"column":39}},"45":{"start":{"line":142,"column":8},"end":{"line":142,"column":39}},"46":{"start":{"line":145,"column":8},"end":{"line":149,"column":11}},"47":{"start":{"line":151,"column":8},"end":{"line":151,"column":40}},"48":{"start":{"line":159,"column":8},"end":{"line":159,"column":44}},"49":{"start":{"line":162,"column":8},"end":{"line":162,"column":42}},"50":{"start":{"line":165,"column":8},"end":{"line":165,"column":42}},"51":{"start":{"line":180,"column":0},"end":{"line":228,"column":2}},"52":{"start":{"line":181,"column":2},"end":{"line":181,"column":18}},"53":{"start":{"line":182,"column":2},"end":{"line":182,"column":18}},"54":{"start":{"line":186,"column":2},"end":{"line":197,"column":3}},"55":{"start":{"line":189,"column":4},"end":{"line":189,"column":38}},"56":{"start":{"line":191,"column":4},"end":{"line":191,"column":50}},"57":{"start":{"line":191,"column":41},"end":{"line":191,"column":50}},"58":{"start":{"line":193,"column":4},"end":{"line":196,"column":5}},"59":{"start":{"line":194,"column":6},"end":{"line":194,"column":17}},"60":{"start":{"line":195,"column":6},"end":{"line":195,"column":26}},"61":{"start":{"line":199,"column":2},"end":{"line":199,"column":30}},"62":{"start":{"line":199,"column":23},"end":{"line":199,"column":30}},"63":{"start":{"line":202,"column":2},"end":{"line":213,"column":4}},"64":{"start":{"line":205,"column":4},"end":{"line":206,"column":30}},"65":{"start":{"line":208,"column":4},"end":{"line":208,"column":90}},"66":{"start":{"line":208,"column":38},"end":{"line":208,"column":90}},"67":{"start":{"line":209,"column":4},"end":{"line":209,"column":89}},"68":{"start":{"line":209,"column":37},"end":{"line":209,"column":89}},"69":{"start":{"line":211,"column":4},"end":{"line":211,"column":67}},"70":{"start":{"line":212,"column":4},"end":{"line":212,"column":38}},"71":{"start":{"line":216,"column":2},"end":{"line":227,"column":4}},"72":{"start":{"line":219,"column":4},"end":{"line":220,"column":30}},"73":{"start":{"line":222,"column":4},"end":{"line":222,"column":90}},"74":{"start":{"line":222,"column":38},"end":{"line":222,"column":90}},"75":{"start":{"line":223,"column":4},"end":{"line":223,"column":89}},"76":{"start":{"line":223,"column":37},"end":{"line":223,"column":89}},"77":{"start":{"line":225,"column":4},"end":{"line":225,"column":67}},"78":{"start":{"line":226,"column":4},"end":{"line":226,"column":35}},"79":{"start":{"line":235,"column":0},"end":{"line":269,"column":1}},"80":{"start":{"line":236,"column":2},"end":{"line":236,"column":18}},"81":{"start":{"line":237,"column":2},"end":{"line":237,"column":15}},"82":{"start":{"line":240,"column":2},"end":{"line":240,"column":63}},"83":{"start":{"line":243,"column":2},"end":{"line":247,"column":5}},"84":{"start":{"line":244,"column":4},"end":{"line":246,"column":5}},"85":{"start":{"line":245,"column":6},"end":{"line":245,"column":15}},"86":{"start":{"line":249,"column":2},"end":{"line":249,"column":88}},"87":{"start":{"line":249,"column":13},"end":{"line":249,"column":88}},"88":{"start":{"line":254,"column":2},"end":{"line":254,"column":77}},"89":{"start":{"line":259,"column":2},"end":{"line":266,"column":4}},"90":{"start":{"line":268,"column":2},"end":{"line":268,"column":14}},"91":{"start":{"line":275,"column":0},"end":{"line":290,"column":1}},"92":{"start":{"line":278,"column":2},"end":{"line":281,"column":4}},"93":{"start":{"line":284,"column":2},"end":{"line":284,"column":37}},"94":{"start":{"line":285,"column":2},"end":{"line":285,"column":28}},"95":{"start":{"line":288,"column":2},"end":{"line":288,"column":35}},"96":{"start":{"line":289,"column":2},"end":{"line":289,"column":18}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":6},"end":{"line":30,"column":6}},{"start":{"line":30,"column":6},"end":{"line":30,"column":6}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"4":{"line":70,"type":"cond-expr","locations":[{"start":{"line":70,"column":42},"end":{"line":70,"column":50}},{"start":{"line":70,"column":53},"end":{"line":70,"column":79}}]},"5":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"6":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":14},"end":{"line":83,"column":21}},{"start":{"line":83,"column":25},"end":{"line":83,"column":27}}]},"7":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"8":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"9":{"line":94,"type":"switch","locations":[{"start":{"line":102,"column":6},"end":{"line":102,"column":24}},{"start":{"line":103,"column":6},"end":{"line":104,"column":41}},{"start":{"line":106,"column":6},"end":{"line":113,"column":42}},{"start":{"line":121,"column":6},"end":{"line":121,"column":21}},{"start":{"line":122,"column":6},"end":{"line":123,"column":38}},{"start":{"line":125,"column":6},"end":{"line":132,"column":39}},{"start":{"line":140,"column":6},"end":{"line":140,"column":22}},{"start":{"line":141,"column":6},"end":{"line":142,"column":39}},{"start":{"line":144,"column":6},"end":{"line":151,"column":40}},{"start":{"line":158,"column":6},"end":{"line":159,"column":44}},{"start":{"line":161,"column":6},"end":{"line":162,"column":42}},{"start":{"line":164,"column":6},"end":{"line":165,"column":42}}]},"10":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":191,"column":4}},{"start":{"line":191,"column":4},"end":{"line":191,"column":4}}]},"11":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"12":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":2},"end":{"line":199,"column":2}},{"start":{"line":199,"column":2},"end":{"line":199,"column":2}}]},"13":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":6},"end":{"line":199,"column":11}},{"start":{"line":199,"column":15},"end":{"line":199,"column":21}}]},"14":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"15":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"16":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"17":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":4},"end":{"line":223,"column":4}},{"start":{"line":223,"column":4},"end":{"line":223,"column":4}}]},"18":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":4},"end":{"line":244,"column":4}},{"start":{"line":244,"column":4},"end":{"line":244,"column":4}}]},"19":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":8},"end":{"line":244,"column":59}},{"start":{"line":244,"column":63},"end":{"line":244,"column":95}}]},"20":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"21":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":15},"end":{"line":261,"column":30}},{"start":{"line":261,"column":34},"end":{"line":261,"column":36}}]}},"code":["/**"," * Dynamic Queries"," *"," * Query the collection using the name of the attribute directly"," */","","var _ = require('lodash');","var usageError = require('../../utils/usageError');","var utils = require('../../utils/helpers');","var normalize = require('../../utils/normalize');","var hasOwnProperty = utils.object.hasOwnProperty;","","var finder = module.exports = {};","","/**"," * buildDynamicFinders"," *"," * Attaches shorthand dynamic methods to the prototype for each attribute"," * in the schema."," */","","finder.buildDynamicFinders = function() {","  var self = this;","","  // For each defined attribute, create a dynamic finder function","  Object.keys(this._attributes).forEach(function(attrName) {","","    // Check if attribute is an association, if so generate limited dynamic finders","    if (hasOwnProperty(self._schema.schema[attrName], 'foreignKey')) {","      if (self.associationFinders !== false) {","        self.generateAssociationFinders(attrName);","      }","      return;","    }","","    var capitalizedMethods = ['findOneBy*', 'findOneBy*In', 'findOneBy*Like', 'findBy*', 'findBy*In',","      'findBy*Like', 'countBy*', 'countBy*In', 'countBy*Like'];","","    var lowercasedMethods = ['*StartsWith', '*Contains', '*EndsWith'];","","","    if (self.dynamicFinders !== false) {","      capitalizedMethods.forEach(function(method) {","        self.generateDynamicFinder(attrName, method);","      });","      lowercasedMethods.forEach(function(method) {","        self.generateDynamicFinder(attrName, method, true);","      });","    }","  });","};","","","/**"," * generateDynamicFinder"," *"," * Creates a dynamic method based off the schema. Used for shortcuts for various"," * methods where a criteria object can automatically be built."," *"," * @param {String} attrName"," * @param {String} method"," * @param {Boolean} dont capitalize the attrName or do, defaults to false"," */","","finder.generateDynamicFinder = function(attrName, method, dontCapitalize) {","  var self = this;","  var criteria;","","  // Capitalize Attribute Name for camelCase","  var preparedAttrName = dontCapitalize ? attrName : utils.capitalize(attrName);","","  // Figure out actual dynamic method name by injecting attribute name","  var actualMethodName = method.replace(/\\*/g, preparedAttrName);","","  // Assign this finder to the collection","  this[actualMethodName] = function dynamicMethod(value, options, cb) {","","    if (typeof options === 'function') {","      cb = options;","      options = null;","    }","","    options = options || {};","","    var usage = utils.capitalize(self.identity) + '.' + actualMethodName + '(someValue,[options],callback)';","","    if (typeof value === 'undefined') return usageError('No value specified!', usage, cb);","    if (options.where) return usageError('Cannot specify `where` option in a dynamic ' + method + '*() query!', usage, cb);","","    // Build criteria query and submit it","    options.where = {};","    options.where[attrName] = value;","","    switch (method) {","","","      ///////////////////////////////////////","      // Finders","      ///////////////////////////////////////","","","      case 'findOneBy*':","      case 'findOneBy*In':","        return self.findOne(options, cb);","","      case 'findOneBy*Like':","        criteria = _.extend(options, {","          where: {","            like: options.where","          }","        });","","        return self.findOne(criteria, cb);","","","      ///////////////////////////////////////","      // Aggregate Finders","      ///////////////////////////////////////","","","      case 'findBy*':","      case 'findBy*In':","        return self.find(options, cb);","","      case 'findBy*Like':","        criteria = _.extend(options, {","          where: {","            like: options.where","          }","        });","","        return self.find(criteria, cb);","","","      ///////////////////////////////////////","      // Count Finders","      ///////////////////////////////////////","","","      case 'countBy*':","      case 'countBy*In':","        return self.count(options, cb);","","      case 'countBy*Like':","        criteria = _.extend(options, {","          where: {","            like: options.where","          }","        });","","        return self.count(criteria, cb);","","","      ///////////////////////////////////////","      // Searchers","      ///////////////////////////////////////","","      case '*StartsWith':","        return self.startsWith(options, cb);","","      case '*Contains':","        return self.contains(options, cb);","","      case '*EndsWith':","        return self.endsWith(options, cb);","    }","  };","};","","","/**"," * generateAssociationFinders"," *"," * Generate Dynamic Finders for an association."," * Adds a .findBy<name>() method for has_one and belongs_to associations."," *"," * @param {String} attrName, the column name of the attribute"," */","","finder.generateAssociationFinders = function(attrName) {","  var self = this;","  var name, model;","","  // Find the user defined key for this attrName, look in self defined columnName","  // properties and if that's not set see if the generated columnName matches the attrName","  for (var key in this._attributes) {","","    // Cache the value","    var cache = this._attributes[key];","","    if (!hasOwnProperty(cache, 'model')) continue;","","    if (cache.model.toLowerCase() + '_id' === attrName) {","      name = key;","      model = cache.model;","    }","  }","","  if (!name || !model) return;","","  // Build a findOneBy<attrName> dynamic finder that forces a join on the association","  this['findOneBy' + utils.capitalize(name)] = function dynamicAssociationMethod(value, cb) {","","    // Check proper usage","    var usage = utils.capitalize(self.identity) + '.' + 'findBy' + utils.capitalize(name) +","      '(someValue, callback)';","","    if (typeof value === 'undefined') return usageError('No value specified!', usage, cb);","    if (typeof value === 'function') return usageError('No value specified!', usage, cb);","","    var criteria = associationQueryCriteria(self, value, attrName);","    return this.findOne(criteria, cb);","  };","","  // Build a findBy<attrName> dynamic finder that forces a join on the association","  this['findBy' + utils.capitalize(name)] = function dynamicAssociationMethod(value, cb) {","","    // Check proper usage","    var usage = utils.capitalize(self.identity) + '.' + 'findBy' + utils.capitalize(name) +","      '(someValue, callback)';","","    if (typeof value === 'undefined') return usageError('No value specified!', usage, cb);","    if (typeof value === 'function') return usageError('No value specified!', usage, cb);","","    var criteria = associationQueryCriteria(self, value, attrName);","    return this.find(criteria, cb);","  };","};","","","/**"," * Build Join Array"," */","","function buildJoin() {","  var self = this;","  var pk, attr;","","  // Set the attr value to the generated schema attribute","  attr = self.waterline.schema[self.identity].attributes[name];","","  // Get the current collection's primary key attribute","  Object.keys(self._attributes).forEach(function(key) {","    if (hasOwnProperty(self._attributes[key], 'primaryKey') && self._attributes[key].primaryKey) {","      pk = key;","    }","  });","","  if (!attr) throw new Error('Attempting to populate an attribute that doesn\\'t exist');","","  // Grab the key being populated to check if it is a has many to belongs to","  // If it's a belongs_to the adapter needs to know that it should replace the foreign key","  // with the associated value.","  var parentKey = self.waterline.collections[self.identity].attributes[name];","","","  // Build the initial join object that will link this collection to either another collection","  // or to a junction table.","  var join = {","    parent: self._tableName,","    parentKey: attr.columnName || pk,","    child: attr.references,","    childKey: attr.on,","    select: true,","    removeParentKey: !!parentKey.model","  };","","  return join;","}","","/**"," * Query Criteria Builder for associations"," */","","function associationQueryCriteria(context, value, attrName) {","","  // Build a criteria object","  var criteria = {","    where: {},","    joins: []","  };","","  // Build a join condition","  var join = buildJoin.call(context);","  criteria.joins.push(join);","","  // Add where values","  criteria.where[attrName] = value;","  return criteria;","}",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"22":1,"23":0,"26":0,"29":0,"30":0,"31":0,"33":0,"36":0,"39":0,"42":0,"43":0,"44":0,"46":0,"47":0,"65":1,"66":0,"67":0,"70":0,"73":0,"76":0,"78":0,"79":0,"80":0,"83":0,"85":0,"87":0,"88":0,"91":0,"92":0,"94":0,"104":0,"107":0,"113":0,"123":0,"126":0,"132":0,"142":0,"145":0,"151":0,"159":0,"162":0,"165":0,"180":1,"181":0,"182":0,"186":0,"189":0,"191":0,"193":0,"194":0,"195":0,"199":0,"202":0,"205":0,"208":0,"209":0,"211":0,"212":0,"216":0,"219":0,"222":0,"223":0,"225":0,"226":0,"235":1,"236":0,"237":0,"240":0,"243":0,"244":0,"245":0,"249":0,"254":0,"259":0,"268":0,"275":1,"278":0,"284":0,"285":0,"288":0,"289":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/stream.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/query/stream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":10},"end":{"line":19,"column":45}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":21},"end":{"line":36,"column":32}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":45}},"5":{"start":{"line":10,"column":0},"end":{"line":48,"column":2}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":20}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":82}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":44}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":53}},"10":{"start":{"line":32,"column":4},"end":{"line":32,"column":49}},"11":{"start":{"line":36,"column":4},"end":{"line":43,"column":7}},"12":{"start":{"line":39,"column":6},"end":{"line":39,"column":21}},"13":{"start":{"line":42,"column":6},"end":{"line":42,"column":44}},"14":{"start":{"line":45,"column":4},"end":{"line":45,"column":18}}},"branchMap":{},"code":["/**"," * Streaming Queries"," */","","var usageError = require('../utils/usageError');","var utils = require('../utils/helpers');","var normalize = require('../utils/normalize');","var ModelStream = require('../utils/stream');","","module.exports = {","","  /**","   * Stream a Result Set","   *","   * @param {Object} criteria","   * @param {Object} transformation, defaults to JSON","   */","","  stream: function(criteria, transformation) {","    var self = this;","","    var usage = utils.capitalize(this.identity) + '.stream([criteria],[options])';","","    // Normalize criteria and fold in options","    criteria = normalize.criteria(criteria);","","    // Transform Search Criteria","    criteria = self._transformer.serialize(criteria);","","    // Configure stream to adapter, kick off fetch, and return stream object","    // so that user code can use it as it fires data events","    var stream = new ModelStream(transformation);","","    // very important to wait until next tick before triggering adapter","    // otherwise write() and end() won't fire properly","    process.nextTick(function() {","","      // Write once immediately to force prefix in case no models are returned","      stream.write();","","      // Trigger Adapter Method","      self.adapter.stream(criteria, stream);","    });","","    return stream;","  }","","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"10":1,"20":0,"22":0,"25":0,"28":0,"32":0,"36":0,"39":0,"42":0,"45":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/stream.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/stream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":35},"end":{"line":12,"column":60}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":30},"end":{"line":35,"column":50}}},"3":{"name":"writeToStream","line":39,"loc":{"start":{"line":39,"column":47},"end":{"line":39,"column":93}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":28},"end":{"line":57,"column":46}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":26},"end":{"line":66,"column":48}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":27}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":26}},"5":{"start":{"line":12,"column":0},"end":{"line":22,"column":2}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":63}},"7":{"start":{"line":18,"column":2},"end":{"line":18,"column":17}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":23}},"9":{"start":{"line":24,"column":0},"end":{"line":24,"column":35}},"10":{"start":{"line":35,"column":0},"end":{"line":51,"column":2}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":18}},"12":{"start":{"line":39,"column":2},"end":{"line":49,"column":5}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":17}},"14":{"start":{"line":45,"column":4},"end":{"line":45,"column":49}},"15":{"start":{"line":48,"column":4},"end":{"line":48,"column":27}},"16":{"start":{"line":48,"column":12},"end":{"line":48,"column":27}},"17":{"start":{"line":57,"column":0},"end":{"line":79,"column":2}},"18":{"start":{"line":58,"column":2},"end":{"line":58,"column":18}},"19":{"start":{"line":60,"column":2},"end":{"line":64,"column":3}},"20":{"start":{"line":61,"column":4},"end":{"line":61,"column":36}},"21":{"start":{"line":62,"column":4},"end":{"line":62,"column":27}},"22":{"start":{"line":62,"column":12},"end":{"line":62,"column":27}},"23":{"start":{"line":63,"column":4},"end":{"line":63,"column":11}},"24":{"start":{"line":66,"column":2},"end":{"line":78,"column":5}},"25":{"start":{"line":68,"column":4},"end":{"line":72,"column":5}},"26":{"start":{"line":69,"column":6},"end":{"line":69,"column":30}},"27":{"start":{"line":70,"column":6},"end":{"line":70,"column":29}},"28":{"start":{"line":70,"column":14},"end":{"line":70,"column":29}},"29":{"start":{"line":71,"column":6},"end":{"line":71,"column":13}},"30":{"start":{"line":75,"column":4},"end":{"line":75,"column":42}},"31":{"start":{"line":75,"column":16},"end":{"line":75,"column":42}},"32":{"start":{"line":76,"column":4},"end":{"line":76,"column":21}},"33":{"start":{"line":77,"column":4},"end":{"line":77,"column":24}},"34":{"start":{"line":77,"column":12},"end":{"line":77,"column":24}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":24},"end":{"line":15,"column":38}},{"start":{"line":15,"column":42},"end":{"line":15,"column":62}}]},"2":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"3":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"4":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"5":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"6":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":6}},{"start":{"line":70,"column":6},"end":{"line":70,"column":6}}]},"7":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"8":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]}},"code":["/**"," * Streams"," *"," * A Streaming API with support for Transformations"," */","","var util = require('util');","var Stream = require('stream');","var Transformations = require('./transformations');","var _ = require('lodash');","","var ModelStream = module.exports = function(transformation) {","","  // Use specified, or otherwise default, JSON transformation","  this.transformation = transformation || Transformations.json;","","  // Reset write index","  this.index = 0;","","  // Make stream writable","  this.writable = true;","};","","util.inherits(ModelStream, Stream);","","/**"," * Write to stream"," *"," * Extracts args to write and emits them as data events"," *"," * @param {Object} model"," * @param {Function} cb"," */","","ModelStream.prototype.write = function(model, cb) {","  var self = this;","","  // Run transformation on this item","  this.transformation.write(model, this.index, function writeToStream(err, transformedModel) {","","    // Increment index for next time","    self.index++;","","    // Write transformed model to stream","    self.emit('data', _.clone(transformedModel));","","    // Inform that we're finished","    if (cb) return cb(err);","  });","","};","","/**"," * End Stream"," */","","ModelStream.prototype.end = function(err, cb) {","  var self = this;","","  if (err) {","    this.emit('error', err.message);","    if (cb) return cb(err);","    return;","  }","","  this.transformation.end(function(err, suffix) {","","    if (err) {","      self.emit('error', err);","      if (cb) return cb(err);","      return;","    }","","    // Emit suffix if specified","    if (suffix) self.emit('data', suffix);","    self.emit('end');","    if (cb) return cb();","  });","};",""],"l":{"7":1,"8":1,"9":1,"10":1,"12":1,"15":0,"18":0,"21":0,"24":1,"35":1,"36":0,"39":0,"42":0,"45":0,"48":0,"57":1,"58":0,"60":0,"61":0,"62":0,"63":0,"66":0,"68":0,"69":0,"70":0,"71":0,"75":0,"76":0,"77":0}},"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/transformations.js":{"path":"/home/travis/build/npmtest/node-npmtest-waterline/node_modules/waterline/lib/waterline/utils/transformations.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":29},"end":{"line":16,"column":56}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":27},"end":{"line":42,"column":40}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"3":{"start":{"line":16,"column":0},"end":{"line":37,"column":2}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":23}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":36}},"6":{"start":{"line":19,"column":14},"end":{"line":19,"column":36}},"7":{"start":{"line":22,"column":2},"end":{"line":28,"column":3}},"8":{"start":{"line":23,"column":4},"end":{"line":27,"column":5}},"9":{"start":{"line":24,"column":6},"end":{"line":24,"column":47}},"10":{"start":{"line":26,"column":6},"end":{"line":26,"column":19}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":46}},"12":{"start":{"line":31,"column":21},"end":{"line":31,"column":44}},"13":{"start":{"line":34,"column":2},"end":{"line":34,"column":59}},"14":{"start":{"line":34,"column":17},"end":{"line":34,"column":59}},"15":{"start":{"line":36,"column":2},"end":{"line":36,"column":29}},"16":{"start":{"line":42,"column":0},"end":{"line":45,"column":2}},"17":{"start":{"line":43,"column":2},"end":{"line":43,"column":19}},"18":{"start":{"line":44,"column":2},"end":{"line":44,"column":19}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"3":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]}},"code":["/**"," * Transformations"," */","","var Transformations = module.exports = {};","","// Add JSON Transformation methods","Transformations.json = {};","","/**"," * Write Method Transformations"," *"," * Used to stream back valid JSON from Waterline"," */","","Transformations.json.write = function(model, index, cb) {","  var transformedModel;","","  if (!model) transformedModel = '';","","  // Transform to JSON","  if (model) {","    try {","      transformedModel = JSON.stringify(model);","    } catch (e) {","      return cb(e);","    }","  }","","  // Prefix with opening [","  if (index === 0) { transformedModel = '['; }","","  // Prefix with comma after first model","  if (index > 1) transformedModel = ',' + transformedModel;","","  cb(null, transformedModel);","};","","/**"," * Close off JSON Array"," */","Transformations.json.end = function(cb) {","  var suffix = ']';","  cb(null, suffix);","};",""],"l":{"5":1,"8":1,"16":1,"17":0,"19":0,"22":0,"23":0,"24":0,"26":0,"31":0,"34":0,"36":0,"42":1,"43":0,"44":0}}}